var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.141,1,2.791]],["body/classes/ApiValidationError.html",[0,0.172,1,4.305,2,1.053,3,0.222,4,0.181,5,0.128,6,6.073,7,4.786,8,2.102,9,5.393,10,0.449,11,1.145,12,3.685,13,2.768,14,3.618,15,2.868,16,0.636,17,1.76,18,6.076,19,1.615,20,5.434,21,6.39,22,0.91,23,5.434,24,1.136,25,0.01,26,0.902,27,0.833,28,6.67,29,2.058,30,3.508,31,4.786,32,1.13,33,4.786,34,4.786,35,4.786,36,4.786,37,1.387,38,2.967,39,0.391,40,4.041,41,1.165,42,5.434,43,0.222,44,4.786,45,2.249,46,4.359,47,3.618,48,3.925,49,2.249,50,3.786,51,4.041,52,3.094,53,3.393,54,5.434,55,0.006,56,0.007,57,0.006]],["title/classes/ApiValidationErrorResponse.html",[0,0.141,58,3.585]],["body/classes/ApiValidationErrorResponse.html",[0,0.171,1,5.24,2,1.049,3,0.221,4,0.18,5,0.128,8,2.097,10,0.447,11,1.142,13,2.762,14,3.609,15,2.605,16,0.557,19,1.609,22,0.745,24,1.131,25,0.01,26,0.899,27,0.83,28,6.658,38,4.127,39,0.428,43,0.221,47,3.609,48,4.854,49,2.24,51,4.025,55,0.006,56,0.007,57,0.006,58,5.518,59,6.658,60,4.768,61,1.993,62,4.524,63,4.094,64,4.524,65,3.876,66,6.877,67,5.413,68,5.622,69,5.413,70,4.343,71,4.343,72,5.413,73,5.413,74,2.494,75,5.413,76,5.413,77,5.413,78,6.877,79,6.877,80,5.413,81,1.511,82,1.589,83,6.877,84,5.413]],["title/controllers/AuthController.html",[85,2.103,86,3.323]],["body/controllers/AuthController.html",[0,0.209,3,0.27,4,0.22,5,0.156,25,0.01,39,0.44,41,1.416,43,0.27,55,0.007,56,0.008,57,0.007,85,3.109,86,5.778,87,3.338,88,5.819,89,4.913,90,6.606,91,4.604,92,5.3,93,3.007,94,4.126,95,5.43,96,5.819,97,6.606,98,3.109]],["title/classes/AuthEntity.html",[0,0.141,99,3.323]],["body/classes/AuthEntity.html",[0,0.209,2,1.28,3,0.27,4,0.22,5,0.156,10,0.546,11,1.29,16,0.486,22,0.716,25,0.01,32,1.159,39,0.374,43,0.27,55,0.007,56,0.008,57,0.007,99,5.778,100,5.819,101,8.254,102,1.645,103,4.022,104,6.606,105,2.91]],["title/modules/AuthModule.html",[106,1.328,107,3.114]],["body/modules/AuthModule.html",[0,0.169,3,0.219,4,0.178,5,0.126,25,0.01,39,0.493,41,1.147,43,0.219,55,0.006,56,0.007,57,0.006,86,5.077,87,2.704,95,5.833,96,4.713,106,2.234,107,6.145,108,2.149,109,2.435,110,2.922,111,2.922,112,2.704,113,3.422,114,3.539,115,4.713,116,4.713,117,4.713,118,4.713,119,5.504,120,5.83,121,3.728,122,2.808,123,2.435,124,5.351,125,3.887,126,6.827,127,3.979,128,5.351,129,4.293,130,3.52,131,4.713,132,5.351,133,5.351,134,5.351,135,5.351,136,5.351,137,5.351,138,3.729,139,4.293,140,4.713,141,4.293,142,4.713]],["title/injectables/AuthService.html",[95,2.94,143,1.058]],["body/injectables/AuthService.html",[0,0.166,3,0.214,4,0.175,5,0.124,10,0.433,16,0.548,17,1.72,19,1.558,22,0.807,24,1.556,25,0.01,26,1.236,27,1.142,32,1.242,37,1.72,39,0.445,41,1.123,43,0.214,55,0.008,56,0.007,57,0.006,74,2.223,81,1.481,82,1.211,95,4.432,98,2.467,99,3.898,129,4.205,143,1.596,144,2.169,145,4.617,146,3.341,147,5.406,148,6.738,149,5.242,150,5.196,151,8.463,152,5.242,153,6.738,154,5.242,155,2.674,156,3.252,157,6.738,158,5.348,159,5.242,160,3.653,161,6.738,162,5.242,163,5.242,164,2.309,165,2.75,166,5.242,167,5.242,168,4.205,169,2.984,170,5.242,171,3.898,172,3.12]],["title/modules/AuthorizationModule.html",[106,1.328,173,2.94]],["body/modules/AuthorizationModule.html",[0,0.185,3,0.238,4,0.194,5,0.138,25,0.01,39,0.463,41,1.252,43,0.238,55,0.006,56,0.008,57,0.006,106,2.325,108,2.345,109,2.657,110,3.188,111,3.188,112,2.951,113,3.561,114,3.683,121,3.938,122,3.064,123,2.657,125,4.106,173,5.875,174,5.143,175,5.143,176,5.143,177,5.143,178,5.627,179,5.601,180,5.341,181,5.839,182,5.839,183,5.839,184,2.846,185,5.143]],["title/injectables/AuthorizationService.html",[143,1.058,179,2.791]],["body/injectables/AuthorizationService.html",[0,0.123,3,0.159,4,0.13,5,0.092,10,0.322,16,0.512,17,1.407,19,1.157,22,0.754,24,1.454,25,0.01,26,1.155,27,1.067,32,1.138,37,1.874,39,0.394,41,0.835,43,0.159,55,0.004,56,0.006,57,0.004,74,2.295,81,1.211,82,0.899,98,1.833,143,1.305,144,1.611,146,3.27,155,2.653,156,3.154,165,3.852,172,2.318,179,3.442,180,4.76,184,1.897,185,3.43,186,3.43,187,6.397,188,6.397,189,6.397,190,3.894,191,3.894,192,3.894,193,3.583,194,3.833,195,4.023,196,4.754,197,4.487,198,3.894,199,3.281,200,5.511,201,4,202,1.851,203,4.273,204,3.841,205,3.894,206,3.894,207,5.581,208,3.894,209,3.894,210,4.141,211,4.099,212,4.854,213,3.442,214,4.854,215,1.285,216,2.043,217,2.713,218,4.7,219,3.626,220,3.894,221,3.894,222,3.124,223,3.894,224,3.894,225,3.894,226,5.511,227,3.894,228,3.894,229,3.894,230,5.511,231,3.894,232,3.894]],["title/classes/BaseEntity.html",[0,0.141,233,1.794]],["body/classes/BaseEntity.html",[0,0.241,2,1.067,3,0.225,4,0.183,5,0.13,8,1.68,10,0.455,11,1.265,13,2.212,16,0.512,22,0.754,25,0.01,32,1.137,39,0.394,43,0.284,55,0.006,56,0.007,57,0.006,82,1.76,102,1.897,202,1.944,233,3.214,234,4.419,235,3.312,236,2.095,237,3.312,238,3.643,239,5.508,240,3.643,241,5.508,242,2.971,243,2.49,244,2.212,245,3.624,246,4.852,247,4.096,248,3.273,249,4.419,250,4.419,251,4.852,252,3.44,253,2.89,254,4.852,255,2.592,256,4.419,257,3.44,258,2.212,259,3.007,260,2.147,261,4.852,262,4.419,263,4.852,264,4.096,265,3.624,266,4.419,267,4.419,268,2.684,269,2.806,270,4.852,271,2.684]],["title/classes/BaseEntityWithTimestamps.html",[0,0.141,248,2.103]],["body/classes/BaseEntityWithTimestamps.html",[0,0.23,2,0.971,3,0.205,4,0.167,5,0.118,8,1.995,10,0.414,11,1.21,13,2.011,16,0.569,22,0.891,25,0.01,30,2.792,32,1.153,39,0.371,43,0.267,55,0.005,56,0.007,57,0.005,82,1.851,102,2.085,202,1.876,233,3.301,234,4.018,235,3.402,236,2.152,237,3.316,238,3.647,240,3.647,242,3.012,243,2.342,244,2.011,245,3.295,246,4.412,247,3.725,248,3.429,249,4.018,250,4.018,251,4.412,252,3.128,253,2.628,254,4.412,255,2.357,256,4.018,257,3.128,258,2.011,259,2.734,260,1.953,261,4.412,262,4.018,263,4.412,264,3.725,265,3.295,266,4.018,267,4.018,268,3.55,269,2.95,270,4.412,271,3.55,272,5.008,273,1.712,274,2.342,275,5.008,276,5.008,277,2.734,278,2.279,279,5.008,280,2.357,281,2.357]],["title/classes/BusinessError.html",[0,0.141,9,2.791]],["body/classes/BusinessError.html",[0,0.237,2,0.9,3,0.19,4,0.155,5,0.11,8,2.14,9,4.383,10,0.384,11,1.033,12,3.706,13,3.397,14,4.223,15,3.113,16,0.639,17,1.589,18,6.016,19,1.85,22,0.872,24,0.971,25,0.01,26,0.771,27,0.712,29,2.357,32,1.227,37,1.186,38,3.832,39,0.398,40,5.576,41,0.996,43,0.254,45,2.576,49,2.905,50,5.225,55,0.005,56,0.007,57,0.005,61,1.71,65,3.654,81,1.021,82,1.073,273,1.216,282,3.727,283,3.832,284,4.337,285,3.832,286,4.094,287,3.543,288,3.543,289,4.094,290,2.832,291,5.22,292,4.645,293,4.933,294,6.224,295,4.645,296,4.645,297,4.645,298,4.645,299,4.091,300,4.091,301,3.727,302,5.482,303,4.091,304,3.887,305,5.482,306,4.091,307,4.891,308,2.901,309,3.454,310,4.091,311,4.091,312,4.091]],["title/modules/CoreModule.html",[106,1.328,313,3.114]],["body/modules/CoreModule.html",[0,0.171,3,0.221,4,0.18,5,0.128,25,0.01,39,0.465,41,1.158,43,0.221,49,2.843,55,0.006,56,0.007,57,0.006,61,1.989,106,2.438,108,2.169,109,2.459,110,2.95,111,2.95,112,2.73,113,2.459,114,2.543,121,3.75,122,2.835,123,2.459,125,3.911,290,3.126,313,6.186,314,4.759,315,4.759,316,5.845,317,5.845,318,5.238,319,5.845,320,5.402,321,4.519,322,6.869,323,4.29,324,5.511,325,6.05,326,6.869,327,4.519,328,5.108,329,4.519,330,6.869,331,4.089,332,5.511,333,6.05,334,6.869,335,5.108,336,5.402,337,5.402,338,5.402,339,5.402]],["title/classes/Course.html",[0,0.141,340,1.794]],["body/classes/Course.html",[0,0.153,2,0.937,3,0.197,4,0.161,5,0.114,8,1.95,10,0.4,11,1.062,16,0.628,19,1.437,22,0.933,24,1.011,25,0.01,26,1.265,27,0.742,30,3.474,32,1.215,39,0.406,43,0.197,45,2.001,55,0.005,56,0.007,57,0.005,82,1.76,102,2.123,202,1.552,215,1.596,217,3.37,233,2.567,235,3.153,236,1.995,237,2.646,238,2.91,240,2.91,242,3.174,243,1.731,244,1.942,248,3.908,268,3.116,269,2.354,271,3.116,273,1.875,274,2.564,277,2.641,278,2.201,280,2.276,281,2.276,340,2.567,341,4.26,342,7.162,343,5.326,344,5.631,345,4.948,346,4.836,347,4.836,348,4.836,349,6.393,350,4.836,351,6.393,352,3.49,353,4.836,354,2.754,355,2.754,356,2.754,357,2.754,358,2.754,359,5.631,360,2.754,361,2.879,362,3.02,363,2.641]],["title/classes/CourseInfo.html",[0,0.141,364,2.544]],["body/classes/CourseInfo.html",[0,0.18,2,1.106,3,0.233,4,0.19,5,0.135,8,2.169,10,0.472,11,1.181,16,0.626,19,1.697,22,0.879,24,1.193,25,0.01,26,1.385,27,0.875,30,3.035,32,1.21,39,0.403,43,0.233,45,2.363,55,0.006,56,0.008,57,0.006,102,1.929,202,1.727,215,1.884,233,3.35,235,2.943,236,1.862,237,2.363,238,2.598,240,2.598,242,3.02,243,2.044,244,2.292,280,2.687,281,2.687,360,3.25,361,3.398,364,4.049,365,6.823,366,3.978,367,4.049,368,4.441,369,5.289,370,2.996,371,4.58,372,4.58]],["title/classes/CourseNews.html",[0,0.141,373,2.66]],["body/classes/CourseNews.html",[0,0.181,2,0.509,3,0.107,4,0.207,5,0.062,8,1.894,10,0.217,11,0.682,15,2.494,16,0.621,17,1.049,22,0.929,24,0.549,25,0.01,26,0.84,27,1.123,30,3.646,32,1.23,37,0.67,39,0.39,43,0.254,45,1.087,55,0.003,56,0.004,57,0.003,81,0.577,82,1.59,102,2.119,155,0.844,193,2.57,194,3.032,195,3.21,197,2.557,202,1.508,215,0.867,216,1.378,219,1.728,233,2.494,235,2.948,236,1.96,237,2.368,238,2.605,240,2.605,242,3.19,243,0.94,244,1.055,248,3.1,255,2.382,260,1.973,268,2.789,269,2.534,271,2.789,273,1.626,274,2.224,277,2.243,278,1.87,280,1.236,281,1.236,283,2.243,304,1.64,340,1.055,352,3.027,354,1.495,355,1.495,356,1.495,357,1.495,358,3.258,362,1.64,363,2.763,364,2.881,367,1.495,370,2.655,373,2.446,374,1.728,375,3.452,376,3.529,377,3.1,378,3.391,379,2.789,380,3.988,381,2.725,382,3.988,383,3.574,384,2.557,385,3.055,386,4.264,387,2.626,388,2.107,389,2.703,390,3.16,391,2.703,392,2.107,393,2.107,394,2.863,395,3.765,396,2.863,397,2.703,398,2.076,399,2.566,400,2.863,401,2.107,402,2.107,403,3.125,404,2.076,405,2.107,406,2.763,407,3.012,408,2.107,409,2.107,410,2.107,411,2.703,412,2.107,413,2.566,414,2.107,415,2.863,416,2.107,417,2.107,418,2.107,419,2.107,420,2.107,421,2.107,422,2.107,423,2.863,424,3.879,425,2.107,426,3.765,427,1.83,428,2.339,429,1.434,430,0.592,431,1.83,432,1.434,433,1.83,434,1.83,435,1.83,436,1.83,437,1.83,438,1.83,439,1.83,440,1.83,441,2.863,442,2.557,443,2.557,444,2.466,445,2.466,446,2.466,447,3.16,448,2.763,449,1.83,450,2.863,451,1.83,452,1.83,453,3.526,454,1.563,455,1.563]],["title/classes/CreateNewsParams.html",[0,0.141,456,2.94]],["body/classes/CreateNewsParams.html",[0,0.22,2,1.065,3,0.224,4,0.183,5,0.13,10,0.454,11,1.153,15,2.884,16,0.607,22,0.894,25,0.01,32,1.292,39,0.394,43,0.224,55,0.006,56,0.007,57,0.006,61,2.024,94,4.755,102,2.054,103,4.02,105,2.422,194,3.354,196,4.335,269,2.557,375,2.708,379,3.71,456,4.569,457,7.421,458,4.411,459,3.645,460,5.165,461,3.954,462,6.945,463,5.497,464,5.497,465,5.497,466,5.497,467,5.497,468,5.497,469,5.497,470,5.497,471,5.165,472,6.118,473,5.662,474,6.618,475,3.272]],["title/injectables/DurationLoggingInterceptor.html",[143,1.058,476,3.585]],["body/injectables/DurationLoggingInterceptor.html",[0,0.174,3,0.225,4,0.184,5,0.13,10,0.456,11,1.156,12,3.255,16,0.406,17,1.777,22,0.755,24,1.154,25,0.01,26,0.916,27,0.846,37,1.409,39,0.454,41,1.183,43,0.225,55,0.006,56,0.007,57,0.006,61,2.032,74,1.821,81,1.213,82,1.608,143,1.649,144,2.284,164,3.36,273,1.445,274,1.976,329,4.58,444,3.717,476,5.586,477,6.718,478,4.861,479,5.178,480,6.963,481,5.586,482,5.178,483,4.047,484,6.133,485,6.133,486,6.427,487,7.055,488,5.519,489,2.789,490,6.718,491,6.963,492,5.519,493,6.133,494,4.428,495,5.519,496,4.861,497,4.104,498,3.846,499,5.519,500,3.846,501,6.963,502,5.519,503,5.519,504,5.519]],["title/modules/ErrorModule.html",[106,1.328,316,3.114]],["body/modules/ErrorModule.html",[0,0.197,3,0.255,4,0.208,5,0.147,25,0.01,39,0.456,41,1.338,43,0.255,55,0.007,56,0.008,57,0.007,61,2.297,106,2.232,108,2.506,113,2.84,213,4.69,273,1.966,316,5.234,331,4.471,335,6.218,505,6.24,506,6.615,507,4.471,508,4.471,509,4.1,510,4.105,511,5.234,512,6.24,513,6.24,514,3.715,515,5.007]],["title/classes/ErrorResponse.html",[0,0.141,38,2.44]],["body/classes/ErrorResponse.html",[0,0.18,2,1.102,3,0.232,4,0.189,5,0.134,12,3.455,13,3.251,14,4.057,15,2.929,16,0.614,19,2.108,22,0.616,24,1.189,25,0.01,26,0.944,27,0.872,29,2.929,32,1.311,38,3.873,39,0.322,40,4.229,41,1.219,43,0.232,49,3.2,55,0.006,56,0.008,57,0.006,61,2.612,62,5.087,63,4.223,64,4.667,65,3.457,301,4.562,516,5.008,517,5.686,518,5.686,519,5.686,520,4.562,521,4.943,522,5.686,523,5.008,524,5.686,525,3.551,526,2.505,527,3.551,528,3.741,529,4.229]],["title/injectables/FeathersAuthProvider.html",[143,1.058,180,2.791]],["body/injectables/FeathersAuthProvider.html",[0,0.122,3,0.157,4,0.128,5,0.091,10,0.319,16,0.56,17,1.397,19,1.146,22,0.824,24,1.588,25,0.01,26,1.262,27,1.165,32,1.092,37,1.867,39,0.414,41,0.827,43,0.157,55,0.004,56,0.006,57,0.004,74,2.718,81,1.67,82,0.891,98,1.815,143,1.296,144,1.596,146,3.453,155,2.566,156,3.409,164,2.803,165,3.838,171,2.868,172,2.296,180,3.418,193,3.671,194,3.347,195,3.809,196,3.943,197,3.696,203,4.101,204,3.814,215,1.272,217,2.687,233,2.198,235,1.596,237,2.633,243,1.381,245,2.537,381,1.596,404,3.5,430,0.869,530,6.884,531,3.094,532,5.474,533,5.605,534,5.474,535,5.474,536,5.605,537,3.856,538,4.523,539,3.856,540,5.474,541,3.856,542,3.397,543,3.856,544,5.474,545,3.856,546,5.474,547,3.856,548,3.856,549,3.856,550,4.821,551,3.856,552,3.397,553,5.474,554,2.024,555,3.397,556,5.474,557,3.856,558,3.856,559,3.856,560,2.995,561,3.856,562,5.474,563,5.474,564,3.814,565,5.474,566,3.856,567,2.868,568,3.856,569,3.856,570,1.949,571,3.856,572,2.408,573,4.392,574,3.397,575,3.856,576,3.856,577,3.856]],["title/interfaces/FeathersError.html",[430,1.007,578,3.114]],["body/interfaces/FeathersError.html",[3,0.261,4,0.213,5,0.151,8,2.324,10,0.528,11,1.266,13,3.385,16,0.65,25,0.009,29,3.084,32,1.304,43,0.261,49,3.154,55,0.007,56,0.008,57,0.007,430,1.441,578,5.311,579,2.568,580,5.634,581,5.634,582,7.425]],["title/modules/FeathersModule.html",[106,1.328,178,2.94]],["body/modules/FeathersModule.html",[0,0.182,3,0.235,4,0.191,5,0.136,25,0.01,39,0.404,41,1.231,43,0.235,55,0.006,56,0.008,57,0.006,61,2.115,93,3.249,106,2.483,108,3.119,109,2.614,110,3.136,111,3.136,112,2.902,113,3.535,114,3.656,121,3.898,122,3.014,123,2.614,178,5.682,184,3.786,538,5.328,552,5.059,560,3.36,583,5.059,584,5.059,585,5.059,586,5.744,587,4.697,588,3.898,589,4.064,590,3.898,591,4.25,592,4.697,593,4.697,594,4.697,595,4.697,596,5.728,597,3.479]],["title/interfaces/FeathersService.html",[430,1.007,598,3.323]],["body/interfaces/FeathersService.html",[0,0.152,3,0.196,4,0.16,5,0.113,10,0.396,16,0.559,17,1.623,22,0.689,24,1.329,25,0.01,26,1.056,27,0.975,32,0.716,37,1.623,39,0.448,41,1.028,43,0.31,55,0.005,56,0.007,57,0.005,74,1.582,81,1.054,93,3.596,108,1.925,143,1.506,156,3.143,164,2.112,184,2.337,193,3.143,215,1.582,218,4.06,236,1.664,290,2.182,430,1.08,442,3.212,443,3.212,444,3.098,445,3.098,446,3.098,447,3.97,510,3.155,538,2.855,560,3.822,579,1.925,587,3.155,588,3.894,589,4.06,590,2.618,591,2.855,592,3.155,593,3.155,594,3.155,595,3.155,596,3.847,597,2.337,598,5.648,599,5.304,600,3.342,601,3.476,602,5.6,603,6.647,604,4.795,605,4.834,606,4.182,607,5.6,608,4.795,609,3.471,610,3.566,611,2.995,612,3.847,613,5.101,614,5.6,615,4.182,616,5.6,617,5.101,618,3.847,619,3.566,620,4.224,621,4.224,622,4.224,623,4.224,624,4.224]],["title/injectables/FeathersServiceProvider.html",[143,1.058,538,2.66]],["body/injectables/FeathersServiceProvider.html",[0,0.149,3,0.193,4,0.157,5,0.111,10,0.39,16,0.555,17,1.605,19,1.401,22,0.681,24,1.314,25,0.01,26,1.044,27,0.964,32,1.055,37,1.204,39,0.445,41,1.011,43,0.308,55,0.005,56,0.007,57,0.005,61,1.736,74,1.556,81,1.036,93,3.862,108,2.524,143,1.489,144,1.951,156,2.601,164,2.077,184,3.064,193,2.601,215,1.556,218,4.026,236,1.234,290,2.146,430,1.062,442,3.176,443,3.176,444,3.064,445,3.064,446,3.064,447,3.926,510,3.102,538,3.742,560,3.945,587,4.136,588,4.119,589,4.295,590,3.432,591,3.742,592,4.136,593,4.136,594,4.136,595,4.136,596,5.044,597,3.064,598,5.61,599,5.259,600,3.286,601,2.298,602,4.153,603,5.674,605,4.21,607,4.153,609,3.432,610,3.506,611,2.944,612,3.783,613,5.044,614,5.537,615,4.136,616,5.537,617,5.044,618,3.783,619,4.675,620,4.153,621,4.153,622,5.537,623,4.153,624,4.153,625,6.286,626,4.715,627,4.715,628,4.715,629,3.506]],["title/classes/GlobalErrorFilter.html",[0,0.141,511,3.114]],["body/classes/GlobalErrorFilter.html",[0,0.148,1,3.506,2,0.602,3,0.127,4,0.103,5,0.073,9,3.901,10,0.256,11,0.776,12,2.396,13,2.508,14,2.451,15,2.127,16,0.493,17,1.433,22,0.609,24,0.976,25,0.01,26,0.932,27,0.716,37,1.595,38,4.343,39,0.426,41,0.665,43,0.127,49,3.708,55,0.003,56,0.005,57,0.003,62,2.042,63,4.663,65,1.513,70,2.49,71,2.49,74,2.858,81,1.809,82,1.547,164,2.473,184,2.736,218,2.659,242,1.21,260,1.21,273,0.812,274,1.111,278,1.413,285,2.55,291,4.645,384,2.837,430,0.699,442,2.36,443,2.36,444,2.276,445,2.276,446,1.513,483,4.02,498,3.255,507,3.988,509,2.55,511,3.255,572,1.938,578,4.353,582,2.734,590,1.695,597,1.513,611,1.938,630,4.645,631,2.163,632,5.615,633,5.375,634,4.505,635,4.67,636,3.104,637,4.67,638,4.905,639,5.615,640,6.247,641,3.104,642,4.176,643,5.615,644,3.104,645,3.104,646,2.734,647,2.734,648,3.104,649,3.104,650,3.104,651,2.49,652,2.734,653,2.49,654,5.647,655,2.49,656,2.49,657,2.734,658,3.073,659,2.49,660,2.163,661,3.506,662,1.938,663,2.49,664,2.734,665,4.114,666,2.734,667,2.49,668,2.734,669,2.734,670,2.734,671,2.734,672,2.734,673,4.176,674,3.747,675,3.104,676,3.747,677,3.104,678,3.104,679,3.104,680,3.747,681,3.104,682,3.104,683,4.67,684,3.104,685,3.104,686,2.042,687,4.114,688,2.308,689,2.734,690,2.163,691,2.163,692,4.114,693,3.066,694,2.49,695,4.114,696,2.734,697,3.747,698,3.747,699,2.734,700,2.734,701,2.308,702,2.49,703,2.734,704,2.734,705,2.734,706,2.734,707,2.734,708,2.308,709,2.49,710,2.734,711,2.734,712,2.734,713,2.734,714,5.9,715,2.49,716,5.9,717,2.734,718,2.49,719,2.734,720,3.104,721,3.104,722,3.104,723,4.67,724,3.104,725,3.104]],["title/classes/GlobalValidationPipe.html",[0,0.141,726,3.323]],["body/classes/GlobalValidationPipe.html",[0,0.237,1,3.335,2,1.035,3,0.218,4,0.178,5,0.126,8,2.079,11,0.887,16,0.553,19,2.232,21,5.471,22,0.579,25,0.01,39,0.386,41,1.145,43,0.218,45,2.21,48,4.506,55,0.006,56,0.007,57,0.006,61,1.966,65,2.603,70,4.285,71,4.285,81,1.174,82,1.234,102,1.698,103,2.603,260,2.659,273,1.785,284,4.752,331,4.059,432,4.101,459,3.942,475,4.059,526,2.353,570,2.699,572,3.335,605,3.179,726,5.071,727,6.006,728,4.704,729,5.471,730,4.258,731,5.071,732,6.006,733,5.471,734,4.486,735,7.512,736,5.341,737,5.471,738,3.972,739,4.704,740,5.341,741,2.699,742,3.722,743,5.341,744,5.341,745,3.972,746,5.341,747,5.341,748,5.341,749,3.972,750,4.285,751,5.341,752,3.041,753,3.972,754,5.341,755,3.722,756,3.514,757,5.341,758,3.972,759,3.041,760,5.341,761,5.341]],["title/interfaces/ICreateNews.html",[430,1.007,762,2.94]],["body/interfaces/ICreateNews.html",[3,0.21,4,0.171,5,0.122,10,0.425,11,1.106,15,2.956,16,0.636,25,0.01,32,1.236,39,0.292,43,0.344,55,0.006,56,0.007,57,0.006,61,1.894,74,2.197,193,3.054,194,2.933,195,3.597,196,3.791,201,2.7,202,1.249,215,1.698,216,2.7,255,3.134,258,2.066,269,2.717,340,2.066,345,3.213,361,3.063,375,3.394,376,3.835,377,3.673,379,3.804,381,2.129,429,2.809,430,1.866,579,2.066,601,2.508,638,3.586,762,4.38,763,3.586,764,5.864,765,6.262,766,3.385,767,3.385,768,3.213,769,3.213,770,3.385,771,5.342,772,4.532,773,5.342,774,3.586,775,3.586,776,4.532,777,3.385,778,3.213,779,2.809]],["title/interfaces/ICurrentUser.html",[430,1.007,780,2.66]],["body/interfaces/ICurrentUser.html",[3,0.223,4,0.182,5,0.129,8,1.667,10,0.451,11,1.149,16,0.588,25,0.01,29,2.621,32,1.362,43,0.283,55,0.006,56,0.007,57,0.006,203,4.188,211,5.146,236,2.089,258,2.779,404,4.251,430,1.559,579,2.195,780,4.52,781,4.385,782,4.385,783,7.03,784,5.562,785,5.552,786,4.593,787,5.146,788,4.552,789,3.413,790,4.064,791,4.814,792,4.814,793,4.814,794,4.814,795,4.385,796,4.814,797,4.814,798,3.808]],["title/interfaces/IErrorType.html",[293,2.94,430,1.007]],["body/interfaces/IErrorType.html",[3,0.262,4,0.214,5,0.152,10,0.53,11,1.267,12,3.478,15,3.195,16,0.651,25,0.009,32,1.337,43,0.262,50,5.879,55,0.007,56,0.008,57,0.007,293,5.021,430,1.444,579,2.574,799,5.647,800,5.647]],["title/interfaces/ILogger.html",[430,1.007,801,3.323]],["body/interfaces/ILogger.html",[3,0.219,4,0.179,5,0.127,10,0.444,14,4.298,16,0.603,17,1.747,22,0.888,24,1.712,25,0.01,26,1.36,27,1.334,32,1.35,37,2.091,43,0.219,49,2.832,55,0.006,56,0.007,57,0.006,430,1.21,489,4.536,579,2.157,606,5.509,801,5.09,802,4.731,803,6.028,804,4.502,805,6.844,806,6.844,807,5.372,808,5.372,809,6.028,810,6.043,811,5.372,812,6.028,813,5.372,814,5.372,815,5.372,816,6.028,817,5.372,818,4.731,819,4.731]],["title/interfaces/INewsProperties.html",[424,2.791,430,1.007]],["body/interfaces/INewsProperties.html",[0,0.212,3,0.147,4,0.247,5,0.085,8,2.047,10,0.297,11,0.865,15,2.812,16,0.598,25,0.01,26,0.598,27,1.202,32,1.285,39,0.434,43,0.291,45,1.49,55,0.004,56,0.006,57,0.004,81,0.791,82,1.415,155,1.157,193,3.47,194,2.957,195,2.984,197,1.819,202,1.729,215,1.188,216,1.889,219,2.368,233,2.092,236,0.942,242,3.057,243,1.289,244,1.445,248,2.452,255,2.882,260,2.387,269,2.471,283,2.845,304,2.248,340,1.445,352,2.984,358,2.966,362,2.248,363,3.343,364,2.966,367,2.05,370,1.889,373,2.143,374,2.368,375,3.318,376,3.693,377,3.495,378,4.054,379,3.471,380,4.963,381,3.169,382,4.963,383,4.448,384,1.819,386,4.465,389,2.368,391,2.368,394,2.509,395,3.428,396,2.509,397,2.368,398,1.819,399,2.248,400,2.509,403,3.343,404,1.819,406,3.665,407,3.995,411,2.368,413,2.248,415,2.509,423,2.509,424,4.191,426,4.416,427,2.509,428,2.966,429,1.965,430,0.811,431,2.509,432,1.965,433,2.509,434,2.509,435,2.509,436,2.509,437,2.509,438,2.509,439,2.509,440,2.509,441,3.631,442,3.094,443,3.094,444,2.984,445,2.984,446,2.984,447,3.824,448,3.343,449,2.509,450,3.631,451,2.509,452,2.509,453,4.267,454,2.143,455,2.143,579,1.445]],["title/interfaces/INewsScope.html",[430,1.007,777,2.94]],["body/interfaces/INewsScope.html",[3,0.214,4,0.175,5,0.124,10,0.433,11,1.119,15,1.985,16,0.623,25,0.01,27,1.205,32,1.005,39,0.297,43,0.346,55,0.006,56,0.007,57,0.006,61,1.93,74,2.223,193,3.081,194,2.968,195,3.629,196,3.836,201,2.75,202,1.273,215,1.73,216,2.75,255,3.171,258,2.105,269,1.93,340,2.105,345,3.273,361,3.12,375,3.404,376,3.852,377,2.467,379,2.554,381,2.169,429,2.862,430,1.875,579,2.105,601,2.554,638,3.653,762,3.448,763,3.653,764,4.617,765,5.406,766,3.448,767,3.448,768,3.273,769,3.273,770,3.448,771,5.406,772,4.617,773,6.306,774,3.653,775,3.653,776,5.935,777,4.432,778,4.908,779,4.065]],["title/interfaces/IPagination.html",[430,1.007,820,3.323]],["body/interfaces/IPagination.html",[3,0.267,4,0.218,5,0.155,10,0.541,11,1.283,16,0.569,25,0.009,27,1.302,29,3.327,43,0.267,55,0.007,56,0.008,57,0.007,430,1.475,579,2.628,820,5.746,821,5.765,822,5.304,823,5.304]],["title/classes/ITaskMetadata.html",[0,0.141,824,2.94]],["body/classes/ITaskMetadata.html",[0,0.202,2,0.934,3,0.197,4,0.161,5,0.114,8,2.18,10,0.398,11,1.059,16,0.62,19,1.432,22,0.933,25,0.01,26,1.264,30,3.471,32,1.272,39,0.431,43,0.26,45,1.995,55,0.005,56,0.007,57,0.005,82,1.474,102,2.025,164,2.123,202,1.549,215,1.59,233,2.561,235,3.149,236,1.992,237,2.64,238,2.903,240,2.903,242,3.086,243,1.726,244,1.935,248,3.964,268,3.109,269,2.914,271,3.109,273,1.67,274,2.284,277,2.632,278,2.194,280,2.269,281,2.269,340,2.871,354,2.744,355,2.744,356,2.744,357,2.744,360,2.744,363,3.483,386,4.071,779,2.632,824,4.197,825,3.867,826,5.317,827,5.317,828,5.659,829,4.82,830,4.82,831,4.82,832,4.82,833,3.867,834,4.256,835,4.245,836,3.867,837,2.435,838,3.867,839,4.245]],["title/modules/InterceptorModule.html",[106,1.328,317,3.114]],["body/modules/InterceptorModule.html",[0,0.186,3,0.24,4,0.196,5,0.139,25,0.01,39,0.445,41,1.259,43,0.24,55,0.006,56,0.008,57,0.006,61,2.163,106,2.151,108,2.359,113,2.674,257,4.521,317,5.045,331,4.31,332,6.296,479,5.384,510,3.866,514,4.31,515,5.809,597,3.992,730,4.521,741,3.658,840,5.876,841,6.377,842,5.384,843,5.045,844,4.763,845,8.191,846,4.122,847,5.384,848,5.809,849,6.091,850,5.876]],["title/injectables/JwtAuthGuard.html",[143,1.058,851,3.323]],["body/injectables/JwtAuthGuard.html",[0,0.213,3,0.275,4,0.224,5,0.159,8,2.053,25,0.01,39,0.445,41,1.443,43,0.275,55,0.007,56,0.008,57,0.007,127,5.007,143,1.861,144,2.786,851,5.842,852,5.93,853,5.93,854,6.733,855,6.733]],["title/interfaces/JwtConstants.html",[130,2.94,430,1.007]],["body/interfaces/JwtConstants.html",[3,0.248,4,0.202,5,0.143,10,0.501,11,1.226,16,0.61,25,0.01,32,1.325,39,0.344,43,0.301,55,0.007,56,0.008,57,0.007,74,2.436,130,5.448,138,5.915,141,4.867,368,4.61,430,1.367,579,2.436,790,4.511,795,4.867,856,4.867,857,7.476,858,6.502,859,6.066,860,6.066,861,4.867,862,6.066,863,6.066,864,5.343,865,5.343]],["title/interfaces/JwtPayload.html",[430,1.007,789,2.791]],["body/interfaces/JwtPayload.html",[3,0.219,4,0.179,5,0.127,8,2.085,10,0.443,11,1.135,16,0.616,25,0.01,29,3.17,32,1.353,43,0.279,55,0.006,56,0.007,57,0.006,203,2.813,211,3.987,236,1.789,258,3.182,404,3.454,430,1.54,579,2.153,780,4.48,781,4.301,782,4.301,783,4.722,784,3.736,785,4.301,786,4.109,787,3.987,788,3.527,789,4.269,790,5.084,791,6.981,792,6.021,793,6.981,794,6.981,795,5.484,796,6.981,797,6.981,798,5.523]],["title/injectables/JwtStrategy.html",[120,3.114,143,1.058]],["body/injectables/JwtStrategy.html",[0,0.181,3,0.234,4,0.191,5,0.135,8,1.748,10,0.474,16,0.422,17,1.82,19,2.306,22,0.773,24,1.198,25,0.01,26,0.952,27,0.879,37,1.463,39,0.473,41,1.229,43,0.234,45,2.372,55,0.006,56,0.008,57,0.006,81,1.26,120,4.968,127,4.263,130,3.771,131,5.049,139,4.599,143,1.689,144,2.372,146,3.116,155,1.842,168,4.599,258,2.863,259,3.893,572,3.58,789,5.071,843,4.968,866,5.049,867,5.732,868,7.13,869,5.732,870,5.106,871,5.732,872,5.049,873,4.968,874,5.732,875,5.732,876,5.732,877,5.732,878,5.732,879,5.732,880,5.732,881,5.732,882,5.732,883,5.732,884,5.732]],["title/classes/Lesson.html",[0,0.141,834,2.66]],["body/classes/Lesson.html",[0,0.162,2,0.995,3,0.21,4,0.171,5,0.121,8,2.028,10,0.424,11,1.104,16,0.609,22,0.925,25,0.01,30,3.532,32,0.992,39,0.442,43,0.21,55,0.006,56,0.007,57,0.006,82,1.536,102,2.125,202,1.615,215,1.695,217,3.579,233,2.67,235,3.228,236,2.041,237,2.752,238,3.026,240,3.026,242,3.041,243,1.839,244,2.062,248,3.965,268,3.241,269,2.448,271,3.241,273,1.741,274,2.381,277,2.804,278,2.338,280,2.417,281,2.417,340,3.323,352,2.503,354,2.924,355,2.924,356,2.924,357,2.924,358,2.924,359,4.524,360,2.924,363,2.804,386,3.786,390,3.208,779,3.631,833,4.121,834,3.959,838,5.335,885,4.524,886,5.484,887,5.136,888,5.136,889,4.524]],["title/injectables/Logger.html",[143,1.058,483,2.258]],["body/injectables/Logger.html",[0,0.182,3,0.236,4,0.192,5,0.136,8,2.183,17,1.472,25,0.01,39,0.406,41,1.236,43,0.236,55,0.006,56,0.008,57,0.006,143,1.695,144,2.387,213,3.602,218,4.075,260,2.249,273,1.51,290,2.625,483,4.309,489,3.932,498,4.987,527,3.602,560,2.715,592,3.794,609,3.908,734,3.794,738,4.289,741,3.616,801,6.052,804,5.12,890,5.08,891,8.137,892,5.768,893,5.768,894,3.284,895,4.019,896,4.019,897,5.08,898,4.627,899,5.768,900,3.602,901,4.019,902,6.304,903,3.284,904,4.627,905,5.768,906,5.768,907,5.08,908,4.289,909,5.08,910,4.019,911,5.768,912,5.768,913,5.768]],["title/modules/LoggerModule.html",[106,1.328,318,2.791]],["body/modules/LoggerModule.html",[0,0.197,3,0.254,4,0.207,5,0.147,25,0.01,39,0.425,41,1.335,43,0.254,55,0.007,56,0.008,57,0.007,106,2.392,108,2.5,109,2.834,110,3.4,111,3.4,112,3.146,113,3.663,114,3.788,121,4.095,122,3.267,123,2.834,318,5.485,483,4.569,914,5.485,915,5.485,916,5.485,917,6.227,918,6.227]],["title/injectables/MongoMemoryDatabaseProvider.html",[143,1.058,919,3.585]],["body/injectables/MongoMemoryDatabaseProvider.html",[0,0.161,3,0.208,4,0.17,5,0.121,10,0.421,16,0.487,17,1.69,19,1.515,22,0.843,24,1.384,25,0.01,26,1.099,27,1.015,32,1.097,37,1.876,39,0.416,41,1.093,43,0.208,55,0.005,56,0.007,57,0.005,74,1.683,81,1.121,82,1.178,98,2.4,143,1.568,144,2.11,146,3.46,156,3.418,165,3.856,258,2.047,483,4.249,497,3.792,606,3.355,693,2.784,779,4.012,894,2.903,900,3.184,919,5.31,920,7.099,921,6.51,922,7.099,923,4.491,924,6.851,925,6.619,926,7.778,927,5.099,928,7.778,929,5.099,930,5.83,931,5.099,932,6.619,933,5.099,934,5.099,935,5.099,936,3.355,937,4.491,938,5.099,939,6.851,940,5.099,941,5.099,942,3.792,943,5.099,944,5.099]],["title/classes/News.html",[0,0.141,375,1.742]],["body/classes/News.html",[0,0.191,2,0.562,3,0.118,4,0.217,5,0.069,8,1.982,10,0.24,11,0.736,15,2.597,16,0.617,17,1.132,19,0.862,22,0.919,24,0.927,25,0.01,26,1.002,27,1.18,30,2.926,32,1.233,37,0.74,39,0.404,43,0.265,45,1.2,55,0.003,56,0.005,57,0.003,81,0.637,82,1.502,102,2.073,155,0.932,193,2.69,194,3.143,195,3.341,197,2.721,202,1.579,215,0.957,216,1.521,219,1.907,233,2.61,235,2.496,236,1.794,237,1.835,238,2.018,240,2.018,242,3.222,243,1.038,244,1.164,248,3.358,255,2.535,260,2.1,268,2.161,269,2.393,271,2.161,273,1.41,274,1.928,277,1.583,278,1.32,280,1.365,281,1.365,283,2.421,304,1.811,340,1.164,352,3.168,354,1.651,355,1.651,356,1.651,357,1.651,358,3.434,362,1.811,363,2.941,364,2.525,367,2.525,370,3.166,373,1.726,374,1.907,375,3.32,376,3.502,377,3.227,378,3.549,379,2.94,380,4.204,381,2.837,382,4.204,383,3.767,384,2.721,385,3.298,386,4.294,389,2.918,390,3.363,391,2.918,394,3.091,395,3.969,396,3.091,397,2.918,398,2.241,399,2.77,400,3.091,403,3.294,404,2.241,406,2.941,407,3.206,411,2.918,413,2.77,415,3.091,423,3.091,424,4.455,426,3.969,427,2.02,428,2.525,429,1.583,430,0.653,431,2.02,432,1.583,433,2.02,434,2.02,435,2.02,436,2.02,437,2.02,438,2.02,439,2.02,440,2.02,441,3.091,442,2.721,443,2.721,444,2.625,445,2.625,446,2.625,447,3.363,448,2.941,449,2.02,450,3.091,451,2.02,452,2.02,453,3.753,454,1.726,455,1.726,945,4.435,946,2.899,947,2.899,948,2.899,949,2.899,950,2.899,951,2.899,952,2.899,953,2.899,954,2.899,955,2.899,956,2.899,957,2.899]],["title/controllers/NewsController.html",[85,2.103,958,3.323]],["body/controllers/NewsController.html",[0,0.112,3,0.145,4,0.118,5,0.084,10,0.293,12,1.513,16,0.521,17,1.315,22,0.767,24,1.48,25,0.01,26,1.176,27,1.085,32,1.188,37,1.807,39,0.458,41,0.76,43,0.145,55,0.004,56,0.006,57,0.004,74,2.627,81,1.556,82,0.819,85,1.669,87,1.792,89,2.637,91,4.23,94,3.791,98,1.669,102,1.762,105,1.562,146,3.409,155,2.141,156,3.347,165,3.715,201,2.704,202,1.251,218,2.934,236,1.349,375,3.153,381,2.133,398,2.604,456,4.384,459,4,570,3.068,587,2.332,605,4.397,609,3.315,693,2.814,729,2.845,780,5.085,870,2.332,958,3.832,959,3.123,960,4.956,961,4.871,962,5.347,963,4.871,964,3.546,965,3.546,966,5.679,967,3.546,968,5.153,969,3.546,970,7.386,971,3.123,972,4.644,973,4.384,974,4.644,975,3.546,976,3.546,977,5.153,978,3.546,979,4.539,980,5.153,981,4.384,982,5.153,983,3.39,984,4.539,985,3.546,986,4.644,987,5.153,988,3.546,989,3.123,990,3.123,991,4.933,992,3.546,993,3.546,994,2.637,995,3.546,996,3.994,997,3.123,998,2.471,999,2.845,1000,2.637,1001,2.471,1002,2.637,1003,3.546,1004,3.546,1005,2.845,1006,3.546,1007,3.123,1008,3.123,1009,6.236,1010,3.123,1011,3.123,1012,5.87,1013,2.845,1014,4.539,1015,3.546,1016,3.546,1017,3.546,1018,3.546,1019,3.546,1020,2.637,1021,2.845,1022,3.546,1023,6.071,1024,3.546,1025,3.546,1026,3.546,1027,5.153,1028,3.546]],["title/classes/NewsFilterQuery.html",[0,0.141,972,3.114]],["body/classes/NewsFilterQuery.html",[0,0.225,2,1.111,3,0.234,4,0.191,5,0.135,10,0.474,11,1.184,16,0.571,22,0.841,25,0.01,27,1.305,32,1.212,39,0.44,43,0.234,55,0.006,56,0.008,57,0.006,102,1.932,103,3.782,105,2.525,194,3.419,196,4.418,258,2.302,361,3.412,471,5.302,473,6.038,474,5.72,475,3.412,767,3.771,778,4.846,779,3.893,843,3.995,972,4.968,1029,7.152,1030,5.049,1031,5.732,1032,5.732,1033,5.732,1034,5.732,1035,5.732,1036,5.732,1037,7.13,1038,5.732,1039,7.13,1040,5.72,1041,5.732,1042,5.732]],["title/classes/NewsMapper.html",[0,0.141,1002,3.323]],["body/classes/NewsMapper.html",[0,0.139,2,0.85,3,0.179,4,0.146,5,0.104,10,0.362,15,2.267,16,0.539,17,1.528,22,0.794,24,1.531,25,0.01,26,1.216,27,1.123,37,1.869,39,0.415,43,0.179,55,0.005,56,0.006,57,0.005,74,2.416,81,1.609,82,1.013,155,1.409,194,2.637,195,3.321,196,3.408,202,1.065,375,2.988,376,1.995,377,2.817,379,2.917,381,1.814,384,4.348,456,4.817,459,4.326,570,3.025,605,3.563,762,4.484,775,4.749,777,4.817,778,2.738,972,5.103,986,5.103,1001,5.103,1002,4.451,1043,3.862,1044,5.986,1045,5.986,1046,4.802,1047,5.986,1048,5.986,1049,4.385,1050,5.986,1051,4.385,1052,5.986,1053,4.385,1054,5.986,1055,4.385,1056,3.261,1057,3.261,1058,5.986,1059,3.261,1060,3.518,1061,3.862,1062,4.385,1063,4.385,1064,4.385,1065,4.385,1066,4.385,1067,3.862,1068,4.385,1069,4.385,1070,4.385,1071,4.385,1072,4.385,1073,3.862,1074,4.385,1075,4.385,1076,4.385,1077,4.385,1078,4.385,1079,4.385,1080,4.385,1081,4.385,1082,4.385,1083,4.385,1084,4.385,1085,4.385,1086,3.862,1087,5.986,1088,4.385,1089,4.385,1090,4.385,1091,4.385,1092,5.986,1093,5.986,1094,5.986,1095,4.385,1096,4.385]],["title/modules/NewsModule.html",[106,1.328,1097,3.114]],["body/modules/NewsModule.html",[0,0.177,3,0.228,4,0.186,5,0.132,25,0.01,39,0.479,41,1.199,43,0.228,55,0.006,56,0.008,57,0.006,87,3.549,106,2.281,108,2.247,109,2.547,110,3.055,111,3.055,112,2.827,113,3.493,114,3.613,121,3.835,122,2.936,123,2.547,125,3.999,173,5.567,318,5.285,958,5.708,996,5.868,997,4.929,1097,6.242,1098,4.929,1099,5.596,1100,4.929,1101,4.929,1102,5.567,1103,5.596,1104,4.929,1105,5.596,1106,5.596,1107,4.929]],["title/injectables/NewsRepo.html",[143,1.058,1102,2.94]],["body/injectables/NewsRepo.html",[0,0.126,3,0.163,4,0.133,5,0.095,10,0.33,12,1.707,16,0.566,17,1.433,19,1.188,22,0.833,24,1.607,25,0.01,26,1.277,27,1.179,37,1.893,39,0.457,41,0.857,43,0.163,55,0.004,56,0.006,57,0.004,74,2.447,81,1.547,82,0.924,98,1.882,143,1.33,144,1.655,146,3.472,156,3.435,164,2.859,165,4.035,193,2.913,202,0.971,215,1.319,218,3.695,236,1.47,243,1.432,245,2.631,273,1.047,274,1.432,375,3.418,376,1.82,378,3.066,381,2.913,383,3.507,461,3.197,508,2.38,567,4.827,570,2.838,601,2.737,609,3.066,778,4.396,779,3.544,960,4.176,961,5.208,973,5.39,983,3.694,984,4.946,1013,4.506,1014,4.946,1102,3.694,1108,3.522,1109,5.616,1110,5.616,1111,4.946,1112,3.522,1113,6.2,1114,3.999,1115,4.506,1116,5.616,1117,3.999,1118,3.999,1119,4.631,1120,5.873,1121,3.999,1122,5.616,1123,3.999,1124,5.616,1125,3.999,1126,5.616,1127,4.176,1128,5.616,1129,3.913,1130,5.616,1131,3.999,1132,3.999,1133,3.208,1134,3.522,1135,4.176,1136,3.999,1137,3.999,1138,3.999,1139,5.616,1140,3.999,1141,3.999,1142,3.999,1143,3.999,1144,3.999,1145,3.999]],["title/classes/NewsResponse.html",[0,0.141,1001,3.114]],["body/classes/NewsResponse.html",[0,0.19,2,0.858,3,0.181,4,0.245,5,0.105,10,0.366,11,1,15,2.594,16,0.648,22,0.94,25,0.01,27,1.267,32,1.302,39,0.417,43,0.181,55,0.005,56,0.006,57,0.005,74,1.988,102,2.16,103,4.324,105,1.95,155,1.422,194,3.017,196,3.899,197,3.46,236,1.793,268,3.338,269,2.921,271,3.338,377,3.223,378,3.739,379,3.338,381,3.042,383,4.277,406,2.416,407,2.635,471,6.144,1001,4.198,1146,3.291,1147,4.426,1148,4.426,1149,5.359,1150,4.426,1151,4.426,1152,3.551,1153,4.833,1154,4.833,1155,4.426,1156,4.426,1157,4.772,1158,4.426,1159,6.032,1160,4.426,1161,6.024,1162,5.495,1163,4.426,1164,4.426,1165,4.426,1166,4.426,1167,4.426,1168,4.426,1169,4.426,1170,3.291,1171,3.551,1172,6.024,1173,4.426,1174,4.426,1175,3.291]],["title/classes/NewsScope.html",[0,0.141,1135,3.323]],["body/classes/NewsScope.html",[0,0.145,2,0.89,3,0.188,4,0.153,5,0.109,10,0.379,11,1.026,16,0.55,17,1.577,22,0.844,24,1.459,25,0.01,26,1.159,27,1.07,37,1.781,39,0.423,43,0.188,55,0.007,56,0.007,57,0.005,74,2.303,81,1.64,82,1.061,164,3.533,194,2.023,199,2.733,202,1.115,243,1.644,244,1.844,269,1.691,273,1.202,274,1.644,375,2.408,376,2.09,379,2.238,500,4.863,508,2.733,567,3.415,570,4.21,574,4.045,642,3.415,778,3.857,779,3.81,1119,4.91,1135,5.965,1176,6.435,1177,4.045,1178,6.979,1179,6.176,1180,6.176,1181,6.176,1182,6.176,1183,8.332,1184,4.592,1185,6.176,1186,4.592,1187,6.176,1188,4.592,1189,6.176,1190,4.592,1191,4.592,1192,4.592,1193,3.684,1194,4.592,1195,4.592,1196,3.676,1197,4.592,1198,4.592,1199,4.304,1200,4.592,1201,4.592,1202,4.592,1203,6.176,1204,3.021,1205,4.592,1206,4.592,1207,3.2,1208,4.592,1209,4.592,1210,6.176,1211,4.592,1212,4.592,1213,4.592]],["title/interfaces/NewsTargetFilter.html",[430,1.007,1119,2.94]],["body/interfaces/NewsTargetFilter.html",[3,0.262,4,0.214,5,0.152,10,0.531,11,1.269,16,0.563,25,0.01,39,0.433,43,0.262,55,0.007,56,0.008,57,0.007,193,3.494,194,3.719,195,4.114,202,1.56,215,2.12,376,2.924,430,1.448,573,6.773,579,2.58,1119,5.028,1176,5.155,1214,5.66]],["title/injectables/NewsUc.html",[143,1.058,996,2.94]],["body/injectables/NewsUc.html",[0,0.075,3,0.097,4,0.079,5,0.056,10,0.195,16,0.546,17,0.965,19,0.702,22,0.787,24,1.517,25,0.01,26,1.205,27,1.113,32,0.705,37,1.983,39,0.389,41,0.507,43,0.097,55,0.003,56,0.004,57,0.003,61,0.87,74,2.646,81,1.595,82,0.546,98,1.113,143,0.895,144,0.978,146,3.367,155,1.734,156,3.215,164,3.423,165,4.331,171,1.758,179,4.126,193,3.61,194,3.198,195,2.63,196,3.762,197,3.874,201,1.24,202,0.574,203,4.438,215,0.78,216,1.24,218,4.424,236,1.9,269,1.739,274,1.691,278,2.15,370,1.984,375,3.31,376,2.864,378,1.291,379,1.842,381,0.978,384,2.387,398,3.469,399,2.361,404,2.982,442,1.194,443,1.194,444,1.152,445,1.152,483,3.339,497,1.758,508,1.407,533,3.33,542,3.33,567,4.914,573,3.033,601,1.842,605,4.214,606,2.487,609,3.748,693,2.064,752,1.346,759,1.346,762,3.55,775,3.761,777,4.347,778,3.685,779,2.579,786,2.064,820,4.013,846,2.152,901,1.647,960,2.811,963,3.79,973,3.882,996,2.487,1013,3.033,1061,2.082,1067,2.082,1073,4.753,1086,3.33,1102,4.141,1104,2.082,1119,2.487,1133,1.897,1134,2.082,1204,1.555,1215,1.897,1216,3.78,1217,3.78,1218,3.78,1219,3.78,1220,4.723,1221,2.364,1222,2.364,1223,3.78,1224,2.364,1225,3.78,1226,2.364,1227,3.78,1228,2.364,1229,3.78,1230,2.364,1231,3.78,1232,2.364,1233,2.364,1234,3.78,1235,2.364,1236,3.033,1237,2.634,1238,2.364,1239,4.723,1240,2.364,1241,3.78,1242,2.364,1243,2.364,1244,2.364,1245,3.33,1246,4.753,1247,2.364,1248,2.082,1249,2.364,1250,5.397,1251,2.364,1252,2.364,1253,3.78,1254,2.364,1255,4.753,1256,2.364,1257,2.364,1258,2.364,1259,3.78,1260,2.364,1261,3.78,1262,2.364,1263,3.78,1264,2.364,1265,2.364,1266,1.346,1267,4.723,1268,2.364,1269,3.78,1270,2.364,1271,2.364,1272,5.397,1273,2.364,1274,2.082,1275,1.897,1276,2.364,1277,2.364,1278,2.364,1279,2.364,1280,2.082,1281,3.78,1282,2.364,1283,2.364,1284,1.555,1285,2.364,1286,2.364,1287,3.78,1288,2.364,1289,2.364,1290,2.364,1291,2.364,1292,2.364]],["title/interfaces/PaginationModel.html",[430,1.007,1120,3.323]],["body/interfaces/PaginationModel.html",[3,0.266,4,0.217,5,0.154,10,0.538,11,1.279,12,3.289,16,0.567,25,0.009,27,1.3,29,3.323,43,0.266,55,0.007,56,0.008,57,0.007,430,1.468,579,2.616,822,5.296,823,5.296,1120,5.73,1293,5.738]],["title/classes/PaginationQuery.html",[0,0.141,974,3.114]],["body/classes/PaginationQuery.html",[0,0.224,2,1.1,3,0.232,4,0.189,5,0.134,10,0.469,11,1.176,16,0.522,22,0.768,25,0.01,27,1.24,29,3.217,39,0.401,43,0.232,55,0.006,56,0.008,57,0.006,61,2.608,102,1.764,103,3.765,105,2.5,273,1.855,274,2.536,475,3.378,755,4.937,822,5.2,823,4.824,974,4.937,1127,5.269,1196,4.218,1204,4.661,1294,4.998,1295,5.638,1296,5.675,1297,3.453,1298,5.269,1299,5.684,1300,5.684,1301,5.684,1302,5.675,1303,5.675,1304,5.684,1305,5.675,1306,6.804,1307,4.553,1308,4.998,1309,4.998,1310,4.998,1311,4.998]],["title/classes/PaginationResponse.html",[0,0.141,994,3.323]],["body/classes/PaginationResponse.html",[0,0.191,2,1.168,3,0.246,4,0.201,5,0.142,10,0.498,11,1.221,16,0.584,19,1.791,22,0.86,24,1.26,25,0.01,26,1.001,27,0.924,29,3.209,39,0.341,43,0.246,55,0.006,56,0.008,57,0.006,102,1.831,103,4.129,105,2.655,638,5.904,741,4.281,994,5.468,1312,5.308,1313,7,1314,7.353,1315,6.027,1316,6.027,1317,6.027,1318,6.027,1319,6.027]],["title/injectables/ParseObjectIdPipe.html",[143,1.058,991,3.114]],["body/injectables/ParseObjectIdPipe.html",[0,0.194,3,0.251,4,0.205,5,0.145,10,0.508,16,0.452,17,1.899,22,0.666,24,1.284,25,0.01,26,1.02,27,0.942,37,1.569,39,0.422,41,1.317,43,0.251,55,0.007,56,0.008,57,0.007,74,2.028,81,1.35,82,1.42,143,1.762,144,2.543,172,3.658,237,2.543,274,2.664,498,4.282,742,5.185,770,4.043,991,5.185,1320,6.554,1321,4.429,1322,4.93,1323,7.441,1324,6.145,1325,7.441,1326,7.441,1327,6.145,1328,3.838,1329,7.441,1330,6.145,1331,6.145]],["title/classes/SampleError.html",[0,0.141,309,3.323]],["body/classes/SampleError.html",[0,0.222,2,0.899,3,0.189,4,0.154,5,0.11,8,2.139,9,5.215,10,0.383,11,1.032,12,3.705,13,3.299,14,4.311,15,3.112,16,0.639,17,1.587,18,6.012,19,1.847,22,0.872,24,0.969,25,0.01,26,0.77,27,0.711,29,2.355,30,3.335,31,4.085,32,1.262,33,4.085,34,4.085,35,4.085,36,4.085,37,1.184,38,3.829,39,0.397,40,4.623,41,0.994,43,0.254,45,2.573,49,3.101,50,5.222,55,0.005,56,0.007,57,0.005,61,1.707,65,3.03,81,1.019,82,1.071,273,1.214,282,3.721,283,3.394,284,3.232,285,3.829,286,3.051,287,2.64,288,2.64,289,3.051,290,2.11,291,4.623,293,4.09,299,4.085,300,4.085,301,3.721,302,5.476,303,4.085,304,3.882,305,5.476,306,4.085,307,5.222,308,3.882,309,4.623,310,5.476,311,4.085,312,4.085,606,3.051,1332,4.637]],["title/classes/SchoolInfo.html",[0,0.141,403,2.44]],["body/classes/SchoolInfo.html",[0,0.18,2,1.106,3,0.233,4,0.19,5,0.135,8,2.169,10,0.472,11,1.181,16,0.626,19,1.697,22,0.879,24,1.193,25,0.01,26,1.385,27,0.875,30,3.035,32,1.21,39,0.403,43,0.233,45,2.363,55,0.006,56,0.008,57,0.006,102,1.929,202,1.727,215,1.884,233,3.35,235,2.943,236,1.862,237,2.363,238,2.598,240,2.598,242,3.02,243,2.044,244,2.292,280,2.687,281,2.687,360,3.25,366,3.978,367,4.049,368,4.441,369,5.289,370,2.996,371,4.58,372,4.58,403,3.883,766,3.756,1333,6.823]],["title/classes/SchoolInfoMapper.html",[0,0.141,1057,3.323]],["body/classes/SchoolInfoMapper.html",[0,0.195,2,1.194,3,0.251,4,0.205,5,0.146,10,0.509,16,0.453,17,1.902,22,0.667,24,1.287,25,0.01,26,1.023,27,0.944,37,1.572,39,0.422,43,0.251,55,0.007,56,0.008,57,0.007,74,2.032,81,1.353,82,1.423,202,1.495,384,4.048,403,4.654,459,3.91,1046,5.978,1056,4.58,1057,5.541,1060,4.941,1157,5.8,1334,6.563,1335,4.941,1336,7.451,1337,5.425,1338,6.159,1339,6.159,1340,6.159]],["title/classes/SchoolInfoResponse.html",[0,0.141,1157,3.114]],["body/classes/SchoolInfoResponse.html",[0,0.236,2,1.201,3,0.253,4,0.206,5,0.147,10,0.512,11,1.242,16,0.551,22,0.811,25,0.01,26,1.334,32,1.245,39,0.424,43,0.253,55,0.007,56,0.008,57,0.007,102,1.862,103,4.066,105,2.731,236,2.103,1152,4.974,1153,6.002,1154,6.002,1157,5.213,1170,4.61,1171,4.974,1175,4.61,1341,7.076,1342,4.974,1343,6.199,1344,6.199]],["title/classes/SchoolNews.html",[0,0.141,454,2.66]],["body/classes/SchoolNews.html",[0,0.181,2,0.509,3,0.107,4,0.207,5,0.062,8,1.894,10,0.217,11,0.682,15,2.494,16,0.621,17,1.049,22,0.929,24,0.549,25,0.01,26,0.84,27,1.123,30,3.646,32,1.23,37,0.67,39,0.39,43,0.254,45,1.087,55,0.003,56,0.004,57,0.003,81,0.577,82,1.59,102,2.119,155,0.844,193,2.57,194,3.032,195,3.21,197,2.557,202,1.508,215,0.867,216,1.378,219,1.728,233,2.494,235,2.948,236,1.96,237,2.368,238,2.605,240,2.605,242,3.19,243,0.94,244,1.055,248,3.1,255,2.382,260,1.973,268,2.789,269,2.534,271,2.789,273,1.626,274,2.224,277,2.243,278,1.87,280,1.236,281,1.236,283,2.243,304,1.64,340,1.055,352,3.027,354,1.495,355,1.495,356,1.495,357,1.495,358,3.258,362,1.64,363,2.763,364,2.339,367,1.495,370,2.655,373,1.563,374,1.728,375,3.452,376,3.529,377,3.1,378,3.391,379,2.789,380,3.988,381,2.725,382,3.988,383,3.574,384,2.557,385,3.055,386,4.264,388,2.107,389,2.703,390,3.16,391,2.703,392,2.107,393,2.107,394,2.863,395,3.765,396,2.863,397,2.703,398,2.076,399,2.566,400,2.863,401,2.107,402,2.107,403,3.391,404,2.076,405,2.107,406,2.763,407,3.012,408,2.107,409,2.107,410,2.107,411,2.703,412,2.107,413,2.566,414,2.107,415,2.863,416,2.107,417,2.107,418,2.107,419,2.107,420,2.107,421,2.107,422,2.107,423,2.863,424,3.879,425,2.107,426,3.765,427,1.83,428,2.339,429,1.434,430,0.592,431,1.83,432,1.434,433,1.83,434,1.83,435,1.83,436,1.83,437,1.83,438,1.83,439,1.83,440,1.83,441,2.863,442,2.557,443,2.557,444,2.466,445,2.466,446,2.466,447,3.16,448,2.763,449,1.83,450,2.863,451,1.83,452,1.83,453,3.526,454,2.446,455,1.563,1345,2.626]],["title/controllers/ServerController.html",[85,2.103,1346,3.323]],["body/controllers/ServerController.html",[0,0.196,3,0.253,4,0.206,5,0.146,10,0.511,12,2.64,17,1.907,22,0.67,25,0.01,32,1.115,37,1.579,39,0.423,41,1.326,43,0.253,55,0.007,56,0.008,57,0.007,81,1.359,85,3.516,87,3.126,91,4.31,92,4.963,93,2.815,98,2.911,102,1.54,273,1.955,554,3.92,564,5.206,588,4.079,1346,5.556,1347,5.448,1348,7.343,1349,6.186,1350,5.556,1351,5.28,1352,5.448,1353,6.186]],["title/modules/ServerModule.html",[106,1.328,1354,3.323]],["body/modules/ServerModule.html",[0,0.145,3,0.187,4,0.153,5,0.108,16,0.338,25,0.01,32,0.684,39,0.499,41,0.983,43,0.187,52,2.61,55,0.005,56,0.007,57,0.005,81,1.007,82,1.059,87,3.117,106,2.072,107,5.587,108,1.841,109,2.086,110,2.503,111,2.503,112,2.317,113,3.173,114,2.158,119,5.274,121,3.368,122,2.406,123,2.086,125,3.512,169,2.61,210,2.729,243,2.209,244,1.841,258,1.841,313,5.587,340,2.477,352,3.007,364,3.512,373,3.672,375,2.405,403,3.368,426,4.059,428,3.512,454,3.672,455,3.672,550,4.038,834,3.672,837,3.117,942,4.588,1097,5.587,1328,2.863,1346,5.185,1351,5.274,1352,4.038,1354,6.578,1355,4.038,1356,4.038,1357,4.038,1358,5.587,1359,4.584,1360,4.584,1361,4.038,1362,6.169,1363,6.169,1364,4.584,1365,4.584,1366,4.584,1367,4.584,1368,6.169,1369,3.016,1370,4.584,1371,4.584,1372,4.059,1373,4.584,1374,4.584,1375,4.584,1376,4.584,1377,4.584,1378,4.588,1379,4.584,1380,4.584,1381,4.584,1382,6.169,1383,4.584,1384,3.195,1385,3.195]],["title/injectables/ServerService.html",[143,1.058,1351,2.94]],["body/injectables/ServerService.html",[0,0.207,3,0.268,4,0.219,5,0.155,10,0.542,17,1.975,22,0.711,25,0.01,32,1.155,37,1.675,39,0.372,41,1.406,43,0.268,55,0.007,56,0.008,57,0.007,81,1.442,143,1.832,144,2.715,1348,7.487,1351,5.09,1386,5.778,1387,6.56,1388,6.56,1389,5.263]],["title/classes/Submission.html",[0,0.141,1372,2.94]],["body/classes/Submission.html",[0,0.162,2,0.992,3,0.209,4,0.17,5,0.121,8,2.023,10,0.423,11,1.102,16,0.609,22,0.925,25,0.01,30,3.529,32,0.99,39,0.441,43,0.209,55,0.005,56,0.007,57,0.005,82,1.533,102,2.124,202,1.611,215,1.689,217,3.566,233,2.664,235,3.223,236,2.039,237,2.745,238,3.019,240,3.019,242,2.587,243,1.832,244,2.055,248,3.961,268,3.233,269,2.442,271,3.233,273,1.737,274,2.375,277,2.794,278,2.329,280,2.409,281,2.409,352,3.588,354,2.914,355,2.914,356,2.914,357,2.914,360,2.914,363,3.622,386,4.191,390,4.143,837,3.72,1372,4.365,1390,4.508,1391,5.906,1392,5.475,1393,6.634,1394,5.118,1395,6.634,1396,5.118,1397,5.118,1398,4.508]],["title/classes/Task.html",[0,0.141,837,2.258]],["body/classes/Task.html",[0,0.194,2,0.883,3,0.186,4,0.152,5,0.108,8,2.119,10,0.376,11,1.02,16,0.621,19,2.065,22,0.938,25,0.01,26,1.235,27,1.227,30,3.415,32,1.22,39,0.421,43,0.251,45,1.885,55,0.005,56,0.007,57,0.005,82,1.419,102,2.139,164,3.062,202,1.491,215,1.503,233,2.466,235,3.078,236,1.947,237,2.542,238,2.795,240,2.795,242,3.242,243,1.631,244,1.829,248,3.914,268,2.993,269,2.859,271,2.993,273,1.608,274,2.199,277,2.487,278,2.073,280,2.144,281,2.144,340,3.213,354,2.593,355,2.593,356,2.593,357,2.593,360,2.593,363,3.354,386,3.957,390,3.836,779,3.354,824,2.996,825,3.654,826,3.387,827,3.387,828,5.532,833,3.654,834,4.763,835,4.012,836,3.654,837,3.104,838,4.928,839,5.41,1399,6.142,1400,4.555,1401,4.555,1402,4.555,1403,4.555]],["title/controllers/TaskController.html",[85,2.103,1404,3.323]],["body/controllers/TaskController.html",[0,0.174,3,0.224,4,0.183,5,0.13,10,0.454,12,2.346,16,0.405,17,1.773,22,0.596,24,1.149,25,0.01,26,0.913,27,1.065,37,1.403,39,0.477,41,1.178,43,0.224,55,0.006,56,0.007,57,0.006,63,4.134,74,1.814,81,1.208,85,2.587,87,2.778,89,4.088,98,2.587,102,1.369,105,2.422,146,3.057,156,2.874,258,2.207,459,2.885,570,4.373,756,3.617,759,3.13,780,4.761,837,2.778,870,3.617,961,5.572,966,5.009,971,4.842,981,3.617,990,4.842,998,3.831,999,4.411,1000,4.088,1005,4.411,1020,4.088,1321,3.272,1404,5.165,1405,4.842,1406,5.574,1407,6.945,1408,5.497,1409,5.009,1410,4.842,1411,4.088,1412,4.088,1413,5.497,1414,4.842,1415,5.497,1416,3.617,1417,6.945,1418,5.497,1419,5.497,1420,5.497,1421,5.497]],["title/modules/TaskModule.html",[106,1.328,1358,3.114]],["body/modules/TaskModule.html",[0,0.192,3,0.248,4,0.202,5,0.144,25,0.01,39,0.47,41,1.303,43,0.248,55,0.007,56,0.008,57,0.007,87,3.735,106,2.367,108,2.441,109,2.766,110,3.319,111,3.319,112,3.072,113,3.625,114,2.861,121,4.036,122,3.19,123,2.766,1358,6.147,1404,5.924,1409,5.681,1410,5.354,1422,5.354,1423,5.354,1424,5.681,1425,6.079,1426,6.079,1427,5.354]],["title/classes/TaskOptionsEntry.html",[0,0.141,1428,3.323]],["body/classes/TaskOptionsEntry.html",[0,0.188,2,1.151,3,0.242,4,0.198,5,0.14,8,2.222,10,0.491,11,1.21,16,0.437,22,0.854,25,0.009,27,1.317,29,2.249,30,3.365,39,0.336,43,0.242,55,0.006,56,0.008,57,0.006,102,1.963,273,1.554,755,4.138,822,4.923,823,4.55,1056,4.416,1127,4.416,1196,3.535,1295,4.138,1297,2.894,1298,4.416,1299,5.846,1300,5.846,1301,4.764,1304,4.764,1384,4.138,1406,5.984,1428,5.863,1429,4.764,1430,5.863,1431,5.23,1432,5.938,1433,5.23,1434,5.938,1435,5.23,1436,4.138,1437,3.116,1438,5.23,1439,5.23,1440,5.938,1441,4.416]],["title/classes/TaskQueryDto.html",[0,0.141,1406,3.114]],["body/classes/TaskQueryDto.html",[0,0.218,2,1.053,3,0.222,4,0.181,5,0.128,10,0.449,11,1.145,22,0.821,25,0.01,27,1.288,29,2.611,39,0.391,43,0.222,55,0.006,56,0.007,57,0.006,61,2.788,102,1.885,103,3.882,105,2.394,273,1.805,473,5.923,475,3.235,755,4.804,822,5.133,823,4.729,1127,5.127,1196,4.104,1295,4.804,1297,3.36,1298,5.127,1299,6.39,1300,6.39,1301,5.531,1304,5.531,1306,7.016,1307,4.359,1308,4.786,1309,4.786,1310,4.786,1311,4.786,1384,4.804,1406,4.804,1430,6.113,1431,4.786,1433,4.786,1435,4.786,1436,4.804,1437,3.618,1438,6.073,1439,6.073,1442,6.39,1443,4.786,1444,5.434,1445,5.434,1446,5.434,1447,5.434,1448,5.434]],["title/injectables/TaskRepo.html",[143,1.058,1424,2.94]],["body/injectables/TaskRepo.html",[0,0.142,3,0.184,4,0.15,5,0.106,10,0.372,12,1.922,16,0.449,17,1.556,19,1.338,22,0.661,24,1.274,25,0.01,26,1.147,27,0.935,37,1.15,39,0.42,41,0.965,43,0.184,55,0.005,56,0.007,57,0.005,74,2.632,81,1.34,98,2.12,143,1.444,144,1.864,146,2.775,156,2.523,164,1.984,165,3.886,171,3.349,193,3.064,202,1.094,203,3.626,215,1.486,235,1.864,236,1.596,237,1.864,243,1.612,245,2.963,258,2.775,268,2.195,271,2.195,273,1.179,274,1.612,278,2.05,340,2.973,343,3.349,432,2.459,529,3.349,572,2.813,752,2.564,822,2.813,823,2.813,824,4.546,826,3.349,827,3.349,828,3.349,834,4.113,837,3.08,886,3.349,896,3.138,973,2.963,1112,3.967,1113,6.522,1115,4.891,1313,3.613,1372,2.963,1392,3.349,1424,4.01,1430,3.349,1437,2.363,1441,5.507,1449,3.967,1450,6.096,1451,4.504,1452,6.096,1453,4.504,1454,3.967,1455,4.504,1456,3.613,1457,3.967,1458,3.613,1459,4.504,1460,3.138,1461,4.504,1462,6.91,1463,4.504,1464,6.096,1465,4.504,1466,4.504,1467,4.504,1468,6.096,1469,4.504,1470,4.504,1471,4.504,1472,4.504,1473,4.504,1474,4.504,1475,6.096,1476,4.504,1477,4.504,1478,4.504,1479,4.504,1480,4.504,1481,4.504,1482,4.504,1483,4.504,1484,4.504,1485,3.613]],["title/classes/TaskResponseDto.html",[0,0.141,1411,3.323]],["body/classes/TaskResponseDto.html",[0,0.17,2,1.045,3,0.22,4,0.18,5,0.127,10,0.445,11,1.139,16,0.617,19,1.602,22,0.909,24,1.127,25,0.01,26,1.319,27,0.827,32,1.299,39,0.306,43,0.22,47,3.6,55,0.006,56,0.007,57,0.006,61,1.985,102,2.042,103,4.302,105,2.375,236,1.975,269,2.526,344,6.043,345,5.121,362,3.367,459,3.6,461,3.906,826,5.612,827,5.612,828,5.612,837,3.467,1411,5.102,1442,6.834,1486,4.749,1487,6.043,1488,4.284,1489,5.392,1490,5.392,1491,5.392,1492,5.392,1493,5.392,1494,5.392,1495,4.326]],["title/injectables/TaskUC.html",[143,1.058,1409,2.94]],["body/injectables/TaskUC.html",[0,0.18,3,0.233,4,0.19,5,0.135,10,0.472,16,0.524,17,1.815,19,1.697,22,0.771,24,1.487,25,0.01,26,1.181,27,1.09,37,1.457,39,0.459,41,1.224,43,0.233,55,0.006,56,0.008,57,0.006,81,1.255,98,2.687,143,1.684,144,2.363,146,3.11,156,2.943,193,3.355,202,1.386,203,2.996,215,1.884,258,2.292,508,3.398,731,4.246,824,3.756,1266,3.25,1409,4.679,1424,5.595,1427,5.029,1441,6.03,1496,5.029,1497,7.112,1498,5.709,1499,5.709,1500,7.112,1501,6.505,1502,5.709,1503,4.246,1504,4.58,1505,4.246,1506,5.709,1507,4.58,1508,3.978,1509,4.246,1510,4.58,1511,5.709]],["title/classes/TeamInfo.html",[0,0.141,428,2.544]],["body/classes/TeamInfo.html",[0,0.18,2,1.106,3,0.233,4,0.19,5,0.135,8,2.169,10,0.472,11,1.181,16,0.626,19,1.697,22,0.879,24,1.193,25,0.01,26,1.385,27,0.875,30,3.035,32,1.21,39,0.403,43,0.233,45,2.363,55,0.006,56,0.008,57,0.006,102,1.929,202,1.727,215,1.884,233,3.35,235,2.943,236,1.862,237,2.363,238,2.598,240,2.598,242,3.02,243,2.044,244,2.292,280,2.687,281,2.687,360,3.25,366,3.978,367,4.049,368,4.441,369,5.289,370,2.996,371,4.58,372,4.58,428,4.049,767,3.756,1512,6.823]],["title/classes/TeamNews.html",[0,0.141,455,2.66]],["body/classes/TeamNews.html",[0,0.181,2,0.509,3,0.107,4,0.207,5,0.062,8,1.894,10,0.217,11,0.682,15,2.494,16,0.621,17,1.049,22,0.929,24,0.549,25,0.01,26,0.84,27,1.123,30,3.646,32,1.23,37,0.67,39,0.39,43,0.254,45,1.087,55,0.003,56,0.004,57,0.003,81,0.577,82,1.59,102,2.119,155,0.844,193,2.57,194,3.032,195,3.21,197,2.557,202,1.508,215,0.867,216,1.378,219,1.728,233,2.494,235,2.948,236,1.96,237,2.368,238,2.605,240,2.605,242,3.19,243,0.94,244,1.055,248,3.1,255,2.382,260,1.973,268,2.789,269,2.534,271,2.789,273,1.626,274,2.224,277,2.243,278,1.87,280,1.236,281,1.236,283,2.243,304,1.64,340,1.055,352,3.027,354,1.495,355,1.495,356,1.495,357,1.495,358,3.258,362,1.64,363,2.763,364,2.339,367,1.495,370,2.655,373,1.563,374,1.728,375,3.452,376,3.529,377,3.1,378,3.391,379,2.789,380,3.988,381,2.725,382,3.988,383,3.574,384,2.557,385,3.055,386,4.264,388,2.107,389,2.703,390,3.16,391,2.703,392,2.107,393,2.107,394,2.863,395,3.765,396,2.863,397,2.703,398,2.076,399,2.566,400,2.863,401,2.107,402,2.107,403,3.125,404,2.076,405,2.107,406,2.763,407,3.012,408,2.107,409,2.107,410,2.107,411,2.703,412,2.107,413,2.566,414,2.107,415,2.863,416,2.107,417,2.107,418,2.107,419,2.107,420,2.107,421,2.107,422,2.107,423,2.863,424,3.879,425,2.107,426,3.765,427,1.83,428,2.881,429,1.434,430,0.592,431,1.83,432,1.434,433,1.83,434,1.83,435,1.83,436,1.83,437,1.83,438,1.83,439,1.83,440,1.83,441,2.863,442,2.557,443,2.557,444,2.466,445,2.466,446,2.466,447,3.16,448,2.763,449,1.83,450,2.863,451,1.83,452,1.83,453,3.526,454,1.563,455,2.446,1513,2.626]],["title/injectables/TimeoutInterceptor.html",[143,1.058,849,3.323]],["body/injectables/TimeoutInterceptor.html",[0,0.165,3,0.213,4,0.174,5,0.123,10,0.431,11,1.115,12,3.347,16,0.494,17,1.714,22,0.728,24,1.09,25,0.01,26,0.866,27,0.799,29,2.543,37,1.331,39,0.421,41,1.117,43,0.213,55,0.006,56,0.007,57,0.006,61,1.919,81,1.632,85,3.16,93,3.055,98,2.453,143,1.59,144,2.157,273,1.364,274,1.866,384,3.753,444,3.619,479,4.993,484,5.913,485,5.913,486,6.292,487,6.908,489,2.634,490,6.541,493,5.913,494,4.182,496,4.591,498,3.632,590,3.665,654,4.182,847,5.523,849,4.993,937,6.541,1514,4.591,1515,6.714,1516,4.678,1517,4.993,1518,6.714,1519,4.993,1520,4.678,1521,5.386,1522,7.426,1523,5.212,1524,7.426,1525,5.212,1526,6.714,1527,5.212,1528,6.714,1529,5.212,1530,5.212,1531,5.212,1532,5.212,1533,5.212,1534,5.212,1535,5.212,1536,5.212]],["title/classes/UpdateNewsParams.html",[0,0.141,986,3.114]],["body/classes/UpdateNewsParams.html",[0,0.255,2,1.087,3,0.229,4,0.187,5,0.133,10,0.463,11,1.338,15,2.91,16,0.566,22,0.833,25,0.01,27,1.078,32,1.202,39,0.398,43,0.229,55,0.006,56,0.008,57,0.006,61,2.064,94,4.798,102,1.913,105,2.47,269,2.589,375,2.742,379,3.744,458,4.498,459,3.69,461,4.004,471,5.991,472,6.194,473,5.991,474,6.164,475,3.338,734,4.626,774,4.9,986,4.9,1537,7.096,1538,7.683,1539,7.032,1540,5.23,1541,4.9,1542,6.194,1543,7.032,1544,5.607,1545,5.607,1546,5.607,1547,5.607]],["title/classes/User.html",[0,0.141,155,1.436]],["body/classes/User.html",[0,0.226,2,1.115,3,0.235,4,0.192,5,0.136,10,0.475,11,1.187,12,2.456,16,0.573,22,0.843,25,0.01,27,1.096,32,1.289,39,0.326,41,1.234,43,0.292,55,0.006,56,0.008,57,0.006,81,1.265,143,1.693,146,2.311,150,3.594,155,2.613,156,2.382,158,5.501,160,5.939,164,2.535,202,1.398,203,4.388,786,3.142,1196,3.426,1548,4.618,1549,5.756,1550,5.756,1551,5.756,1552,5.07,1553,5.07,1554,5.07,1555,4.618,1556,4.618,1557,4.28,1558,5.07,1559,5.07,1560,5.07,1561,5.07,1562,5.07]],["title/classes/UserDTO.html",[0,0.141,1563,3.585]],["body/classes/UserDTO.html",[0,0.194,2,1.188,3,0.25,4,0.204,5,0.145,10,0.507,11,1.234,16,0.547,22,0.805,25,0.01,32,1.24,39,0.347,43,0.25,55,0.007,56,0.008,57,0.007,61,2.736,102,1.85,103,3.897,105,2.701,155,2.671,158,5.601,160,5.933,1555,5.962,1556,5.962,1563,5.962,1564,5.401,1565,7.431,1566,6.668,1567,6.132,1568,6.132]],["title/classes/UserEntity.html",[0,0.141,1569,3.323]],["body/classes/UserEntity.html",[0,0.183,2,1.122,3,0.236,4,0.193,5,0.137,10,0.478,11,1.191,16,0.6,19,1.721,22,0.883,24,1.211,25,0.01,26,0.962,27,0.888,32,1.274,39,0.407,43,0.236,55,0.006,56,0.008,57,0.006,102,1.941,103,4.217,105,2.551,203,4.091,258,2.325,404,3.94,784,5.433,789,5.089,870,4.72,1000,4.307,1569,5.336,1570,5.101,1571,7.175,1572,5.791,1573,5.791,1574,5.791,1575,5.791,1576,5.791,1577,5.791,1578,5.791,1579,5.791,1580,5.791,1581,5.791,1582,5.791]],["title/classes/UserInfo.html",[0,0.141,352,2.178]],["body/classes/UserInfo.html",[0,0.174,2,1.065,3,0.224,4,0.183,5,0.13,8,2.118,10,0.454,11,1.153,16,0.63,19,1.634,22,0.894,24,1.149,25,0.01,26,0.913,27,0.843,30,2.964,32,1.277,39,0.394,43,0.224,45,2.275,55,0.006,56,0.007,57,0.006,102,1.991,202,1.686,215,1.814,233,3.312,235,2.874,236,1.818,237,2.275,238,2.502,240,2.502,242,3.216,243,1.968,244,2.207,280,2.587,281,2.587,352,3.385,360,3.13,366,3.831,367,3.954,368,4.337,369,4.088,370,2.885,786,3.001,1583,7.045,1584,7.045,1585,7.045,1586,6.945,1587,5.497,1588,5.497,1589,5.497,1590,5.497]],["title/classes/UserInfoMapper.html",[0,0.141,1059,3.323]],["body/classes/UserInfoMapper.html",[0,0.193,2,1.186,3,0.25,4,0.204,5,0.145,10,0.505,16,0.451,17,1.894,22,0.663,24,1.279,25,0.01,26,1.016,27,0.938,37,1.562,39,0.42,43,0.25,55,0.007,56,0.008,57,0.007,74,2.019,81,1.345,82,1.413,202,1.486,352,4.146,384,4.036,459,3.894,1046,5.954,1056,4.55,1059,5.519,1060,4.909,1149,5.788,1335,4.909,1337,5.389,1591,6.537,1592,7.421,1593,6.118,1594,6.118,1595,6.118,1596,6.118,1597,6.118]],["title/classes/UserInfoResponse.html",[0,0.141,1149,3.114]],["body/classes/UserInfoResponse.html",[0,0.193,2,1.181,3,0.249,4,0.203,5,0.144,10,0.503,11,1.229,16,0.587,22,0.864,25,0.01,32,1.289,39,0.345,43,0.249,55,0.007,56,0.008,57,0.007,102,1.985,103,4.211,105,2.684,236,2.087,1149,5.158,1152,4.888,1153,5.938,1154,5.938,1175,4.53,1342,4.888,1584,7.023,1585,7.023,1598,7.305,1599,6.092,1600,6.092,1601,6.092]],["title/controllers/UsersController.html",[85,2.103,1602,3.323]],["body/controllers/UsersController.html",[0,0.187,3,0.241,4,0.197,5,0.139,10,0.487,16,0.434,17,1.853,22,0.64,24,1.233,25,0.01,26,0.98,27,0.905,37,1.506,39,0.465,41,1.265,43,0.241,55,0.006,56,0.008,57,0.006,81,1.297,82,1.363,85,2.777,87,2.981,89,4.388,92,4.734,93,2.685,102,1.469,155,2.332,273,1.9,554,3.809,564,5.058,588,3.963,786,3.221,788,4.775,789,5.122,870,3.882,966,3.882,998,4.112,999,4.734,1000,4.388,1005,4.734,1569,5.847,1602,5.398,1603,5.197,1604,7.259,1605,5.9,1606,7.259,1607,5.9,1608,5.9,1609,5.9,1610,5.9,1611,5.9]],["title/modules/UsersModule.html",[106,1.328,119,2.94]],["body/modules/UsersModule.html",[0,0.192,3,0.248,4,0.202,5,0.144,25,0.01,39,0.451,41,1.303,43,0.248,55,0.007,56,0.008,57,0.007,87,3.072,106,2.367,108,2.441,109,2.766,110,3.319,111,3.319,112,3.072,113,3.625,114,3.749,119,5.75,121,4.036,122,3.19,123,2.766,150,5.63,1602,5.497,1612,5.354,1613,5.354,1614,5.354,1615,6.079,1616,6.079,1617,6.079]],["title/injectables/UsersService.html",[143,1.058,150,2.791]],["body/injectables/UsersService.html",[0,0.218,3,0.222,4,0.181,5,0.128,10,0.449,11,1.145,12,3.232,16,0.508,17,1.76,22,0.747,24,1.136,25,0.01,26,0.902,27,0.833,32,1.253,37,1.387,39,0.308,41,1.165,43,0.282,55,0.006,56,0.007,57,0.006,81,1.194,143,1.633,144,2.249,146,3.041,150,4.305,155,2.559,156,2.853,158,5.408,160,5.946,164,3.336,202,1.319,203,4.313,273,1.422,274,1.945,786,4.135,962,6.073,1196,4.104,1548,4.359,1552,4.786,1553,4.786,1554,4.786,1555,5.531,1556,5.531,1557,5.127,1558,6.073,1559,6.073,1560,6.073,1561,4.786,1562,4.786,1618,5.434,1619,5.434]],["title/classes/ValidationErrorDetailResponse.html",[0,0.141,68,3.323]],["body/classes/ValidationErrorDetailResponse.html",[0,0.206,2,1.263,3,0.266,4,0.217,5,0.154,12,2.78,16,0.48,19,1.936,22,0.706,24,1.362,25,0.009,26,1.082,27,0.999,32,1.309,43,0.266,44,5.738,49,3.189,55,0.007,56,0.008,57,0.007,65,3.999,68,5.73,1620,6.787,1621,5.738,1622,6.515,1623,6.515,1624,6.182]],["title/modules/ValidationModule.html",[106,1.328,319,3.114]],["body/modules/ValidationModule.html",[0,0.206,3,0.267,4,0.217,5,0.154,25,0.01,39,0.465,41,1.4,43,0.267,55,0.007,56,0.008,57,0.007,106,2.293,108,2.622,113,2.972,319,5.377,333,6.796,510,4.296,514,3.887,515,5.239,726,5.738,1625,6.53,1626,6.53,1627,6.53]],["title/changelog.html",[1628,2.788,1629,2.788,1630,3.302]],["body/changelog.html",[0,0.067,2,0.77,3,0.026,4,0.021,5,0.104,10,0.053,13,1.151,14,0.336,22,0.231,25,0.003,26,0.281,27,0.259,29,0.454,37,0.432,39,0.096,47,2.807,48,1.812,49,2.265,51,1.257,53,0.4,55,0.001,56,0.003,57,0.002,65,1.936,81,0.141,82,1.264,93,1.58,106,0.356,109,0.291,114,0.301,122,0.629,123,0.545,138,0.446,146,0.257,147,1.356,155,2.176,156,0.496,158,0.789,160,0.835,165,0.336,169,4.021,172,0.381,184,0.824,197,1.449,199,0.381,201,0.336,203,0.629,204,0.446,207,0.513,210,1.006,211,1.257,218,0.364,236,0.557,247,0.476,252,0.4,253,2.307,256,0.513,259,1.895,260,1.714,262,2.785,264,0.891,265,0.421,269,0.926,273,0.557,274,0.429,285,0.349,286,0.421,287,0.682,288,1.433,289,0.789,290,0.291,325,0.564,327,2.614,329,2.094,340,1.151,343,2.581,345,0.4,358,1.211,361,1.266,377,0.564,378,0.923,381,2.704,397,0.421,398,1.754,404,0.323,406,0.923,413,0.4,429,1.374,430,0.144,432,0.349,442,0.854,443,0.606,446,0.584,448,0.349,460,1.257,461,0.682,482,0.476,489,0.323,500,4.597,508,1.006,514,0.713,521,0.835,523,0.564,525,1.328,526,0.528,527,0.749,528,0.421,554,2.201,555,1.056,560,3.382,564,3.317,570,1.272,572,0.749,588,1.565,589,0.364,590,0.349,591,1.895,593,1.886,597,1.226,601,1.036,605,0.381,609,0.349,611,0.4,613,0.513,615,2.283,629,0.476,633,0.513,655,0.513,656,0.962,658,0.421,660,0.446,662,0.749,673,0.476,686,1.399,688,0.891,693,2.038,697,0.962,708,0.476,709,1.356,718,0.513,730,1.79,732,0.564,733,1.706,734,1.656,737,2.554,738,1.257,739,2.804,741,2.007,750,2.3,752,2.125,755,0.446,756,1.112,758,1.872,759,0.364,766,3.016,767,1.399,768,0.4,769,0.749,770,0.789,774,0.446,784,1.482,785,2.785,786,3.781,787,0.891,788,0.789,790,0.476,798,1.178,804,1.112,834,0.713,836,1.356,837,0.606,844,0.421,846,1.632,848,2.995,861,0.513,870,1.112,872,2.804,873,1.178,889,1.489,894,2.125,896,5.238,898,0.513,901,0.835,903,4.508,907,0.564,910,2.218,921,0.891,924,1.056,936,0.789,960,1.582,963,2.3,973,0.789,981,1.112,983,1.112,989,2.525,1020,0.476,1129,0.446,1196,1.006,1199,0.835,1204,0.789,1207,1.178,1237,0.446,1266,0.962,1274,0.564,1275,2.019,1284,1.399,1295,3.973,1297,1.036,1298,0.476,1307,0.513,1321,1.266,1328,1.572,1350,0.476,1369,1.886,1372,0.789,1378,0.476,1384,1.178,1385,0.446,1391,2.995,1392,0.476,1398,1.489,1412,0.891,1416,0.789,1430,0.891,1436,0.446,1437,1.321,1454,0.564,1456,1.356,1458,0.513,1460,0.835,1485,1.706,1487,0.564,1488,1.328,1495,0.962,1501,0.513,1503,0.891,1504,0.513,1505,0.476,1507,2.3,1509,0.476,1516,0.835,1517,0.891,1519,0.476,1540,2.132,1541,0.835,1557,0.476,1624,0.962,1630,2.525,1631,0.64,1632,1.178,1633,0.962,1634,0.564,1635,1.482,1636,0.64,1637,0.64,1638,1.69,1639,2.955,1640,5.473,1641,7.368,1642,4.071,1643,0.64,1644,7.945,1645,0.64,1646,6.658,1647,1.056,1648,1.998,1649,0.891,1650,1.056,1651,0.564,1652,0.64,1653,0.64,1654,1.873,1655,4.397,1656,0.64,1657,0.64,1658,1.69,1659,0.64,1660,1.873,1661,0.64,1662,1.872,1663,1.873,1664,0.64,1665,1.69,1666,2.995,1667,1.056,1668,1.056,1669,1.199,1670,1.199,1671,1.873,1672,3.183,1673,1.199,1674,0.64,1675,0.564,1676,0.64,1677,2.804,1678,0.64,1679,3.41,1680,0.64,1681,1.199,1682,0.64,1683,0.64,1684,1.199,1685,1.873,1686,0.64,1687,1.199,1688,0.64,1689,1.399,1690,2.517,1691,3.499,1692,0.64,1693,0.564,1694,0.64,1695,4.922,1696,2.804,1697,2.867,1698,1.199,1699,1.199,1700,0.64,1701,0.513,1702,0.64,1703,0.64,1704,0.64,1705,0.64,1706,0.564,1707,0.64,1708,1.69,1709,0.64,1710,0.564,1711,2.517,1712,2.217,1713,0.564,1714,0.64,1715,0.64,1716,0.64,1717,0.64,1718,1.69,1719,0.64,1720,1.886,1721,0.64,1722,1.199,1723,0.64,1724,1.199,1725,0.64,1726,0.564,1727,0.564,1728,1.199,1729,0.64,1730,1.489,1731,0.962,1732,0.64,1733,0.64,1734,1.199,1735,1.199,1736,0.64,1737,5.075,1738,2.367,1739,0.64,1740,1.178,1741,0.64,1742,0.64,1743,2.525,1744,0.64,1745,0.64,1746,2.127,1747,3.733,1748,0.64,1749,3.499,1750,0.64,1751,0.64,1752,1.69,1753,1.056,1754,0.513,1755,0.64,1756,0.64,1757,0.64,1758,6.658,1759,3.733,1760,2.785,1761,1.199,1762,1.199,1763,1.199,1764,1.056,1765,1.199,1766,0.64,1767,1.489,1768,0.64,1769,0.64,1770,1.257,1771,0.64,1772,2.167,1773,0.64,1774,1.199,1775,0.64,1776,2.804,1777,0.64,1778,1.199,1779,0.64,1780,0.962,1781,0.64,1782,1.489,1783,1.873,1784,0.64,1785,0.64,1786,1.056,1787,0.64,1788,4.585,1789,0.64,1790,7.572,1791,0.64,1792,0.64,1793,3.973,1794,0.64,1795,4.922,1796,2.867,1797,1.199,1798,0.64,1799,0.64,1800,0.64,1801,0.64,1802,0.64,1803,0.64,1804,1.056,1805,0.64,1806,3.973,1807,0.64,1808,1.69,1809,2.525,1810,0.64,1811,1.489,1812,0.64,1813,0.64,1814,1.056,1815,0.64,1816,0.64,1817,2.217,1818,1.199,1819,0.64,1820,1.69,1821,1.178,1822,0.64,1823,0.564,1824,0.64,1825,3.183,1826,0.64,1827,1.199,1828,1.706,1829,0.64,1830,0.64,1831,1.056,1832,0.64,1833,0.64,1834,0.564,1835,0.962,1836,1.199,1837,1.872,1838,2.867,1839,0.64,1840,0.64,1841,0.64,1842,0.513,1843,1.199,1844,0.64,1845,1.199,1846,4.585,1847,1.706,1848,1.199,1849,0.64,1850,0.64,1851,0.64,1852,0.64,1853,2.517,1854,0.64,1855,0.64,1856,4.585,1857,1.199,1858,0.64,1859,0.564,1860,2.127,1861,1.056,1862,0.64,1863,1.199,1864,1.69,1865,1.998,1866,0.64,1867,0.64,1868,0.446,1869,0.64,1870,0.64,1871,1.199,1872,0.64,1873,1.356,1874,1.656,1875,0.564,1876,0.64,1877,1.489,1878,0.64,1879,0.64,1880,1.69,1881,0.64,1882,0.64,1883,1.199,1884,1.69,1885,0.64,1886,0.64,1887,0.64,1888,0.64,1889,1.199,1890,0.64,1891,1.69,1892,1.056,1893,1.873,1894,0.64,1895,3.499,1896,0.64,1897,1.178,1898,1.199,1899,1.706,1900,0.64,1901,0.64,1902,0.64,1903,0.64,1904,1.69,1905,1.873,1906,0.64,1907,1.69,1908,2.867,1909,0.564,1910,0.64,1911,1.69,1912,2.525,1913,0.64,1914,0.64,1915,0.64,1916,1.69,1917,0.64,1918,0.64,1919,0.64,1920,1.199,1921,0.64,1922,1.489,1923,1.199,1924,0.64,1925,0.64,1926,0.64,1927,0.64,1928,0.64,1929,0.962,1930,0.476,1931,0.891,1932,0.513,1933,0.64,1934,0.64,1935,0.564,1936,1.056,1937,0.64,1938,0.64,1939,0.64,1940,4.76,1941,0.64,1942,1.69,1943,0.64,1944,0.64,1945,0.64,1946,2.127,1947,0.64,1948,1.199,1949,0.891,1950,1.199,1951,0.64,1952,0.64,1953,0.64,1954,1.199,1955,0.962,1956,0.64,1957,0.64,1958,0.64,1959,0.564,1960,0.564,1961,0.64,1962,0.64,1963,0.564,1964,0.64,1965,1.199,1966,0.564,1967,0.64,1968,0.64,1969,0.64,1970,0.64,1971,0.64,1972,0.64,1973,0.64,1974,2.554,1975,0.64,1976,0.891,1977,2.867,1978,0.64,1979,0.64,1980,0.64,1981,0.64,1982,0.64,1983,0.64,1984,0.64,1985,1.199,1986,0.64,1987,0.64,1988,1.69,1989,0.64,1990,1.199,1991,0.64,1992,1.399,1993,0.64,1994,1.199,1995,0.564,1996,0.64,1997,0.564,1998,0.64,1999,1.199,2000,0.64,2001,0.64,2002,0.64,2003,2.517,2004,0.64,2005,0.64,2006,0.513,2007,0.64,2008,0.64,2009,0.64,2010,2.525,2011,0.64,2012,0.64,2013,0.64,2014,0.64,2015,0.64,2016,0.476,2017,0.64,2018,1.69,2019,0.64,2020,0.476,2021,0.64,2022,0.64,2023,0.64,2024,0.64,2025,1.006,2026,0.749,2027,1.69,2028,1.199,2029,0.64,2030,1.69,2031,0.64,2032,1.873,2033,0.64,2034,0.64,2035,2.517,2036,2.867,2037,0.64,2038,0.64,2039,0.64,2040,2.867,2041,0.64,2042,1.199,2043,0.64,2044,0.64,2045,1.199,2046,0.513,2047,1.199,2048,0.564,2049,1.356,2050,0.64,2051,0.64,2052,0.513,2053,1.328,2054,0.64,2055,7.763,2056,2.804,2057,0.64,2058,0.64,2059,0.513,2060,0.64,2061,0.64,2062,0.64,2063,0.64,2064,0.64,2065,2.867,2066,0.64,2067,1.356,2068,0.64,2069,0.64,2070,0.64,2071,0.64,2072,0.64,2073,2.127,2074,2.127,2075,2.217,2076,0.962,2077,1.582,2078,1.69,2079,2.517,2080,1.199,2081,1.199,2082,3.471,2083,1.582,2084,3.183,2085,1.199,2086,1.199,2087,1.257,2088,1.199,2089,1.056,2090,0.962,2091,1.199,2092,0.64,2093,0.64,2094,2.804,2095,0.564,2096,0.446,2097,2.517,2098,1.056,2099,0.64,2100,0.513,2101,0.476,2102,0.476,2103,0.64,2104,0.64,2105,0.564,2106,1.056,2107,0.64,2108,1.199,2109,0.64,2110,0.64,2111,1.199,2112,0.64,2113,0.64,2114,1.199,2115,0.64,2116,0.64,2117,1.199,2118,0.64,2119,0.64,2120,0.64,2121,0.564,2122,1.582,2123,0.64,2124,0.64,2125,1.056,2126,0.476,2127,0.64,2128,1.69,2129,2.019,2130,0.64,2131,0.564,2132,1.199,2133,0.64,2134,0.64,2135,0.564,2136,0.64,2137,3.288,2138,1.199,2139,0.64,2140,0.64,2141,0.64,2142,0.64,2143,0.64,2144,1.056,2145,1.056,2146,2.127,2147,1.706,2148,0.64,2149,1.69,2150,0.64,2151,0.64,2152,1.489,2153,0.64,2154,0.64,2155,0.64,2156,1.199,2157,1.69,2158,0.513,2159,1.998,2160,1.69,2161,0.64,2162,0.64,2163,0.64,2164,0.64,2165,1.199,2166,0.64,2167,0.962,2168,0.564,2169,1.199,2170,0.64,2171,0.564,2172,0.64,2173,0.64,2174,0.64,2175,1.199,2176,0.564,2177,1.199,2178,0.64,2179,1.199,2180,0.64,2181,0.64,2182,0.64,2183,0.64,2184,0.64,2185,1.656,2186,1.69,2187,1.69,2188,1.582,2189,0.446,2190,2.217,2191,0.64,2192,1.69,2193,1.199,2194,0.446,2195,0.421,2196,0.564,2197,0.64,2198,0.64,2199,0.564,2200,0.476,2201,1.199,2202,1.257,2203,1.69,2204,1.056,2205,0.64,2206,0.64,2207,0.564,2208,0.64,2209,0.564,2210,0.64,2211,0.64,2212,0.64,2213,1.754,2214,0.64,2215,0.64,2216,0.64,2217,0.513,2218,0.64,2219,0.962,2220,0.64,2221,0.64,2222,0.64,2223,0.891,2224,0.64,2225,0.64,2226,0.64,2227,1.199,2228,0.564,2229,0.513,2230,0.564,2231,0.64,2232,0.564,2233,0.64,2234,0.513,2235,1.056,2236,0.64,2237,1.356,2238,0.64,2239,0.64,2240,0.64,2241,1.199,2242,0.64,2243,0.64,2244,0.64,2245,0.64,2246,0.64,2247,0.962,2248,0.64,2249,0.64,2250,1.199,2251,0.64,2252,0.64,2253,0.64,2254,2.127,2255,0.564,2256,0.64,2257,1.199,2258,0.64,2259,0.64,2260,1.199,2261,1.199,2262,1.199,2263,1.69,2264,1.69,2265,1.873,2266,1.199,2267,1.489,2268,0.962,2269,0.64,2270,0.446,2271,0.64,2272,0.564,2273,0.564,2274,0.64,2275,0.891,2276,0.64,2277,1.69,2278,0.64,2279,0.64,2280,0.64,2281,0.64,2282,1.754,2283,0.564,2284,1.356,2285,0.64,2286,1.199,2287,0.962,2288,1.69,2289,1.056,2290,0.64,2291,0.64,2292,0.64,2293,1.199,2294,1.356,2295,1.056,2296,1.199,2297,0.64,2298,0.64,2299,0.64,2300,0.64,2301,0.64,2302,0.64,2303,0.64,2304,0.64,2305,0.64,2306,0.564,2307,0.564,2308,0.64,2309,0.64,2310,1.69,2311,0.64,2312,1.199,2313,0.64,2314,1.056,2315,0.64,2316,1.199,2317,0.64,2318,1.199,2319,0.476,2320,0.64,2321,0.962,2322,0.64,2323,0.64,2324,0.564,2325,0.64,2326,0.64,2327,0.564,2328,1.69,2329,2.127,2330,1.199,2331,0.789,2332,1.056,2333,1.199,2334,1.056,2335,1.199,2336,0.891,2337,0.64,2338,1.199,2339,0.564,2340,0.64,2341,1.199,2342,1.056,2343,0.64,2344,0.64,2345,0.64,2346,0.564,2347,0.64,2348,0.64,2349,1.199,2350,0.64,2351,0.64,2352,2.525,2353,1.056,2354,0.64,2355,3.471,2356,0.64,2357,0.564,2358,0.564,2359,0.64,2360,0.64,2361,0.64,2362,0.64,2363,2.127,2364,0.64,2365,0.64,2366,1.356,2367,0.64,2368,0.64,2369,0.64,2370,0.64,2371,0.564,2372,1.056,2373,0.64,2374,0.64,2375,0.64,2376,0.64,2377,0.962,2378,0.64,2379,0.64,2380,0.64,2381,0.64,2382,0.64,2383,0.64,2384,0.64,2385,0.64,2386,1.873,2387,0.64,2388,0.64,2389,0.513,2390,0.64,2391,0.513,2392,0.64,2393,0.64,2394,0.564,2395,0.64,2396,0.476,2397,0.64,2398,0.64,2399,0.891,2400,0.564,2401,0.64,2402,0.64,2403,0.64,2404,0.64,2405,0.64,2406,0.64,2407,0.64,2408,1.69,2409,0.513,2410,0.64,2411,0.513,2412,0.64,2413,0.64,2414,0.64,2415,0.64,2416,0.64,2417,1.69,2418,0.64,2419,1.199,2420,1.69,2421,1.199,2422,1.199,2423,4.397,2424,1.199,2425,1.199,2426,0.64,2427,1.199,2428,1.199,2429,0.64,2430,0.64,2431,0.64,2432,0.64,2433,0.64,2434,0.564,2435,0.64,2436,1.199,2437,0.64,2438,0.64,2439,0.476,2440,0.64,2441,0.564,2442,0.64,2443,2.127,2444,1.199,2445,0.64,2446,0.564,2447,0.64,2448,0.64,2449,0.64,2450,0.64,2451,0.513,2452,0.64,2453,0.64,2454,1.69,2455,1.69,2456,0.64,2457,0.564,2458,0.64,2459,0.64,2460,1.056,2461,0.64,2462,0.64,2463,0.64,2464,1.199,2465,0.64,2466,0.64,2467,0.64,2468,0.64,2469,1.199,2470,0.564,2471,0.64,2472,0.564,2473,0.64,2474,0.64,2475,0.64,2476,0.64,2477,0.64,2478,0.64,2479,0.64,2480,0.64,2481,0.64,2482,1.199,2483,1.199,2484,0.64,2485,0.564,2486,0.64,2487,0.64,2488,0.64,2489,1.199,2490,0.64,2491,0.64,2492,1.199,2493,0.64,2494,1.199,2495,0.64,2496,0.64,2497,1.199,2498,0.421,2499,2.127,2500,0.64,2501,0.64,2502,0.64,2503,0.64,2504,0.513,2505,0.64,2506,1.056,2507,0.564,2508,0.564,2509,1.199,2510,0.64,2511,0.64,2512,1.199,2513,0.64,2514,0.64,2515,0.64,2516,0.64,2517,0.64,2518,1.199,2519,0.64,2520,0.64,2521,0.64,2522,0.64,2523,0.64,2524,0.64,2525,0.64,2526,1.69,2527,0.64,2528,0.64,2529,0.64,2530,0.64,2531,0.64,2532,0.64,2533,0.64,2534,0.64,2535,1.199,2536,1.199,2537,0.64,2538,0.64,2539,0.64,2540,2.127,2541,4.397,2542,1.199,2543,1.056,2544,1.056,2545,1.199,2546,2.127,2547,1.199,2548,1.199,2549,0.64,2550,1.199,2551,1.056,2552,1.199,2553,1.199,2554,1.199,2555,1.056,2556,1.199,2557,2.127,2558,1.199,2559,2.127,2560,1.199,2561,1.199,2562,1.056,2563,1.056,2564,1.69,2565,1.199,2566,0.64,2567,0.64,2568,0.891,2569,0.513,2570,1.199,2571,0.64,2572,2.517,2573,1.199,2574,0.64,2575,0.564,2576,0.64,2577,2.127,2578,0.64,2579,0.64,2580,0.64,2581,0.64,2582,0.64,2583,0.446,2584,0.564,2585,0.64,2586,0.64,2587,0.64,2588,1.199,2589,1.199,2590,1.199,2591,0.64,2592,0.64,2593,0.476,2594,0.64,2595,0.564,2596,0.513,2597,0.64,2598,0.64,2599,1.199,2600,1.199,2601,0.64,2602,0.64,2603,0.64,2604,1.199,2605,0.64,2606,0.64,2607,0.64,2608,1.199,2609,0.64,2610,1.69,2611,1.489,2612,0.64,2613,0.64,2614,0.513,2615,1.199,2616,1.199,2617,0.64,2618,0.513,2619,0.64,2620,0.64,2621,1.69,2622,1.199,2623,0.64,2624,1.199,2625,0.513,2626,0.64,2627,1.199,2628,0.64,2629,0.64,2630,0.64,2631,2.127,2632,0.64,2633,0.64,2634,0.64,2635,0.64,2636,0.64,2637,0.64,2638,0.64,2639,1.199,2640,0.64,2641,0.64,2642,0.64,2643,0.564,2644,1.199,2645,0.64,2646,1.199,2647,0.64,2648,0.64,2649,0.513,2650,0.64,2651,1.199,2652,2.127,2653,0.64,2654,0.564,2655,0.64,2656,1.199,2657,1.199,2658,0.64,2659,0.64,2660,0.564,2661,1.199,2662,0.64,2663,0.64,2664,1.199,2665,0.513,2666,0.513,2667,1.199,2668,0.64,2669,0.64,2670,0.64,2671,1.199,2672,1.199,2673,0.64,2674,0.64,2675,1.199,2676,0.64,2677,0.64,2678,0.64,2679,0.64,2680,1.199,2681,0.64,2682,0.64,2683,0.513,2684,0.64,2685,2.127,2686,0.513,2687,0.64,2688,0.64,2689,1.199,2690,0.564,2691,0.476,2692,1.199,2693,0.64,2694,2.517,2695,1.199,2696,0.513,2697,1.199,2698,0.513,2699,0.64,2700,0.64,2701,0.513,2702,0.64,2703,0.64,2704,0.64,2705,0.64,2706,0.64,2707,0.64,2708,0.64,2709,0.64,2710,0.64,2711,0.64,2712,0.64,2713,0.64,2714,1.056,2715,0.64,2716,0.64,2717,0.64,2718,0.64,2719,0.64,2720,0.513,2721,0.64,2722,0.64,2723,0.64,2724,0.64,2725,0.64,2726,0.64,2727,0.64,2728,0.564,2729,0.446,2730,0.64,2731,0.64,2732,0.64,2733,1.69,2734,0.64,2735,0.564,2736,0.564,2737,0.64,2738,0.564,2739,0.64,2740,0.64,2741,0.64,2742,0.64,2743,0.64,2744,2.127,2745,0.64,2746,0.64,2747,0.564,2748,0.64,2749,1.489,2750,0.64,2751,0.64,2752,0.64,2753,0.64,2754,0.64,2755,0.64,2756,1.199,2757,0.64,2758,0.64,2759,0.64,2760,0.513,2761,1.199,2762,0.64,2763,0.64,2764,0.64,2765,0.64,2766,0.64,2767,1.69,2768,1.199,2769,1.199,2770,0.64,2771,0.564,2772,0.64,2773,1.199,2774,0.564,2775,1.69,2776,0.64,2777,0.64,2778,0.64,2779,0.64,2780,0.64,2781,1.199,2782,1.199,2783,1.199,2784,1.199,2785,1.489,2786,1.199,2787,0.64,2788,1.199,2789,0.64,2790,1.199,2791,0.564,2792,1.69,2793,0.64,2794,0.564,2795,0.64,2796,0.64,2797,0.64,2798,2.517,2799,0.64,2800,0.564,2801,0.64,2802,0.64,2803,0.64,2804,0.564,2805,0.64,2806,1.199,2807,1.199,2808,0.64,2809,0.564,2810,0.476,2811,0.64,2812,0.64,2813,0.64,2814,0.64,2815,1.199,2816,0.64,2817,0.64,2818,0.64,2819,0.64,2820,0.564,2821,0.64,2822,0.64,2823,0.513,2824,0.64,2825,0.64,2826,0.564,2827,0.476,2828,0.64,2829,0.64,2830,0.64,2831,1.199,2832,0.564,2833,0.564]],["title/coverage.html",[2026,3.787]],["body/coverage.html",[0,0.279,1,1.538,5,0.058,6,2.17,7,2.17,9,1.538,16,0.181,25,0.01,38,1.345,48,1.402,49,2.286,55,0.003,56,0.004,57,0.003,58,1.976,59,2.17,60,2.17,68,1.832,82,0.569,85,2.835,86,1.832,88,2.17,95,1.62,99,1.832,100,2.17,112,1.245,120,1.716,130,2.57,143,1.915,145,2.17,150,1.538,155,1.255,179,1.538,180,1.538,186,2.17,216,1.293,233,0.989,234,3.134,248,1.159,282,3.134,293,1.62,309,1.832,340,0.989,341,2.17,352,1.2,364,1.402,365,2.17,366,3.849,373,1.466,374,3.962,375,0.96,376,1.121,403,1.345,424,1.538,428,1.402,430,1.767,454,1.466,455,1.466,456,1.62,457,2.17,458,3.134,476,1.976,477,2.17,478,2.17,483,1.245,511,1.716,516,2.17,520,1.976,530,3.44,531,3.134,538,1.466,578,1.716,580,2.17,581,2.17,598,1.832,599,2.905,600,2.722,630,5.578,631,5.227,634,1.976,651,1.976,653,1.976,659,1.976,663,1.976,673,4.766,701,1.832,702,1.976,715,1.976,726,1.832,727,2.17,728,2.17,762,1.62,763,3.382,777,1.62,780,1.466,781,3.134,782,3.134,789,1.538,799,2.17,800,2.17,801,1.832,802,2.17,820,1.832,821,2.17,824,1.62,825,3.134,834,1.466,837,1.245,849,1.832,851,1.832,852,2.17,853,2.17,856,3.894,866,2.17,885,2.17,890,2.17,919,1.976,920,2.17,921,2.905,922,2.17,923,2.17,958,1.832,959,2.17,966,1.62,972,1.716,974,1.716,986,1.716,991,1.716,994,1.832,996,1.62,998,1.716,1001,1.716,1002,1.832,1029,2.17,1030,2.17,1040,1.976,1043,2.17,1057,1.832,1059,1.832,1102,1.62,1108,2.17,1119,1.62,1120,1.832,1135,1.832,1146,2.905,1149,1.716,1157,1.716,1162,1.976,1176,3.134,1177,2.17,1193,1.976,1204,6.003,1214,2.17,1215,1.976,1293,2.17,1294,2.17,1312,2.17,1320,2.17,1321,1.466,1322,1.976,1333,2.17,1334,2.17,1335,3.134,1341,2.17,1342,3.134,1346,1.832,1347,2.17,1351,1.62,1369,1.62,1372,1.62,1386,2.17,1390,2.17,1404,1.832,1405,2.17,1406,1.716,1409,1.62,1411,1.832,1424,1.62,1428,1.832,1429,1.976,1442,3.134,1443,2.17,1449,2.17,1486,2.17,1496,2.17,1512,2.17,1514,2.17,1537,2.17,1548,3.134,1563,1.976,1564,2.17,1569,1.832,1570,2.17,1583,2.17,1591,2.17,1598,2.17,1602,1.832,1603,2.17,1620,2.17,1621,2.17,1760,1.976,1770,2.905,1780,3.894,1811,2.17,1831,2.17,1877,4.275,1992,1.62,2026,1.538,2366,1.976,2371,2.17,2683,6.932,2834,2.17,2835,2.17,2836,5.645,2837,6.408,2838,6.023,2839,6.023,2840,5.524,2841,5.524,2842,6.716,2843,7.501,2844,2.17,2845,8.705,2846,2.17,2847,4.275,2848,4.275,2849,2.17,2850,2.17,2851,3.906,2852,4.432,2853,2.17,2854,1.976,2855,2.17,2856,7.744,2857,3.134,2858,2.463,2859,2.463,2860,2.463,2861,2.463,2862,2.17,2863,2.17,2864,2.17,2865,2.17,2866,2.463,2867,4.854,2868,6.716,2869,3.906,2870,2.463,2871,2.463,2872,4.854,2873,2.463,2874,5.524,2875,2.463,2876,2.463,2877,4.854,2878,3.906,2879,2.463,2880,5.915,2881,2.17,2882,2.17,2883,2.17,2884,2.17,2885,2.17,2886,2.17,2887,2.17,2888,2.17,2889,4.275,2890,2.463]],["title/dependencies.html",[109,2.442,2389,3.008]],["body/dependencies.html",[0,0.171,4,0.126,5,0.128,16,0.278,25,0.01,41,0.81,47,1.983,55,0.004,56,0.006,57,0.004,93,2.455,94,2.36,105,1.665,109,1.72,127,2.81,129,3.032,146,2.166,156,2.84,168,5.048,184,3.067,210,2.249,236,0.989,243,2.253,244,1.517,245,2.486,288,3.582,321,2.486,323,2.36,389,3.549,407,2.249,475,3.746,494,3.032,510,2.486,560,1.778,611,4.286,612,3.032,647,3.328,873,2.633,936,2.486,939,3.328,981,2.486,1171,3.032,1328,4.961,1361,3.328,1412,4.012,1647,3.328,1731,4.329,1764,3.328,1868,2.633,1935,3.328,1936,3.328,1995,3.328,2121,3.328,2144,3.328,2145,3.328,2185,2.486,2194,2.633,2195,3.549,2196,3.328,2199,3.328,2209,3.328,2255,3.328,2270,2.633,2275,2.81,2289,3.328,2294,3.032,2508,3.328,2771,3.328,2809,3.328,2891,5.395,2892,7.769,2893,3.779,2894,3.779,2895,3.779,2896,3.779,2897,3.779,2898,5.395,2899,3.779,2900,3.779,2901,5.395,2902,3.779,2903,3.779,2904,3.779,2905,3.779,2906,3.779,2907,3.779,2908,3.779,2909,3.779,2910,3.779,2911,5.395,2912,3.779,2913,3.779,2914,3.779,2915,3.779,2916,3.779,2917,3.779,2918,5.395,2919,3.779,2920,3.779,2921,5.395,2922,3.779,2923,3.779,2924,7.258,2925,3.779,2926,3.779,2927,3.779,2928,3.779,2929,3.779,2930,3.779,2931,3.779,2932,3.779,2933,3.779,2934,3.779,2935,3.779,2936,3.032,2937,3.779,2938,3.779,2939,5.395,2940,3.779,2941,3.779,2942,3.779,2943,3.779,2944,3.032,2945,3.779,2946,3.779,2947,3.779,2948,3.779,2949,3.779,2950,5.395,2951,3.779,2952,3.779,2953,3.779,2954,3.779,2955,3.779,2956,3.779,2957,3.779,2958,3.779,2959,3.779,2960,3.779,2961,3.779,2962,3.779,2963,3.779,2964,3.779,2965,3.779,2966,3.779,2967,5.395,2968,5.395,2969,3.779,2970,3.779,2971,3.779,2972,3.779,2973,3.779,2974,3.779,2975,3.779,2976,5.395,2977,3.779,2978,3.779,2979,3.779,2980,3.779,2981,3.779,2982,3.779,2983,3.779,2984,3.779,2985,3.779,2986,3.779,2987,3.779,2988,3.779,2989,5.395,2990,3.779,2991,3.779,2992,3.779,2993,3.779,2994,3.779,2995,5.395,2996,3.779,2997,3.328,2998,3.328,2999,3.779,3000,3.779,3001,3.779,3002,3.779,3003,3.779,3004,3.779,3005,3.779,3006,3.779,3007,3.779,3008,3.779,3009,3.779,3010,3.779,3011,3.779,3012,3.779,3013,3.779,3014,3.779,3015,3.779,3016,3.779,3017,3.032,3018,3.779,3019,3.779,3020,3.779,3021,3.779,3022,3.779,3023,3.779,3024,3.779,3025,3.779,3026,3.779,3027,3.779,3028,3.779,3029,3.779,3030,3.779]],["title/miscellaneous/functions.html",[3031,2.466,3032,4.304]],["body/miscellaneous/functions.html",[10,0.487,24,1.715,25,0.009,26,1.362,27,1.258,37,2.007,38,3.963,49,3.253,55,0.006,56,0.008,57,0.006,112,3.973,155,1.896,278,2.685,489,2.981,606,3.882,630,4.388,631,5.716,674,4.734,676,4.734,680,4.734,701,5.398,861,4.734,998,5.058,1040,6.308,1865,4.112,1931,4.388,2096,4.112,2229,4.734,2270,4.112,2282,5.058,2844,6.393,2846,6.393,2852,4.734,2857,4.734,2887,5.197,2888,6.393,3031,3.882,3032,4.734,3033,5.197,3034,5.197,3035,6.925,3036,5.9,3037,5.9,3038,5.197,3039,5.9,3040,5.9,3041,5.9,3042,5.9,3043,5.9,3044,5.9]],["title/index.html",[10,0.31,1628,2.788,1629,2.788]],["body/index.html",[5,0.141,13,2.732,14,2.294,15,1.656,17,1.116,25,0.008,26,0.992,29,2.77,52,3.874,53,2.73,55,0.005,56,0.006,57,0.005,61,1.609,64,2.876,82,1.01,93,2.718,184,2.13,236,1.144,252,4.567,253,4.148,257,3.73,259,3.261,260,1.704,273,1.144,288,2.489,340,1.755,448,2.386,461,2.489,528,2.876,554,4.018,560,2.057,591,2.602,615,2.876,686,2.876,693,4.418,730,4.249,749,3.251,752,2.489,759,3.401,846,2.489,894,3.401,903,3.401,930,3.85,936,2.876,981,2.876,1266,2.489,1412,3.251,1508,5.096,1520,3.046,1632,3.046,1633,5.459,1635,4.162,1644,3.85,1650,3.85,1651,3.85,1679,4.442,1689,5.657,1738,3.251,1772,4.249,1782,3.85,1823,7.127,1828,3.507,1837,3.251,1865,3.046,1963,3.85,1976,3.251,1992,2.876,2025,2.602,2026,2.73,2046,4.792,2077,3.251,2126,3.251,2159,3.046,2189,3.046,2194,3.046,2195,3.929,2232,5.993,2234,4.792,2237,3.507,2273,3.85,2319,3.251,2472,3.85,2507,3.85,2568,4.442,2569,3.507,2614,3.507,2728,3.85,2729,3.046,2804,3.85,2827,3.251,2836,3.85,3017,3.507,3045,3.507,3046,5.973,3047,6.342,3048,4.371,3049,3.85,3050,4.371,3051,3.046,3052,4.371,3053,4.371,3054,3.046,3055,3.251,3056,4.371,3057,3.85,3058,4.162,3059,3.85,3060,4.371,3061,3.507,3062,4.371,3063,5.993,3064,5.439,3065,3.73,3066,3.85,3067,5.973,3068,5.973,3069,7.657,3070,7.313,3071,4.371,3072,4.371,3073,5.973,3074,3.85,3075,4.371,3076,3.85,3077,5.973,3078,4.371,3079,3.85,3080,5.973,3081,5.973,3082,3.251,3083,3.85,3084,4.371,3085,4.371,3086,3.251,3087,3.251,3088,4.371,3089,4.371,3090,4.371,3091,2.876,3092,4.371,3093,4.371,3094,3.507,3095,4.371,3096,3.507,3097,3.85,3098,4.371,3099,4.371,3100,4.371,3101,3.507,3102,3.85,3103,4.162,3104,4.371,3105,4.371,3106,3.85,3107,4.371,3108,3.85]],["title/license.html",[1628,2.788,1629,2.788,3109,3.302]],["body/license.html",[0,0.027,4,0.263,5,0.037,13,2.986,17,0.215,22,0.091,25,0.002,29,0.587,39,0.048,52,1.515,53,0.527,55,0.002,56,0.002,57,0.002,64,1.019,81,0.185,82,0.959,94,0.527,123,0.384,155,1.805,158,0.555,164,0.372,169,1.515,197,2.362,199,1.584,201,1.396,202,0.376,207,1.243,212,1.891,213,3.303,242,0.329,247,2.858,260,2.476,265,5.609,269,0.311,285,0.461,287,0.882,290,0.384,308,0.967,323,0.527,328,0.628,377,0.397,381,0.349,395,0.555,398,2.362,399,0.527,430,0.866,444,0.411,445,0.411,461,1.222,489,0.426,514,2.082,521,0.588,525,1.662,526,2.405,528,2.73,560,0.729,579,0.862,587,1.413,588,2.266,591,2.082,597,1.297,601,0.755,609,0.461,611,0.967,642,0.628,662,0.967,708,1.152,734,0.555,737,0.677,741,1.085,745,0.628,750,2.135,752,0.882,753,1.152,756,1.751,759,0.882,769,0.527,786,2.674,822,0.967,842,3.795,894,2.789,895,0.588,900,0.527,903,1.222,904,0.677,983,1.019,1021,0.677,1129,0.588,1196,1.849,1236,2.135,1237,0.588,1266,1.991,1275,0.677,1284,0.555,1295,1.496,1321,3.781,1350,5.236,1378,0.628,1385,0.588,1414,1.891,1416,1.413,1436,2.437,1437,2.678,1495,0.677,1501,1.723,1504,0.677,1505,2.858,1517,1.597,1520,1.854,1542,3.898,1557,2.311,1566,2.493,1634,0.743,1635,1.496,1639,1.979,1641,1.364,1649,0.628,1667,1.364,1679,0.628,1685,0.743,1689,2.528,1701,0.677,1706,0.743,1720,1.751,1726,1.364,1727,1.364,1731,1.243,1740,0.588,1760,0.677,1767,0.743,1770,1.152,1772,2.184,1776,1.364,1783,0.743,1786,0.743,1804,0.743,1821,1.854,1828,5.861,1835,2.493,1837,1.152,1847,0.677,1859,1.364,1861,0.743,1875,1.364,1895,1.364,1897,0.588,1905,0.743,1909,0.743,1912,0.743,1930,0.628,1931,2.311,1955,1.243,1959,0.743,1974,2.135,1976,0.628,1997,0.743,2016,0.628,2026,0.967,2048,1.364,2052,1.243,2059,0.677,2076,4.094,2077,0.628,2083,2.858,2090,2.135,2098,0.743,2100,5.696,2101,3.476,2102,1.597,2105,5.903,2122,2.311,2126,1.152,2159,1.854,2168,0.743,2185,1.413,2188,3.087,2202,4.862,2213,2.892,2219,0.677,2229,0.677,2247,0.677,2265,0.743,2267,1.364,2268,1.243,2272,3.656,2306,0.743,2331,1.751,2332,0.743,2334,0.743,2366,0.677,2372,0.743,2377,0.677,2396,1.152,2400,0.743,2411,0.677,2439,1.152,2460,0.743,2498,2.301,2504,1.243,2543,1.364,2568,1.979,2569,1.723,2575,1.364,2583,1.854,2593,0.628,2596,0.677,2614,1.243,2618,1.723,2654,1.364,2665,0.677,2691,1.597,2698,0.677,2701,2.806,2720,3.93,2729,0.588,2735,5.196,2736,1.364,2738,1.364,2747,0.743,2785,0.743,2791,1.364,2794,0.743,2810,3.643,2820,1.891,2826,4.495,2865,0.743,2944,0.677,3047,0.677,3051,2.165,3054,1.854,3055,0.628,3058,0.588,3059,2.344,3061,1.723,3065,0.527,3079,0.743,3082,1.597,3091,3.222,3103,1.496,3109,7.565,3110,5.899,3111,5.764,3112,0.844,3113,2.147,3114,6.98,3115,3.107,3116,4.624,3117,5.313,3118,3.107,3119,0.844,3120,0.844,3121,1.549,3122,3.107,3123,2.147,3124,2.147,3125,5.103,3126,0.844,3127,0.844,3128,1.364,3129,3.107,3130,3.385,3131,1.549,3132,1.549,3133,4.81,3134,4.151,3135,0.844,3136,0.844,3137,3.498,3138,1.364,3139,0.844,3140,0.743,3141,4.315,3142,7.625,3143,2.147,3144,1.891,3145,0.844,3146,0.844,3147,2.661,3148,4.426,3149,0.844,3150,4.426,3151,1.243,3152,0.844,3153,2.661,3154,0.677,3155,2.661,3156,0.677,3157,4.949,3158,0.743,3159,0.844,3160,4.674,3161,4.898,3162,3.107,3163,5.103,3164,0.844,3165,1.549,3166,0.844,3167,0.844,3168,1.891,3169,0.844,3170,0.844,3171,0.844,3172,0.844,3173,0.844,3174,0.844,3175,2.661,3176,0.844,3177,2.147,3178,0.844,3179,0.844,3180,5.409,3181,1.597,3182,0.844,3183,0.844,3184,1.891,3185,2.147,3186,0.844,3187,0.628,3188,1.549,3189,1.549,3190,2.147,3191,7.658,3192,0.844,3193,4.659,3194,3.107,3195,3.107,3196,3.498,3197,0.677,3198,2.147,3199,4.567,3200,1.549,3201,0.844,3202,0.844,3203,0.844,3204,2.147,3205,0.844,3206,0.844,3207,1.549,3208,3.498,3209,0.844,3210,1.549,3211,0.844,3212,3.476,3213,0.844,3214,2.661,3215,0.743,3216,1.549,3217,7.59,3218,2.147,3219,4.426,3220,2.344,3221,1.243,3222,0.844,3223,1.549,3224,2.147,3225,4.426,3226,4.674,3227,0.844,3228,2.661,3229,1.549,3230,2.661,3231,2.661,3232,0.844,3233,2.147,3234,6.777,3235,1.364,3236,0.844,3237,4.151,3238,0.844,3239,2.147,3240,2.437,3241,0.844,3242,5.618,3243,1.891,3244,1.549,3245,3.385,3246,4.898,3247,3.498,3248,0.844,3249,1.549,3250,3.843,3251,0.844,3252,5.289,3253,1.549,3254,0.844,3255,0.844,3256,0.844,3257,2.147,3258,0.844,3259,0.844,3260,0.844,3261,0.677,3262,2.147,3263,2.344,3264,0.844,3265,0.844,3266,0.844,3267,1.364,3268,4.674,3269,0.743,3270,0.743,3271,1.891,3272,2.147,3273,1.891,3274,2.147,3275,0.844,3276,2.737,3277,3.081,3278,0.743,3279,2.147,3280,0.844,3281,0.844,3282,0.844,3283,0.844,3284,1.364,3285,0.844,3286,6.032,3287,1.364,3288,1.891,3289,0.588,3290,1.549,3291,2.661,3292,0.743,3293,0.844,3294,1.549,3295,0.844,3296,0.844,3297,0.844,3298,1.549,3299,0.844,3300,1.243,3301,0.844,3302,2.737,3303,0.844,3304,0.743,3305,3.843,3306,2.135,3307,0.844,3308,2.737,3309,0.844,3310,1.549,3311,0.844,3312,0.844,3313,0.844,3314,0.844,3315,0.844,3316,2.147,3317,0.844,3318,1.549,3319,1.549,3320,1.549,3321,0.844,3322,5.289,3323,1.549,3324,0.844,3325,0.844,3326,0.743,3327,0.844,3328,0.628,3329,0.844,3330,0.844,3331,2.147,3332,0.743,3333,0.844,3334,4.949,3335,0.677,3336,0.844,3337,0.844,3338,3.107,3339,3.081,3340,0.844,3341,0.844,3342,2.147,3343,0.844,3344,0.844,3345,2.661,3346,0.844,3347,0.844,3348,0.844,3349,0.844,3350,0.844,3351,0.844,3352,1.549,3353,0.844,3354,2.147,3355,0.844,3356,0.844,3357,1.549,3358,0.844,3359,0.844,3360,0.844,3361,0.844,3362,0.844,3363,1.549,3364,1.152,3365,3.898,3366,0.844,3367,3.498,3368,0.844,3369,0.844,3370,1.364,3371,2.147,3372,2.661,3373,2.661,3374,2.661,3375,0.844,3376,2.737,3377,3.107,3378,0.844,3379,2.147,3380,0.844,3381,1.549,3382,0.844,3383,1.364,3384,3.107,3385,1.549,3386,2.661,3387,2.661,3388,0.844,3389,2.147,3390,3.107,3391,0.844,3392,3.083,3393,0.844,3394,3.385,3395,2.147,3396,2.147,3397,1.549,3398,0.628,3399,0.844,3400,0.743,3401,0.844,3402,0.844,3403,2.147,3404,0.844,3405,0.844,3406,0.844,3407,0.844,3408,0.844,3409,2.147,3410,0.844,3411,0.743,3412,1.891,3413,1.549,3414,3.498,3415,5.595,3416,2.147,3417,1.549,3418,1.549,3419,1.549,3420,0.743,3421,0.844,3422,0.844,3423,0.844,3424,3.081,3425,1.549,3426,0.844,3427,0.844,3428,0.844,3429,0.844,3430,1.549,3431,0.844,3432,1.549,3433,0.844,3434,3.107,3435,0.844,3436,2.892,3437,0.844,3438,4.315,3439,0.844,3440,0.844,3441,0.844,3442,0.844,3443,1.549,3444,0.844,3445,2.661,3446,1.549,3447,0.743,3448,0.844,3449,0.844,3450,0.844,3451,0.844,3452,1.549,3453,0.844,3454,0.844,3455,0.743,3456,2.344,3457,0.844,3458,1.549,3459,0.844,3460,0.844,3461,2.147,3462,0.844,3463,0.844,3464,0.844,3465,0.844,3466,2.661,3467,0.844,3468,0.844,3469,0.844,3470,0.743,3471,0.743,3472,0.743,3473,0.844,3474,0.844,3475,0.844,3476,3.107,3477,0.844,3478,0.844,3479,2.661,3480,0.844,3481,0.743,3482,0.743,3483,0.844,3484,0.844,3485,0.844,3486,0.844,3487,0.844,3488,2.661,3489,0.844,3490,0.844,3491,2.147,3492,0.844,3493,0.677,3494,2.147,3495,0.844,3496,0.844,3497,0.844,3498,0.844,3499,0.844,3500,0.844,3501,0.844,3502,0.743,3503,1.364,3504,0.844,3505,0.588,3506,1.549,3507,0.743,3508,0.844,3509,2.661,3510,0.844,3511,0.844,3512,1.549,3513,2.147,3514,2.147,3515,0.743,3516,1.549,3517,0.844,3518,2.147,3519,3.843,3520,0.844,3521,0.844,3522,1.549,3523,0.844,3524,0.844,3525,0.844,3526,0.844,3527,0.844,3528,2.661,3529,2.147,3530,0.844,3531,3.107,3532,0.844,3533,0.844,3534,0.844,3535,0.844,3536,0.743,3537,0.844,3538,1.549,3539,1.549,3540,1.364,3541,2.147,3542,0.743,3543,0.844,3544,1.243,3545,2.147,3546,0.844,3547,1.364,3548,0.844,3549,1.549,3550,0.844,3551,0.844,3552,1.549,3553,6.537,3554,2.147,3555,0.844,3556,3.107,3557,4.674,3558,2.147,3559,0.844,3560,0.743,3561,0.844,3562,0.844,3563,2.661,3564,0.844,3565,2.147,3566,0.844,3567,0.844,3568,0.844,3569,0.844,3570,0.844,3571,0.844,3572,0.844,3573,2.661,3574,1.549,3575,0.844,3576,0.844,3577,2.147,3578,0.844,3579,1.549,3580,2.147,3581,1.549,3582,0.844,3583,0.844,3584,0.844,3585,1.549,3586,2.147,3587,0.844,3588,0.743,3589,0.844,3590,0.844,3591,1.549,3592,0.844,3593,0.743,3594,0.844,3595,0.844,3596,0.844,3597,0.844,3598,2.147,3599,1.549,3600,0.743,3601,0.844,3602,0.844,3603,2.661,3604,0.844,3605,2.147,3606,0.844,3607,0.844,3608,1.549,3609,0.844,3610,0.844,3611,0.844,3612,2.147,3613,1.549,3614,1.549,3615,0.844,3616,1.549,3617,3.843,3618,1.364,3619,2.147,3620,2.661,3621,0.743,3622,0.844,3623,1.549,3624,0.844,3625,2.147,3626,0.844,3627,0.844,3628,0.844,3629,0.844,3630,0.844,3631,0.844,3632,2.147,3633,1.549,3634,0.844,3635,1.549,3636,0.743,3637,0.844,3638,0.844,3639,1.549,3640,1.549,3641,0.844,3642,1.549,3643,0.844,3644,0.844,3645,0.677,3646,0.844,3647,2.147,3648,0.844,3649,0.844,3650,0.844,3651,0.844,3652,1.549,3653,2.147,3654,0.844,3655,0.844,3656,0.844,3657,0.844,3658,0.677,3659,1.549,3660,0.844,3661,0.844,3662,0.844,3663,0.844,3664,0.844,3665,0.844,3666,0.844,3667,0.844,3668,0.628,3669,0.844,3670,0.844,3671,0.844,3672,2.661,3673,0.844,3674,0.844,3675,1.549,3676,0.844,3677,0.844,3678,0.844,3679,0.844,3680,0.844,3681,0.844,3682,0.844,3683,0.677,3684,0.844,3685,0.844,3686,0.844,3687,0.743,3688,1.549,3689,0.844,3690,0.844,3691,0.844,3692,0.844,3693,0.743,3694,1.549,3695,0.844,3696,0.844,3697,0.743,3698,0.743,3699,0.555,3700,0.844,3701,1.549,3702,1.549,3703,2.737,3704,0.844,3705,0.844,3706,0.844,3707,0.743,3708,0.844,3709,0.844,3710,2.147,3711,1.364,3712,0.844,3713,1.549,3714,1.549,3715,1.549,3716,0.844,3717,0.844,3718,0.844,3719,0.844,3720,0.743,3721,0.844,3722,0.844,3723,1.549,3724,0.844,3725,2.147,3726,0.844,3727,0.844,3728,0.844,3729,0.844,3730,0.844,3731,0.844,3732,0.844,3733,0.844,3734,0.844,3735,0.844,3736,0.844,3737,0.844,3738,0.677,3739,0.844,3740,0.844,3741,0.743,3742,0.844,3743,0.844,3744,0.844,3745,0.844,3746,0.844,3747,0.844,3748,0.844,3749,0.844,3750,0.844,3751,0.844,3752,0.844,3753,0.677,3754,0.743,3755,1.549,3756,1.364,3757,0.844,3758,0.844,3759,0.844,3760,0.844,3761,0.844,3762,0.844,3763,1.549,3764,0.844,3765,0.844,3766,0.743,3767,0.677,3768,0.844,3769,0.844,3770,0.677,3771,0.628,3772,0.844,3773,0.844,3774,0.844,3775,0.844]],["title/modules.html",[108,2.435]],["body/modules.html",[25,0.008,55,0.007,56,0.008,57,0.007,107,4.339,108,2.5,119,4.096,173,4.096,178,4.096,313,4.339,316,4.339,317,4.339,318,3.888,319,4.339,1097,4.339,1354,4.631,1358,4.339,2185,5.868,3091,5.295,3776,8.919,3777,8.919,3778,7.964,3779,8.049]],["title/overview.html",[3780,4.865]],["body/overview.html",[2,0.87,25,0.01,55,0.005,56,0.007,57,0.005,87,2.268,95,5.36,106,1.334,107,5.919,108,1.803,109,2.043,110,2.451,111,2.451,112,2.268,113,2.043,114,2.113,115,3.954,116,3.954,117,3.954,118,3.954,119,5.36,120,4.807,121,3.321,122,2.356,123,2.043,144,1.858,150,5.088,173,5.588,174,3.954,175,3.954,176,3.954,177,3.954,178,5.242,179,5.088,180,4.308,313,5.973,314,3.954,315,3.954,316,4.807,317,4.807,318,5.088,319,4.807,483,4.117,538,4.85,579,1.803,583,3.954,584,3.954,585,3.954,914,3.954,915,3.954,916,3.954,996,5.36,1097,6.019,1098,3.954,1100,3.954,1101,3.954,1102,4.539,1351,4.539,1354,6.501,1355,3.954,1356,3.954,1357,3.954,1358,5.678,1409,4.539,1422,3.954,1423,3.954,1424,4.539,1612,3.954,1613,3.954,1614,3.954,1701,3.602,1780,3.602,1817,3.954,2056,3.954,3780,3.602,3781,4.489]],["title/todo.html",[258,1.505,1628,2.788,1629,2.788]],["body/todo.html",[0,0.136,5,0.102,11,0.715,16,0.435,25,0.009,26,0.981,32,0.642,47,3.101,48,2.45,49,2.446,52,4.336,55,0.006,56,0.006,57,0.005,65,2.098,85,2.026,93,2.69,106,1.279,114,2.026,123,2.69,125,2.45,146,2.373,155,1.383,184,2.88,201,2.259,202,1.849,215,1.42,236,1.547,249,4.742,252,3.691,253,4.129,258,1.728,259,3.685,260,2.833,273,1.547,284,4.119,321,2.832,327,3.888,331,2.562,332,3.453,335,3.201,375,1.678,443,2.986,448,2.35,459,3.101,461,3.365,483,2.175,489,2.986,507,2.562,508,2.562,527,2.688,554,3.101,579,1.728,589,3.843,597,2.098,601,3.29,610,3.201,629,3.201,631,2.999,658,2.832,661,2.688,690,4.704,691,4.119,730,2.688,731,5.663,752,4.137,768,3.691,804,2.832,847,3.201,895,2.999,910,2.999,942,3.201,983,2.832,1115,3.453,1170,4.395,1328,3.691,1378,5.02,1635,2.999,1639,3.201,1677,3.791,1691,3.791,1720,4.78,1737,5.83,1738,3.201,1743,3.791,1873,5.416,1874,2.832,1929,3.453,1974,3.453,1992,2.832,2006,3.453,2010,3.791,2053,2.688,2090,3.453,2129,3.453,2167,3.453,2185,2.832,2188,3.201,2189,2.999,2195,2.832,2217,3.453,2287,4.742,2319,3.201,2377,3.453,2389,3.453,2391,3.453,2498,2.832,2593,3.201,2729,2.999,2760,3.453,2823,3.453,2827,3.201,2997,3.791,2998,3.791,3065,2.688,3076,3.791,3086,3.201,3096,3.453,3151,3.453,3154,3.453,3289,2.999,3326,3.791,3370,3.791,3392,3.453,3455,3.791,3707,5.206,3753,4.742,3771,3.201,3782,3.453,3783,4.304,3784,3.791,3785,3.791,3786,6.75,3787,3.453,3788,3.791,3789,4.304,3790,4.304,3791,4.304,3792,4.304,3793,3.453,3794,5.02,3795,4.304,3796,4.304,3797,4.304,3798,4.304,3799,3.453,3800,4.304,3801,4.304,3802,4.304,3803,3.791,3804,4.304,3805,4.304,3806,4.304,3807,4.304,3808,3.201,3809,3.791,3810,4.304,3811,4.304,3812,4.304,3813,3.791,3814,3.791,3815,4.304,3816,3.791,3817,4.304,3818,4.304,3819,4.304,3820,4.304,3821,4.304,3822,4.304,3823,5.945,3824,4.304,3825,4.304,3826,4.304,3827,4.304,3828,4.304,3829,4.304,3830,3.791,3831,4.304,3832,4.304,3833,5.91,3834,3.791,3835,4.304]],["title/miscellaneous/typealiases.html",[3031,2.466,3836,5.365]],["body/miscellaneous/typealiases.html",[10,0.48,16,0.575,25,0.009,29,2.203,32,0.868,55,0.006,56,0.008,57,0.006,193,2.977,195,3.506,201,3.051,202,1.412,255,3.386,345,3.631,368,4.492,375,3.182,376,3.274,398,3.635,430,1.31,599,4.325,600,5.443,601,2.834,603,5.772,617,5.772,618,5.772,638,5.013,763,4.052,765,5.772,771,6.267,773,5.772,774,4.052,775,5.013,1133,6.267,1146,4.325,1159,6.336,1215,4.666,1245,5.122,1246,5.122,1313,4.666,1428,4.325,1429,4.666,1441,5.35,1713,5.122,1754,4.666,3031,3.826,3447,5.122,3837,5.815,3838,5.815,3839,5.815,3840,7.194,3841,7.194,3842,7.387,3843,5.815,3844,5.815,3845,5.122,3846,5.815,3847,5.815,3848,5.815,3849,4.052,3850,5.815]],["title/miscellaneous/variables.html",[1648,3.739,3031,2.466]],["body/miscellaneous/variables.html",[1,2.579,9,2.579,10,0.218,13,1.658,15,1.925,16,0.58,25,0.01,29,1.001,32,0.758,37,0.675,38,2.774,47,1.387,49,3.655,50,1.842,55,0.004,56,0.004,57,0.003,62,1.739,63,3.419,65,1.288,74,2.476,81,1.68,82,0.954,93,1.203,130,3.343,138,2.878,139,2.121,140,2.328,141,2.121,142,2.328,155,1.846,169,1.505,172,1.574,184,2.476,199,1.574,214,2.328,216,2.167,235,1.094,242,1.031,253,2.167,257,1.651,273,2.279,274,3.117,278,1.203,285,2.255,291,3.779,293,1.739,340,1.061,361,1.574,368,1.651,381,1.094,406,1.443,407,1.574,429,1.443,432,2.255,442,1.336,443,1.336,444,1.288,445,1.288,446,1.288,483,3.486,486,2.121,489,1.336,507,3.419,509,2.255,514,1.574,554,2.167,564,1.842,570,2.087,572,2.579,578,2.878,589,1.505,590,1.443,597,1.288,630,1.966,631,4.974,633,2.121,634,3.313,642,1.966,651,3.313,652,2.328,653,3.313,654,5.298,655,2.121,656,2.121,657,2.328,658,2.717,659,3.313,660,1.842,661,3.173,662,1.651,663,3.313,664,2.328,665,3.637,666,2.328,667,2.121,668,2.328,669,2.328,670,2.328,671,2.328,672,2.328,674,2.121,676,2.121,680,2.121,686,1.739,687,3.637,688,1.966,689,2.328,690,1.842,691,1.842,692,3.637,693,2.774,694,2.121,695,3.637,696,2.328,697,4.077,698,3.313,699,2.328,700,2.328,701,1.966,702,3.313,703,2.328,704,2.328,705,2.328,706,2.328,707,2.328,708,1.966,709,2.121,710,2.328,711,2.328,712,2.328,713,2.328,714,5.488,715,3.313,716,5.488,717,2.328,718,2.121,719,2.328,733,2.121,742,1.842,745,1.966,763,1.842,766,1.739,767,1.739,769,1.651,780,1.574,788,1.739,856,2.121,857,2.328,858,2.328,864,2.328,865,2.328,873,1.842,900,1.651,903,1.505,966,3.343,1146,1.966,1162,3.313,1193,3.313,1207,1.842,1321,2.458,1369,3.343,1384,1.842,1385,2.878,1456,2.121,1485,2.121,1488,2.579,1516,1.842,1541,1.842,1648,1.842,1675,2.328,1689,3.343,1720,1.739,2026,1.651,2053,1.651,2167,2.121,2207,2.328,2237,2.121,2282,1.842,2307,3.637,2319,1.966,2353,2.328,2470,2.328,2823,2.121,2835,2.328,2847,2.328,2848,5.059,2849,3.637,2850,4.476,2852,2.121,2853,3.637,2854,3.313,2855,3.637,2857,2.121,2862,2.328,2863,3.637,2864,3.637,2880,2.328,2881,4.476,2882,4.476,2883,4.476,2884,4.476,2885,2.328,2886,3.637,2889,5.059,2936,2.121,3031,1.739,3033,2.328,3034,4.476,3035,6.077,3064,4.271,3289,1.842,3799,4.077,3808,1.966,3823,2.328,3842,2.328,3845,2.328,3851,6.899,3852,2.644,3853,4.129,3854,2.644,3855,5.081,3856,2.644,3857,2.644,3858,2.644,3859,2.644,3860,2.644,3861,2.644,3862,2.644,3863,2.121,3864,2.328,3865,2.644,3866,2.328,3867,2.644,3868,2.121,3869,2.644,3870,2.644,3871,3.637,3872,4.129,3873,2.644,3874,2.644,3875,2.644,3876,2.644,3877,2.644,3878,2.644,3879,2.644,3880,2.644,3881,2.644,3882,2.644,3883,2.644,3884,2.644,3885,2.644,3886,2.644,3887,2.644,3888,2.644,3889,2.644,3890,2.644,3891,2.644,3892,2.328,3893,2.644,3894,2.644,3895,2.644,3896,2.644]],["title/additional-documentation/nestjs-application.html",[290,1.47,509,1.763,526,1.422,1297,1.574]],["body/additional-documentation/nestjs-application.html",[8,1.331,13,2.73,25,0.008,55,0.005,56,0.006,57,0.006,106,1.297,108,1.752,113,3.094,184,2.127,213,2.725,253,4.146,258,1.752,259,3.258,260,2.651,273,1.142,287,2.485,290,3.747,308,2.725,377,2.054,384,2.205,442,2.205,446,2.908,509,4.178,526,1.923,527,2.725,528,3.925,529,3.246,554,3.568,560,2.054,579,1.752,589,2.485,591,2.598,597,2.127,601,2.127,611,2.725,658,4.473,686,2.871,690,4.738,698,3.501,741,2.205,745,3.246,752,2.485,803,3.844,841,3.844,842,3.246,894,3.397,896,3.041,898,3.501,900,2.725,903,3.397,1111,3.844,1385,3.041,1508,4.738,1541,5.093,1689,5.198,1737,3.501,1740,3.041,1821,3.041,1847,3.501,1874,2.871,1949,4.437,1992,5.034,2006,3.501,2020,3.246,2025,3.552,2026,2.725,2049,3.501,2189,3.041,2194,3.041,2195,2.871,2213,3.041,2394,3.844,2399,3.246,2563,3.844,2593,3.246,2596,5.455,2834,3.844,2854,5.455,2936,3.501,3045,3.501,3047,3.501,3049,3.844,3064,5.056,3065,4.246,3087,3.246,3091,2.871,3103,3.041,3116,3.501,3278,3.844,3288,3.844,3289,4.738,3334,3.844,3364,3.246,3436,3.041,3505,3.041,3593,3.844,3600,3.844,3738,3.501,3778,3.844,3808,3.246,3809,3.844,3813,5.256,3814,5.256,3849,5.093,3863,3.501,3864,3.844,3866,3.844,3868,4.787,3897,4.364,3898,3.844,3899,4.364,3900,4.364,3901,3.501,3902,4.364,3903,6.799,3904,4.364,3905,3.246,3906,4.364,3907,3.844,3908,4.364,3909,4.364,3910,4.364,3911,4.364,3912,7.309,3913,4.364,3914,4.364,3915,4.364,3916,4.364,3917,4.364,3918,4.364,3919,4.364,3920,4.364,3921,5.967,3922,4.364,3923,4.364,3924,4.364,3925,4.364,3926,4.364,3927,4.364,3928,4.364,3929,4.364,3930,4.364,3931,4.364,3932,3.844,3933,3.844,3934,4.364,3935,4.364,3936,4.364,3937,4.364,3938,5.967,3939,4.364,3940,5.967,3941,4.364,3942,4.364,3943,4.787,3944,3.844,3945,4.364,3946,4.364,3947,6.799,3948,5.967,3949,4.364,3950,4.364,3951,4.364,3952,3.844,3953,4.364,3954,3.501,3955,3.844,3956,4.364,3957,4.364,3958,4.364,3959,4.364,3960,4.364,3961,4.364]],["title/additional-documentation/nestjs-application/software-architecture.html",[526,1.422,1297,1.574,3117,2.591,3962,2.124]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.545,4,0.069,5,0.066,13,2.674,14,0.613,22,0.469,24,0.587,25,0.004,26,0.345,29,0.443,45,0.861,47,3.495,48,2.224,49,2.376,51,0.869,52,1.6,53,1.755,55,0.002,56,0.002,57,0.001,62,1.368,63,1.238,65,1.661,81,0.257,82,0.649,93,3.495,109,1.778,114,0.55,123,0.947,125,0.665,138,0.815,155,2.059,169,1.184,172,0.696,197,1.051,199,1.673,201,3.89,202,0.682,204,0.815,210,0.696,213,2.128,222,0.938,236,1.228,252,4.549,253,0.613,255,0.55,258,0.469,259,1.136,260,2.679,264,0.869,265,1.849,273,0.306,274,1.006,283,0.638,285,4.532,286,0.769,287,1.94,288,3.478,290,3.081,308,1.755,323,3.126,324,1.669,327,3.087,328,0.869,329,3.635,331,0.696,340,0.469,343,1.547,361,1.673,376,0.947,377,0.979,398,1.051,406,1.534,411,0.769,429,0.638,430,1.245,432,0.638,445,0.57,448,1.136,460,0.869,481,4.433,482,3.723,489,3.421,500,0.815,507,0.696,514,3.144,525,2.93,526,1.238,528,3.635,554,1.474,560,3.32,570,1.722,579,0.835,588,3.852,589,1.6,590,2.562,591,2.326,593,1.368,597,1.661,609,0.638,615,1.849,619,2.09,660,0.815,661,3.585,662,0.73,667,0.938,688,0.869,691,0.815,693,1.861,730,1.299,741,3.924,742,0.815,752,0.665,756,1.368,758,3.723,759,1.184,766,0.769,768,0.73,769,0.73,770,0.769,784,1.449,786,2.562,787,0.869,788,0.769,798,0.815,804,1.849,810,3.474,823,0.73,843,0.815,844,2.242,846,1.94,847,0.869,848,4.238,886,0.869,895,1.958,896,0.815,900,1.299,901,0.815,903,0.665,904,2.734,908,1.547,936,0.769,973,0.769,979,1.832,981,0.769,1129,0.815,1170,0.869,1175,0.869,1199,0.815,1207,0.815,1237,0.815,1266,0.665,1284,1.368,1297,0.57,1321,0.696,1350,0.869,1389,0.938,1392,0.869,1416,2.242,1436,1.958,1437,2.627,1457,1.832,1458,3.135,1460,0.815,1488,2.704,1503,2.09,1508,0.815,1509,1.547,1516,0.815,1519,0.869,1520,0.815,1521,0.938,1540,1.547,1566,4.901,1632,1.449,1633,1.669,1639,2.09,1642,2.254,1648,0.815,1649,2.905,1654,1.03,1663,1.03,1666,1.669,1668,1.03,1671,1.03,1710,1.03,1712,2.475,1738,0.869,1740,0.815,1749,1.03,1753,1.03,1754,1.669,1770,0.869,1772,2.128,1814,1.832,1821,3.27,1835,6.611,1837,0.869,1842,1.669,1865,1.449,1868,1.958,1873,3.135,1874,2.242,1892,1.03,1893,1.03,1897,2.375,1899,5.844,1922,1.03,1930,1.547,1949,0.869,1955,0.938,1966,1.832,1992,1.368,2016,1.547,2020,0.869,2025,0.696,2032,2.475,2046,0.938,2052,0.938,2053,3.298,2067,3.135,2075,1.03,2076,3.135,2077,2.09,2083,2.534,2087,0.869,2094,3.002,2101,3.22,2102,0.869,2106,1.03,2122,4.766,2125,1.03,2126,1.547,2129,0.938,2131,1.03,2137,1.03,2147,1.669,2152,2.475,2159,1.449,2171,4.866,2188,2.09,2189,0.815,2190,1.03,2194,1.958,2195,1.849,2200,3.22,2202,3.22,2213,1.449,2223,6.112,2234,0.938,2268,0.938,2275,0.869,2282,0.815,2283,3.441,2284,0.938,2295,1.832,2327,2.475,2331,2.57,2336,0.869,2346,1.832,2352,2.475,2386,1.03,2391,0.938,2396,0.869,2399,3.22,2409,2.254,2411,0.938,2439,2.534,2441,1.03,2451,0.938,2498,2.848,2504,0.938,2506,1.03,2544,1.03,2551,1.03,2562,1.832,2583,1.958,2584,3.441,2595,1.832,2618,1.669,2649,0.938,2683,0.938,2686,0.938,2690,3.002,2691,0.869,2698,2.254,2701,0.938,2714,1.03,2720,1.669,2749,1.03,2760,3.764,2774,1.03,2800,1.03,2810,1.547,2832,1.832,2833,1.832,3017,1.669,3045,2.254,3051,1.958,3054,3.27,3055,2.534,3058,0.815,3061,1.669,3063,1.03,3082,0.869,3086,0.869,3087,0.869,3091,1.368,3103,1.449,3116,1.669,3117,0.938,3128,1.832,3130,1.03,3133,1.03,3138,1.03,3141,1.03,3144,1.03,3154,0.938,3157,1.03,3168,1.03,3180,1.832,3181,3.22,3184,3.814,3187,1.547,3199,2.534,3212,2.905,3215,1.03,3220,1.03,3221,4.433,3240,0.815,3243,1.03,3245,1.832,3261,0.938,3263,2.475,3267,1.03,3269,1.03,3276,1.03,3277,2.475,3286,1.03,3287,1.03,3300,0.938,3302,1.03,3304,1.832,3306,0.938,3308,1.03,3328,0.869,3335,2.734,3339,1.03,3364,0.869,3365,1.03,3383,1.03,3392,3.135,3394,1.03,3398,0.869,3412,1.03,3415,1.03,3420,1.03,3424,1.832,3436,0.815,3438,1.03,3456,1.03,3470,1.832,3471,3.441,3481,2.475,3482,1.03,3493,0.938,3502,3.002,3503,1.03,3505,0.815,3507,1.03,3515,1.03,3536,1.03,3540,1.03,3542,1.03,3544,4.238,3547,1.03,3560,1.03,3588,3.814,3618,1.03,3636,1.03,3645,3.764,3668,4.413,3683,0.938,3697,1.03,3698,1.03,3699,3.635,3711,1.03,3741,1.832,3754,1.03,3770,0.938,3771,0.869,3780,0.938,3782,1.669,3785,1.03,3787,3.474,3816,1.832,3834,1.03,3901,0.938,3905,1.547,3944,1.03,3962,4.877,3963,1.169,3964,1.169,3965,5.057,3966,5.282,3967,2.08,3968,2.81,3969,2.81,3970,4.017,3971,2.08,3972,2.475,3973,4.692,3974,1.169,3975,1.169,3976,2.534,3977,3.002,3978,1.169,3979,1.169,3980,1.169,3981,1.169,3982,1.169,3983,2.08,3984,2.08,3985,1.169,3986,1.169,3987,3.907,3988,1.169,3989,1.169,3990,2.81,3991,2.08,3992,1.169,3993,1.169,3994,1.169,3995,1.169,3996,6.91,3997,1.169,3998,1.169,3999,1.169,4000,1.169,4001,2.08,4002,4.33,4003,1.169,4004,1.169,4005,2.08,4006,2.08,4007,3.408,4008,2.81,4009,3.408,4010,1.169,4011,3.002,4012,3.002,4013,1.169,4014,1.169,4015,1.169,4016,1.169,4017,1.169,4018,1.169,4019,2.734,4020,2.08,4021,0.938,4022,2.81,4023,1.169,4024,1.169,4025,1.169,4026,6.66,4027,1.169,4028,6.823,4029,1.169,4030,1.832,4031,1.169,4032,1.169,4033,2.08,4034,1.03,4035,3.928,4036,5.282,4037,1.169,4038,2.81,4039,2.08,4040,2.08,4041,1.169,4042,1.169,4043,1.169,4044,1.169,4045,1.169,4046,1.169,4047,3.002,4048,2.08,4049,1.169,4050,0.938,4051,1.03,4052,1.169,4053,1.169,4054,1.169,4055,1.03,4056,1.169,4057,2.475,4058,1.169,4059,1.169,4060,1.169,4061,1.169,4062,1.169,4063,1.169,4064,1.169,4065,1.03,4066,1.169,4067,2.81,4068,1.169,4069,1.169,4070,1.169,4071,2.734,4072,2.08,4073,1.169,4074,2.08,4075,2.81,4076,1.169,4077,1.169,4078,1.169,4079,1.832,4080,2.08,4081,2.81,4082,1.169,4083,1.169,4084,1.169,4085,1.169,4086,1.169,4087,1.169,4088,1.03,4089,1.169,4090,2.08,4091,1.169,4092,1.669,4093,1.169,4094,5.282,4095,1.169,4096,1.03,4097,1.03,4098,1.169,4099,1.169,4100,1.169,4101,0.938,4102,1.169,4103,1.169,4104,1.169,4105,1.169,4106,2.81,4107,1.169,4108,2.08,4109,2.81,4110,1.169,4111,1.169,4112,1.169,4113,1.169,4114,2.08,4115,1.169,4116,1.169,4117,1.169,4118,1.832,4119,1.169,4120,1.03,4121,1.169,4122,1.169,4123,2.08,4124,1.169,4125,1.169,4126,2.08,4127,1.169,4128,1.169,4129,1.03,4130,1.169,4131,1.169,4132,1.03,4133,1.169,4134,1.169,4135,2.08,4136,1.169,4137,1.169,4138,1.169,4139,1.169,4140,1.169,4141,1.03,4142,1.169,4143,1.169,4144,1.169,4145,1.03,4146,1.03,4147,2.81,4148,1.169,4149,1.169,4150,1.169,4151,1.169,4152,1.169,4153,1.169,4154,2.08,4155,1.169,4156,1.03,4157,1.169,4158,2.81,4159,1.169,4160,1.169,4161,1.169,4162,2.08,4163,1.169,4164,2.08,4165,1.169,4166,1.169,4167,1.169,4168,1.169,4169,1.169,4170,1.169,4171,1.169,4172,2.08,4173,1.169,4174,1.169,4175,1.169,4176,1.169,4177,1.169,4178,1.169,4179,1.169,4180,1.169,4181,7.213,4182,1.169,4183,1.169,4184,3.907,4185,1.03,4186,1.169,4187,1.169,4188,2.08,4189,1.169,4190,1.169,4191,1.169,4192,1.169,4193,1.169,4194,1.169,4195,1.169,4196,1.03,4197,1.169,4198,1.169,4199,1.169,4200,1.03,4201,1.169,4202,1.169,4203,1.169,4204,1.169,4205,2.08,4206,1.169,4207,1.169,4208,2.254,4209,1.169,4210,1.169,4211,1.03,4212,1.169,4213,1.169,4214,1.169,4215,3.907,4216,1.169,4217,1.169,4218,1.169,4219,1.169,4220,1.169,4221,1.169,4222,1.169,4223,1.169,4224,1.169,4225,1.169,4226,1.169,4227,1.169,4228,1.169,4229,1.169,4230,2.08,4231,1.169,4232,1.169,4233,1.169,4234,2.08,4235,1.169,4236,1.169,4237,1.169,4238,2.08,4239,1.169,4240,1.169,4241,1.169,4242,1.169,4243,1.169,4244,1.03,4245,2.08,4246,1.169,4247,2.08,4248,1.169,4249,1.169,4250,1.169,4251,1.03,4252,2.08]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.139,526,1.249,1297,1.382,3962,1.866,4035,2.109]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.22,2,0.371,3,0.078,4,0.064,5,0.164,11,0.678,13,1.64,16,0.234,19,0.569,22,0.753,25,0.01,26,1.05,39,0.18,43,0.233,47,2.991,48,2.325,52,1.812,55,0.006,56,0.003,57,0.002,63,1.894,64,3.13,65,0.933,74,1.57,81,0.897,82,0.735,85,3.271,87,2.669,91,1.334,94,1.195,98,0.901,102,1.315,106,2.322,108,2.79,109,0.871,113,1.448,114,2.683,125,1.812,143,0.453,146,1.278,147,1.536,155,1.831,156,1.317,165,1.67,169,1.09,173,1.259,178,2.687,179,1.987,180,2.972,184,2.574,199,3.144,201,2.772,202,1.467,204,1.334,210,3.908,236,0.501,242,0.746,253,3.319,255,2.843,257,2.972,259,1.045,260,3.224,266,1.536,267,1.536,273,0.501,283,1.737,284,2.217,285,2.884,287,2.709,289,2.687,290,0.871,307,1.334,308,1.195,321,2.687,331,1.894,345,1.195,375,1.592,377,1.498,381,1.69,406,1.737,413,1.195,430,0.431,446,0.933,448,2.23,456,1.259,459,3.17,461,1.09,475,2.431,479,1.423,481,3.277,507,1.139,509,2.884,521,1.334,525,3.559,526,1.799,527,1.195,529,1.423,531,1.536,536,1.686,538,3.393,554,3.553,560,3.344,570,0.967,579,1.278,587,1.259,588,3.453,589,3.007,590,3.112,592,2.687,593,1.259,594,1.259,595,1.259,597,2.574,600,1.334,601,0.933,605,1.139,610,2.366,615,1.259,619,1.423,629,1.423,646,1.686,658,1.259,661,1.195,662,1.195,691,2.846,693,2.598,729,3.277,730,1.195,731,2.366,741,3.659,742,1.334,749,1.423,753,1.423,756,1.259,758,3.037,759,1.812,768,1.987,769,3.559,770,2.687,780,1.894,798,1.334,837,0.967,843,1.334,844,3.13,846,1.09,851,1.423,873,1.334,886,2.366,894,1.09,902,1.686,903,2.325,908,2.366,910,1.334,921,1.423,966,2.093,974,1.334,983,3.475,991,1.334,1007,1.686,1008,1.686,1009,1.686,1010,1.686,1011,1.686,1012,1.686,1021,1.536,1199,2.217,1236,3.277,1266,1.812,1284,1.259,1321,1.894,1322,1.536,1328,1.195,1369,1.259,1391,1.536,1416,2.093,1437,3.17,1460,1.334,1488,1.195,1507,1.536,1508,3.316,1509,1.423,1510,1.536,1516,3.316,1517,2.366,1519,1.423,1521,1.536,1642,1.536,1648,1.334,1649,3.037,1662,1.423,1666,3.818,1693,1.686,1720,2.687,1730,1.686,1772,1.987,1809,1.686,1834,1.686,1868,2.217,1874,2.687,1897,2.217,1899,1.536,1929,1.536,1931,1.423,1932,2.553,1976,1.423,2025,3.765,2053,2.972,2083,1.423,2087,2.366,2089,2.803,2095,1.686,2096,2.846,2101,1.423,2102,1.423,2122,1.423,2135,1.686,2147,3.277,2158,1.536,2200,1.423,2213,2.217,2217,3.277,2219,2.553,2223,5.386,2228,1.686,2230,1.686,2247,2.553,2270,3.68,2282,2.846,2287,1.536,2314,1.686,2321,1.536,2324,1.686,2331,1.259,2336,1.423,2339,1.686,2357,1.686,2358,1.686,2399,2.366,2446,1.686,2485,1.686,2498,1.259,2568,1.423,2583,1.334,2611,3.597,2625,2.553,2660,1.686,2666,1.536,2686,1.536,2696,1.536,3038,1.686,3051,1.334,3054,1.334,3057,1.686,3058,1.334,3065,1.195,3074,1.686,3082,1.423,3083,1.686,3086,1.423,3087,3.539,3091,2.093,3094,1.536,3097,1.686,3102,1.686,3103,3.316,3106,1.686,3108,1.686,3140,1.686,3156,1.536,3158,1.686,3181,2.366,3187,1.423,3197,3.277,3199,1.423,3212,3.928,3221,1.536,3235,1.686,3240,2.217,3261,1.536,3270,1.686,3271,1.686,3273,1.686,3292,1.686,3300,1.536,3306,1.536,3328,1.423,3332,1.686,3335,1.536,3364,3.037,3376,1.686,3398,1.423,3436,1.334,3472,1.686,3493,1.536,3505,1.334,3544,2.553,3621,3.597,3658,2.553,3668,2.366,3693,1.686,3699,1.259,3720,1.686,3770,1.536,3771,2.366,3787,3.818,3788,3.597,3794,4.882,3799,3.277,3803,1.686,3830,3.597,3849,3.316,3868,3.818,3871,1.686,3892,1.686,3901,1.536,3907,1.686,3932,1.686,3933,3.597,3943,2.553,3962,2.687,3965,1.686,3976,1.423,3996,3.597,4011,1.686,4012,1.686,4019,1.536,4028,6.635,4030,1.686,4034,2.803,4035,4.492,4050,3.277,4051,1.686,4055,1.686,4057,1.686,4065,1.686,4071,1.536,4079,1.686,4088,2.803,4092,5.432,4096,3.597,4101,3.818,4129,1.686,4132,2.803,4146,3.597,4156,2.803,4196,2.803,4200,1.686,4208,1.536,4251,1.686,4253,1.686,4254,1.914,4255,1.914,4256,5.321,4257,2.803,4258,1.914,4259,1.914,4260,3.182,4261,4.758,4262,1.914,4263,1.914,4264,1.914,4265,1.914,4266,1.914,4267,1.914,4268,1.914,4269,3.182,4270,1.914,4271,5.282,4272,1.914,4273,1.914,4274,1.686,4275,3.182,4276,4.084,4277,1.914,4278,1.914,4279,1.914,4280,1.914,4281,1.914,4282,1.914,4283,1.914,4284,1.914,4285,1.686,4286,3.182,4287,1.914,4288,1.686,4289,1.914,4290,1.914,4291,1.914,4292,1.914,4293,1.914,4294,1.914,4295,1.914,4296,1.914,4297,3.182,4298,3.182,4299,1.914,4300,1.914,4301,3.182,4302,1.914,4303,1.914,4304,1.914,4305,1.914,4306,1.914,4307,1.914,4308,1.914,4309,1.914,4310,1.914,4311,1.914,4312,1.914,4313,1.914,4314,1.914,4315,1.914,4316,1.914,4317,1.914,4318,1.914,4319,1.914,4320,1.914,4321,1.914,4322,1.914,4323,1.914,4324,1.536,4325,1.914,4326,1.914,4327,1.914,4328,1.914,4329,1.914,4330,1.686,4331,1.914,4332,1.914,4333,1.914,4334,1.914,4335,1.914,4336,1.914,4337,1.914,4338,1.686,4339,1.914,4340,1.914,4341,1.914,4342,1.914,4343,1.914,4344,1.914,4345,1.914,4346,1.914,4347,1.914,4348,3.182,4349,2.803,4350,1.914,4351,1.914,4352,1.914,4353,1.914,4354,1.914,4355,1.914,4356,1.914,4357,1.914,4358,1.914,4359,1.686,4360,1.914,4361,1.686,4362,1.914,4363,1.686,4364,1.536,4365,1.686,4366,1.914]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[526,1.249,1297,1.382,3794,2.109,3976,2.109,4367,2.498]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.018,22,0.371,25,0.009,32,0.511,46,2.748,49,1.417,52,3.388,53,3.138,55,0.004,56,0.005,57,0.004,64,2.253,74,1.658,81,1.104,82,1.514,91,2.387,102,0.853,123,1.559,146,1.375,155,2.578,156,1.417,165,3.663,172,2.039,193,2.079,202,1.22,210,4.344,222,4.031,255,2.365,258,1.375,259,2.743,260,3.171,285,4.117,286,3.915,287,1.95,288,1.95,289,2.253,290,3.321,307,2.387,308,3.138,321,2.253,324,4.031,327,2.253,328,2.547,329,2.253,370,1.797,378,1.87,381,2.463,391,3.305,398,1.731,404,2.539,430,0.772,460,4.426,482,2.547,489,1.731,500,2.387,507,2.039,509,2.743,525,4.83,560,1.612,570,2.539,588,1.87,590,4.309,594,2.253,595,2.253,597,2.449,660,2.387,661,2.139,673,2.547,686,2.253,693,2.743,741,3.528,749,2.547,753,2.547,768,3.138,837,1.731,842,2.547,846,1.95,901,4.147,903,2.861,1204,2.253,1207,2.387,1237,2.387,1248,3.017,1280,3.017,1284,4.313,1328,2.139,1389,2.748,1416,2.253,1437,3.123,1503,2.547,1505,2.547,1510,2.748,1541,2.387,1632,2.387,1635,2.387,1660,5.242,1662,2.547,1689,2.253,1696,3.017,1772,2.139,1874,3.305,1897,4.147,1930,2.547,1932,2.748,1949,2.547,2059,2.748,2067,2.748,2096,2.387,2100,4.031,2158,2.748,2202,2.547,2223,2.547,2235,3.017,2275,2.547,2294,4.031,2331,2.253,2336,5.192,2439,2.547,2451,2.748,2583,3.501,2625,4.031,2649,2.748,2666,4.031,2691,2.547,2810,2.547,2944,2.748,3032,2.748,3051,3.501,3054,2.387,3055,3.737,3058,2.387,3094,2.748,3096,2.748,3151,2.748,3156,4.031,3181,5.426,3187,2.547,3193,3.017,3199,2.547,3212,3.737,3240,2.387,3328,3.737,3398,2.547,3436,3.501,3505,2.387,3645,2.748,3668,2.547,3687,3.017,3699,2.253,3738,2.748,3753,2.748,3766,4.426,3767,2.748,3782,2.748,3793,2.748,3794,6.278,3849,2.387,3898,3.017,3943,2.748,3962,4.313,3972,3.017,3976,3.737,3977,3.017,4019,2.748,4021,2.748,4028,5.601,4050,2.748,4071,2.748,4092,2.748,4101,4.031,4120,3.017,4145,3.017,4185,3.017,4211,3.017,4253,3.017,4256,4.426,4274,4.426,4324,2.748,4338,3.017,4349,3.017,4361,3.017,4363,3.017,4364,2.748,4367,3.017,4368,3.425,4369,3.425,4370,3.425,4371,3.425,4372,3.425,4373,3.425,4374,3.425,4375,3.425,4376,5.025,4377,3.425,4378,3.425,4379,3.425,4380,3.425,4381,3.425,4382,3.425,4383,3.425,4384,3.425,4385,3.425,4386,3.425,4387,3.425,4388,3.425,4389,3.425,4390,3.425,4391,3.425,4392,3.425,4393,3.425,4394,3.425,4395,3.425,4396,3.425,4397,3.425,4398,3.425,4399,3.425,4400,3.425,4401,3.425,4402,3.425,4403,3.425,4404,5.025,4405,3.425,4406,3.425,4407,3.425,4408,3.425,4409,3.425,4410,3.425,4411,3.425,4412,3.425,4413,3.425,4414,3.425,4415,3.425,4416,3.425,4417,3.425,4418,3.425,4419,3.425,4420,3.425,4421,3.425,4422,3.425,4423,3.425,4424,3.425,4425,3.425,4426,3.425,4427,3.425,4428,3.425,4429,3.425,4430,3.425,4431,3.425,4432,3.425,4433,3.425,4434,3.425,4435,5.025,4436,3.425,4437,2.748,4438,3.425,4439,3.425,4440,3.425,4441,3.425,4442,3.425]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[323,1.771,526,1.249,1297,1.382,3699,1.866,3970,2.275]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.182,13,2.659,14,2.179,15,1.573,16,0.527,19,1.234,21,4.625,25,0.01,26,0.689,29,2.184,32,1.233,39,0.375,43,0.17,46,3.331,47,3.025,48,3.771,49,3.111,53,2.593,55,0.004,56,0.006,57,0.006,62,2.731,63,2.472,65,3.664,93,1.89,106,2.234,125,3.282,143,0.983,146,1.667,164,1.829,169,2.364,199,2.472,213,4.136,250,3.331,253,2.179,255,3.117,257,2.593,260,2.79,273,1.968,283,2.267,285,4.105,286,2.731,287,3.282,288,2.364,290,1.89,307,2.893,318,3.6,321,2.731,323,3.6,327,2.731,329,4.707,335,3.088,430,1.299,483,4.111,489,4.175,497,3.088,506,3.657,507,3.432,508,2.472,509,3.148,511,2.893,520,3.331,521,4.017,525,2.593,526,2.54,527,4.136,560,2.713,592,2.731,661,4.136,662,5.081,690,4.017,694,3.331,741,2.098,759,3.282,804,3.793,809,3.657,810,3.331,812,3.657,816,3.657,818,3.657,819,3.657,844,2.731,846,3.282,894,2.364,895,2.893,897,3.657,900,2.593,908,4.287,910,4.017,1020,4.287,1107,3.657,1255,3.657,1266,2.364,1437,3.025,1460,2.893,1624,3.331,1679,3.088,1772,2.593,1865,2.893,2025,2.472,2053,2.593,2087,3.088,2159,4.017,2200,3.088,2342,3.657,2396,3.088,2555,5.078,3065,2.593,3284,3.657,3411,3.657,3658,3.331,3699,2.731,3703,3.657,3905,3.088,3970,4.625,4097,3.657,4141,3.657,4257,3.657,4285,3.657,4288,3.657,4324,3.331,4330,3.657,4359,3.657,4364,3.331,4365,3.657,4443,4.152,4444,7.155,4445,4.152,4446,7.155,4447,4.152,4448,4.152,4449,4.152,4450,6.623,4451,4.152,4452,4.152,4453,4.152,4454,4.152,4455,5.765,4456,4.152,4457,4.152,4458,4.152,4459,4.152,4460,4.152,4461,4.152,4462,5.765,4463,4.152,4464,4.152,4465,4.152,4466,4.152,4467,4.152,4468,4.152,4469,4.152,4470,4.152,4471,4.152,4472,4.152,4473,4.152,4474,4.152]],["title/additional-documentation/nestjs-application/decisions.html",[526,1.652,1297,1.827,4437,3.008]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.365,25,0.008,47,2.948,55,0.006,56,0.008,57,0.006,93,2.557,102,1.399,202,1.364,210,4.191,236,1.47,243,2.011,252,3.508,260,2.998,265,3.696,288,3.198,358,3.198,446,3.431,509,3.067,514,3.344,594,4.632,595,3.696,609,3.067,734,3.696,738,4.178,741,2.839,894,3.198,909,4.948,936,5.059,942,4.178,1199,4.906,1266,3.198,1437,2.948,1488,4.397,1632,3.915,1740,3.915,1842,4.507,1868,3.915,1960,4.948,2020,5.719,2025,3.344,2049,4.507,2053,3.508,2176,4.948,2185,5.059,2204,4.948,2270,3.915,2284,4.507,2331,3.696,2409,5.649,2434,4.948,2457,6.202,2498,3.696,2643,4.948,2696,4.507,3240,3.915,3683,4.507,3767,4.507,3793,4.507,3905,4.178,3962,3.696,4021,5.649,4035,4.178,4047,4.948,4208,4.507,4244,4.948,4437,5.649,4475,5.618,4476,5.618,4477,5.618,4478,5.618,4479,5.618,4480,5.618,4481,5.618,4482,5.618,4483,5.618,4484,7.041,4485,5.618,4486,5.618,4487,5.618,4488,5.618,4489,5.618,4490,5.618,4491,5.618,4492,5.618,4493,5.618,4494,5.618,4495,5.618,4496,5.618,4497,5.618,4498,5.618]],["title/additional-documentation/nestjs-application/vscode.html",[526,1.652,1297,1.827,3954,3.008]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.177,25,0.009,52,4.259,55,0.007,56,0.008,57,0.007,253,3.925,289,4.078,290,3.404,323,3.871,509,4.084,554,3.253,601,3.645,1129,4.32,1437,3.253,1488,3.871,1520,4.32,1540,4.61,1662,4.61,1720,4.921,1821,4.32,2016,4.61,2025,3.69,2096,4.32,2321,6.002,2665,4.974,3064,4.61,3065,3.871,3066,6.589,3197,4.974,3289,4.32,3400,5.46,3756,7.076,3784,5.46,3808,5.563,3849,4.32,3863,4.974,3952,5.46,3954,6.002,3955,5.46,4499,6.199,4500,6.199,4501,6.199,4502,6.199,4503,6.199,4504,6.199,4505,6.199,4506,6.199,4507,6.199,4508,6.199]],["title/additional-documentation/nestjs-application/git.html",[526,1.652,1297,1.827,3101,3.008]],["body/additional-documentation/nestjs-application/git.html",[25,0.008,55,0.007,56,0.008,57,0.007,169,3.889,331,4.066,445,3.329,844,4.494,846,3.889,1369,4.494,2729,4.76,2827,5.892,3101,6.714,4118,6.017,4509,6.831,4510,6.831,4511,6.831,4512,6.831,4513,6.831]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":1204,"title":{},"body":{"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2917,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2845,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2874,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2879,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2870,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2856,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2868,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2851,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2867,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2878,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1856,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1196,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["1.0.0",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2871,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2875,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2869,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2877,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1295,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"license.html":{}}}],["100",{"_index":2836,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1895,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2056,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.0",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1786,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1780,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1776,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1770,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1817,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1735",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1877,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1767,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3351,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1557,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["2.0.3",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2876,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1760,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3113,"title":{},"body":{"license.html":{}}}],["2015",{"_index":1438,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["2020",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["2030",{"_index":1439,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["21",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2756,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2769,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2371,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1811,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1849,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1890,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1887,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1876,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2366,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1808,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3804,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1505,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["3.0.0",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2866,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1804,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2569,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["4.0.0",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3018,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3053,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2861,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3816,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3781,"title":{},"body":{"overview.html":{}}}],["4215",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1701,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["5.0.1",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2873,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2872,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5000",{"_index":1524,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["5007",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1728,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2860,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["6.0.0",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1764,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2865,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["60s",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["6122",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3431,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3450,"title":{},"body":{"license.html":{}}}],["7",{"_index":1726,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1665,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["8020",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":3916,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1850,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1653,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1657,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1659,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1889,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1836,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1736,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1852,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1745,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":3924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1301,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["999",{"_index":3073,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":1154,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":3932,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":3930,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1178,"title":{},"body":{"classes/NewsScope.html":{}}}],["a.m",{"_index":3105,"title":{},"body":{"index.html":{}}}],["ability",{"_index":3493,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3103,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3375,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3746,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3574,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3573,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3797,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":588,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["access_token",{"_index":101,"title":{},"body":{"classes/AuthEntity.html":{}}}],["accessable",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2268,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2283,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1182,"title":{},"body":{"classes/NewsScope.html":{}}}],["accompanied",{"_index":3416,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3750,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3186,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3374,"title":{},"body":{"license.html":{}}}],["according",{"_index":3741,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":785,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["accountid",{"_index":783,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["accounts",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3754,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3314,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3623,"title":{},"body":{"license.html":{}}}],["action",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2665,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3233,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3664,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3645,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3211,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["added",{"_index":903,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1663,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":526,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":3913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1179,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1185,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3698,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3206,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2295,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2032,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1739,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2137,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1747,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3349,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3499,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3737,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3500,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3111,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3604,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3311,"title":{},"body":{"license.html":{}}}],["again",{"_index":2563,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3364,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["age",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3403,"title":{},"body":{"license.html":{}}}],["aggregated",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3775,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3681,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3724,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3632,"title":{},"body":{"license.html":{}}}],["aims",{"_index":3963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":863,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3611,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1662,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1416,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["allows",{"_index":1540,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["along",{"_index":3377,"title":{},"body":{"license.html":{}}}],["already",{"_index":1129,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3169,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3427,"title":{},"body":{"license.html":{}}}],["always",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1754,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3575,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3162,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3337,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3387,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3220,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2853,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apiproperty",{"_index":103,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty()@isdate",{"_index":464,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["apiproperty()@isstring",{"_index":462,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["apiproperty({description",{"_index":1565,"title":{},"body":{"classes/UserDTO.html":{}}}],["apiproperty({pattern",{"_index":1152,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":471,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional()@isoptional()@isdate",{"_index":1545,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional()@isoptional()@isstring",{"_index":1543,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({type",{"_index":1160,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":3987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":990,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":1004,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1418,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":761,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["app_filter",{"_index":335,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":334,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":332,"title":{},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"todo.html":{}}}],["app_pipe",{"_index":333,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3835,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3225,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":3926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":290,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":624,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3905,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3704,"title":{},"body":{"license.html":{}}}],["apply",{"_index":842,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["approach",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3245,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3369,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3745,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3033,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../database.config.ts",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3839,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3035,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3034,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3845,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3842,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.option.entity.ts",{"_index":3843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.schema.ts",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../to",{"_index":3036,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server",{"_index":3907,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":3946,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src",{"_index":3951,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":320,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":516,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":518,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1620,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":505,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":630,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":799,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":580,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":840,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":802,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":813,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":811,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":817,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":808,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":815,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":917,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":890,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":727,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1625,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:10",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:20",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/auth.service.ts:7",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":856,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/controller/auth.controller.ts",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts",{"_index":1564,"title":{},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:5",{"_index":1568,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/controller/dto/user.dto.ts:8",{"_index":1567,"title":{},"body":{"classes/UserDTO.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2857,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts",{"_index":100,"title":{},"body":{"classes/AuthEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/entity/auth.entity.ts:5",{"_index":104,"title":{},"body":{"classes/AuthEntity.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":852,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":781,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/jwt",{"_index":2862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":181,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":206,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":209,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":530,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":920,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":599,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":586,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":457,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1029,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1146,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:10",{"_index":1155,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:13",{"_index":1166,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1147,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:19",{"_index":1151,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:22",{"_index":1163,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1164,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:28",{"_index":1165,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1158,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:34",{"_index":1150,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1168,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:40",{"_index":1148,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1167,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:46",{"_index":1156,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1341,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1537,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1598,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":959,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":965,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":975,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":978,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":988,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":969,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":365,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1513,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":955,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":946,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":948,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":949,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":951,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":952,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":953,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":954,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":950,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":947,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":956,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":945,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":957,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1345,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":763,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1333,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1512,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1583,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1043,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:27",{"_index":1051,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:41",{"_index":1049,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:54",{"_index":1055,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1053,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1334,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1591,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1103,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1176,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1108,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1114,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:14",{"_index":1131,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:25",{"_index":1121,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":1125,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:44",{"_index":1117,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:48",{"_index":1123,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1215,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1242,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1226,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1222,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1233,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1240,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1232,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1235,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1224,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1228,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1230,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":1442,"title":{},"body":{"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1405,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:17",{"_index":1408,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":341,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":348,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":347,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":353,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":346,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":885,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:12",{"_index":887,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:9",{"_index":888,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1390,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1396,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1394,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":825,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1401,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1403,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1400,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1399,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:29",{"_index":832,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:31",{"_index":831,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:33",{"_index":829,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:35",{"_index":830,"title":{},"body":{"classes/ITaskMetadata.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1402,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.option.entity.ts",{"_index":1429,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1449,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":1453,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:7",{"_index":1451,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1425,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1496,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1502,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1499,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/users.controller.ts",{"_index":1603,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/users.controller.ts:11",{"_index":1607,"title":{},"body":{"controllers/UsersController.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1570,"title":{},"body":{"classes/UserEntity.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:13",{"_index":1575,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:16",{"_index":1574,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:19",{"_index":1573,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:4",{"_index":1572,"title":{},"body":{"classes/UserEntity.html":{}}}],["apps/server/src/modules/user/users.module.ts",{"_index":1615,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/server/src/modules/user/users.service.ts",{"_index":1548,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/users.service.ts:14",{"_index":1619,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/server/src/modules/user/users.service.ts:27",{"_index":1618,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/server/src/modules/user/users.service.ts:5",{"_index":1550,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/users.service.ts:7",{"_index":1551,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/modules/user/users.service.ts:9",{"_index":1549,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1347,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:10",{"_index":1349,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1359,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/server.service.ts",{"_index":1386,"title":{},"body":{"injectables/ServerService.html":{},"coverage.html":{}}}],["apps/server/src/server.service.ts:5",{"_index":1387,"title":{},"body":{"injectables/ServerService.html":{}}}],["apps/server/src/shared/$1",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1294,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1302,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1305,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1312,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:10",{"_index":1316,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:13",{"_index":1317,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1315,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/domain/entity",{"_index":3850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":272,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":276,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":275,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":279,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":821,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts",{"_index":282,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["apps/server/src/shared/error/business.error.ts:10",{"_index":295,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:12",{"_index":297,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:14",{"_index":296,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:16",{"_index":294,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:26",{"_index":298,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/error/business.error.ts:34",{"_index":1332,"title":{},"body":{"classes/SampleError.html":{}}}],["apps/server/src/shared/interceptor/duration",{"_index":477,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts",{"_index":1514,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:11",{"_index":1525,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/interceptor/timeout.interceptor.ts:14",{"_index":1523,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/pipe/parse",{"_index":1320,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/interface/pagination.interface.ts",{"_index":1293,"title":{},"body":{"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/transformer/to",{"_index":2887,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/types/counted.ts",{"_index":3846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["arc",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3962,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3769,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["aren't",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["argumentshost",{"_index":640,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":3995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3728,"title":{},"body":{"license.html":{}}}],["around",{"_index":3782,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3642,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3653,"title":{},"body":{"license.html":{}}}],["array",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":558,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3346,"title":{},"body":{"license.html":{}}}],["asking",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3159,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3593,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3295,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3720,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3749,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3540,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["asynchronous",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3756,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3551,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1880,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3523,"title":{},"body":{"license.html":{}}}],["aud",{"_index":791,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":790,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":185,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":531,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.service",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authconfig",{"_index":860,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":865,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":864,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":998,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authenticate('jwt",{"_index":1005,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["authenticate(...strategies",{"_index":3037,"title":{},"body":{"miscellaneous/functions.html":{}}}],["authenticated",{"_index":788,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2282,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authentication/decorator/auth.decorator",{"_index":999,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["authentication/interface/jwt",{"_index":1000,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{}}}],["authentity",{"_index":99,"title":{"classes/AuthEntity.html":{}},"body":{"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authguard",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":107,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3522,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3481,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorization.service",{"_index":183,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1106,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1243,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":173,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":179,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorized",{"_index":3515,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizes",{"_index":3618,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3657,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3529,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":95,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatic",{"_index":1685,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2568,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":3091,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["avoid",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["avoiding",{"_index":3979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["away",{"_index":3136,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2809,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2199,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3277,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1650,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["bad_request",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1327,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1331,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["base64",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":591,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":233,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":281,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":280,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":248,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":354,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":356,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":355,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":357,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3304,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basically",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":1936,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["become",{"_index":3171,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3182,"title":{},"body":{"license.html":{}}}],["before",{"_index":448,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["beforehand",{"_index":3927,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3074,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3324,"title":{},"body":{"license.html":{}}}],["behaviour",{"_index":325,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{}}}],["behind",{"_index":1521,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["being",{"_index":2267,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["believe",{"_index":3651,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3332,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["benefit",{"_index":3165,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3849,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3753,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["better",{"_index":3771,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1649,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["beyond",{"_index":3405,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bob",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":779,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{}}}],["boolean.transformer.ts",{"_index":2888,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":2334,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["branch",{"_index":1823,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3778,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3776,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1576,"title":{},"body":{"classes/UserEntity.html":{}}}],["building",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":3915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["bulk",{"_index":1654,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3789,"title":{},"body":{"todo.html":{}}}],["business",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/SampleError.html":{}}}],["businessexception",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1180,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1187,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1181,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1189,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3115,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2434,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3093,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":482,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["called",{"_index":2583,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["caller",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":487,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2067,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["camelcase",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cant",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2096,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["cares",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3381,"title":{},"body":{"license.html":{}}}],["case",{"_index":525,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cases",{"_index":3181,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["catch",{"_index":633,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":637,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1529,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1533,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1859,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":905,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3555,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":764,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3512,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3566,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1639,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changed",{"_index":896,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1630,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changeme",{"_index":1556,"title":{},"body":{"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{}}}],["changes",{"_index":1632,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1847,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3490,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3148,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1814,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":259,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["checked",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checkentitypermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":732,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{}}}],["checklist",{"_index":3084,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3099,"title":{},"body":{"index.html":{}}}],["checks",{"_index":2506,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkusernotexistbyemail(email",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2575,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["choosing",{"_index":3709,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3330,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3338,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3748,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3608,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3620,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["class/interface",{"_index":1553,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":582,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":845,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2336,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["cleanup",{"_index":2287,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["clear",{"_index":3439,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cli",{"_index":3947,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":1963,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":288,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["clienturl",{"_index":1380,"title":{},"body":{"modules/ServerModule.html":{}}}],["clipboard",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3100,"title":{},"body":{"index.html":{}}}],["close",{"_index":924,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{}}}],["closely",{"_index":3744,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3045,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3819,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":2804,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2196,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":174,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":176,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":177,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":175,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":314,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":315,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":583,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":585,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":584,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":914,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":915,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":916,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1098,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1100,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1099,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1101,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1355,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1357,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_providers",{"_index":1356,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1422,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1423,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1612,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1614,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1613,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2472,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["codes",{"_index":2485,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["coersion",{"_index":744,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":3991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3683,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":358,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":349,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":342,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3693,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1414,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3176,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3388,"title":{},"body":{"license.html":{}}}],["command",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3255,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3474,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2234,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3633,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3098,"title":{},"body":{"index.html":{}}}],["common",{"_index":2944,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3300,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3132,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3397,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3404,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3667,"title":{},"body":{"license.html":{}}}],["compile",{"_index":3904,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["compiler",{"_index":3283,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3083,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":908,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["compliance",{"_index":3589,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3321,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":3940,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1835,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["component(s",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":3996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compose",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3228,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1666,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3699,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["conditioned",{"_index":3661,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3193,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["conditons",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1369,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1738,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configurations",{"_index":3953,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":322,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2562,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":1974,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1668,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2386,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1853,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3577,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3727,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3542,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2052,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":3944,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3368,"title":{},"body":{"license.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["constants",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constitutes",{"_index":3313,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":621,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1314,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1112,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":537,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1622,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(message",{"_index":310,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["constructor(mongod",{"_index":927,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["constructor(newsrepo",{"_index":1221,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":344,"title":{},"body":{"classes/Course.html":{},"classes/TaskResponseDto.html":{}}}],["constructor(payload",{"_index":1571,"title":{},"body":{"classes/UserEntity.html":{}}}],["constructor(private",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":367,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":626,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1498,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":517,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":292,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(usersservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3671,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3456,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1706,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3668,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":3984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3079,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3544,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3630,"title":{},"body":{"license.html":{}}}],["context",{"_index":489,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["continue",{"_index":2048,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3484,"title":{},"body":{"license.html":{}}}],["contract",{"_index":3983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3539,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3677,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3139,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3617,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3619,"title":{},"body":{"license.html":{}}}],["control",{"_index":2701,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3622,"title":{},"body":{"license.html":{}}}],["controller",{"_index":85,"title":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller('auth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('news",{"_index":1006,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1419,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('users",{"_index":1609,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller.ts",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1056,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskOptionsEntry.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1105,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1426,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/users.controller",{"_index":1616,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["convenient",{"_index":3248,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["converted",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3234,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3655,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3491,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3242,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3538,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3131,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3125,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2105,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3194,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3127,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3114,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3203,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3327,"title":{},"body":{"license.html":{}}}],["core",{"_index":321,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1374,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/error/dto/error.response",{"_index":300,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/error/interface",{"_index":299,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["core/logger/logger.module",{"_index":1107,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":497,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":313,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2087,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["correction",{"_index":3722,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2611,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["corresponding",{"_index":3286,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3425,"title":{},"body":{"license.html":{}}}],["count",{"_index":1014,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1133,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1139,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3609,"title":{},"body":{"license.html":{}}}],["counties",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3232,"title":{},"body":{"license.html":{}}}],["country",{"_index":3647,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":3993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":340,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course.entity",{"_index":833,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1461,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":838,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":364,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":826,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["coursenews",{"_index":373,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursenews(props",{"_index":449,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":361,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2881,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1462,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3676,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3743,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3637,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3094,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["coverage",{"_index":2026,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3217,"title":{},"body":{"license.html":{}}}],["cpu",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["create(@currentuser",{"_index":1007,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":964,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1223,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":901,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createdat",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":634,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2844,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2846,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":423,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createnewsparam",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":456,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating",{"_index":460,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":739,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{}}}],["creator",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3260,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":323,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2352,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":719,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":721,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":251,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3569,"title":{},"body":{"license.html":{}}}],["current",{"_index":1456,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":3911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["currentschoolyear",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":966,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1010,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1009,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":527,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["custom_error_type",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3418,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3690,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3422,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":326,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":912,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":3970,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3395,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3725,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2273,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":741,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":2053,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1379,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.provider.ts",{"_index":923,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["database.provider.ts:13",{"_index":933,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database.provider.ts:19",{"_index":931,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database.provider.ts:23",{"_index":935,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database.provider.ts:6",{"_index":929,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["database/mongo",{"_index":922,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["databases",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1457,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponseDto.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1727,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":1873,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_url",{"_index":1368,"title":{},"body":{"modules/ServerModule.html":{}}}],["dbs",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1455,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":803,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":807,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":818,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3066,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3938,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3350,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3707,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4437,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["declare",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3530,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":751,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3038,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":102,"title":{},"body":{"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":3964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3340,"title":{},"body":{"license.html":{}}}],["default",{"_index":273,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1298,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1522,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3719,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3166,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3673,"title":{},"body":{"license.html":{}}}],["define",{"_index":255,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["defines",{"_index":3901,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3197,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delete",{"_index":960,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["delete(':id",{"_index":968,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1225,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1116,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":967,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["deletedid",{"_index":1027,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":1922,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1655,"title":{},"body":{"changelog.html":{}}}],["demands",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3496,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3634,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dependecy",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":109,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dependency",{"_index":3898,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deploy",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":613,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3643,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["describe",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["described",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SampleError.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"index.html":{}}}],["descriptive",{"_index":3985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":3976,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3433,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3130,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designing",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":3974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3697,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1621,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1623,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3056,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2125,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3465,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":3921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3047,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developers",{"_index":3155,"title":{},"body":{"license.html":{}}}],["development",{"_index":2189,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["device",{"_index":1735,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3107,"title":{},"body":{"index.html":{}}}],["di",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1362,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3825,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3696,"title":{},"body":{"license.html":{}}}],["different",{"_index":2498,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3520,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3325,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3440,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3221,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["directory",{"_index":3795,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":443,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3361,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3710,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3517,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":249,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":431,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":453,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3659,"title":{},"body":{"license.html":{}}}],["display",{"_index":3396,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":827,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["displayed",{"_index":3524,"title":{},"body":{"license.html":{}}}],["displays",{"_index":3244,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2508,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":3908,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguishing",{"_index":3700,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3123,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3760,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3662,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3195,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1718,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3812,"title":{},"body":{"todo.html":{}}}],["docu",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":461,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":1992,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documented",{"_index":1634,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1413,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3794,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["domains",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["done",{"_index":3086,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dos",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3467,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3585,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4367,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dto",{"_index":459,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto's",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1064,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.createdat",{"_index":1081,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.creator",{"_index":1076,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1066,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.firstname",{"_index":1594,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1060,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1596,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1339,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["dto.permissions",{"_index":1085,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1074,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1068,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1088,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1070,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1072,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1062,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1090,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1083,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updater",{"_index":1079,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":731,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["due",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":828,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{}}}],["duplicate",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1851,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3417,"title":{},"body":{"license.html":{}}}],["duration",{"_index":480,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":476,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2129,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3464,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3296,"title":{},"body":{"license.html":{}}}],["e",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":252,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["each",{"_index":2101,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["earlier",{"_index":3216,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":614,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3740,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3358,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3341,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3758,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["efforts",{"_index":3602,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3764,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1127,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["eligible",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1115,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{}}}],["em.flush",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["email",{"_index":2294,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3413,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3772,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1207,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["emptyresultquery",{"_index":1193,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":737,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["enabled",{"_index":733,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":747,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enables",{"_index":3236,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3174,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2219,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["end2end",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoints",{"_index":2152,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enforce",{"_index":3635,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3363,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ensures",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3669,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3386,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3685,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UsersService.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/auth.entity",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["entity/user.entity",{"_index":1608,"title":{},"body":{"controllers/UsersController.html":{}}}],["entityid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1113,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["entityname",{"_index":1382,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":980,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":1161,"title":{},"body":{"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["env",{"_index":1647,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3800,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2190,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["environments",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3316,"title":{},"body":{"license.html":{}}}],["err",{"_index":1534,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error(message",{"_index":809,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":513,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":631,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":636,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":581,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":714,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":336,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":316,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":306,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["errorresponse(type",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/SampleError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":442,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":447,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["eslint/restrict",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["essential",{"_index":3279,"title":{},"body":{"license.html":{}}}],["establish",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2760,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2614,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2372,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1660,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3121,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2089,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["everywhere",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3215,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":1566,"title":{},"body":{"classes/UserDTO.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exceeds",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2090,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":507,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":760,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":632,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exchangeable",{"_index":3982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exclude",{"_index":1169,"title":{},"body":{"classes/NewsResponse.html":{}}}],["excluded",{"_index":3454,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1909,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2306,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3627,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3319,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3678,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3272,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2593,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["execute/rollback",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1949,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["executes",{"_index":3912,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3227,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1516,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["executioncontext",{"_index":486,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exercise",{"_index":3603,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3359,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1541,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2235,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":793,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expected",{"_index":3472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expects",{"_index":2332,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":792,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["explicit",{"_index":616,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["explicitly",{"_index":3310,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2339,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":1170,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":611,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3712,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3550,"title":{},"body":{"license.html":{}}}],["extend",{"_index":734,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3658,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3041,"title":{},"body":{"miscellaneous/functions.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3400,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3247,"title":{},"body":{"license.html":{}}}],["external",{"_index":1899,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["externalauthconfig",{"_index":858,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":757,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3536,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":1153,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2171,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitating",{"_index":3691,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3320,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1861,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":1905,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failure",{"_index":3735,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3315,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":3459,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3078,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3213,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["favicon",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3469,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":184,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":182,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":180,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":578,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":612,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":178,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":598,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":603,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":538,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":618,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1679,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3077,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3943,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3379,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3957,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1624,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":363,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3791,"title":{},"body":{"todo.html":{}}}],["figure",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":3931,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1720,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":508,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1030,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{}}}],["filter.query.ts:11",{"_index":1034,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:16",{"_index":1032,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:22",{"_index":1036,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1214,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":512,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1183,"title":{},"body":{"classes/NewsScope.html":{}}}],["final",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3561,"title":{},"body":{"license.html":{}}}],["find",{"_index":601,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":602,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":961,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{}}}],["findall(@currentuser",{"_index":1420,"title":{},"body":{"controllers/TaskController.html":{}}}],["findall(currentuser",{"_index":971,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1118,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1216,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1227,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1450,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1452,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1497,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1500,"title":{},"body":{"injectables/TaskUC.html":{}}}],["finding",{"_index":776,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1109,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1122,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":773,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":962,"title":{},"body":{"controllers/NewsController.html":{},"injectables/UsersService.html":{}}}],["findone(newsid",{"_index":976,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(username",{"_index":1560,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["findoneandupdate",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1110,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1124,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1217,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1229,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1381,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1976,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["firstname",{"_index":1584,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3715,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1737,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1641,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["fixtures",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["flag",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["flow",{"_index":3301,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1741,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["folder",{"_index":1508,"title":{},"body":{"injectables/TaskUC.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":3933,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2691,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1821,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":3950,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3357,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbidnonwhitelisted",{"_index":754,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2168,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["form",{"_index":2720,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":521,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["formats",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2394,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3408,"title":{},"body":{"license.html":{}}}],["forwarding",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1385,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3118,"title":{},"body":{"license.html":{}}}],["framework",{"_index":3966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3116,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3137,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1651,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3344,"title":{},"body":{"license.html":{}}}],["full",{"_index":1740,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functional",{"_index":324,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["functioning",{"_index":3485,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3032,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["further",{"_index":3436,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":3948,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1750,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2202,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["generalerror",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3293,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2098,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["generated",{"_index":3942,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":977,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1407,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('profile",{"_index":1606,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(id",{"_index":607,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getentitypermissions(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":1348,"title":{},"body":{"controllers/ServerController.html":{},"injectables/ServerService.html":{}}}],["getnewspermissions",{"_index":1218,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1231,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":208,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedschools",{"_index":532,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":533,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getprofile",{"_index":1604,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@currentuser",{"_index":1610,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(user",{"_index":1605,"title":{},"body":{"controllers/UsersController.html":{}}}],["getquery",{"_index":1191,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1219,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1234,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["getservice",{"_index":625,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":622,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1220,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1238,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getting",{"_index":1628,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["geturi",{"_index":925,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["geturi(otherdbname",{"_index":932,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["getuser",{"_index":534,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":535,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusertargetpermissions",{"_index":536,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3101,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":3376,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1517,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["gives",{"_index":587,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["giving",{"_index":3382,"title":{},"body":{"license.html":{}}}],["global",{"_index":331,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalerrorfilter",{"_index":511,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":723,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":841,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["globals",{"_index":2207,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":726,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3110,"title":{},"body":{"license.html":{}}}],["go",{"_index":3063,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3096,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["goals",{"_index":3187,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3509,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3188,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3531,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3305,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3580,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3779,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3435,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3752,"title":{},"body":{"license.html":{}}}],["group",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["grouping",{"_index":1870,"title":{},"body":{"changelog.html":{}}}],["gt",{"_index":1211,"title":{},"body":{"classes/NewsScope.html":{}}}],["guarantee",{"_index":1021,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guess",{"_index":1559,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["guest",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guidelines",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1539,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1460,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2391,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handling",{"_index":327,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":3994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hard",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3318,"title":{},"body":{"license.html":{}}}],["header",{"_index":861,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["headers",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3173,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hello",{"_index":1388,"title":{},"body":{"injectables/ServerService.html":{}}}],["helparea",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":2228,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":257,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3624,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":886,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":3981,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":3990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":1510,"title":{},"body":{"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["hints",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["history.git",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3557,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3516,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1459,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1391,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1393,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":836,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1468,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2094,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2275,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hope",{"_index":3761,"title":{},"body":{"license.html":{}}}],["host",{"_index":639,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":720,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3442,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3813,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3460,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2194,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["http://fsf.org",{"_index":3120,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3050,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3763,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":291,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/SampleError.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/mikro",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3818,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":3959,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":3960,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":3958,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://vuejs.org",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":301,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/SampleError.html":{}}}],["httpstatus.not_implemented",{"_index":312,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["hub",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":794,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":762,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":780,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1322,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:6",{"_index":1324,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3649,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":520,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identity",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":293,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/SampleError.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2470,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":801,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":596,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":895,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":308,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["implementations",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implemented",{"_index":2200,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":498,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3672,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["important",{"_index":619,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["importer",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3615,"title":{},"body":{"license.html":{}}}],["imports",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["impose",{"_index":3541,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3675,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1206,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3167,"title":{},"body":{"license.html":{}}}],["in/out",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3729,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3732,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3119,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3726,"title":{},"body":{"license.html":{}}}],["include",{"_index":247,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3274,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3231,"title":{},"body":{"license.html":{}}}],["including",{"_index":2272,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusion",{"_index":3407,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":740,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3172,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3692,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3463,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1782,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3537,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3398,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independently",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3788,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1691,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3583,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3548,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1875,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["individuals",{"_index":3209,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3475,"title":{},"body":{"license.html":{}}}],["inewsproperties",{"_index":424,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":777,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":426,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":366,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1586,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":369,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1058,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1335,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1337,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1172,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1342,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:11",{"_index":1601,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:5",{"_index":1600,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:6",{"_index":1343,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1599,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:9",{"_index":1344,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["inform",{"_index":3447,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":528,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3581,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3612,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3224,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":250,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1674,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["initialized",{"_index":902,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["initializes",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3606,"title":{},"body":{"license.html":{}}}],["inject",{"_index":610,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["injectable",{"_index":143,"title":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ServerService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injected",{"_index":592,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":898,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["injections",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":844,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":289,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["install",{"_index":3288,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3479,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3494,"title":{},"body":{"license.html":{}}}],["instance",{"_index":738,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["instead",{"_index":1874,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["instructions",{"_index":3057,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3371,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1730,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intended",{"_index":3140,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3362,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3766,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3687,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3239,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3243,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":484,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":485,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":479,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":339,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":317,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3419,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3599,"title":{},"body":{"license.html":{}}}],["interface",{"_index":430,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":579,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3486,"title":{},"body":{"license.html":{}}}],["internal",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3739,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3285,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3299,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":593,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2686,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2649,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3897,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3783,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3393,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":820,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1363,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3307,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1037,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":472,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["iserv",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1038,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(['schools",{"_index":1042,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1306,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(0)@apiproperty({description",{"_index":1303,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@isoptional()@apiproperty({description",{"_index":1433,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(1)@max(100)@apiproperty({description",{"_index":1296,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@isoptional()@apiproperty({description",{"_index":1431,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["isint()@min(2015)@max(2030)@isoptional()@apiproperty({description",{"_index":1435,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["ismongoid",{"_index":1039,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ismongoid()@isoptional()@apipropertyoptional",{"_index":1031,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["isoptional",{"_index":473,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/TaskQueryDto.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@toboolean()@apiproperty",{"_index":1035,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1268,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":796,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":474,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@isoptional()@apiproperty",{"_index":468,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@isoptional()@apipropertyoptional",{"_index":466,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@isoptional()@isin(undefined)@apiproperty",{"_index":1033,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["issue",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":795,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2049,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":913,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["itaskmetadata",{"_index":824,"title":{"classes/ITaskMetadata.html":{}},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["itaskoption",{"_index":1441,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["item",{"_index":3258,"title":{},"body":{"license.html":{}}}],["items",{"_index":1713,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3497,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":775,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3808,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest/utils",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3071,"title":{},"body":{"index.html":{}}}],["job",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2584,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":1555,"title":{},"body":{"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{}}}],["join",{"_index":1960,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2936,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json",{"_index":2167,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":797,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwt",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_module_options",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":851,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":130,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":881,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":857,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtoptionsprovider",{"_index":2864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":789,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtservice",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":120,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1635,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":3909,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3280,"title":{},"body":{"license.html":{}}}],["key",{"_index":1275,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keys",{"_index":3482,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3235,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3128,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3154,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3639,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3646,"title":{},"body":{"license.html":{}}}],["known",{"_index":1932,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["knows",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3081,"title":{},"body":{"index.html":{}}}],["language",{"_index":2504,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3401,"title":{},"body":{"license.html":{}}}],["last",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1585,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3703,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":3952,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3226,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3200,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3610,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["layered",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":3988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3787,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ldap",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["ldap/:id",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2451,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3768,"title":{},"body":{"license.html":{}}}],["lean",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":3832,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1515,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":589,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3822,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3161,"title":{},"body":{"license.html":{}}}],["legend",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["lern",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2749,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":834,"title":{"classes/Lesson.html":{}},"body":{"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":835,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":839,"title":{},"body":{"classes/ITaskMetadata.html":{},"classes/Task.html":{}}}],["lessonmodel",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":889,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1464,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3178,"title":{},"body":{"license.html":{}}}],["level",{"_index":1509,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["liability",{"_index":3519,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3223,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3271,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3455,"title":{},"body":{"license.html":{},"todo.html":{}}}],["license",{"_index":3109,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3204,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3205,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3207,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3134,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3584,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3528,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3578,"title":{},"body":{"license.html":{}}}],["limit",{"_index":822,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3723,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3713,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3518,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":445,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["link",{"_index":1837,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3297,"title":{},"body":{"license.html":{}}}],["links",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3809,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":207,"title":{},"body":{"injectables/AuthorizationService.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":368,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3607,"title":{},"body":{"license.html":{}}}],["living",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3798,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loadind",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1731,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3048,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2230,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1791,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":804,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":812,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3810,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":483,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":635,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":491,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":716,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":713,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":892,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":918,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":337,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":318,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["loggerservice",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":329,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":478,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":492,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":488,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2223,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["logic/rules",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["login(user",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuseruc",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3785,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3082,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2507,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3730,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3733,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":3992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1212,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3410,"title":{},"body":{"license.html":{}}}],["made",{"_index":3168,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2460,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mainly",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2411,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2327,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2595,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3276,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2076,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3335,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["making",{"_index":1542,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["manage",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["managed",{"_index":1842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["managing",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3790,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3625,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1682,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2126,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":359,"title":{},"body":{"classes/Course.html":{},"classes/Lesson.html":{}}}],["manytomany({fieldname",{"_index":350,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1868,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1044,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1048,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1045,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1050,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedtasks",{"_index":1475,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["mapper",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper.ts",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1003,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapping",{"_index":4035,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1046,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1052,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1336,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1592,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1047,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1054,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3670,"title":{},"body":{"license.html":{}}}],["maria",{"_index":1558,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["marked",{"_index":3526,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3535,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3202,"title":{},"body":{"license.html":{}}}],["master",{"_index":2046,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":529,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3322,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3498,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1664,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1671,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1307,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["max(100",{"_index":1311,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["max(2030",{"_index":1448,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["maximum",{"_index":1300,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["maybe",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3815,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3543,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3104,"title":{},"body":{"index.html":{}}}],["means",{"_index":3199,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3343,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3354,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3367,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3380,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3259,"title":{},"body":{"license.html":{}}}],["member",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":921,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["menu",{"_index":3256,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3714,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3238,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3108,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3595,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/SampleError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1672,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1676,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3309,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":2998,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["method",{"_index":615,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2145,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2446,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2714,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1846,"title":{},"body":{"changelog.html":{}}}],["migrations",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["mikro",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":3786,"title":{},"body":{"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3807,"title":{},"body":{"todo.html":{}}}],["mikroormmodule",{"_index":1360,"title":{},"body":{"modules/ServerModule.html":{}}}],["mikroormmodule.forroot",{"_index":1377,"title":{},"body":{"modules/ServerModule.html":{}}}],["min",{"_index":1308,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(0",{"_index":1309,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(1",{"_index":1310,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{}}}],["min(2015",{"_index":1447,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["minimizes",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1299,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["minio",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3031,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3525,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1485,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1205,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2237,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":2596,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":1284,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1280,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3196,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3262,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2735,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3385,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3163,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3229,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":3900,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":106,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["module.ts",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/repo",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":108,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/authentication/auth.module",{"_index":1364,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1371,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1375,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1376,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1365,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1373,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1370,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/users.module",{"_index":1367,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":942,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":930,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"index.html":{}}}],["mongodb",{"_index":936,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabaseprovider",{"_index":919,"title":{"injectables/MongoMemoryDatabaseProvider.html":{}},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"coverage.html":{}}}],["mongomemoryserver",{"_index":928,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["mongoose",{"_index":1328,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1772,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["moreover",{"_index":3567,"title":{},"body":{"license.html":{}}}],["mounted",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["move",{"_index":1507,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":1518,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["msg",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2551,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":758,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["named",{"_index":3102,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["names",{"_index":983,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["naming",{"_index":3830,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["nanoid",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3399,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1474,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2439,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3054,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3287,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1458,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nest",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["nest/legacy",{"_index":3821,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":3903,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":3910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:dev:serve",{"_index":3941,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":3914,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":3929,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":3902,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":3917,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":3922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":3919,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":3925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":3935,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":3937,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest:test:watch",{"_index":3934,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2643,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":493,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["nestjs",{"_index":509,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":3949,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":510,"title":{},"body":{"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":105,"title":{},"body":{"classes/AuthEntity.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/UpdateNewsParams.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestlogger",{"_index":891,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3133,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newly",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":375,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news.content",{"_index":1065,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1082,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1252,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1067,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1061,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":458,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["news.params.ts:10",{"_index":470,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:12",{"_index":1547,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:14",{"_index":463,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:17",{"_index":1544,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:18",{"_index":465,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:22",{"_index":1546,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:23",{"_index":469,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":467,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1086,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1069,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1272,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1071,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1073,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1063,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":427,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1084,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1078,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/Submission.html":{}}}],["news:10",{"_index":422,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":417,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":419,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":418,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":420,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":414,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":412,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":416,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":421,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":425,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1277,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_create",{"_index":1251,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1246,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["news_sources",{"_index":1162,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1174,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1245,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["newscontroller",{"_index":958,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1259,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":972,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":970,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1013,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1265,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1262,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1002,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1011,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1012,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1026,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1097,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1102,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{}}}],["newsresponse",{"_index":1001,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1135,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstarget",{"_index":765,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1119,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":441,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":450,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":996,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1270,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1257,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":444,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next.handle().pipe",{"_index":1531,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1473,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2823,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3046,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2188,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3429,"title":{},"body":{"license.html":{}}}],["none",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1287,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":1930,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3458,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":246,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["notfound",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":1383,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3579,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3250,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3246,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3568,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3564,"title":{},"body":{"license.html":{}}}],["notimplementedexception",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["notwithstanding",{"_index":3513,"title":{},"body":{"license.html":{}}}],["november",{"_index":3112,"title":{},"body":{"license.html":{}}}],["now",{"_index":500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3064,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3702,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2284,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3052,"title":{},"body":{"index.html":{}}}],["o",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2255,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":1995,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1143,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1321,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["object.assign(this",{"_index":362,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TaskResponseDto.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1276,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":1282,"title":{},"body":{"injectables/NewsUc.html":{}}}],["objectid",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["objects",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["obligate",{"_index":3682,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3444,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3345,"title":{},"body":{"license.html":{}}}],["observable",{"_index":490,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3428,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3576,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2059,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["offer",{"_index":3160,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3449,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3432,"title":{},"body":{"license.html":{}}}],["official",{"_index":3264,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1815,"title":{},"body":{"changelog.html":{}}}],["ok",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["old",{"_index":1893,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1504,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["onapplicationshutdown",{"_index":926,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["once",{"_index":3971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1266,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onload",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["onto",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":2270,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":3923,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3736,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3437,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3281,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2791,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2075,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3183,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3689,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1677,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1501,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1378,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["options.provider.ts",{"_index":2863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1955,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ordering",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3591,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3210,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":3973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":1959,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2738,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":3793,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.io",{"_index":3961,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/mikro",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1361,"title":{},"body":{"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3062,"title":{},"body":{"index.html":{}}}],["otherdbname",{"_index":934,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["others",{"_index":753,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["otherwise",{"_index":1436,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["outgoing",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2396,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3328,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["over",{"_index":2409,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overhead",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2353,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["overrides",{"_index":506,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":330,"title":{},"body":{"modules/CoreModule.html":{}}}],["overview",{"_index":3780,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["owned",{"_index":3621,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2389,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3391,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3275,"title":{},"body":{"license.html":{}}}],["page",{"_index":1297,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1304,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{}}}],["paginate",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":973,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pagination.query",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationmodel",{"_index":1120,"title":{"interfaces/PaginationModel.html":{}},"body":{"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["paginationquery",{"_index":974,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":994,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"coverage.html":{}}}],["paginationresponse(dtolist",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{}}}],["paging",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3765,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3554,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3631,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1809,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["param",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1023,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["params",{"_index":605,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.body",{"_index":1093,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1094,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1249,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1096,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1095,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1092,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2106,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2314,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":991,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3212,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["partial",{"_index":345,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1538,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3268,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3237,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3302,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party",{"_index":3438,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3597,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":749,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1415,"title":{},"body":{"controllers/TaskController.html":{}}}],["passport",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":989,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":987,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3553,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3616,"title":{},"body":{"license.html":{}}}],["path",{"_index":629,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["path's",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["pattern",{"_index":1175,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["payload",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/UserEntity.html":{},"controllers/UsersController.html":{},"changelog.html":{}}}],["payload.roles",{"_index":1582,"title":{},"body":{"classes/UserEntity.html":{}}}],["payload.schoolid",{"_index":1580,"title":{},"body":{"classes/UserEntity.html":{}}}],["payload.ts",{"_index":782,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":1578,"title":{},"body":{"classes/UserEntity.html":{}}}],["payment",{"_index":3663,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3445,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3448,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3097,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["performance",{"_index":1783,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3294,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3563,"title":{},"body":{"license.html":{}}}],["permission",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["permissions.every((p",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1291,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3373,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3406,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3177,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3122,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3489,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2158,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2666,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1710,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["personal",{"_index":1667,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3680,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3414,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3426,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3152,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1696,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":729,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1626,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1326,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3434,"title":{},"body":{"license.html":{}}}],["placed",{"_index":3939,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["plain",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plus",{"_index":3601,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":3759,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2660,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2121,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2457,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":984,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3452,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3423,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3389,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3738,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2077,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["post",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["potential",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3802,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3356,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3069,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3135,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3636,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices/layers/orm",{"_index":3806,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3126,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3192,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["predecessor",{"_index":3598,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["preferred",{"_index":3261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/UsersController.html":{}}}],["preload",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":906,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2229,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["presentation",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3254,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3521,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2265,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3147,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3665,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["principles",{"_index":3972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3565,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2728,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["problems",{"_index":2016,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3060,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3480,"title":{},"body":{"license.html":{}}}],["process",{"_index":2441,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processed",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3654,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3284,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3415,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2006,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3666,"title":{},"body":{"license.html":{}}}],["program",{"_index":3142,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3366,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3773,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3269,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3153,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3751,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3326,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3352,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3660,"title":{},"body":{"license.html":{}}}],["project",{"_index":1633,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2144,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3257,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3249,"title":{},"body":{"license.html":{}}}],["promise",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise.all",{"_index":1261,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promisify",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3219,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3582,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3230,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":277,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3044,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":370,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":435,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":439,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":437,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1588,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1590,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":372,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":438,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":440,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":433,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3156,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":937,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3336,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3378,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":3965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3502,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3718,"title":{},"body":{"license.html":{}}}],["provide",{"_index":514,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":910,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["providers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["provides",{"_index":904,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["providing",{"_index":328,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3514,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3559,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3706,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3708,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1350,"title":{},"body":{"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3527,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3185,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3370,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1236,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":2232,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3291,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3461,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3652,"title":{},"body":{"license.html":{}}}],["put",{"_index":768,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["putting",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2209,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3572,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3717,"title":{},"body":{"license.html":{}}}],["queries",{"_index":1199,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1203,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":570,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.dto.ts",{"_index":1443,"title":{},"body":{"classes/TaskQueryDto.html":{},"coverage.html":{}}}],["query.dto.ts:10",{"_index":1446,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.dto.ts:16",{"_index":1445,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.dto.ts:23",{"_index":1444,"title":{},"body":{"classes/TaskQueryDto.html":{}}}],["query.targetid",{"_index":1089,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1087,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1091,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["querys",{"_index":1417,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["read",{"_index":981,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["readable",{"_index":3411,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3641,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3505,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"classes/SampleError.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":1552,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["reason",{"_index":3650,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3424,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3570,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3150,"title":{},"body":{"license.html":{}}}],["received",{"_index":3394,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receives",{"_index":3586,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3656,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3488,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3648,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3208,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3265,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":617,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3755,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1753,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2131,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":3980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["refactorings",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":411,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":413,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["references",{"_index":2696,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3146,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3198,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2997,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3684,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3510,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3390,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3303,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2307,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1692,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["reinstated",{"_index":3558,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":2399,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2020,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3329,"title":{},"body":{"license.html":{}}}],["release",{"_index":1687,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":3189,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3179,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3383,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3190,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3814,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3640,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3443,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3144,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3686,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3688,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3511,"title":{},"body":{"license.html":{}}}],["remove",{"_index":752,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3731,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1997,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1892,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1929,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["replaces",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["repo",{"_index":2217,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo.ts",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1244,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1104,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1427,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["reported",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":3936,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["repositories",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["repository",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["represent",{"_index":3477,"title":{},"body":{"license.html":{}}}],["representing",{"_index":1554,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["req.user",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["reqlib",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UsersController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request/response",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["requested",{"_index":1384,"title":{},"body":{"modules/ServerModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":848,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1526,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":1931,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":859,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('./tsconfig.json",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":756,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1269,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3384,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3051,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["requires",{"_index":745,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3214,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3468,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1126,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["respect",{"_index":3360,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3826,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/TaskController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["response.dto.ts",{"_index":1486,"title":{},"body":{"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":1494,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:15",{"_index":1492,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:18",{"_index":1490,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:21",{"_index":1491,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:24",{"_index":1493,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.dto.ts:6",{"_index":1489,"title":{},"body":{"classes/TaskResponseDto.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":725,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3588,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1675,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":3906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3827,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":481,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["restart",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1273,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3353,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3545,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2654,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3175,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3492,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":979,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["returned",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1487,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"injectables/ServerService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reusability",{"_index":3978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3085,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3742,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3694,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2820,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3157,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3716,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2346,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":787,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":784,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"classes/UserEntity.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rollback",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3495,"title":{},"body":{"license.html":{}}}],["room",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":256,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["route",{"_index":564,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1743,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["routes.test.js",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3605,"title":{},"body":{"license.html":{}}}],["rss",{"_index":407,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1897,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1689,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["running",{"_index":1520,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3282,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":494,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":496,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3757,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3614,"title":{},"body":{"license.html":{}}}],["same",{"_index":2331,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":307,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sample_error",{"_index":311,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["sampleerror",{"_index":309,"title":{"classes/SampleError.html":{}},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"coverage.html":{}}}],["samples",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleucmethod(params",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1935,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3796,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1111,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{}}}],["save(news",{"_index":1130,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3441,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1644,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2625,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1693,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["school",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UserEntity.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schoolids",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":403,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1338,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1340,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1057,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1075,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1157,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":454,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":452,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":766,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["schul",{"_index":2195,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":2176,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":609,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1137,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1138,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":620,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1283,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":893,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1177,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:14",{"_index":1188,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:29",{"_index":1190,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:35",{"_index":1186,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1184,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1192,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1279,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1256,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":565,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":982,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3289,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1749,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["searchable",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3222,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3164,"title":{},"body":{"license.html":{}}}],["secret",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3334,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3409,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1642,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":3817,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3801,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2833,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3629,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3613,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3201,"title":{},"body":{"license.html":{}}}],["send",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":524,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["sentry",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["sentry/node",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3451,"title":{},"body":{"license.html":{}}}],["separate",{"_index":900,"title":{},"body":{"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3076,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2102,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":3977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["serialization",{"_index":3792,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2204,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3049,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":894,"title":{},"body":{"injectables/Logger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1366,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.service",{"_index":1352,"title":{},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3820,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1346,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1354,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["servers",{"_index":2747,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serverservice",{"_index":1351,"title":{"injectables/ServerService.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"coverage.html":{},"overview.html":{}}}],["serves",{"_index":3278,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":560,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["service.find",{"_index":568,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.get",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":563,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":600,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":608,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":604,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":627,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":628,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":590,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["servicing",{"_index":3721,"title":{},"body":{"license.html":{}}}],["session",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":846,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":911,"title":{},"body":{"injectables/Logger.html":{}}}],["sets",{"_index":2135,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["setting",{"_index":3040,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settings",{"_index":2321,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["setup",{"_index":730,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shall",{"_index":3339,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3138,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":769,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/controller",{"_index":993,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":995,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/core",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/error/api",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{}}}],["shared/error/business.error",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["shared/interceptor/timeout.interceptor",{"_index":850,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["shared/pipe",{"_index":992,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/pipes",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1194,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/repo/interface/pagination.interface",{"_index":1132,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/transformer",{"_index":1041,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/types",{"_index":1134,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["shared/utils",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":1966,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3774,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3478,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":3061,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplicity",{"_index":3834,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simultaneously",{"_index":3679,"title":{},"body":{"license.html":{}}}],["single",{"_index":759,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":823,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":755,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"changelog.html":{}}}],["slash",{"_index":3824,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2800,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3117,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sold",{"_index":3462,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3317,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3331,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3770,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sorted",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1843,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/AuthController.html":{},"classes/AuthEntity.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3920,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1159,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":3989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3421,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3145,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3042,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spec.ts",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3503,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifically",{"_index":3129,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2147,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3267,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3701,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3705,"title":{},"body":{"license.html":{}}}],["speed",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3695,"title":{},"body":{"license.html":{}}}],["split",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stabilisation",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":3986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1688,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3263,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3266,"title":{},"body":{"license.html":{}}}],["start",{"_index":3065,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1629,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":3918,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2342,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2247,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stated",{"_index":3308,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3547,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2834,"title":{},"body":{"coverage.html":{},"additional-documentation/nestjs-application.html":{}}}],["states",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":3928,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3372,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1495,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{},"license.html":{}}}],["stay",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3158,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["still",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1519,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stopping",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":1912,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1712,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["strategies",{"_index":3043,"title":{},"body":{"miscellaneous/functions.html":{}}}],["strategy",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["strategy/jwt.strategy",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":3975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/ServerService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponseDto.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":907,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["strip",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":594,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["structured",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["structures",{"_index":909,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1392,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["student_create",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1395,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":343,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3068,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3106,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":798,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3594,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3587,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3626,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3333,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1372,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1470,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1398,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1466,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1469,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3298,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3430,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3473,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3592,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["succesful",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2555,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3180,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sue",{"_index":3638,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3483,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3833,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3784,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/ITaskMetadata.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["supplement",{"_index":3506,"title":{},"body":{"license.html":{}}}],["support",{"_index":2185,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3899,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2736,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3143,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3674,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3546,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3734,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3777,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1412,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["symmetric",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1274,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2122,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["system/school",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2690,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":638,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["t[keyof",{"_index":772,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["tab",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1831,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":360,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2890,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3058,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2095,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["taking",{"_index":3039,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tangible",{"_index":3457,"title":{},"body":{"license.html":{}}}],["tap",{"_index":495,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.targetids",{"_index":1202,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1289,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1200,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1201,"title":{},"body":{"classes/NewsScope.html":{}}}],["targetid",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetmodel",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["targetmodels",{"_index":1239,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1285,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":562,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":567,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["targets.filter((target",{"_index":1288,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":837,"title":{"classes/Task.html":{}},"body":{"classes/ITaskMetadata.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task._id",{"_index":1478,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.course?.color",{"_index":1482,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.course?.name",{"_index":1481,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.createdat",{"_index":1483,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.duedate",{"_index":1480,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.entity",{"_index":1397,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1477,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.name",{"_index":1479,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["task.updatedat",{"_index":1484,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskcontroller",{"_index":1404,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmodel",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1358,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskoptionsentry",{"_index":1428,"title":{"classes/TaskOptionsEntry.html":{}},"body":{"classes/TaskOptionsEntry.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["taskquerydto",{"_index":1406,"title":{"classes/TaskQueryDto.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"coverage.html":{}}}],["taskquerydto:10",{"_index":1440,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskquerydto:16",{"_index":1434,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskquerydto:23",{"_index":1432,"title":{},"body":{"classes/TaskOptionsEntry.html":{}}}],["taskrepo",{"_index":1424,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponsedto",{"_index":1411,"title":{"classes/TaskResponseDto.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskResponseDto.html":{},"coverage.html":{}}}],["tasks",{"_index":1503,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taskschema",{"_index":2884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskuc",{"_index":1409,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2832,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":429,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":428,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":455,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":451,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":767,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tech",{"_index":3956,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3342,"title":{},"body":{"license.html":{}}}],["technology",{"_index":3967,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":3945,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["tells",{"_index":3251,"title":{},"body":{"license.html":{}}}],["template",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3306,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3552,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3571,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3562,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3549,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2100,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test/...*.e2e",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3089,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tested",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testenvironment",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":3087,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["testpathignorepatterns",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":253,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1834,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":254,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3184,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["things",{"_index":2400,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["third",{"_index":3365,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1197,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1195,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1213,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1198,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery",{"_index":1210,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1208,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1209,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1271,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1250,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1290,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1286,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.close",{"_index":944,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.code",{"_index":302,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.content",{"_index":434,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":724,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1318,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":436,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find",{"_index":1472,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(course",{"_index":1463,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1465,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1467,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1144,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1141,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1136,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1145,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1142,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":561,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":566,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1140,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1587,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1263,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1258,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1281,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.lastname",{"_index":1589,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.logger.log(`create",{"_index":1248,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1254,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`resolve",{"_index":941,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.logger.log(`return",{"_index":1264,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1255,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(mongomemorydatabaseprovider.name",{"_index":938,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1247,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":305,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.mongod.geturi(otherdbname",{"_index":940,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.mongod.stop",{"_index":943,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{}}}],["this.name",{"_index":371,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1278,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1260,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1267,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1253,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1008,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1028,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1015,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1024,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1025,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.request.app",{"_index":623,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.roles",{"_index":1581,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.schoolid",{"_index":1579,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.serverservice.gethello",{"_index":1353,"title":{},"body":{"controllers/ServerController.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1511,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1421,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":304,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1319,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":303,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userid",{"_index":1577,"title":{},"body":{"classes/UserEntity.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.users.find((user",{"_index":1561,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.usersservice.findone(username",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validationerrors",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2810,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3508,"title":{},"body":{"license.html":{}}}],["thr",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2543,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["through",{"_index":3240,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1527,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1536,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1535,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3323,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3070,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3072,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":2159,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":847,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(timeoutinterceptor.defaulttimeout",{"_index":1532,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1528,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":849,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutms",{"_index":1530,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2544,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tiny",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SampleError.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toboolean",{"_index":1040,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["todo",{"_index":258,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/NewsFilterQuery.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/UserEntity.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["toggle",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1658,"title":{},"body":{"changelog.html":{}}}],["tools",{"_index":3292,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1313,"title":{},"body":{"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{}}}],["trace",{"_index":810,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3533,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3532,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3534,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2083,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3241,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3487,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3590,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":742,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1323,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":746,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":1171,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"dependencies.html":{}}}],["transformoptions",{"_index":743,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":897,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3446,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1725,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3507,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3348,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2774,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":432,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["try",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3799,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2698,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typ",{"_index":862,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/AuthEntity.html":{},"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ITaskMetadata.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SampleError.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskOptionsEntry.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponseDto.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"classes/UserEntity.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["type.interface.ts",{"_index":800,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3836,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1173,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":770,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.objectid",{"_index":1325,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.objectid.isvalid(value",{"_index":1330,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["types.ts",{"_index":2848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1022,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":446,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3470,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":595,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":3803,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc.ts",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":997,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1410,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":3017,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":519,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":278,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3191,"title":{},"body":{"license.html":{}}}],["understand",{"_index":3969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unhandled",{"_index":718,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":523,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{}}}],["unit",{"_index":2025,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3092,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3476,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3312,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3218,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2794,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3504,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":778,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1643,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3560,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1865,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["update",{"_index":963,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1241,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":985,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":2010,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["updatedat",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":986,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":415,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2785,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":774,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1128,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":522,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":939,"title":{},"body":{"injectables/MongoMemoryDatabaseProvider.html":{},"dependencies.html":{}}}],["url",{"_index":2319,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2357,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":260,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":515,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1437,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["useful",{"_index":3762,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ServerController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":155,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user(props",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["user.password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":559,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.equals(schoolid",{"_index":557,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.schoolid.tostring",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.test.js",{"_index":3090,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.username",{"_index":1562,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["user/class",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/users.module",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["user/users.service",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_already_exists",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userdto",{"_index":1563,"title":{"classes/UserDTO.html":{}},"body":{"classes/UserDTO.html":{},"coverage.html":{}}}],["userentity",{"_index":1569,"title":{"classes/UserEntity.html":{}},"body":{"classes/UserEntity.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userentity(user",{"_index":1611,"title":{},"body":{"controllers/UsersController.html":{}}}],["userid",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"classes/UserEntity.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["userid.tostring",{"_index":569,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":351,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":352,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1595,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1593,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1597,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1059,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1077,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1080,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1149,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserDTO.html":{},"injectables/UsersService.html":{},"changelog.html":{}}}],["userrepo",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":786,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"classes/UserInfo.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["users.service",{"_index":1617,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/admin",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["userscontroller",{"_index":1602,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["usersmodule",{"_index":119,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":150,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstasks",{"_index":1471,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["userstasks.map((task",{"_index":1476,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2618,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["usevalue",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["using",{"_index":597,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usually",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["util",{"_index":2358,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utils",{"_index":2324,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2771,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v2",{"_index":1656,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3823,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3828,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":750,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":843,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["validateuser",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1627,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":728,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":736,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":338,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":319,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":735,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":475,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/TaskQueryDto.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1329,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":274,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/ITaskMetadata.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UsersService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":771,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["variable",{"_index":2683,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1648,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3124,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":805,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":814,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":819,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verify",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["verison",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1828,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3141,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["via",{"_index":1488,"title":{},"body":{"classes/TaskResponseDto.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1237,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3501,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3556,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3805,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3067,"title":{},"body":{"index.html":{}}}],["void",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3402,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1891,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3831,"title":{},"body":{"todo.html":{}}}],["vscode",{"_index":3954,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3829,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":3955,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3026,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3355,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3747,"title":{},"body":{"license.html":{}}}],["want",{"_index":3151,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["want's",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":806,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":816,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1454,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3253,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3252,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3811,"title":{},"body":{"todo.html":{}}}],["way",{"_index":3392,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3412,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3767,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1506,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3055,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["whatever",{"_index":3596,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":899,"title":{},"body":{"injectables/Logger.html":{}}}],["whether",{"_index":3466,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":748,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["whose",{"_index":3453,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3270,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["widespread",{"_index":3170,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2377,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2827,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2289,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3080,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3347,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3095,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3149,"title":{},"body":{"license.html":{}}}],["within",{"_index":287,"title":{},"body":{"classes/BusinessError.html":{},"classes/SampleError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["without",{"_index":2213,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3075,"title":{},"body":{"index.html":{}}}],["work",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3290,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2729,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["works",{"_index":2826,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["world",{"_index":1389,"title":{},"body":{"injectables/ServerService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3628,"title":{},"body":{"license.html":{}}}],["wraps",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writeerrorlog",{"_index":715,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":722,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":717,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3059,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":1430,"title":{},"body":{"classes/TaskOptionsEntry.html":{},"classes/TaskQueryDto.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["years",{"_index":3420,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":606,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/MongoMemoryDatabaseProvider.html":{},"injectables/NewsUc.html":{},"classes/SampleError.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3088,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3644,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '../../../shared/error/api-validation.error';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Body } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Controller('auth')\nexport class AuthController {\n\tconstructor(private authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEntity.html":{"url":"classes/AuthEntity.html","title":"class - AuthEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/entity/auth.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/entity/auth.entity.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthEntity {\n\t@ApiProperty()\n\taccess_token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthService } from './auth.service';\nimport { jwtConstants } from './constants';\nimport { UsersModule } from '../user/users.module';\nimport { JwtStrategy } from './strategy/jwt.strategy';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [\n\t\tUsersModule,\n\t\tPassportModule,\n\t\tJwtModule.register({\n\t\t\tsecret: jwtConstants.secret,\n\t\t\tsignOptions: { expiresIn: '60s' },\n\t\t}),\n\t],\n\tproviders: [AuthService, JwtStrategy],\n\texports: [AuthService],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/auth.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotImplementedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { User, UsersService } from '../user/users.service';\nimport { AuthEntity } from './entity/auth.entity';\n\n@Injectable()\nexport class AuthService {\n\tconstructor(private usersService: UsersService, private jwtService: JwtService) {}\n\n\tasync validateUser(username: string, password: string): Promise {\n\t\tconst user = await this.usersService.findOne(username);\n\t\tif (user && user.password === password) {\n\t\t\tconst { password, ...result } = user;\n\t\t\t// passport will add result to req.user\n\t\t\treturn result as User;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync login(user: any): Promise {\n\t\tthrow new NotImplementedException();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@ApiProperty()\n\t@IsString()\n\ttitle: string;\n\n\t@ApiProperty()\n\t@IsString()\n\tbody: string;\n\n\t@ApiProperty()\n\t@IsDate()\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@IsOptional()\n\t@ApiProperty()\n\ttargetModel: string;\n\n\t@IsString()\n\t@IsOptional()\n\t@ApiPropertyOptional()\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '../../core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.equals(schoolId);\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError } from '@shared/error/business.error';\nimport { ApiValidationError } from '@shared/error/api-validation.error';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: Error): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: any, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack);\n};\n\nconst writeErrorLog = (error: any, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '../../../shared/error/api-validation.error';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\n// TODO put into shared types\ntype ValueOf = T[keyof T];\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ITaskMetadata.html":{"url":"classes/ITaskMetadata.html","title":"class - ITaskMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ITaskMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseName\n                            \n                            \n                                displayColor\n                            \n                            \n                                duedate\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport class ITaskMetadata extends BaseEntityWithTimestamps {\n\tname: string;\n\n\tduedate: Date;\n\n\tcourseName: string;\n\n\tdisplayColor: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '../../shared/interceptor/timeout.interceptor';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload) {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Collection, Entity, ManyToMany, ManyToOne, Property } from '@mikro-orm/core';\nimport { UserInfo } from '../../news/entity';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MongoMemoryDatabaseProvider.html":{"url":"injectables/MongoMemoryDatabaseProvider.html","title":"injectable - MongoMemoryDatabaseProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MongoMemoryDatabaseProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                getUri\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mongod: MongoMemoryServer, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mongod\n                                                  \n                                                        \n                                                                    MongoMemoryServer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUri\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUri(otherDbName?: string | boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    otherDbName\n                                    \n                                            string | boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onApplicationShutdown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onApplicationShutdown()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { Logger } from '../../../core/logger/logger.service';\n\n@Injectable()\nexport class MongoMemoryDatabaseProvider {\n\tconstructor(private mongod: MongoMemoryServer, protected logger: Logger) {\n\t\tthis.logger.setContext(MongoMemoryDatabaseProvider.name);\n\t}\n\n\t// todo separate create?\n\n\tasync getUri(otherDbName?: string | boolean): Promise {\n\t\tconst uri = await this.mongod.getUri(otherDbName);\n\t\tthis.logger.log(`resolve with a new mongo uri: ${uri}`);\n\t\treturn uri;\n\t}\n\n\tasync close(): Promise {\n\t\tawait this.mongod.stop();\n\t}\n\n\tasync onApplicationShutdown(): Promise {\n\t\tawait this.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@IsOptional()@ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@IsOptional()@IsIn(undefined)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@ToBoolean()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { ToBoolean } from '@shared/transformer';\n\n// TODO validate\nexport class NewsFilterQuery {\n\t@IsString()\n\t@IsOptional()\n\t@IsIn(['schools', 'courses', 'teams'])\n\t@ApiProperty()\n\ttargetModel?: string;\n\n\t@IsMongoId()\n\t@IsOptional()\n\t@ApiPropertyOptional()\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@ToBoolean()\n\t@ApiProperty()\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.body,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.body,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:25\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationModel } from '@shared/repo/interface/pagination.interface';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: PaginationModel = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: PaginationModel): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({ pattern: '[a-f0-9]{24}' })\n\tid: string;\n\n\t@ApiProperty()\n\ttitle: string;\n\n\t@ApiProperty()\n\tcontent: string;\n\n\t@ApiProperty()\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({ type: 'string', enum: NEWS_SOURCES })\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional()\n\ttargetId?: string;\n\n\t@ApiPropertyOptional()\n\ttargetModel?: string;\n\n\t@ApiProperty()\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty()\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional()\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/types';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { Logger } from '../../../core/logger/logger.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished;\n\t\tconst permissions: Permission[] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationModel.html":{"url":"interfaces/PaginationModel.html","title":"interface - PaginationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationModel {\n\treadonly skip?: number;\n\treadonly limit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiProperty({ description: 'number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiProperty({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/pipe/parse-object-id.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { Types } from 'mongoose';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: any): Types.ObjectId {\n\t\tconst validObjectId = Types.ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleError.html":{"url":"classes/SampleError.html","title":"class - SampleError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                sample business error implementation\n\n            \n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/error/business.error.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { IErrorType } from '../../core/error/interface';\nimport { ErrorResponse } from '../../core/error/dto/error.response';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n/**\n * sample business error implementation\n */\nexport class SampleError extends BusinessError {\n\tconstructor(message?: string) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'SAMPLE_ERROR',\n\t\t\t\ttitle: 'Sample Error',\n\t\t\t\tdefaultMessage: message || 'default sample error message',\n\t\t\t},\n\t\t\tHttpStatus.NOT_IMPLEMENTED\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({ pattern: '[a-f0-9]{24}' })\n\tid: string;\n\n\t@ApiProperty()\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:10\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { ServerService } from './server.service';\n\n@Controller()\nexport class ServerController {\n\tconstructor(private readonly serverService: ServerService) {}\n\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn this.serverService.getHello();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nServerModule -->\n\nUsersModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ServerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { ServerController } from './server.controller';\nimport { ServerService } from './server.service';\nimport { UsersModule } from './modules/user/users.module';\nimport { DB_URL } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tUsersModule,\n\t\tNewsModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n\tproviders: [ServerService],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerService.html":{"url":"injectables/ServerService.html","title":"injectable - ServerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ServerService {\n\tgetHello(): string {\n\t\treturn 'Hello World!';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n\n\tconstructor() {\n\t\tsuper();\n\t}\n}\n\nexport class ITaskMetadata extends BaseEntityWithTimestamps {\n\tname: string;\n\n\tduedate: Date;\n\n\tcourseName: string;\n\n\tdisplayColor: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, query: TaskQueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                TaskQueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponseDto, TaskQueryDto } from './dto';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(@CurrentUser() currentUser: ICurrentUser, @Query() query: TaskQueryDto): Promise {\n\t\tconst response = this.taskUc.findAllOpenForUser(currentUser.userId, query);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskOptionsEntry.html":{"url":"classes/TaskOptionsEntry.html","title":"class - TaskOptionsEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskOptionsEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.option.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TaskQueryDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@IsOptional()@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@IsOptional()@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(2015)@Max(2030)@IsOptional()@ApiProperty({description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TaskQueryDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         TaskQueryDto:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TaskQueryDto } from '../controller/dto';\n\nclass TaskOptionsEntry extends TaskQueryDto {}\n\nexport type ITaskOption = TaskOptionsEntry;\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskQueryDto.html":{"url":"classes/TaskQueryDto.html","title":"class - TaskQueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskQueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-query.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                    Optional\n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@IsOptional()@ApiProperty({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@IsOptional()@ApiProperty({description: 'number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            year\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(2015)@Max(2030)@IsOptional()@ApiProperty({description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-query.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min, IsOptional } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskQueryDto {\n\t@IsInt()\n\t@Min(2015)\n\t@Max(2030)\n\t@IsOptional()\n\t@ApiProperty({ description: 'Requested year, otherwise default is used.', minimum: 2015, maximum: 2030 })\n\tyear?;\n\n\t@IsInt()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiProperty({ description: 'number of elements (not pages) to be skipped' })\n\tskip?;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@IsOptional()\n\t@ApiProperty({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: ITaskOption)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                ITaskOption\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ITaskOption, Task, ITaskMetadata, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { year, limit, skip }: ITaskOption = {}): Promise {\n\t\t// todo: handle coursegroups\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst usersTasks = await this.em.find(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t$and: [\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t['course']\n\t\t);\n\n\t\tconst mappedTasks = usersTasks.map((task) => {\n\t\t\treturn {\n\t\t\t\tid: task.id,\n\t\t\t\t_id: task._id,\n\t\t\t\tname: task.name,\n\t\t\t\tduedate: task.dueDate,\n\t\t\t\tcourseName: task.course?.name,\n\t\t\t\tdisplayColor: task.course?.color,\n\t\t\t\tcreatedAt: task.createdAt,\n\t\t\t\tupdatedAt: task.updatedAt,\n\t\t\t} as ITaskMetadata; // TODO does not match ITaskMetadata, remove as...\n\t\t});\n\n\t\t// TODO: pagination or total is missing\n\t\treturn mappedTasks;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponseDto.html":{"url":"classes/TaskResponseDto.html","title":"class - TaskResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-response.dto.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseName\n                            \n                            \n                                displayColor\n                            \n                            \n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task-response.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponseDto {\n\tconstructor(partial: Partial) {\n\t\tObject.assign(this, partial);\n\t}\n\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate: Date;\n\n\t@ApiProperty()\n\tcourseName: string;\n\n\t@ApiProperty()\n\tdisplayColor: string;\n\n\t@ApiProperty()\n\tid: string;\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, option: ITaskOption)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    option\n                                    \n                                                ITaskOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ITaskOption, ITaskMetadata } from '../entity';\nimport { TaskRepo } from '../repo/task.repo';\n\n// filter tasks older than 3 weeks\n// TODO: move dtos folder one level higher\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, option: ITaskOption): Promise {\n\t\treturn this.taskRepo.findAllOpenByStudent(userId, option);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                    Readonly\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                                Readonly\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/interceptor/timeout.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static readonly defaultTimeout = 5000;\n\n\t// constructor(private readonly timeoutMs: number = 5000) {}\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(TimeoutInterceptor.defaultTimeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsDate()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\ttitle: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\tbody: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsDate()\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                password\n                            \n                            \n                                userId\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// This should be a real class/interface representing a user entity\nexport class User {\n\tuserId: string;\n\n\tusername: string;\n\n\tpassword?: string;\n}\n\n@Injectable()\nexport class UsersService {\n\tprivate readonly users: User[] = [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t];\n\n\tasync findOne(username: string): Promise {\n\t\treturn this.users.find((user) => user.username === username);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/controller/dto/user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of a user', example: 'changeme'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'username of a user', example: 'john'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/authentication/controller/dto/user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDTO {\n\t@ApiProperty({ description: 'username of a user', example: 'john' })\n\tusername: string;\n\n\t@ApiProperty({ description: 'password of a user', example: 'changeme' })\n\tpassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserEntity.html":{"url":"classes/UserEntity.html","title":"class - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: JwtPayload)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        JwtPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schoolId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/entity/user.entity.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { JwtPayload } from '../../authentication/interface/jwt-payload';\n\nexport class UserEntity {\n\tconstructor(payload: JwtPayload) {\n\t\t// TODO Builder\n\t\tthis.userId = payload.userId;\n\t\tthis.schoolId = payload.schoolId;\n\t\tthis.roles = payload.roles;\n\t}\n\n\t@ApiProperty()\n\tuserId: string;\n\n\t@ApiProperty()\n\tschoolId: string;\n\n\t@ApiProperty()\n\troles: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({ pattern: '[a-f0-9]{24}' })\n\tid: string;\n\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(user: JwtPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('profile')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/users.controller.ts:11\n                \n            \n\n\n            \n                \n                    default route to test authenticated access \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards, Request } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { JwtPayload } from '../../authentication/interface/jwt-payload';\nimport { UserEntity } from '../entity/user.entity';\n\n@Authenticate('jwt')\n@Controller('users')\nexport class UsersController {\n\t/** default route to test authenticated access */\n\t@Get('profile')\n\tgetProfile(@CurrentUser() user: JwtPayload): UserEntity {\n\t\treturn new UserEntity(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './controller/users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n\tproviders: [UsersService],\n\texports: [UsersService],\n\tcontrollers: [\n\t\t/* UsersController */\n\t],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/users.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t]\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/user/users.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// This should be a real class/interface representing a user entity\nexport class User {\n\tuserId: string;\n\n\tusername: string;\n\n\tpassword?: string;\n}\n\n@Injectable()\nexport class UsersService {\n\tprivate readonly users: User[] = [\n\t\t{\n\t\t\tuserId: '1',\n\t\t\tusername: 'john',\n\t\t\tpassword: 'changeme',\n\t\t},\n\t\t{\n\t\t\tuserId: '2',\n\t\t\tusername: 'maria',\n\t\t\tpassword: 'guess',\n\t\t},\n\t];\n\n\tasync findOne(username: string): Promise {\n\t\treturn this.users.find((user) => user.username === username);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nSC-9004 - Sync env variables between backend and frontend\n\n26.2.0\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/controller/dto/user.dto.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            function\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/entity/auth.entity.ts\n            \n            class\n            AuthEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/jwt-options.provider.ts\n            \n            variable\n            jwtOptionsProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.provider.ts\n            \n            injectable\n            MongoMemoryDatabaseProvider\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task-query.dto.ts\n            \n            class\n            TaskQueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task-response.dto.ts\n            \n            class\n            TaskResponseDto\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            ITaskMetadata\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.option.entity.ts\n            \n            class\n            TaskOptionsEntry\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/users.controller.ts\n            \n            controller\n            UsersController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            UserEntity\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/users.service.ts\n            \n            class\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.service.ts\n            \n            injectable\n            ServerService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/error/business.error.ts\n            \n            class\n            SampleError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/interface/pagination.interface.ts\n            \n            interface\n            PaginationModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/transformer/to-boolean.transformer.ts\n            \n            function\n            ToBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.6.0\n        \n            arg : ^4.1.3\n        \n            async : ^2.6.3\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^6.0.1\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            ToBoolean   (apps/.../to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Authenticate\n                        \n                        \n                    \n                \n            \n            \n                \nAuthenticate(...strategies: undefined)\n                \n            \n\n\n\n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    strategies\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/transformer/to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nToBoolean()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PropertyDecorator\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUsersModule->ServerModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nServerService\n\nServerService\n\nServerModule -->\n\nServerService->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    42 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\n\nACCEPTED\n\ncheck build & start for production with ops\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\nfix jest, linter, ...\n\n\nDONE\n\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            ITaskOption   (apps/.../task.option.entity.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            ValueOf   (apps/.../news.types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/task/entity/task.option.entity.ts\n    \n    \n        \n            \n                \n                    \n                    ITaskOption\n                \n            \n            \n                \n                            TaskOptionsEntry\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../main.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            jwtOptionsProvider   (apps/.../jwt-options.provider.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../main.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../main.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: any, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: any, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user } = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/jwt-options.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtOptionsProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tprovide: 'JWT_MODULE_OPTIONS',\n\tuseValue: {\n\t\tsecret: jwtConstants.secret,\n\t\tsignOptions: { expiresIn: '60s' },\n\t},\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to fix linter issues and apply formatting\n\nHow to test the application?\n\nnest:test executes jest tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either _.spec.ts beside providers or *.e2e-spec.ts in test folders\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e beside unit tests on providers which are placed beside the providers (executed by statements above), e2e tests can be added in test folder\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:dev:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nContent\nFor further reading, browse apps/server/doc.\nDevelopment\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nTesting\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below are correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside mapping) inside a controller, use the logic layer instead. Mapping can be unit tested.\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nTesting\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story). A unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nTesting\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests. A test must define the before and after state of the data set clearly and cleanup the database after execution to the before state. Instead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
