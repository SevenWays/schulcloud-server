var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.104,1,2.705]],["body/classes/ApiValidationError.html",[0,0.129,1,4.226,2,1.134,3,0.27,4,0.222,5,0.161,6,6.026,7,4.8,8,2.159,9,5.518,10,0.519,11,1.238,12,4.037,13,2.579,14,3.675,15,2.819,16,0.603,17,1.775,18,6.587,19,1.822,20,5.466,21,6.276,22,1.005,23,5.466,24,1.166,25,0.011,26,0.904,27,0.904,28,6.587,29,2.188,30,3.716,31,5.466,32,1.205,33,5.466,34,5.466,35,5.466,36,5.466,37,1.375,38,3.058,39,0.444,40,4.361,41,1.267,42,5.466,43,0.254,44,4.8,45,2.419,46,4.361,47,3.037,48,3.526,49,2.261,50,4.033,51,3.771,52,2.927,53,3.366,54,5.466,55,0.007,56,0.008,57,0.007]],["title/classes/ApiValidationErrorResponse.html",[0,0.104,58,3.505]],["body/classes/ApiValidationErrorResponse.html",[0,0.129,1,5.092,2,1.132,3,0.269,4,0.222,5,0.161,8,2.156,10,0.518,11,1.236,13,2.576,14,3.671,15,2.576,16,0.533,19,1.819,22,0.833,24,1.164,25,0.011,26,0.903,27,0.903,28,6.581,38,4.193,39,0.485,43,0.253,47,3.034,48,4.312,49,2.257,51,3.764,55,0.007,56,0.008,57,0.007,58,5.469,59,6.581,60,4.791,61,1.873,62,4.222,63,4.017,64,4.456,65,3.883,66,6.855,67,5.456,68,5.53,69,5.456,70,4.026,71,5.456,72,5.456,73,1.993,74,5.456,75,5.456,76,5.456,77,6.855,78,6.855,79,5.456,80,1.462,81,1.384,82,6.855,83,5.456]],["title/modules/AuthModule.html",[84,1.201,85,3.031]],["body/modules/AuthModule.html",[0,0.139,3,0.29,4,0.239,5,0.173,25,0.011,39,0.551,41,1.36,43,0.273,55,0.007,56,0.009,57,0.007,84,2.117,85,5.807,86,2.206,87,2.598,88,3.284,89,3.284,90,3.016,91,3.203,92,3.288,93,5.154,94,5.154,95,5.807,96,4.012,97,3.143,98,2.598,99,5.869,100,7.172,101,4.33,102,5.869,103,5.154,104,5.869,105,3.815,106,4.682,107,7.172,108,5.869,109,5.869,110,5.869,111,3.016,112,5.869,113,2.899]],["title/modules/AuthorizationModule.html",[84,1.201,114,2.855]],["body/modules/AuthorizationModule.html",[0,0.138,3,0.288,4,0.237,5,0.172,25,0.011,39,0.521,41,1.352,43,0.271,55,0.007,56,0.009,57,0.007,84,2.112,86,2.194,87,2.583,88,3.265,89,3.265,90,2.999,91,3.195,92,3.542,96,3.998,97,3.126,98,2.583,111,3.672,114,5.692,115,5.125,116,5.125,117,5.125,118,5.125,119,5.464,120,5.152,121,4.926,122,5.836,123,5.836,124,5.836,125,2.775,126,5.125]],["title/injectables/AuthorizationService.html",[120,2.574,127,1.201]],["body/injectables/AuthorizationService.html",[0,0.095,3,0.198,4,0.163,5,0.118,10,0.381,16,0.495,17,1.447,19,1.338,22,0.846,24,1.485,25,0.011,26,1.152,27,1.152,32,1.218,37,1.842,39,0.45,41,0.93,43,0.186,55,0.005,56,0.007,57,0.005,73,1.851,80,1.193,81,0.81,120,3.278,121,4.442,125,1.91,126,3.526,127,1.529,128,1.841,129,3.526,130,3.125,131,5.653,132,5.653,133,6.437,134,4.015,135,4.015,136,4.015,137,3.205,138,3.429,139,3.741,140,4.416,141,3.862,142,4.015,143,2.996,144,2.567,145,5.594,146,3.355,147,1.488,148,4.315,149,3.035,150,3.636,151,4.015,152,4.015,153,5.137,154,3.526,155,4.015,156,3.729,157,4.127,158,4.912,159,3.445,160,4.912,161,1.228,162,1.841,163,2.77,164,2.15,165,4.565,166,3.636,167,3.131,168,4.015,169,4.015,170,3.203,171,4.015,172,4.015,173,4.015,174,5.594,175,4.015,176,4.015,177,2.353,178,4.015,179,5.594,180,4.015,181,4.015]],["title/classes/BaseEntity.html",[0,0.104,182,1.704]],["body/classes/BaseEntity.html",[0,0.178,2,1.148,3,0.273,4,0.225,5,0.163,8,1.741,10,0.526,11,1.361,13,2.08,16,0.492,22,0.84,25,0.011,32,1.212,39,0.447,43,0.321,55,0.007,56,0.008,57,0.007,81,1.523,147,1.551,182,3.065,183,4.415,184,3.269,185,1.831,186,3.269,187,2.006,188,3.623,189,5.534,190,3.623,191,5.534,192,2.925,193,2.176,194,2.08,195,3.243,196,4.415,197,4.083,198,3.289,199,4.415,200,4.415,201,4.86,202,3.408,203,2.632,204,4.86,205,2.449,206,4.415,207,3.243,208,2.216,209,2.964,210,1.957,211,4.86,212,4.415,213,4.86,214,3.818,215,3.597,216,4.083,217,4.415,218,2.734,219,2.668,220,4.86,221,2.734]],["title/classes/BaseEntityWithTimestamps.html",[0,0.104,198,2.089]],["body/classes/BaseEntityWithTimestamps.html",[0,0.171,2,1.053,3,0.25,4,0.206,5,0.15,8,2.059,10,0.482,11,1.307,13,1.907,16,0.544,22,0.986,25,0.011,30,3,32,1.23,39,0.423,43,0.304,55,0.006,56,0.008,57,0.006,81,1.599,147,1.502,182,3.146,183,4.047,184,3.356,185,1.88,186,3.277,187,2.194,188,3.633,190,3.633,192,2.968,193,2.059,194,1.907,195,2.973,196,4.047,197,3.743,198,3.445,199,4.047,200,4.047,201,4.454,202,3.124,203,2.412,204,4.454,205,2.245,206,4.047,207,2.973,208,2.031,209,2.717,210,1.794,211,4.454,212,4.047,213,4.454,214,3.5,215,3.297,216,3.743,217,4.047,218,3.578,219,2.802,220,4.454,221,3.578,222,5.073,223,1.789,224,2.314,225,5.073,226,5.073,227,2.838,228,2.412,229,5.073,230,2.412,231,2.412]],["title/classes/BusinessError.html",[0,0.104,9,2.855]],["body/classes/BusinessError.html",[0,0.17,2,1.037,3,0.247,4,0.203,5,0.147,8,2.039,9,4.214,10,0.475,11,1.169,12,4.095,13,3.167,14,4.076,15,3.037,16,0.609,17,1.677,18,6.684,19,2.161,22,0.982,24,1.067,25,0.011,26,0.827,27,0.827,29,2.595,32,1.298,37,1.258,38,4.025,39,0.465,40,6.072,41,1.158,43,0.232,45,2.213,50,5.308,55,0.006,56,0.008,57,0.006,61,1.716,65,3.76,80,1.067,81,1.009,232,4.39,233,4.025,234,4.472,235,3.472,236,4.472,237,3.626,238,3.799,239,4.214,240,2.869,241,5.739,242,4.999,243,5.251,244,6.482,245,4.999,246,4.999,247,4.999,248,4.999,249,4.999,250,4.999,251,4.39,252,6.482,253,4.999,254,4.214,255,6.482,256,4.999]],["title/modules/CoreModule.html",[84,1.201,257,3.031]],["body/modules/CoreModule.html",[0,0.128,3,0.268,4,0.221,5,0.16,25,0.011,39,0.523,41,1.26,43,0.252,49,2.829,55,0.007,56,0.008,57,0.007,61,1.866,84,2.212,86,2.044,87,2.406,88,3.042,89,3.042,90,2.794,91,2.249,92,2.493,96,3.826,97,2.912,98,2.406,111,3.514,240,3.027,257,6.011,258,4.774,259,4.774,260,5.699,261,5.699,262,4.84,263,5.699,264,5.437,265,4.446,266,6.84,267,4.212,268,5.457,269,5.457,270,6.84,271,4.446,272,5.046,273,4.446,274,6.84,275,3.826,276,4.719,277,6.006,278,6.84,279,5.046,280,5.437,281,5.437,282,5.437,283,5.437]],["title/classes/Course.html",[0,0.104,284,1.759]],["body/classes/Course.html",[0,0.116,2,1.019,3,0.243,4,0.2,5,0.145,8,2.016,10,0.467,11,1.156,16,0.597,19,1.637,22,1.03,24,1.048,25,0.011,26,1.251,27,0.813,30,3.687,32,1.292,39,0.461,43,0.228,45,2.174,55,0.006,56,0.008,57,0.006,81,1.526,147,1.258,161,1.502,163,3.389,182,2.485,184,3.127,185,1.752,186,2.651,187,2.233,188,2.938,190,2.938,192,3.119,193,1.545,194,1.846,198,3.896,218,3.165,219,2.266,221,3.165,223,1.95,224,2.523,227,2.748,228,2.336,230,2.336,231,2.336,284,2.566,285,4.313,286,7.133,287,5.263,288,6.409,289,5.098,290,4.912,291,4.912,292,4.912,293,6.409,294,4.912,295,6.409,296,3.523,297,4.912,298,2.878,299,2.878,300,2.878,301,2.878,302,2.878,303,6.409,304,2.878,305,3.025,306,3.193,307,2.748]],["title/classes/CourseInfo.html",[0,0.104,308,2.458]],["body/classes/CourseInfo.html",[0,0.135,2,1.187,3,0.282,4,0.232,5,0.169,8,2.22,10,0.543,11,1.273,16,0.595,19,1.906,22,0.971,24,1.22,25,0.011,26,1.359,27,0.946,30,3.236,32,1.284,39,0.456,43,0.265,45,2.531,55,0.007,56,0.009,57,0.007,147,1.385,161,1.748,182,3.185,184,2.919,185,1.635,186,2.365,187,2.035,188,2.622,190,2.622,192,2.969,193,1.799,194,2.149,230,2.719,231,2.719,304,3.351,305,3.521,308,3.948,309,6.722,310,3.945,311,3.948,312,4.346,313,5.207,314,2.938,315,4.562,316,4.562]],["title/classes/CourseNews.html",[0,0.104,317,2.458]],["body/classes/CourseNews.html",[0,0.138,2,0.574,3,0.137,4,0.255,5,0.082,8,1.977,10,0.263,11,0.767,15,2.495,16,0.592,17,1.1,22,1.028,24,0.59,25,0.011,26,0.858,27,1.211,30,3.865,32,1.311,37,0.696,39,0.447,43,0.292,45,1.224,55,0.003,56,0.005,57,0.003,80,0.59,81,1.395,137,2.362,138,2.768,139,3.043,141,2.295,144,0.87,147,1.234,161,0.846,162,1.268,166,1.798,182,2.437,184,2.952,185,1.732,186,2.408,187,2.233,188,2.67,190,2.67,192,3.143,193,0.87,194,1.04,198,3.156,205,2.295,210,1.834,218,2.876,219,2.445,221,2.876,223,1.718,224,2.223,227,2.38,228,2.024,230,1.315,231,1.315,233,2.38,254,1.798,284,1.107,296,3.104,298,1.621,299,1.621,300,1.621,301,1.621,302,3.412,306,1.798,307,2.901,308,2.901,311,1.547,314,2.665,317,2.38,318,1.798,319,2.903,320,3.09,321,2.838,322,3.23,323,2.769,324,4.017,325,2.495,326,3.785,327,3.586,328,2.378,329,3.139,330,4.38,331,2.766,332,2.207,333,2.766,334,3.194,335,2.766,336,2.207,337,2.207,338,2.935,339,3.785,340,2.935,341,2.766,342,2.102,343,2.62,344,2.935,345,2.207,346,2.207,347,3.118,348,2.024,349,2.207,350,2.777,351,3.039,352,2.207,353,2.207,354,2.207,355,2.62,356,2.207,357,2.62,358,2.207,359,2.935,360,2.207,361,2.207,362,2.207,363,2.207,364,2.207,365,2.207,366,2.207,367,2.935,368,3.871,369,2.207,370,3.785,371,1.908,372,2.38,373,1.481,374,0.543,375,1.908,376,1.366,377,1.908,378,1.908,379,1.908,380,1.908,381,1.908,382,1.908,383,1.908,384,1.908,385,2.935,386,2.295,387,2.378,388,2.295,389,2.295,390,2.295,391,3.039,392,2.665,393,1.908,394,2.935,395,1.908,396,1.908,397,3.577,398,1.621,399,1.621]],["title/classes/CreateNewsParams.html",[0,0.104,400,2.855]],["body/classes/CreateNewsParams.html",[0,0.151,2,1.011,3,0.241,4,0.198,5,0.144,10,0.463,11,1.15,15,2.94,16,0.556,22,0.951,25,0.011,32,1.332,39,0.46,43,0.226,55,0.006,56,0.008,57,0.006,61,2.847,73,1.296,138,2.845,140,3.806,146,2.822,147,1.674,162,3.258,185,1.477,187,2.08,219,2.255,319,2.86,320,3.018,321,3.345,323,3.379,400,4.144,401,6.402,402,3.596,403,3.032,404,4.704,405,3.415,406,6.376,407,4.279,408,4.873,409,5.086,410,3.736,411,5.086,412,4.704,413,4.873,414,4.873,415,4.399,416,4.399,417,4.642,418,4.873,419,4.873,420,4.902,421,5.086,422,3.567,423,4.873,424,4.873,425,4.703,426,2.407,427,5.598,428,6.241,429,3.001,430,3.362,431,3.888,432,3.168]],["title/controllers/DelayController.html",[433,2.014,434,3.241]],["body/controllers/DelayController.html",[0,0.134,3,0.281,4,0.231,5,0.168,10,0.54,17,1.819,22,0.691,25,0.011,37,1.431,39,0.494,41,1.318,43,0.264,47,2.517,55,0.007,56,0.009,57,0.007,73,1.87,80,1.501,81,1.148,91,2.352,113,3.474,130,2.961,149,3.057,167,2.432,187,1.512,223,1.922,276,4.852,433,3.225,434,5.634,435,5.611,436,4.536,437,7.006,438,5.686,439,4.572,440,3.632,441,4.852,442,3.614,443,5.189,444,4.993,445,5.686,446,3.332,447,4.536,448,5.611,449,4.993,450,4.993,451,5.686,452,4.195,453,2.607,454,4.536,455,4.572,456,4.536,457,2.922,458,4.536,459,4.195]],["title/injectables/DurationLoggingInterceptor.html",[127,1.201,460,3.505]],["body/injectables/DurationLoggingInterceptor.html",[0,0.131,3,0.274,4,0.225,5,0.163,10,0.527,11,1.249,12,3.59,16,0.394,17,1.791,22,0.841,24,1.183,25,0.011,26,0.917,27,0.917,37,1.395,39,0.511,41,1.285,43,0.257,55,0.007,56,0.008,57,0.007,61,1.903,73,1.474,80,1.183,81,1.397,127,1.892,128,2.542,223,1.515,224,1.961,273,4.5,388,3.341,443,5.108,455,4.5,460,5.523,461,6.629,462,4.868,463,6.924,464,5.108,465,4.5,466,3.341,467,4.063,468,6.08,469,6.08,470,5.834,471,6.943,472,5.544,473,2.738,474,6.629,475,6.924,476,5.544,477,4.423,478,5.544,479,4.868,480,4.868,481,3.604,482,5.544,483,3.825,484,6.924,485,5.544,486,5.544,487,5.544]],["title/modules/ErrorModule.html",[84,1.201,260,3.031]],["body/modules/ErrorModule.html",[0,0.146,3,0.306,4,0.252,5,0.183,25,0.011,39,0.513,41,1.436,43,0.288,55,0.007,56,0.009,57,0.007,61,2.127,84,2.026,86,2.329,91,2.563,159,4.565,223,2.026,260,5.113,275,4.146,279,6.062,446,3.632,457,3.185,488,6.198,489,6.508,490,4.343,491,4.146,492,3.808,493,5.113,494,6.198,495,6.198,496,4.944]],["title/classes/ErrorResponse.html",[0,0.104,38,2.458]],["body/classes/ErrorResponse.html",[0,0.135,2,1.182,3,0.281,4,0.232,5,0.168,12,3.797,13,3.001,14,4.093,15,2.873,16,0.583,19,2.347,22,0.692,24,1.215,25,0.011,26,0.943,27,0.943,29,3.06,32,1.386,38,3.939,39,0.368,40,4.545,41,1.32,43,0.264,49,3.161,55,0.007,56,0.009,57,0.007,61,2.417,62,4.707,63,4.126,64,4.577,65,3.478,251,5.002,497,5.002,498,5.697,499,5.697,500,5.697,501,4.545,502,4.858,503,5.697,504,5.002,505,5.697,506,3.338,507,2.356,508,3.187,509,3.703,510,4.545]],["title/injectables/FeathersAuthProvider.html",[121,2.574,127,1.201]],["body/injectables/FeathersAuthProvider.html",[0,0.094,3,0.196,4,0.161,5,0.117,10,0.377,16,0.537,17,1.435,19,1.323,22,0.918,24,1.611,25,0.011,26,1.25,27,1.25,32,1.171,37,1.834,39,0.471,41,0.92,43,0.184,55,0.005,56,0.007,57,0.005,73,2.164,80,1.611,81,0.801,121,3.252,127,1.517,128,1.82,130,3.285,137,3.276,138,3.024,139,3.555,140,3.71,141,3.226,144,2.488,148,4.152,149,3.259,150,3.607,161,1.214,163,2.738,164,2.126,167,3.118,177,2.326,182,2.152,184,1.642,186,2.646,193,1.249,195,2.326,325,1.492,348,3.467,374,0.779,439,3.607,440,1.888,466,2.832,511,6.185,512,2.928,513,5.549,514,5.104,515,5.549,516,5.549,517,5.104,518,3.969,519,4.225,520,3.969,521,4.872,522,3.969,523,3.485,524,3.969,525,4.872,526,3.969,527,4.872,528,3.969,529,3.969,530,3.969,531,4.427,532,3.485,533,3.167,534,4.872,535,3.167,536,4.872,537,4.872,538,3.485,539,3.485,540,2.736,541,3.485,542,4.872,543,4.872,544,4.872,545,3.485,546,2.58,547,3.485,548,3.485,549,1.82,550,3.485,551,2.126,552,4.094,553,3.167,554,3.485,555,3.485,556,2.928]],["title/interfaces/FeathersError.html",[374,0.862,557,3.031]],["body/interfaces/FeathersError.html",[3,0.313,4,0.258,5,0.187,8,2.363,10,0.602,11,1.355,13,3.111,16,0.615,25,0.01,29,3.205,32,1.377,43,0.294,49,3.106,55,0.008,56,0.009,57,0.008,374,1.244,557,5.181,558,2.382,559,5.564,560,5.564,561,7.268]],["title/modules/FeathersModule.html",[84,1.201,119,2.855]],["body/modules/FeathersModule.html",[0,0.136,3,0.284,4,0.234,5,0.169,25,0.011,39,0.458,41,1.332,43,0.267,55,0.007,56,0.009,57,0.007,61,1.974,84,2.248,86,2.884,87,2.545,88,3.217,89,3.217,90,2.954,91,3.174,92,3.519,96,3.962,97,3.079,98,2.545,119,5.516,125,3.65,442,3.639,519,4.91,533,4.587,540,3.029,562,5.049,563,5.049,564,5.049,565,5.75,566,4.361,567,3.962,568,3.639,569,3.368,570,4.15,571,4.603,572,4.603,573,4.603,574,4.603,575,5.65,576,3.247]],["title/interfaces/FeathersService.html",[374,0.862,577,3.241]],["body/interfaces/FeathersService.html",[0,0.115,3,0.241,4,0.198,5,0.144,10,0.463,16,0.536,17,1.649,22,0.775,24,1.36,25,0.011,26,1.055,27,1.055,32,0.783,37,1.604,39,0.506,41,1.129,43,0.35,55,0.006,56,0.008,57,0.006,73,1.296,80,1.04,86,1.832,125,2.318,127,1.743,137,2.833,149,3.018,161,1.49,165,3.975,185,1.477,240,2.157,374,0.957,386,2.822,387,2.923,388,2.822,389,2.822,390,2.822,391,3.736,442,3.651,446,2.856,466,2.157,519,2.726,540,3.432,558,1.832,566,3.001,567,3.975,568,2.504,569,3.72,570,2.856,571,3.168,572,3.168,573,3.168,574,3.168,575,3.888,576,2.235,577,5.561,578,5.243,579,3.362,580,3.145,581,5.598,582,6.523,583,4.873,584,4.703,585,4.144,586,5.598,587,4.873,588,3.276,589,3.168,590,3.001,591,3.888,592,5.086,593,5.598,594,3.927,595,5.086,596,5.086,597,3.888,598,3.596,599,4.279,600,4.279,601,4.279,602,4.279,603,4.279]],["title/injectables/FeathersServiceProvider.html",[127,1.201,519,2.458]],["body/injectables/FeathersServiceProvider.html",[0,0.113,3,0.237,4,0.195,5,0.141,10,0.456,16,0.533,17,1.632,19,1.599,22,0.767,24,1.346,25,0.011,26,1.044,27,1.044,32,1.133,37,1.207,39,0.503,41,1.112,43,0.348,55,0.006,56,0.008,57,0.006,61,1.647,73,1.276,80,1.024,86,2.372,125,3.001,127,1.725,128,2.2,137,2.372,149,2.527,161,1.467,165,3.945,185,1.112,240,2.124,374,0.942,386,2.793,387,2.894,388,2.793,389,2.793,390,2.793,391,3.698,442,3.85,446,2.812,466,2.124,519,3.531,540,3.535,566,3.887,567,4.191,568,3.243,569,3.976,570,3.698,571,4.102,572,4.102,573,4.102,574,4.102,575,5.035,576,2.894,577,5.528,578,5.203,579,3.31,580,2.124,581,4.213,582,5.626,584,4.132,586,4.213,588,3.243,589,3.119,590,2.955,591,3.828,592,5.035,593,5.542,594,3.887,595,5.035,596,5.035,597,3.828,598,4.656,599,4.213,600,4.213,601,5.542,602,4.213,603,4.213,604,6.311,605,4.798,606,4.798,607,4.798,608,3.31]],["title/classes/GlobalErrorFilter.html",[0,0.104,493,3.031]],["body/classes/GlobalErrorFilter.html",[0,0.113,1,3.513,2,0.672,3,0.16,4,0.132,5,0.095,9,4.098,10,0.307,11,0.864,12,2.712,13,2.37,14,2.566,15,2.144,16,0.478,17,1.475,22,0.693,24,1.022,25,0.011,26,0.944,27,0.793,37,1.586,38,4.415,39,0.472,41,0.75,43,0.15,47,1.432,48,1.663,49,3.64,55,0.004,56,0.006,57,0.004,62,1.993,63,4.559,65,1.598,70,2.388,73,2.268,80,1.737,81,1.358,125,2.712,165,2.68,192,1.255,210,1.144,223,0.885,224,1.144,228,1.539,235,2.566,241,5.029,328,2.615,374,0.635,386,2.12,387,2.196,388,2.12,389,2.12,390,1.432,466,2.524,467,4.055,481,3.114,490,3.944,492,2.462,493,3.305,551,1.733,557,4.349,561,2.842,568,1.663,576,1.484,590,1.993,609,4.651,610,2.233,611,5.704,612,5.369,613,4.55,614,4.791,615,3.236,616,4.791,617,5.622,618,5.704,619,6.304,620,3.236,621,3.935,622,5.704,623,3.236,624,3.236,625,2.842,626,2.842,627,3.236,628,3.236,629,2.582,630,2.842,631,2.582,632,5.622,633,2.582,634,2.582,635,2.842,636,3.114,637,2.582,638,2.233,639,3.513,640,1.993,641,2.582,642,2.842,643,4.206,644,2.842,645,2.582,646,2.842,647,2.842,648,2.842,649,2.842,650,2.842,651,3.935,652,3.822,653,3.236,654,3.822,655,5.369,656,3.236,657,3.236,658,3.236,659,3.822,660,3.236,661,3.236,662,4.791,663,3.236,664,3.236,665,2.104,666,4.206,667,2.388,668,2.842,669,1.993,670,2.104,671,4.206,672,3.055,673,2.582,674,4.206,675,2.842,676,3.822,677,2.842,678,2.842,679,2.388,680,2.582,681,2.842,682,2.842,683,2.582,684,2.582,685,2.582,686,2.388,687,2.582,688,2.842,689,2.842,690,2.842,691,2.842,692,5.909,693,2.582,694,5.909,695,2.842,696,2.582,697,2.842,698,3.236,699,3.236,700,3.236,701,4.791,702,3.236,703,3.236]],["title/classes/GlobalValidationPipe.html",[0,0.104,704,3.241]],["body/classes/GlobalValidationPipe.html",[0,0.176,1,3.319,2,1.119,3,0.266,4,0.219,5,0.159,8,2.14,11,0.972,16,0.53,19,2.484,21,5.427,22,0.655,25,0.011,39,0.44,41,1.249,43,0.25,45,2.386,48,4.022,55,0.007,56,0.008,57,0.007,61,1.85,65,2.662,70,3.977,80,1.15,81,1.088,187,1.808,210,2.406,223,1.859,234,4.693,275,3.805,376,3.681,403,3.544,425,3.158,429,4.189,507,2.229,549,2.471,551,2.887,584,3.158,704,5.019,705,5.973,706,4.733,707,5.427,708,3.986,709,5.427,710,5.427,711,5.427,712,4.422,713,7.453,714,5.39,715,4.693,716,3.718,717,4.3,718,5.39,719,2.563,720,3.504,721,5.39,722,5.39,723,3.977,724,5.39,725,5.39,726,5.39,727,3.977,728,4.3,729,5.39,730,3.015,731,3.718,732,5.39,733,4.3,734,3.319,735,5.39,736,3.977,737,3.015,738,5.39,739,5.39]],["title/interfaces/ICreateNews.html",[374,0.862,740,2.855]],["body/interfaces/ICreateNews.html",[3,0.261,4,0.215,5,0.156,10,0.501,11,1.211,15,2.92,16,0.599,25,0.011,32,1.317,39,0.342,43,0.387,55,0.006,56,0.008,57,0.006,61,1.812,73,1.785,137,2.775,138,2.688,139,3.385,140,3.596,146,2.337,147,1.036,161,1.614,162,2.421,205,2.971,219,2.611,284,2.114,289,3.432,305,3.252,319,2.859,320,3.335,321,3.322,323,3.695,325,1.984,373,2.828,374,1.609,558,1.984,580,2.337,740,4.364,741,3.643,742,5.895,743,6.198,744,5.356,745,3.432,746,3.643,747,5.356,748,3.643,749,3.643,750,4.636,751,3.432,752,3.252,753,2.954]],["title/interfaces/ICurrentUser.html",[374,0.862,754,2.574]],["body/interfaces/ICurrentUser.html",[3,0.271,4,0.223,5,0.162,8,1.729,10,0.522,11,1.242,16,0.56,25,0.011,29,2.757,32,1.437,43,0.32,55,0.007,56,0.008,57,0.007,148,4.221,157,5.08,185,1.826,208,2.757,348,3.939,374,1.351,558,2.065,754,4.406,755,4.384,756,4.384,757,6.288,758,5.438,759,5.493,760,5.101,761,5.08,762,4.75,763,3.791,764,4.054,765,4.825,766,4.825,767,4.825,768,4.825,769,4.384,770,4.825,771,4.825,772,3.791]],["title/interfaces/IErrorType.html",[243,3.031,374,0.862]],["body/interfaces/IErrorType.html",[3,0.314,4,0.258,5,0.187,10,0.603,11,1.356,12,3.81,15,3.113,16,0.616,25,0.01,32,1.41,43,0.295,50,6.111,55,0.008,56,0.009,57,0.008,243,5.188,374,1.246,558,2.387,773,5.576,774,5.576]],["title/interfaces/ILogger.html",[374,0.862,775,3.241]],["body/interfaces/ILogger.html",[3,0.267,4,0.22,5,0.159,10,0.514,14,4.327,16,0.574,17,1.763,22,0.982,24,1.724,25,0.011,26,1.337,27,1.414,32,1.425,37,2.033,43,0.251,49,2.82,55,0.007,56,0.008,57,0.007,374,1.062,473,4.349,558,2.033,585,5.362,775,5.03,776,4.749,777,5.986,778,4.431,779,6.817,780,6.817,781,5.409,782,5.409,783,5.986,784,5.955,785,5.409,786,5.986,787,5.409,788,5.409,789,5.409,790,5.986,791,5.409,792,4.749,793,4.749]],["title/interfaces/INewsProperties.html",[368,2.705,374,0.862]],["body/interfaces/INewsProperties.html",[0,0.159,3,0.184,4,0.301,5,0.11,8,2.12,10,0.354,11,0.958,15,2.782,16,0.571,25,0.011,26,0.617,27,1.288,32,1.363,39,0.493,43,0.331,45,1.651,55,0.005,56,0.006,57,0.005,80,0.796,81,1.248,137,3.112,138,2.698,139,2.836,141,1.651,144,1.174,147,1.398,161,1.141,162,1.71,166,2.425,182,2.06,185,0.864,192,3.019,193,1.174,194,1.402,198,2.526,205,2.737,210,2.187,219,2.383,233,2.971,254,2.425,284,1.494,296,3.055,302,3.112,306,2.425,307,3.46,308,2.971,311,2.087,314,1.917,317,2.087,318,2.425,319,2.798,320,3.217,321,3.166,322,3.804,323,3.387,324,4.914,325,2.863,326,4.63,327,4.386,328,1.71,330,4.562,333,2.425,335,2.425,338,2.574,339,3.452,340,2.574,341,2.425,342,1.843,343,2.297,344,2.574,347,3.312,348,1.774,350,3.609,351,3.949,355,2.297,357,2.297,359,2.574,367,2.574,368,4.15,370,4.381,371,2.574,372,2.971,373,1.998,374,0.732,375,2.574,376,1.843,377,2.574,378,2.574,379,2.574,380,2.574,381,2.574,382,2.574,383,2.574,384,2.574,385,3.664,386,2.737,387,2.836,388,2.737,389,2.737,390,2.737,391,3.624,392,3.178,393,2.574,394,3.664,395,2.574,396,2.574,397,4.267,398,2.186,399,2.186,558,1.402]],["title/interfaces/INewsScope.html",[374,0.862,751,2.855]],["body/interfaces/INewsScope.html",[3,0.265,4,0.218,5,0.158,10,0.51,11,1.224,15,2.019,16,0.585,25,0.011,27,1.293,32,1.091,39,0.347,43,0.388,55,0.006,56,0.008,57,0.006,61,1.844,73,1.805,137,2.797,138,2.717,139,3.412,140,3.635,146,2.377,147,1.054,161,1.642,162,2.463,205,3.004,219,1.899,284,2.15,289,3.491,305,3.308,319,2.867,320,3.348,321,2.297,323,2.554,325,2.019,373,2.877,374,1.616,558,2.019,580,2.377,740,3.491,741,3.706,742,4.716,743,5.415,744,5.415,745,3.491,746,3.706,747,6.237,748,3.706,749,3.706,750,5.96,751,4.412,752,4.815,753,4.163]],["title/interfaces/IPagination.html",[374,0.862,794,3.031]],["body/interfaces/IPagination.html",[3,0.319,4,0.263,5,0.191,10,0.614,11,1.371,16,0.54,25,0.01,27,1.379,29,3.446,43,0.3,55,0.008,56,0.009,57,0.008,374,1.27,558,2.431,794,5.245,795,5.68,796,5.132,797,5.132]],["title/modules/InterceptorModule.html",[84,1.201,261,3.031]],["body/modules/InterceptorModule.html",[0,0.138,3,0.288,4,0.237,5,0.172,25,0.011,39,0.499,41,1.35,43,0.27,55,0.007,56,0.009,57,0.007,61,2,70,4.298,84,1.951,86,2.189,91,2.409,207,4.183,208,2.332,261,4.925,275,3.994,276,5.325,446,3.413,455,4.64,457,3.668,496,5.695,576,3.689,708,4.183,719,3.395,730,3.259,798,5.825,799,6.268,800,4.925,801,5.267,802,4.396,803,8.046,804,3.668,805,5.267,806,5.695,807,5.936,808,3.786]],["title/injectables/JwtAuthGuard.html",[127,1.201,809,3.241]],["body/injectables/JwtAuthGuard.html",[0,0.157,3,0.328,4,0.27,5,0.196,8,2.087,25,0.011,39,0.499,41,1.537,43,0.308,55,0.008,56,0.009,57,0.008,101,4.895,127,2.109,128,3.042,809,5.693,810,5.826,811,5.826,812,6.635,813,6.635]],["title/interfaces/JwtConstants.html",[105,2.855,374,0.862]],["body/interfaces/JwtConstants.html",[3,0.298,4,0.246,5,0.178,10,0.574,11,1.316,16,0.579,25,0.011,32,1.399,39,0.391,43,0.339,55,0.007,56,0.009,57,0.007,73,1.94,105,5.295,312,4.495,374,1.186,558,2.27,764,4.457,769,4.819,814,4.819,815,7.323,816,6.153,817,6.409,818,6.041,819,6.041,820,4.819,821,6.041,822,6.041,823,6.041,824,5.304,825,5.304]],["title/interfaces/JwtPayload.html",[374,0.862,763,3.031]],["body/interfaces/JwtPayload.html",[3,0.267,4,0.219,5,0.159,8,2.142,10,0.513,11,1.228,16,0.586,25,0.011,29,3.301,32,1.428,43,0.316,55,0.007,56,0.008,57,0.007,148,2.892,157,3.984,185,1.578,208,3.136,348,3.238,374,1.337,558,2.029,754,4.371,755,4.307,756,4.307,757,4.307,758,3.725,759,4.307,760,4.594,761,3.984,762,3.725,763,4.698,764,5.024,765,6.878,766,5.979,767,6.878,768,6.878,769,5.433,770,6.878,771,6.878,772,5.404]],["title/injectables/JwtStrategy.html",[95,3.031,127,1.201]],["body/injectables/JwtStrategy.html",[0,0.136,3,0.284,4,0.234,5,0.17,8,1.812,10,0.547,16,0.409,17,1.834,19,2.56,22,0.862,24,1.229,25,0.011,26,0.953,27,0.953,37,1.449,39,0.532,41,1.335,43,0.267,45,2.549,55,0.007,56,0.009,57,0.007,80,1.229,95,4.891,101,4.25,105,3.744,106,4.595,127,1.938,128,2.641,144,1.812,208,2.838,209,3.797,551,3.085,763,5.781,801,5.231,826,5.058,827,5.76,828,7.09,829,5.76,830,5.667,831,5.76,832,4.595,833,5.058,834,4.891,835,5.76,836,5.76,837,5.76,838,5.76,839,5.76,840,5.76,841,5.76,842,5.76,843,5.76,844,5.76,845,5.76,846,5.76]],["title/classes/Lesson.html",[0,0.104,847,2.705]],["body/classes/Lesson.html",[0,0.124,2,1.09,3,0.259,4,0.213,5,0.155,8,2.105,10,0.499,11,1.207,16,0.582,22,1.024,25,0.011,30,3.754,32,1.075,39,0.476,43,0.244,55,0.006,56,0.008,57,0.006,81,1.351,147,1.314,161,1.606,182,2.595,184,3.207,185,1.797,186,2.768,187,2.239,188,3.068,190,3.068,192,3.007,193,1.653,194,1.974,198,3.957,218,3.305,219,2.367,221,3.305,223,1.829,224,2.367,227,2.939,228,2.498,230,2.498,231,2.498,284,3.278,298,3.078,299,3.078,300,3.078,301,3.078,304,3.078,307,2.939,330,3.921,334,3.235,753,3.744,847,4.121,848,4.613,849,5.434,850,5.876,851,5.253,852,5.253,853,4.613,854,4.613]],["title/injectables/Logger.html",[127,1.201,467,2.257]],["body/injectables/Logger.html",[0,0.136,3,0.285,4,0.235,5,0.17,8,2.233,17,1.493,25,0.011,39,0.459,41,1.337,43,0.268,55,0.007,56,0.009,57,0.007,127,1.94,128,2.646,159,3.554,165,3.971,210,2.041,223,1.577,240,2.554,453,2.646,467,4.307,473,3.797,481,4.614,508,3.229,540,2.468,571,3.751,588,3.647,712,3.751,716,3.981,719,3.376,775,5.917,778,4.997,855,5.067,856,8.02,857,5.771,858,5.771,859,3.981,860,3.981,861,5.067,862,4.258,863,5.771,864,3.554,865,3.554,866,6.233,867,3.229,868,4.258,869,5.771,870,5.771,871,5.067,872,4.258,873,5.067,874,3.382,875,5.771,876,5.771,877,5.771]],["title/modules/LoggerModule.html",[84,1.201,262,2.574]],["body/modules/LoggerModule.html",[0,0.146,3,0.305,4,0.251,5,0.182,25,0.011,39,0.479,41,1.433,43,0.287,55,0.007,56,0.009,57,0.007,84,2.165,86,2.325,87,2.738,88,3.46,89,3.46,90,3.178,91,3.277,92,3.633,96,4.141,97,3.313,98,2.738,262,5.048,467,4.55,878,5.431,879,5.431,880,5.431,881,6.185,882,6.185]],["title/modules/MongoMemoryDatabaseModule.html",[84,1.201,883,3.505]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.109,3,0.228,4,0.188,5,0.136,12,2.2,16,0.438,17,1.197,19,1.542,22,0.749,24,0.987,25,0.011,26,0.765,27,0.765,37,1.55,39,0.497,41,1.072,43,0.343,55,0.006,56,0.007,57,0.006,73,1.963,80,1.576,81,0.934,84,2.019,86,1.739,91,1.914,92,2.121,111,2.377,130,2.686,149,2.466,167,2.962,193,1.938,194,1.739,196,3.691,208,1.852,328,2.825,446,2.711,453,2.825,457,3.165,465,4.004,466,3.065,481,3.007,580,2.048,585,3.007,589,4.004,669,2.849,874,2.711,883,5.525,884,5.525,885,5.569,886,5.525,887,3.691,888,4.626,889,6.161,890,6.945,891,4.626,892,4.502,893,6.753,894,7.691,895,4.626,896,5.409,897,5.449,898,3.691,899,6.082,900,6.44,901,3.007,902,3.691,903,4.062,904,5.409,905,4.545,906,4.545,907,3.691,908,4.004,909,3.691,910,3.007,911,3.192,912,3.413,913,3.691,914,3.192,915,4.062,916,3.413,917,5.409,918,4.062,919,2.588,920,4.062,921,4.062,922,4.626,923,3.192,924,4.626,925,4.626,926,4.915,927,3.192,928,3.413,929,3.192,930,3.413,931,4.626,932,4.626,933,4.626]],["title/classes/News.html",[0,0.104,319,1.464]],["body/classes/News.html",[0,0.144,2,0.631,3,0.15,4,0.266,5,0.09,8,2.062,10,0.289,11,0.825,15,2.588,16,0.589,17,1.182,19,1.013,22,1.017,24,0.975,25,0.011,26,1.011,27,1.267,30,3.157,32,1.314,37,0.765,39,0.462,43,0.304,45,1.345,55,0.004,56,0.006,57,0.004,80,0.648,81,1.323,137,2.463,138,2.86,139,3.157,141,2.432,144,0.956,147,1.286,161,0.929,162,1.394,166,1.976,182,2.541,184,2.528,185,1.595,186,1.891,187,2.189,188,2.096,190,2.096,192,3.172,193,0.956,194,1.142,198,3.397,205,2.432,210,1.943,218,2.258,219,2.318,221,2.258,223,1.502,224,1.943,227,1.7,228,1.446,230,1.446,231,1.446,233,2.558,254,1.976,284,1.217,296,3.237,298,1.781,299,1.781,300,1.781,301,1.781,302,3.581,306,1.976,307,3.074,308,2.558,311,2.558,314,3.14,317,1.7,318,1.976,319,2.801,320,3.067,321,2.945,322,3.367,323,2.907,324,4.216,325,2.588,326,3.973,327,3.764,328,2.519,329,3.373,330,4.406,333,2.972,334,3.384,335,2.972,338,3.154,339,3.973,340,3.154,341,2.972,342,2.258,343,2.815,344,3.154,347,3.273,348,2.174,350,2.943,351,3.22,355,2.815,357,2.815,359,3.154,367,3.154,368,4.399,370,3.973,371,2.097,372,2.558,373,1.628,374,0.597,375,2.097,376,1.501,377,2.097,378,2.097,379,2.097,380,2.097,381,2.097,382,2.097,383,2.097,384,2.097,385,3.154,386,2.432,387,2.519,388,2.432,389,2.432,390,2.432,391,3.22,392,2.823,393,2.097,394,3.154,395,2.097,396,2.097,397,3.791,398,1.781,399,1.781,934,4.572,935,3.04,936,3.04,937,3.04,938,3.04,939,3.04,940,3.04,941,3.04,942,3.04,943,3.04,944,3.04,945,3.04,946,3.04]],["title/controllers/NewsController.html",[433,2.014,947,3.241]],["body/controllers/NewsController.html",[0,0.087,3,0.182,4,0.149,5,0.108,10,0.349,12,1.749,16,0.504,17,1.36,22,0.861,24,1.511,25,0.011,26,1.172,27,1.172,32,1.269,37,1.782,39,0.518,41,0.852,43,0.171,55,0.004,56,0.006,57,0.004,73,2.099,80,1.511,81,0.742,113,1.816,130,3.248,144,2.106,146,2.327,147,1.032,149,3.207,164,1.969,165,2.941,167,3.029,185,1.218,187,1.883,319,2.67,325,1.976,342,2.597,400,4.352,403,3.607,426,1.816,433,1.686,549,2.813,566,2.265,584,4.317,588,3.153,672,2.816,707,2.934,754,4.936,830,2.713,947,3.879,948,3.229,949,3.229,950,4.619,951,4.527,952,6.136,953,4.233,954,3.678,955,4.527,956,3.678,957,5.868,958,3.678,959,5.257,960,3.678,961,7.368,962,3.229,963,4.619,964,3.924,965,4.352,966,3.678,967,3.678,968,5.257,969,3.678,970,4.616,971,5.257,972,4.124,973,5.257,974,3.417,975,4.616,976,3.678,977,4.619,978,5.257,979,3.678,980,4.527,981,3.229,982,3.229,983,4.887,984,3.678,985,3.678,986,2.39,987,3.229,988,3.779,989,3.229,990,2.713,991,3.229,992,3.229,993,2.537,994,2.713,995,3.678,996,3.678,997,3.229,998,3.678,999,3.229,1000,3.229,1001,6.22,1002,3.229,1003,3.229,1004,5.879,1005,2.934,1006,4.616,1007,3.678,1008,3.678,1009,3.678,1010,3.678,1011,3.678,1012,2.713,1013,2.934,1014,3.678,1015,6.136,1016,3.678,1017,3.678,1018,3.678,1019,5.257,1020,3.678]],["title/classes/NewsFilterQuery.html",[0,0.104,963,3.031]],["body/classes/NewsFilterQuery.html",[0,0.157,2,1.081,3,0.257,4,0.212,5,0.154,10,0.495,11,1.201,16,0.521,22,0.891,25,0.011,27,1.352,32,1.242,39,0.5,43,0.242,55,0.006,56,0.008,57,0.006,61,2.742,73,1.385,138,3.198,140,3.929,146,2.946,147,1.022,162,3.363,185,1.542,187,1.95,319,2.723,320,3.095,415,4.592,416,4.592,417,4.761,420,5.061,421,5.31,422,3.724,426,2.573,428,5.31,429,3.208,430,3.594,431,4.156,432,3.386,752,4.518,753,3.724,963,4.592,1021,6.167,1022,4.156,1023,5.209,1024,5.31,1025,6.656,1026,5.209,1027,5.209,1028,5.209,1029,5.209,1030,5.845,1031,6.656,1032,4.592,1033,5.209,1034,5.703,1035,6.656,1036,5.209,1037,6.656,1038,6.788,1039,5.31,1040,5.209,1041,5.209]],["title/classes/NewsMapper.html",[0,0.104,994,3.241]],["body/classes/NewsMapper.html",[0,0.106,2,0.927,3,0.221,4,0.182,5,0.132,10,0.424,15,2.262,16,0.518,17,1.556,22,0.885,24,1.553,25,0.011,26,1.205,27,1.205,37,1.832,39,0.471,43,0.207,55,0.005,56,0.007,57,0.005,73,1.936,80,1.553,81,0.901,138,2.409,139,3.12,140,3.222,144,1.405,147,0.877,319,2.533,320,1.788,321,2.573,323,2.862,325,1.679,328,3.882,400,4.733,403,3.869,549,2.759,584,3.526,740,4.423,749,4.694,751,4.733,752,2.751,963,5.023,977,5.023,993,5.023,994,4.439,1042,3.922,1043,6.017,1044,6.017,1045,4.439,1046,6.017,1047,6.017,1048,4.466,1049,6.017,1050,4.466,1051,6.017,1052,4.466,1053,6.017,1054,4.466,1055,3.295,1056,3.295,1057,6.017,1058,3.295,1059,3.295,1060,3.922,1061,4.466,1062,4.466,1063,4.466,1064,4.466,1065,4.466,1066,3.922,1067,4.466,1068,4.466,1069,4.466,1070,4.466,1071,4.466,1072,4.466,1073,4.466,1074,3.922,1075,4.466,1076,4.466,1077,4.466,1078,4.466,1079,4.466,1080,4.466,1081,4.466,1082,3.922,1083,4.466,1084,3.922,1085,4.466,1086,4.466,1087,3.922,1088,6.017,1089,4.466,1090,4.466,1091,4.466,1092,4.466,1093,6.017,1094,6.017,1095,6.017,1096,4.466,1097,4.466]],["title/modules/NewsModule.html",[84,1.201,1098,3.031]],["body/modules/NewsModule.html",[0,0.128,3,0.268,4,0.221,5,0.16,25,0.011,39,0.534,41,1.258,43,0.252,55,0.007,56,0.008,57,0.007,84,2.044,86,2.04,87,2.402,88,3.036,89,3.036,90,2.789,91,3.093,92,3.428,96,3.822,97,2.907,98,2.402,111,3.511,113,2.681,114,5.367,203,2.581,262,4.838,715,3.745,927,3.745,947,5.041,953,3.745,988,5.364,989,4.766,1098,6.035,1099,4.766,1100,4.766,1101,5.428,1102,4.766,1103,5.085,1104,5.428,1105,4.766,1106,5.428,1107,5.428,1108,4.766,1109,5.428,1110,3.745,1111,3.528,1112,5.999,1113,5.428,1114,5.428,1115,5.428,1116,3.528]],["title/injectables/NewsRepo.html",[127,1.201,1103,2.705]],["body/injectables/NewsRepo.html",[0,0.097,3,0.202,4,0.166,5,0.12,10,0.388,12,1.942,16,0.542,17,1.464,19,1.361,22,0.926,24,1.626,25,0.011,26,1.261,27,1.261,37,1.853,39,0.515,41,0.946,43,0.19,55,0.005,56,0.007,57,0.005,73,1.958,80,1.496,81,0.824,127,1.547,128,1.873,130,3.298,137,2.636,147,0.802,149,3.278,161,1.249,164,2.187,165,3.634,167,3.259,185,1.312,193,1.285,195,2.393,208,1.635,223,1.116,224,1.444,319,2.872,320,1.635,322,2.908,325,2.636,327,3.486,405,3.031,466,2.875,491,2.285,546,4.222,549,2.595,580,2.505,588,2.908,752,4.319,753,3.634,950,3.905,951,4.793,964,4.739,974,3.679,975,4.97,1005,4.516,1006,4.97,1103,3.486,1117,3.586,1118,5.66,1119,5.66,1120,4.516,1121,3.586,1122,5.595,1123,4.084,1124,4.176,1125,5.66,1126,4.084,1127,4.084,1128,4.559,1129,5.391,1130,4.084,1131,5.66,1132,4.084,1133,5.66,1134,4.084,1135,5.66,1136,4.97,1137,5.66,1138,3.905,1139,5.66,1140,4.084,1141,4.084,1142,2.818,1143,3.013,1144,3.905,1145,4.084,1146,4.084,1147,4.084,1148,4.084,1149,4.084,1150,4.084,1151,5.66,1152,4.084,1153,4.084,1154,4.084,1155,4.084,1156,4.084,1157,4.084]],["title/classes/NewsResponse.html",[0,0.104,993,3.031]],["body/classes/NewsResponse.html",[0,0.086,2,0.756,3,0.18,4,0.314,5,0.107,10,0.346,11,0.942,15,2.653,16,0.604,22,1.01,25,0.011,27,1.215,32,1.352,39,0.431,43,0.169,55,0.004,56,0.006,57,0.004,61,2.928,73,1.623,138,2.444,140,3.269,141,3.124,144,2.379,146,2.311,147,1.696,153,3.853,162,2.799,185,1.753,187,2.209,218,3.015,219,2.597,221,3.015,319,2.872,320,2.669,321,3.018,322,3.136,323,2.903,325,2.76,326,3.968,327,3.759,350,1.951,351,2.135,355,4.106,409,4.166,410,3.06,411,4.166,412,3.853,415,4.599,416,4.599,417,4.106,420,4.211,421,4.166,422,2.921,425,4.79,426,1.799,430,2.513,431,4.869,432,3.968,717,4.166,865,3.216,953,3.603,993,3.603,1034,4.919,1158,2.688,1159,6.285,1160,3.643,1161,6.667,1162,3.643,1163,4.869,1164,3.643,1165,3.643,1166,3.643,1167,3.853,1168,3.643,1169,4.211,1170,4.585,1171,3.643,1172,5.36,1173,3.643,1174,4.869,1175,3.643,1176,5.222,1177,3.643,1178,2.906,1179,3.643,1180,3.643,1181,3.643,1182,3.643,1183,3.643,1184,3.853,1185,3.643,1186,5.222,1187,3.643,1188,3.643]],["title/classes/NewsScope.html",[0,0.104,1144,3.031]],["body/classes/NewsScope.html",[0,0.109,2,0.961,3,0.229,4,0.188,5,0.137,10,0.44,11,1.112,16,0.525,17,1.595,22,0.935,24,1.479,25,0.011,26,1.147,27,1.147,37,1.744,39,0.478,43,0.215,55,0.007,56,0.007,57,0.006,73,1.843,80,1.642,81,0.935,138,1.855,143,2.481,147,0.909,193,1.458,194,1.741,219,1.638,223,1.266,224,1.638,319,2.055,320,1.855,323,2.203,466,3.502,483,4.782,491,2.592,546,3.012,549,3.761,553,3.696,621,3.196,752,3.798,753,3.878,919,3.45,1128,4.803,1144,5.459,1189,6.312,1190,4.068,1191,6.931,1192,6.167,1193,6.167,1194,6.167,1195,5.415,1196,8.203,1197,4.633,1198,6.167,1199,4.633,1200,6.167,1201,4.633,1202,6.167,1203,4.633,1204,4.633,1205,4.633,1206,4.92,1207,4.068,1208,6.167,1209,4.008,1210,4.633,1211,4.633,1212,4.008,1213,4.633,1214,4.633,1215,4.633,1216,6.167,1217,4.633,1218,4.633,1219,3.012,1220,4.633,1221,4.633,1222,6.167,1223,4.633,1224,4.633,1225,4.633]],["title/interfaces/NewsTargetFilter.html",[374,0.862,1128,2.855]],["body/interfaces/NewsTargetFilter.html",[3,0.314,4,0.259,5,0.188,10,0.604,11,1.358,16,0.535,25,0.011,39,0.487,43,0.295,55,0.008,56,0.009,57,0.008,137,3.115,138,3.318,139,3.8,147,1.249,161,1.945,320,2.547,374,1.249,552,6.115,558,2.392,1128,4.894,1189,5.076,1226,5.587]],["title/injectables/NewsUc.html",[127,1.201,988,2.705]],["body/injectables/NewsUc.html",[0,0.059,3,0.123,4,0.101,5,0.073,10,0.237,16,0.526,17,1.015,19,0.831,22,0.882,24,1.549,25,0.011,26,1.201,27,1.201,32,0.78,37,1.944,39,0.446,41,0.578,43,0.116,55,0.003,56,0.005,57,0.003,61,0.856,73,2.115,80,1.549,81,0.503,120,3.899,127,1.073,128,1.143,130,3.213,137,3.229,138,2.906,139,2.524,140,3.563,141,3.378,144,1.732,146,1.103,147,0.489,148,4.472,149,3.094,161,0.762,162,1.143,164,1.335,165,4.323,167,3.493,185,1.682,219,1.716,223,0.681,224,1.716,228,2.308,314,2.016,319,2.802,320,2.546,322,1.281,323,1.866,325,0.937,328,2.225,342,3.405,343,2.417,348,2.847,386,1.103,387,1.143,388,1.103,389,1.103,422,1.394,430,1.72,466,3.42,467,3.419,480,2.189,491,1.394,514,3.13,523,3.446,546,4.325,552,2.895,556,1.839,580,1.737,584,4.155,585,2.551,588,3.542,672,2.101,730,1.394,737,1.394,740,3.578,749,3.797,751,4.325,752,3.687,753,2.715,760,2.417,794,3.797,804,2.016,865,1.535,919,1.394,950,2.707,953,3.348,964,3.508,988,2.417,1005,3.13,1032,3.348,1060,2.189,1066,2.189,1074,4.833,1087,3.446,1103,3.916,1105,2.189,1128,2.551,1142,1.72,1143,1.839,1227,1.988,1228,3.924,1229,3.924,1230,3.924,1231,3.924,1232,4.853,1233,2.493,1234,2.493,1235,3.924,1236,2.493,1237,3.924,1238,2.493,1239,3.924,1240,2.493,1241,3.924,1242,2.493,1243,3.924,1244,2.493,1245,2.493,1246,3.924,1247,2.493,1248,2.707,1249,2.493,1250,4.853,1251,2.493,1252,3.924,1253,2.493,1254,2.493,1255,2.493,1256,3.13,1257,4.391,1258,2.493,1259,2.189,1260,2.493,1261,5.505,1262,2.493,1263,2.493,1264,3.924,1265,2.493,1266,4.833,1267,2.493,1268,2.493,1269,2.493,1270,3.924,1271,2.493,1272,3.924,1273,2.493,1274,3.924,1275,2.493,1276,2.493,1277,1.394,1278,4.853,1279,2.493,1280,3.924,1281,2.493,1282,2.493,1283,5.505,1284,2.493,1285,2.189,1286,1.988,1287,2.493,1288,2.493,1289,2.493,1290,2.493,1291,2.189,1292,3.924,1293,2.493,1294,2.493,1295,2.493,1296,3.924,1297,2.493,1298,2.493,1299,2.493,1300,2.493,1301,2.493]],["title/interfaces/PaginationModel.html",[374,0.862,1129,3.031]],["body/interfaces/PaginationModel.html",[3,0.318,4,0.262,5,0.19,10,0.612,11,1.368,12,3.607,16,0.539,25,0.01,27,1.377,29,3.443,43,0.299,55,0.008,56,0.009,57,0.008,374,1.265,558,2.421,796,5.125,797,5.125,1129,5.232,1302,5.657]],["title/classes/PaginationQuery.html",[0,0.104,965,2.855]],["body/classes/PaginationQuery.html",[0,0.166,2,1.18,3,0.281,4,0.231,5,0.168,10,0.54,11,1.269,16,0.5,22,0.855,25,0.011,27,1.32,29,3.344,39,0.455,43,0.264,55,0.007,56,0.009,57,0.007,61,2.414,187,1.87,223,1.922,224,2.487,426,2.809,429,3.502,733,5.611,796,5.049,797,4.703,919,3.935,965,4.572,1034,5.634,1136,6.176,1209,4.572,1303,4.993,1304,5.887,1305,5.686,1306,3.345,1307,6.176,1308,7.034,1309,7.034,1310,7.034,1311,5.686,1312,5.686,1313,7.034,1314,5.686,1315,7.637,1316,4.993,1317,5.686,1318,5.686,1319,5.686,1320,5.686]],["title/classes/PaginationResponse.html",[0,0.104,986,2.855]],["body/classes/PaginationResponse.html",[0,0.129,2,1.136,3,0.27,4,0.223,5,0.161,10,0.52,11,1.239,16,0.576,19,1.825,22,0.985,24,1.168,25,0.011,26,0.906,27,1.342,29,3.529,39,0.354,43,0.254,55,0.007,56,0.008,57,0.007,187,2.093,425,5.02,426,2.705,585,4.466,617,6.469,719,3.856,796,5.172,797,5.172,986,4.466,1321,4.808,1322,5.458,1323,6.87,1324,5.476,1325,5.476,1326,5.476,1327,5.476,1328,5.476,1329,5.476,1330,5.476,1331,5.476,1332,5.476]],["title/injectables/ParseObjectIdPipe.html",[127,1.201,983,3.031]],["body/injectables/ParseObjectIdPipe.html",[0,0.142,3,0.297,4,0.244,5,0.177,10,0.57,16,0.427,17,1.881,22,0.73,24,1.281,25,0.011,26,0.994,27,0.994,32,1.338,37,1.511,39,0.506,41,1.392,43,0.279,55,0.007,56,0.009,57,0.007,73,1.597,80,1.281,81,1.212,127,1.988,128,2.754,137,2.257,161,1.836,177,3.519,186,3.008,193,1.889,195,3.519,224,2.572,481,3.904,720,4.727,983,5.017,1333,6.386,1334,3.895,1335,4.791,1336,7.273,1337,6.006,1338,7.273,1339,6.006,1340,7.273,1341,6.006,1342,6.006]],["title/classes/SchoolInfo.html",[0,0.104,347,2.353]],["body/classes/SchoolInfo.html",[0,0.135,2,1.187,3,0.282,4,0.232,5,0.169,8,2.22,10,0.543,11,1.273,16,0.595,19,1.906,22,0.971,24,1.22,25,0.011,26,1.359,27,0.946,30,3.236,32,1.284,39,0.456,43,0.265,45,2.531,55,0.007,56,0.009,57,0.007,147,1.385,161,1.748,182,3.185,184,2.919,185,1.635,186,2.365,187,2.035,188,2.622,190,2.622,192,2.969,193,1.799,194,2.149,230,2.719,231,2.719,304,3.351,310,3.945,311,3.948,312,4.346,313,5.207,314,2.938,315,4.562,316,4.562,347,3.78,745,3.717,1343,6.722]],["title/classes/SchoolInfoMapper.html",[0,0.104,1056,3.241]],["body/classes/SchoolInfoMapper.html",[0,0.145,2,1.271,3,0.302,4,0.249,5,0.181,10,0.582,16,0.435,17,1.903,22,0.744,24,1.307,25,0.011,26,1.013,27,1.013,37,1.541,39,0.476,43,0.284,55,0.007,56,0.009,57,0.007,73,1.628,80,1.307,81,1.236,147,1.202,328,3.617,347,4.483,403,3.5,1045,5.429,1055,4.518,1056,5.429,1059,4.518,1169,5.646,1344,6.462,1345,4.886,1346,7.359,1347,5.378,1348,6.124,1349,5.378,1350,6.124]],["title/classes/SchoolInfoResponse.html",[0,0.104,1169,3.031]],["body/classes/SchoolInfoResponse.html",[0,0.143,2,1.254,3,0.298,4,0.246,5,0.178,10,0.574,11,1.316,16,0.519,22,0.887,25,0.011,26,1.38,32,1.309,39,0.391,43,0.28,55,0.007,56,0.009,57,0.007,61,2.692,147,1.599,185,1.932,187,1.94,325,3.062,415,5.035,416,5.035,425,4.596,426,2.984,432,3.927,1159,4.819,1169,5.035,1178,4.819,1351,6.886,1352,4.819,1353,5.304,1354,5.304]],["title/classes/SchoolNews.html",[0,0.104,398,2.574]],["body/classes/SchoolNews.html",[0,0.138,2,0.574,3,0.137,4,0.255,5,0.082,8,1.977,10,0.263,11,0.767,15,2.495,16,0.592,17,1.1,22,1.028,24,0.59,25,0.011,26,0.858,27,1.211,30,3.865,32,1.311,37,0.696,39,0.447,43,0.292,45,1.224,55,0.003,56,0.005,57,0.003,80,0.59,81,1.395,137,2.362,138,2.768,139,3.043,141,2.295,144,0.87,147,1.234,161,0.846,162,1.268,166,1.798,182,2.437,184,2.952,185,1.732,186,2.408,187,2.233,188,2.67,190,2.67,192,3.143,193,0.87,194,1.04,198,3.156,205,2.295,210,1.834,218,2.876,219,2.445,221,2.876,223,1.718,224,2.223,227,2.38,228,2.024,230,1.315,231,1.315,233,2.38,254,1.798,284,1.107,296,3.104,298,1.621,299,1.621,300,1.621,301,1.621,302,3.412,306,1.798,307,2.901,308,2.38,311,1.547,314,2.665,317,1.547,318,1.798,319,2.903,320,3.09,321,2.838,322,3.23,323,2.769,324,4.017,325,2.495,326,3.785,327,3.586,328,2.378,329,3.139,330,4.38,332,2.207,333,2.766,334,3.194,335,2.766,336,2.207,337,2.207,338,2.935,339,3.785,340,2.935,341,2.766,342,2.102,343,2.62,344,2.935,345,2.207,346,2.207,347,3.366,348,2.024,349,2.207,350,2.777,351,3.039,352,2.207,353,2.207,354,2.207,355,2.62,356,2.207,357,2.62,358,2.207,359,2.935,360,2.207,361,2.207,362,2.207,363,2.207,364,2.207,365,2.207,366,2.207,367,2.935,368,3.871,369,2.207,370,3.785,371,1.908,372,2.38,373,1.481,374,0.543,375,1.908,376,1.366,377,1.908,378,1.908,379,1.908,380,1.908,381,1.908,382,1.908,383,1.908,384,1.908,385,2.935,386,2.295,387,2.378,388,2.295,389,2.295,390,2.295,391,3.039,392,2.665,393,1.908,394,2.935,395,1.908,396,1.908,397,3.577,398,2.493,399,1.621,1355,2.766]],["title/controllers/ServerController.html",[433,2.014,1356,3.241]],["body/controllers/ServerController.html",[0,0.149,3,0.31,4,0.255,5,0.185,10,0.597,17,1.933,22,0.764,25,0.011,32,1.201,37,1.582,39,0.407,41,1.456,43,0.292,47,2.782,55,0.008,56,0.009,57,0.008,80,1.341,113,3.105,187,1.671,223,2.043,433,3.427,437,7.248,439,4.858,440,3.554,441,5.156,442,3.84,452,4.637,453,2.882,1356,5.514,1357,5.519,1358,6.286]],["title/modules/ServerModule.html",[84,1.201,1359,3.031]],["body/modules/ServerModule.html",[0,0.114,3,0.238,4,0.196,5,0.142,16,0.343,25,0.011,32,0.774,39,0.557,41,1.117,43,0.224,52,2.582,55,0.006,56,0.008,57,0.006,80,1.028,81,0.973,84,1.932,85,5.52,86,1.812,87,2.133,88,2.697,89,2.697,90,2.477,91,1.994,92,2.21,96,3.541,97,2.582,98,2.133,111,3.253,113,3.127,156,2.582,193,1.991,194,1.812,208,1.93,257,5.52,284,2.534,296,3.127,308,3.541,317,3.541,319,2.11,347,3.39,370,4.115,372,3.541,386,2.133,387,2.21,388,2.133,389,2.133,390,2.133,398,3.709,399,3.709,531,3.846,683,3.846,684,3.846,685,3.846,847,3.899,892,4.115,897,3.556,898,3.846,906,3.556,908,4.115,1098,5.52,1356,5.215,1359,5.91,1360,4.233,1361,4.233,1362,5.52,1363,4.82,1364,6.33,1365,6.33,1366,4.82,1367,4.82,1368,4.82,1369,6.33,1370,3.133,1371,4.82,1372,4.82,1373,3.01,1374,4.115,1375,4.82,1376,4.82,1377,4.82,1378,4.82,1379,4.233,1380,2.825,1381,3.133,1382,4.82,1383,4.82,1384,6.33,1385,4.82,1386,3.846,1387,3.326]],["title/classes/Submission.html",[0,0.104,1374,2.855]],["body/classes/Submission.html",[0,0.122,2,1.076,3,0.256,4,0.211,5,0.153,8,2.087,10,0.492,11,1.197,16,0.58,22,1.021,25,0.011,30,3.741,32,1.066,39,0.499,43,0.241,55,0.006,56,0.008,57,0.006,81,1.339,147,1.302,161,1.585,163,3.576,182,2.573,184,3.191,185,1.788,186,2.744,187,2.233,188,3.042,190,3.042,192,2.01,193,1.63,194,1.948,198,3.945,218,3.277,219,2.346,221,3.277,223,1.813,224,2.346,227,2.899,228,2.465,230,2.465,231,2.465,296,3.615,298,3.037,299,3.037,300,3.037,301,3.037,304,3.037,307,3.712,330,4.288,334,4.086,1373,3.48,1374,4.313,1388,4.551,1389,5.838,1390,5.399,1391,6.635,1392,5.183,1393,6.635,1394,5.183,1395,5.183,1396,4.551]],["title/classes/Task.html",[0,0.104,1373,2.089]],["body/classes/Task.html",[0,0.114,2,0.999,3,0.238,4,0.196,5,0.142,8,1.989,10,0.457,11,1.141,16,0.595,22,1.034,25,0.011,26,1.169,27,1.323,30,3.667,32,1.205,39,0.485,43,0.223,55,0.006,56,0.008,57,0.006,81,1.276,147,1.241,161,1.472,182,2.452,184,3.103,185,1.738,186,2.616,187,2.262,188,2.9,190,2.9,192,3.207,193,1.514,194,1.809,198,3.877,218,3.124,219,2.653,221,3.124,223,1.728,224,2.236,227,2.693,228,2.289,230,2.289,231,2.289,284,3.202,298,2.82,299,2.82,300,2.82,301,2.82,304,2.82,307,3.538,330,4.139,334,3.895,466,3.126,753,3.538,847,4.925,850,5.553,853,4.226,1373,3.007,1397,4.226,1398,5.635,1399,4.813,1400,4.813,1401,6.324,1402,4.813,1403,4.813,1404,4.813,1405,4.813,1406,4.226]],["title/controllers/TaskController.html",[433,2.014,1407,3.241]],["body/controllers/TaskController.html",[0,0.122,3,0.255,4,0.21,5,0.152,10,0.491,12,2.457,16,0.367,17,1.712,22,0.628,24,1.102,25,0.011,26,0.855,27,1.095,37,1.3,39,0.548,41,1.197,43,0.24,55,0.009,56,0.008,57,0.006,73,2.049,80,1.102,81,1.043,113,2.551,130,2.834,149,2.651,164,2.766,167,2.209,187,1.373,208,2.068,403,2.457,426,2.551,433,2.368,549,3.533,734,3.181,737,2.89,754,4.516,796,4.077,797,4.077,830,3.811,949,4.536,951,5.391,957,5.316,962,4.536,965,5.511,972,3.181,982,4.536,986,3.358,987,4.536,990,3.811,991,4.536,992,4.536,997,4.536,1012,3.811,1322,4.304,1334,2.766,1373,2.457,1407,4.885,1408,4.536,1409,6.621,1410,5.166,1411,5.166,1412,4.75,1413,4.536,1414,3.564,1415,3.811,1416,5.166,1417,3.811,1418,5.166,1419,4.536,1420,4.536,1421,3.181,1422,6.621,1423,5.166,1424,5.166,1425,3.358,1426,5.166,1427,5.166,1428,5.166,1429,5.166,1430,5.166]],["title/classes/TaskMapper.html",[0,0.104,1415,3.241]],["body/classes/TaskMapper.html",[0,0.141,2,1.239,3,0.295,4,0.243,5,0.176,10,0.567,16,0.424,17,1.874,22,0.726,24,1.274,25,0.011,26,0.988,27,0.988,37,1.502,39,0.469,43,0.277,55,0.007,56,0.009,57,0.007,73,1.587,80,1.274,81,1.205,147,1.172,328,3.578,403,3.446,1045,5.347,1055,4.405,1059,4.405,1082,5.243,1084,5.243,1349,5.243,1373,3.953,1414,5.598,1415,5.347,1431,5.243,1432,7.247,1433,5.971,1434,5.971,1435,5.971,1436,5.971,1437,5.971,1438,5.971,1439,5.971,1440,5.971,1441,5.971,1442,5.971,1443,5.971]],["title/modules/TaskModule.html",[84,1.201,1362,3.031]],["body/modules/TaskModule.html",[0,0.143,3,0.299,4,0.246,5,0.178,25,0.011,39,0.527,41,1.402,43,0.281,55,0.007,56,0.009,57,0.007,84,2.145,86,2.275,87,2.679,88,3.386,89,3.386,90,3.11,91,3.247,92,2.775,96,4.088,97,3.241,98,2.679,113,3.609,1362,5.969,1407,5.791,1412,5.511,1413,5.315,1444,5.315,1445,5.315,1446,5.511,1447,6.053,1448,6.053,1449,5.315]],["title/injectables/TaskRepo.html",[127,1.201,1446,2.855]],["body/injectables/TaskRepo.html",[0,0.1,3,0.21,4,0.173,5,0.125,10,0.404,12,2.022,16,0.414,17,1.505,19,1.417,22,0.707,24,1.242,25,0.011,26,0.963,27,0.963,37,1.07,39,0.511,41,0.985,43,0.197,52,2.277,55,0.005,56,0.007,57,0.005,73,2.051,80,0.907,81,0.858,127,1.591,128,1.95,130,2.573,137,2.682,144,1.338,147,0.835,148,3.553,149,2.33,161,1.3,164,2.277,167,3.051,185,0.985,193,1.831,194,1.598,195,2.492,208,3.089,219,1.504,223,1.162,224,1.504,228,2.022,284,2.856,287,3.137,319,1.417,376,2.1,466,1.882,491,3.256,549,1.95,551,2.277,556,4.294,796,3.584,797,3.584,847,4.086,849,3.137,860,2.934,864,2.619,964,3.41,972,2.619,1121,3.734,1122,5.692,1124,4.294,1129,4.922,1142,2.934,1143,3.137,1144,2.934,1167,3.137,1207,3.734,1322,3.783,1373,3.155,1374,2.764,1390,3.137,1398,5.692,1425,2.764,1446,3.783,1450,3.734,1451,5.82,1452,4.252,1453,5.82,1454,4.252,1455,4.252,1456,3.734,1457,2.277,1458,4.252,1459,3.734,1460,3.392,1461,4.252,1462,2.934,1463,4.252,1464,4.643,1465,3.734,1466,3.137,1467,2.764,1468,3.392,1469,4.252,1470,2.934,1471,3.137,1472,6.635,1473,4.252,1474,5.82,1475,4.252,1476,4.252,1477,4.252,1478,5.82,1479,4.252,1480,4.252,1481,5.82,1482,4.252,1483,3.392,1484,5.82,1485,4.252,1486,4.252,1487,2.764,1488,3.734,1489,4.252,1490,4.252,1491,4.252,1492,4.252,1493,4.643,1494,3.734,1495,3.734,1496,4.252,1497,4.252,1498,4.252,1499,4.252]],["title/classes/TaskResponse.html",[0,0.104,1414,3.031]],["body/classes/TaskResponse.html",[0,0.127,2,1.113,3,0.265,4,0.218,5,0.158,10,0.509,11,1.223,16,0.594,22,1.016,25,0.011,26,1.23,27,1.362,32,1.371,39,0.347,43,0.249,47,3.001,55,0.006,56,0.008,57,0.006,61,1.841,185,1.723,187,2.222,218,3.673,219,2.911,221,3.673,403,3.224,405,3.631,425,5.154,426,2.648,1373,3.224,1398,5.932,1414,4.677,1500,4.708,1501,5.953,1502,3.973,1503,7.435,1504,7.435,1505,5.362,1506,5.362,1507,5.362,1508,5.362,1509,5.362,1510,5.362,1511,5.362,1512,3.956]],["title/injectables/TaskUC.html",[127,1.201,1412,2.855]],["body/injectables/TaskUC.html",[0,0.13,3,0.272,4,0.224,5,0.163,10,0.524,16,0.491,17,1.785,19,1.838,22,0.839,24,1.472,25,0.011,26,1.142,27,1.142,37,1.388,39,0.526,41,1.278,43,0.256,55,0.007,56,0.008,57,0.007,73,1.466,80,1.176,127,1.886,128,2.528,130,2.921,137,2.966,141,2.441,144,1.735,147,1.082,148,2.953,149,2.763,161,1.686,164,2.953,167,2.358,207,3.231,208,3.015,491,3.085,794,5.445,964,4.625,1142,3.804,1143,4.069,1322,4.485,1373,2.623,1412,4.485,1425,5.13,1446,5.388,1449,4.842,1465,4.842,1513,4.842,1514,6.901,1515,5.515,1516,5.515,1517,6.901,1518,5.515,1519,4.399,1520,3.804,1521,5.515,1522,4.069,1523,4.069,1524,4.842,1525,3.804,1526,5.515]],["title/classes/TeamInfo.html",[0,0.104,372,2.458]],["body/classes/TeamInfo.html",[0,0.135,2,1.187,3,0.282,4,0.232,5,0.169,8,2.22,10,0.543,11,1.273,16,0.595,19,1.906,22,0.971,24,1.22,25,0.011,26,1.359,27,0.946,30,3.236,32,1.284,39,0.456,43,0.265,45,2.531,55,0.007,56,0.009,57,0.007,147,1.385,161,1.748,182,3.185,184,2.919,185,1.635,186,2.365,187,2.035,188,2.622,190,2.622,192,2.969,193,1.799,194,2.149,230,2.719,231,2.719,304,3.351,310,3.945,311,3.948,312,4.346,313,5.207,314,2.938,315,4.562,316,4.562,372,3.948,746,3.945,1527,6.722]],["title/classes/TeamNews.html",[0,0.104,399,2.574]],["body/classes/TeamNews.html",[0,0.138,2,0.574,3,0.137,4,0.255,5,0.082,8,1.977,10,0.263,11,0.767,15,2.495,16,0.592,17,1.1,22,1.028,24,0.59,25,0.011,26,0.858,27,1.211,30,3.865,32,1.311,37,0.696,39,0.447,43,0.292,45,1.224,55,0.003,56,0.005,57,0.003,80,0.59,81,1.395,137,2.362,138,2.768,139,3.043,141,2.295,144,0.87,147,1.234,161,0.846,162,1.268,166,1.798,182,2.437,184,2.952,185,1.732,186,2.408,187,2.233,188,2.67,190,2.67,192,3.143,193,0.87,194,1.04,198,3.156,205,2.295,210,1.834,218,2.876,219,2.445,221,2.876,223,1.718,224,2.223,227,2.38,228,2.024,230,1.315,231,1.315,233,2.38,254,1.798,284,1.107,296,3.104,298,1.621,299,1.621,300,1.621,301,1.621,302,3.412,306,1.798,307,2.901,308,2.38,311,1.547,314,2.665,317,1.547,318,1.798,319,2.903,320,3.09,321,2.838,322,3.23,323,2.769,324,4.017,325,2.495,326,3.785,327,3.586,328,2.378,329,3.139,330,4.38,332,2.207,333,2.766,334,3.194,335,2.766,336,2.207,337,2.207,338,2.935,339,3.785,340,2.935,341,2.766,342,2.102,343,2.62,344,2.935,345,2.207,346,2.207,347,3.118,348,2.024,349,2.207,350,2.777,351,3.039,352,2.207,353,2.207,354,2.207,355,2.62,356,2.207,357,2.62,358,2.207,359,2.935,360,2.207,361,2.207,362,2.207,363,2.207,364,2.207,365,2.207,366,2.207,367,2.935,368,3.871,369,2.207,370,3.785,371,1.908,372,2.901,373,1.481,374,0.543,375,1.908,376,1.366,377,1.908,378,1.908,379,1.908,380,1.908,381,1.908,382,1.908,383,1.908,384,1.908,385,2.935,386,2.295,387,2.378,388,2.295,389,2.295,390,2.295,391,3.039,392,2.665,393,1.908,394,2.935,395,1.908,396,1.908,397,3.577,398,1.621,399,2.493,1528,2.766]],["title/injectables/TimeoutInterceptor.html",[127,1.201,807,3.241]],["body/injectables/TimeoutInterceptor.html",[0,0.115,3,0.239,4,0.197,5,0.143,10,0.461,11,1.146,16,0.504,17,1.644,22,0.949,24,1.356,25,0.011,26,1.052,27,1.245,29,3.209,37,1.599,39,0.487,41,1.124,43,0.225,55,0.006,56,0.008,57,0.006,61,1.665,80,1.605,106,3.87,127,1.737,128,2.224,223,1.326,224,1.715,328,3.251,386,2.147,387,2.224,388,3.33,389,2.147,390,2.147,391,2.842,433,2.914,443,4.689,448,5.071,455,4.132,466,3.138,468,5.581,469,5.581,470,5.551,471,6.607,473,2.396,474,6.225,477,3.87,479,4.259,481,3.153,568,3.266,569,3.023,595,3.87,621,3.346,632,3.87,804,2.492,805,5.913,807,4.689,929,4.385,1195,5.581,1529,4.259,1530,6.356,1531,4.385,1532,4.385,1533,4.385,1534,5.071,1535,7.09,1536,7.09,1537,7.09,1538,4.851,1539,4.851,1540,5.231,1541,4.851,1542,4.851,1543,4.851,1544,4.851,1545,4.851,1546,6.356,1547,6.356,1548,4.851,1549,6.356,1550,4.851,1551,4.851,1552,4.851,1553,4.851,1554,4.851,1555,4.851,1556,4.851,1557,6.356,1558,4.851,1559,4.851]],["title/classes/UpdateNewsParams.html",[0,0.104,977,3.031]],["body/classes/UpdateNewsParams.html",[0,0.184,2,1.109,3,0.264,4,0.217,5,0.157,10,0.508,11,1.407,15,3.026,16,0.528,22,0.902,25,0.011,27,1.119,32,1.254,39,0.438,43,0.248,55,0.006,56,0.008,57,0.006,61,2.678,147,1.614,187,1.974,219,2.392,319,2.817,321,3.443,323,3.53,402,3.942,403,3.217,405,3.623,407,4.692,409,5.397,410,3.964,411,5.397,412,4.991,426,2.639,427,5.94,428,5.922,429,3.291,712,4.397,748,4.667,977,4.667,1034,5.757,1038,6.852,1560,6.852,1561,6.765,1562,6.765,1563,4.991,1564,4.667,1565,5.94,1566,6.765,1567,5.344,1568,5.344,1569,5.344]],["title/interfaces/User.html",[144,1.382,374,0.862]],["body/interfaces/User.html",[0,0.109,3,0.228,4,0.188,5,0.136,10,0.439,11,1.111,16,0.492,25,0.011,32,1.236,39,0.497,41,1.072,43,0.215,55,0.006,56,0.007,57,0.006,73,2.229,80,1.687,81,0.934,121,2.711,127,1.684,130,2.982,137,3.12,138,2.466,139,3.176,140,3.299,141,3.5,144,2.612,148,3.299,149,3.079,150,3.007,161,1.414,163,3.192,164,2.478,167,3.289,177,2.711,182,2.389,184,3.055,186,3.339,193,1.455,195,2.711,325,1.739,348,3.761,374,0.908,439,4.004,440,2.2,466,2.048,511,3.691,512,3.413,514,3.691,517,3.691,519,3.875,521,4.062,525,4.062,527,4.062,531,4.915,532,4.062,533,3.691,534,5.409,535,3.691,536,5.409,537,5.409,538,4.062,539,4.062,540,2.962,541,4.062,542,5.409,543,5.409,544,5.409,545,4.062,546,3.007,547,4.062,548,4.062,549,2.121,550,4.062,551,2.478,552,4.545,553,3.691,554,4.062,555,4.062,556,3.413,558,1.739]],["title/classes/UserInfo.html",[0,0.104,296,2.17]],["body/classes/UserInfo.html",[0,0.131,2,1.146,3,0.273,4,0.225,5,0.163,8,2.173,10,0.525,11,1.246,16,0.598,19,1.841,22,0.988,24,1.179,25,0.011,26,0.914,27,0.914,30,3.167,32,1.352,39,0.447,43,0.256,45,2.445,55,0.007,56,0.008,57,0.007,147,1.356,161,1.689,182,3.153,184,2.857,185,1.601,186,2.285,187,2.1,188,2.533,190,2.533,192,3.153,193,1.738,194,2.076,230,2.627,231,2.627,296,3.412,304,3.237,310,3.811,311,3.865,312,4.255,313,4.076,314,2.839,760,3.402,1570,6.935,1571,6.935,1572,6.935,1573,6.908,1574,5.524,1575,5.524,1576,5.524,1577,5.524]],["title/classes/UserInfoMapper.html",[0,0.104,1058,3.241]],["body/classes/UserInfoMapper.html",[0,0.144,2,1.263,3,0.301,4,0.247,5,0.179,10,0.578,16,0.433,17,1.897,22,0.74,24,1.299,25,0.011,26,1.007,27,1.007,37,1.532,39,0.474,43,0.283,55,0.007,56,0.009,57,0.007,73,1.619,80,1.299,81,1.229,147,1.195,296,4.128,328,3.608,403,3.487,1045,5.41,1055,4.492,1058,5.41,1059,4.492,1163,5.635,1345,4.857,1347,5.346,1578,6.439,1579,7.333,1580,6.088,1581,6.088,1582,6.088,1583,6.088,1584,6.088]],["title/classes/UserInfoResponse.html",[0,0.104,1163,3.031]],["body/classes/UserInfoResponse.html",[0,0.137,2,1.202,3,0.286,4,0.235,5,0.171,10,0.55,11,1.283,16,0.547,22,0.936,25,0.011,26,1.329,32,1.348,39,0.375,43,0.269,55,0.007,56,0.009,57,0.007,61,2.756,144,2.639,147,1.396,185,1.91,187,2.047,415,4.908,416,4.908,425,4.706,426,2.861,432,3.765,1159,5.676,1163,4.908,1178,4.621,1352,4.621,1353,5.086,1354,5.086,1571,6.761,1572,6.761,1585,7.051,1586,4.908,1587,6.247,1588,5.793]],["title/classes/ValidationErrorDetailResponse.html",[0,0.104,68,3.241]],["body/classes/ValidationErrorDetailResponse.html",[0,0.152,2,1.337,3,0.318,4,0.262,5,0.19,12,3.064,16,0.458,19,2.147,22,0.783,24,1.374,25,0.01,26,1.066,27,1.066,32,1.382,43,0.299,44,5.657,49,3.137,55,0.008,56,0.009,57,0.008,65,3.981,68,5.595,1589,6.659,1590,5.657,1591,6.442,1592,6.442,1593,6.05]],["title/modules/ValidationModule.html",[84,1.201,263,3.031]],["body/modules/ValidationModule.html",[0,0.153,3,0.319,4,0.262,5,0.19,25,0.011,39,0.522,41,1.496,43,0.3,55,0.008,56,0.009,57,0.008,84,2.075,86,2.426,91,2.67,263,5.238,277,6.667,446,3.783,457,3.317,496,5.15,704,5.602,1594,6.456,1595,6.456,1596,6.456]],["title/changelog.html",[1597,2.723,1598,2.723,1599,3.241]],["body/changelog.html",[0,0.053,2,0.857,3,0.034,4,0.028,5,0.134,10,0.066,13,1.134,14,0.371,22,0.274,25,0.003,26,0.299,27,0.299,29,0.515,37,0.454,39,0.117,47,2.422,48,1.716,49,2.313,51,1.245,53,0.426,55,0.002,56,0.003,57,0.002,65,2.04,80,0.148,81,1.128,84,0.352,87,0.57,92,0.317,97,0.689,98,0.57,125,0.858,130,0.268,141,1.336,143,0.371,144,2.145,146,0.306,148,0.689,149,0.515,150,0.45,153,0.51,156,0.966,157,1.331,165,0.387,167,0.296,177,0.405,185,0.523,197,0.51,202,0.426,203,2.163,206,0.552,209,1.943,210,1.608,212,2.895,214,0.888,215,0.45,219,0.941,223,0.617,224,0.455,235,0.371,236,0.477,237,0.72,238,1.559,239,0.837,240,0.306,269,0.552,271,2.684,273,2.359,284,1.208,287,2.677,289,0.45,302,1.324,305,1.391,321,0.55,322,0.927,325,2.479,341,0.45,342,1.792,348,0.329,350,0.966,357,0.426,373,1.425,374,0.136,376,0.342,386,0.799,387,0.59,390,0.57,392,0.356,404,1.331,405,0.689,410,1.769,417,0.793,422,1.264,439,3.187,440,2.067,441,0.477,442,1.551,452,0.51,453,1.784,457,0.661,465,0.45,473,0.342,483,4.591,491,1.01,502,0.888,504,0.608,506,1.324,507,0.532,508,0.72,509,0.45,535,1.027,540,3.079,549,1.22,551,0.689,567,0.387,568,0.356,569,1.726,570,1.957,572,1.962,576,1.384,580,1,584,0.405,588,0.356,590,0.426,592,0.552,594,2.235,608,0.477,612,0.552,633,0.552,634,1.027,636,0.45,638,0.477,640,0.793,651,0.477,655,1.027,665,1.468,667,0.95,672,2.084,686,0.51,687,1.44,696,0.552,708,1.769,710,0.552,711,1.802,712,1.729,715,2.304,716,1.245,717,2.664,719,1.964,728,2.408,730,2.176,733,0.552,734,1.111,736,1.963,737,0.387,745,3.076,746,1.558,748,0.477,758,1.558,759,2.895,760,4.286,761,0.95,762,0.888,764,0.51,772,1.245,778,1.173,802,0.426,804,1.551,806,3.104,816,0.51,820,0.552,830,1.331,832,2.664,834,1.245,847,0.793,854,1.585,860,5.195,862,0.51,865,0.793,867,4.412,871,0.608,874,1.957,885,0.888,892,0.45,901,0.837,914,0.477,916,0.51,919,0.72,926,1.027,927,1.245,928,2.464,929,0.477,930,0.95,950,1.558,953,2.082,964,0.754,972,1.111,974,1.173,981,2.65,1012,0.51,1024,0.552,1030,2.65,1111,0.45,1112,4.155,1116,0.837,1138,0.477,1167,1.331,1184,2.227,1209,1.173,1212,0.837,1219,1.173,1248,0.477,1277,1.01,1285,0.608,1286,2.122,1304,4.286,1306,1.074,1307,0.608,1316,0.608,1334,1.21,1370,1.962,1373,0.612,1374,0.837,1380,4.176,1381,1.729,1386,1.44,1387,0.477,1389,3.104,1390,0.51,1396,1.585,1406,1.585,1417,0.95,1421,0.793,1425,0.837,1456,0.608,1457,1.425,1460,0.552,1462,0.888,1464,2.408,1467,1.173,1471,0.95,1483,0.552,1487,0.837,1488,1.13,1493,0.552,1501,0.608,1502,1.324,1512,0.95,1519,0.552,1520,0.477,1525,0.477,1531,0.888,1532,0.888,1540,0.51,1563,2.227,1564,0.888,1586,0.888,1587,1.585,1593,1.027,1599,2.65,1600,0.692,1601,1.245,1602,1.027,1603,0.608,1604,1.558,1605,0.692,1606,0.692,1607,1.805,1608,1.027,1609,3.046,1610,5.591,1611,7.278,1612,4.154,1613,0.692,1614,7.779,1615,0.692,1616,6.765,1617,1.13,1618,2.082,1619,0.888,1620,1.13,1621,0.608,1622,0.692,1623,6.914,1624,4.902,1625,4.732,1626,0.692,1627,0.692,1628,6.655,1629,1.287,1630,0.692,1631,4.129,1632,3.628,1633,0.692,1634,4.902,1635,0.692,1636,0.692,1637,3.018,1638,0.692,1639,2.661,1640,0.692,1641,1.983,1642,4.548,1643,0.692,1644,0.692,1645,1.805,1646,0.692,1647,1.983,1648,0.692,1649,1.963,1650,1.983,1651,0.692,1652,1.805,1653,3.104,1654,1.13,1655,1.13,1656,1.287,1657,1.287,1658,1.983,1659,3.339,1660,1.287,1661,0.692,1662,0.608,1663,0.692,1664,2.932,1665,0.692,1666,3.491,1667,0.692,1668,1.287,1669,0.692,1670,0.692,1671,1.13,1672,1.983,1673,0.692,1674,1.13,1675,0.692,1676,1.468,1677,3.626,1678,0.692,1679,0.608,1680,0.692,1681,5.06,1682,2.932,1683,3.018,1684,1.287,1685,1.287,1686,0.692,1687,0.552,1688,0.608,1689,0.692,1690,0.692,1691,0.692,1692,0.608,1693,0.692,1694,1.805,1695,0.692,1696,0.608,1697,2.661,1698,2.336,1699,0.608,1700,0.692,1701,0.692,1702,0.692,1703,0.692,1704,1.805,1705,0.692,1706,1.859,1707,0.692,1708,1.13,1709,0.692,1710,1.287,1711,0.692,1712,0.608,1713,1.287,1714,0.692,1715,1.585,1716,1.027,1717,0.692,1718,0.692,1719,1.287,1720,1.287,1721,0.692,1722,5.106,1723,2.464,1724,0.692,1725,1.173,1726,0.692,1727,0.692,1728,2.408,1729,0.692,1730,0.692,1731,2.259,1732,3.891,1733,0.692,1734,3.294,1735,0.692,1736,0.692,1737,1.585,1738,1.13,1739,0.552,1740,0.692,1741,0.692,1742,0.692,1743,2.895,1744,1.287,1745,1.287,1746,1.287,1747,1.13,1748,1.287,1749,0.692,1750,1.585,1751,0.692,1752,0.692,1753,1.331,1754,0.692,1755,2.126,1756,0.692,1757,1.287,1758,0.692,1759,2.932,1760,0.692,1761,1.13,1762,1.983,1763,0.692,1764,1.027,1765,0.692,1766,1.585,1767,1.983,1768,0.692,1769,0.692,1770,1.027,1771,0.692,1772,4.732,1773,0.692,1774,0.692,1775,0.692,1776,0.692,1777,5.06,1778,3.018,1779,1.287,1780,0.692,1781,0.692,1782,0.692,1783,0.692,1784,0.692,1785,0.692,1786,1.13,1787,0.692,1788,4.129,1789,0.692,1790,1.805,1791,2.65,1792,0.692,1793,1.585,1794,0.692,1795,0.692,1796,1.13,1797,0.692,1798,0.692,1799,2.661,1800,1.13,1801,0.692,1802,1.805,1803,0.692,1804,0.608,1805,0.692,1806,0.692,1807,1.287,1808,1.802,1809,0.692,1810,0.692,1811,1.13,1812,0.692,1813,0.692,1814,0.608,1815,1.027,1816,1.287,1817,1.963,1818,3.018,1819,0.692,1820,0.692,1821,0.692,1822,0.552,1823,1.287,1824,0.692,1825,1.287,1826,1.802,1827,1.287,1828,0.692,1829,0.692,1830,0.692,1831,0.692,1832,2.661,1833,0.608,1834,0.692,1835,1.287,1836,0.692,1837,0.608,1838,2.259,1839,1.13,1840,0.692,1841,1.287,1842,1.805,1843,1.962,1844,0.692,1845,0.692,1846,0.477,1847,0.692,1848,0.692,1849,1.287,1850,0.692,1851,1.638,1852,0.552,1853,0.692,1854,1.585,1855,0.692,1856,0.692,1857,1.805,1858,0.692,1859,0.692,1860,1.287,1861,0.837,1862,1.805,1863,0.692,1864,0.692,1865,0.692,1866,0.692,1867,1.287,1868,0.692,1869,1.805,1870,1.13,1871,1.983,1872,0.692,1873,3.626,1874,0.552,1875,0.692,1876,1.245,1877,1.287,1878,1.667,1879,0.692,1880,0.692,1881,0.692,1882,0.692,1883,1.805,1884,1.983,1885,0.692,1886,1.805,1887,0.608,1888,0.692,1889,1.805,1890,2.65,1891,0.692,1892,0.692,1893,0.692,1894,1.805,1895,0.692,1896,0.692,1897,0.692,1898,1.287,1899,0.692,1900,1.585,1901,1.287,1902,0.692,1903,0.692,1904,0.692,1905,0.692,1906,0.692,1907,0.95,1908,0.51,1909,0.95,1910,0.552,1911,0.692,1912,0.692,1913,0.608,1914,1.13,1915,0.692,1916,0.692,1917,0.692,1918,4.902,1919,0.692,1920,1.805,1921,0.692,1922,0.692,1923,0.692,1924,2.259,1925,0.692,1926,1.287,1927,1.287,1928,0.692,1929,0.692,1930,0.692,1931,1.287,1932,0.692,1933,0.692,1934,0.692,1935,0.608,1936,0.608,1937,0.692,1938,0.692,1939,0.608,1940,0.692,1941,1.287,1942,0.608,1943,0.692,1944,0.692,1945,0.692,1946,0.692,1947,0.692,1948,0.692,1949,0.692,1950,0.692,1951,3.018,1952,0.692,1953,0.692,1954,0.692,1955,0.692,1956,0.692,1957,0.692,1958,0.692,1959,1.287,1960,0.692,1961,0.692,1962,1.805,1963,0.692,1964,1.287,1965,0.692,1966,1.468,1967,0.692,1968,1.287,1969,0.608,1970,0.692,1971,0.608,1972,0.692,1973,1.287,1974,0.692,1975,0.692,1976,0.692,1977,2.661,1978,0.692,1979,0.692,1980,0.552,1981,0.692,1982,0.692,1983,0.692,1984,0.692,1985,0.692,1986,0.692,1987,0.692,1988,0.692,1989,0.51,1990,0.692,1991,1.805,1992,0.692,1993,0.51,1994,0.692,1995,0.692,1996,0.692,1997,0.692,1998,1.01,1999,0.793,2000,1.805,2001,1.287,2002,0.692,2003,1.805,2004,0.692,2005,1.983,2006,0.692,2007,0.692,2008,2.661,2009,3.018,2010,0.692,2011,0.692,2012,0.692,2013,3.018,2014,0.692,2015,1.287,2016,0.692,2017,0.692,2018,1.287,2019,0.552,2020,1.287,2021,0.608,2022,1.44,2023,0.692,2024,0.692,2025,0.552,2026,1.324,2027,0.692,2028,7.729,2029,2.664,2030,0.692,2031,0.692,2032,0.552,2033,0.692,2034,0.692,2035,0.692,2036,0.692,2037,0.692,2038,3.018,2039,0.692,2040,1.331,2041,0.692,2042,0.692,2043,0.692,2044,0.692,2045,0.692,2046,2.259,2047,2.259,2048,2.336,2049,1.667,2050,1.585,2051,2.661,2052,1.287,2053,1.287,2054,3.186,2055,1.667,2056,3.339,2057,1.287,2058,1.287,2059,1.245,2060,1.287,2061,1.027,2062,1.027,2063,1.287,2064,0.692,2065,0.692,2066,2.932,2067,0.552,2068,0.45,2069,2.661,2070,1.13,2071,0.692,2072,0.552,2073,0.477,2074,0.51,2075,0.692,2076,0.692,2077,0.608,2078,1.13,2079,0.692,2080,1.287,2081,0.692,2082,0.692,2083,1.287,2084,0.692,2085,0.692,2086,1.287,2087,0.692,2088,0.692,2089,1.287,2090,0.692,2091,0.692,2092,0.692,2093,0.608,2094,1.558,2095,0.692,2096,0.692,2097,1.13,2098,0.51,2099,0.692,2100,1.805,2101,2.122,2102,0.692,2103,0.608,2104,1.287,2105,0.692,2106,0.692,2107,0.608,2108,0.692,2109,3.416,2110,1.287,2111,0.692,2112,0.692,2113,0.692,2114,0.692,2115,0.692,2116,1.13,2117,1.13,2118,2.259,2119,1.802,2120,0.692,2121,1.805,2122,0.692,2123,0.692,2124,1.44,2125,0.692,2126,0.692,2127,0.692,2128,1.287,2129,1.805,2130,0.552,2131,0.692,2132,0.692,2133,0.692,2134,0.692,2135,1.287,2136,0.692,2137,1.027,2138,0.608,2139,1.287,2140,0.692,2141,0.608,2142,0.692,2143,0.692,2144,0.692,2145,1.287,2146,1.287,2147,0.692,2148,1.287,2149,0.692,2150,0.692,2151,0.692,2152,0.692,2153,0.692,2154,1.729,2155,1.805,2156,1.805,2157,1.667,2158,0.477,2159,2.122,2160,0.692,2161,1.805,2162,1.287,2163,0.45,2164,0.426,2165,0.608,2166,0.692,2167,0.692,2168,0.608,2169,0.51,2170,1.287,2171,1.331,2172,1.805,2173,1.13,2174,0.692,2175,0.608,2176,0.692,2177,0.608,2178,0.692,2179,0.692,2180,0.692,2181,1.835,2182,0.692,2183,0.692,2184,0.692,2185,0.692,2186,0.95,2187,0.692,2188,0.692,2189,0.692,2190,0.692,2191,0.692,2192,0.692,2193,1.287,2194,0.608,2195,0.552,2196,0.608,2197,0.692,2198,0.608,2199,0.692,2200,0.552,2201,1.13,2202,0.692,2203,1.44,2204,0.692,2205,0.692,2206,0.692,2207,1.287,2208,0.692,2209,0.692,2210,0.692,2211,0.692,2212,0.692,2213,1.027,2214,0.692,2215,0.692,2216,1.287,2217,0.692,2218,0.692,2219,0.692,2220,2.259,2221,0.608,2222,0.692,2223,1.287,2224,0.692,2225,0.692,2226,1.287,2227,1.287,2228,1.287,2229,1.805,2230,1.805,2231,1.983,2232,1.287,2233,1.585,2234,1.027,2235,0.608,2236,0.477,2237,0.692,2238,0.552,2239,0.608,2240,0.692,2241,0.888,2242,0.692,2243,1.805,2244,0.692,2245,0.692,2246,0.692,2247,0.692,2248,1.835,2249,0.608,2250,1.44,2251,0.692,2252,1.287,2253,1.027,2254,1.805,2255,1.13,2256,0.692,2257,0.692,2258,0.692,2259,1.287,2260,1.44,2261,1.13,2262,1.287,2263,0.692,2264,0.692,2265,0.692,2266,0.692,2267,0.692,2268,0.692,2269,0.692,2270,0.692,2271,0.692,2272,0.608,2273,0.608,2274,0.692,2275,0.692,2276,1.805,2277,0.692,2278,1.287,2279,0.692,2280,1.13,2281,0.692,2282,1.287,2283,0.692,2284,1.287,2285,0.477,2286,0.692,2287,1.027,2288,0.692,2289,0.692,2290,0.608,2291,0.692,2292,0.692,2293,0.608,2294,1.805,2295,2.259,2296,1.287,2297,0.837,2298,1.13,2299,1.287,2300,1.13,2301,1.287,2302,0.888,2303,0.692,2304,1.287,2305,0.608,2306,0.692,2307,1.287,2308,1.13,2309,0.692,2310,0.692,2311,0.692,2312,0.608,2313,0.692,2314,0.692,2315,1.287,2316,0.692,2317,0.692,2318,2.65,2319,1.027,2320,0.692,2321,3.628,2322,0.692,2323,0.608,2324,0.608,2325,0.692,2326,0.692,2327,0.692,2328,0.692,2329,2.259,2330,0.692,2331,0.692,2332,1.44,2333,0.692,2334,0.692,2335,0.692,2336,0.692,2337,0.608,2338,1.13,2339,0.692,2340,0.692,2341,0.692,2342,0.692,2343,1.027,2344,0.692,2345,0.692,2346,0.692,2347,1.13,2348,0.692,2349,0.692,2350,0.692,2351,0.692,2352,0.692,2353,1.983,2354,0.692,2355,0.692,2356,0.552,2357,0.692,2358,0.552,2359,0.692,2360,0.692,2361,0.608,2362,0.692,2363,0.51,2364,0.692,2365,0.692,2366,0.608,2367,0.692,2368,0.692,2369,0.692,2370,0.692,2371,0.692,2372,0.692,2373,0.692,2374,1.805,2375,0.552,2376,0.692,2377,0.552,2378,0.692,2379,0.692,2380,0.692,2381,0.692,2382,1.805,2383,0.692,2384,1.287,2385,1.805,2386,1.287,2387,1.287,2388,1.287,2389,1.287,2390,0.692,2391,1.287,2392,1.287,2393,0.692,2394,0.692,2395,0.692,2396,0.692,2397,0.692,2398,0.608,2399,0.692,2400,1.287,2401,0.692,2402,0.692,2403,0.51,2404,0.692,2405,0.552,2406,0.692,2407,1.287,2408,0.692,2409,0.608,2410,0.692,2411,0.692,2412,0.692,2413,0.692,2414,0.552,2415,0.692,2416,0.692,2417,1.805,2418,1.805,2419,0.692,2420,1.287,2421,0.692,2422,0.692,2423,1.13,2424,0.692,2425,0.692,2426,0.692,2427,0.692,2428,0.692,2429,0.692,2430,0.692,2431,1.287,2432,0.608,2433,0.692,2434,0.608,2435,0.692,2436,0.692,2437,0.692,2438,0.692,2439,0.692,2440,0.692,2441,0.692,2442,0.692,2443,0.692,2444,1.287,2445,1.287,2446,0.692,2447,0.608,2448,0.692,2449,0.692,2450,0.692,2451,1.287,2452,0.692,2453,0.692,2454,1.287,2455,0.692,2456,1.585,2457,1.287,2458,0.692,2459,0.692,2460,1.287,2461,0.45,2462,2.259,2463,0.692,2464,0.692,2465,0.692,2466,0.692,2467,0.552,2468,0.692,2469,0.95,2470,0.608,2471,0.608,2472,1.287,2473,0.692,2474,0.692,2475,1.287,2476,0.692,2477,0.692,2478,0.692,2479,0.692,2480,0.692,2481,1.287,2482,0.692,2483,0.692,2484,0.692,2485,0.692,2486,0.692,2487,0.692,2488,0.692,2489,1.805,2490,0.692,2491,0.692,2492,0.692,2493,0.692,2494,0.692,2495,0.692,2496,0.692,2497,0.692,2498,1.287,2499,1.287,2500,0.692,2501,0.692,2502,0.692,2503,2.259,2504,4.548,2505,1.287,2506,1.13,2507,1.13,2508,1.287,2509,2.259,2510,1.13,2511,1.287,2512,0.692,2513,1.287,2514,1.13,2515,1.287,2516,1.287,2517,1.287,2518,1.13,2519,1.287,2520,2.259,2521,1.287,2522,2.259,2523,1.287,2524,1.287,2525,1.13,2526,1.13,2527,1.805,2528,1.287,2529,0.692,2530,0.692,2531,1.287,2532,0.95,2533,0.477,2534,1.287,2535,0.692,2536,2.661,2537,1.287,2538,0.692,2539,0.608,2540,0.692,2541,2.259,2542,0.692,2543,0.692,2544,0.692,2545,0.692,2546,0.692,2547,0.477,2548,0.608,2549,0.692,2550,0.692,2551,0.692,2552,1.287,2553,1.287,2554,1.287,2555,0.692,2556,0.692,2557,0.692,2558,0.608,2559,0.552,2560,0.692,2561,0.692,2562,1.287,2563,1.287,2564,0.692,2565,0.692,2566,0.692,2567,1.287,2568,0.51,2569,0.692,2570,0.692,2571,0.692,2572,1.287,2573,0.692,2574,1.805,2575,1.585,2576,0.692,2577,0.692,2578,0.552,2579,1.287,2580,1.287,2581,0.692,2582,0.51,2583,0.692,2584,0.692,2585,1.805,2586,1.287,2587,0.692,2588,1.287,2589,0.552,2590,0.692,2591,1.287,2592,0.692,2593,0.692,2594,0.692,2595,2.259,2596,0.692,2597,0.692,2598,0.692,2599,0.692,2600,0.692,2601,0.692,2602,0.692,2603,1.287,2604,0.692,2605,0.692,2606,0.692,2607,0.608,2608,1.287,2609,0.692,2610,1.287,2611,0.692,2612,0.692,2613,0.552,2614,0.692,2615,1.287,2616,2.259,2617,0.692,2618,0.608,2619,0.692,2620,1.287,2621,1.287,2622,0.692,2623,0.692,2624,0.608,2625,1.287,2626,0.692,2627,0.692,2628,1.287,2629,0.552,2630,0.552,2631,1.287,2632,0.692,2633,0.692,2634,0.692,2635,1.287,2636,1.287,2637,0.692,2638,0.692,2639,1.287,2640,0.692,2641,0.692,2642,0.692,2643,0.692,2644,1.287,2645,0.692,2646,0.692,2647,0.552,2648,0.692,2649,2.259,2650,0.552,2651,0.692,2652,0.692,2653,1.287,2654,0.608,2655,0.51,2656,1.287,2657,0.692,2658,2.661,2659,1.287,2660,0.552,2661,1.287,2662,0.552,2663,0.692,2664,0.692,2665,0.552,2666,0.692,2667,0.692,2668,0.692,2669,0.692,2670,0.692,2671,0.692,2672,0.692,2673,0.692,2674,0.692,2675,0.692,2676,0.692,2677,0.692,2678,1.13,2679,0.692,2680,0.692,2681,0.692,2682,0.692,2683,0.692,2684,0.552,2685,0.692,2686,0.692,2687,0.692,2688,0.692,2689,0.692,2690,0.692,2691,0.692,2692,0.608,2693,0.477,2694,0.692,2695,0.692,2696,0.608,2697,1.805,2698,0.692,2699,0.608,2700,0.608,2701,0.692,2702,0.608,2703,0.692,2704,0.692,2705,0.692,2706,0.692,2707,0.692,2708,2.259,2709,0.692,2710,0.692,2711,0.608,2712,0.692,2713,1.585,2714,0.692,2715,0.692,2716,0.692,2717,0.692,2718,0.692,2719,0.692,2720,1.287,2721,0.692,2722,0.692,2723,0.692,2724,0.552,2725,1.287,2726,0.692,2727,0.692,2728,0.692,2729,0.692,2730,0.692,2731,1.805,2732,1.287,2733,1.287,2734,0.692,2735,0.608,2736,0.692,2737,1.287,2738,0.608,2739,1.805,2740,0.692,2741,0.692,2742,0.692,2743,0.692,2744,0.692,2745,1.287,2746,1.287,2747,1.287,2748,1.287,2749,1.585,2750,1.287,2751,0.692,2752,1.287,2753,0.692,2754,1.287,2755,0.45,2756,0.608,2757,1.805,2758,0.692,2759,0.608,2760,0.692,2761,0.692,2762,0.692,2763,2.661,2764,0.692,2765,0.608,2766,0.692,2767,0.692,2768,0.692,2769,0.608,2770,0.692,2771,1.287,2772,1.13,2773,0.692,2774,0.608,2775,0.51,2776,0.692,2777,0.692,2778,0.692,2779,0.692,2780,1.287,2781,0.692,2782,0.692,2783,0.692,2784,0.692,2785,0.608,2786,0.692,2787,0.692,2788,0.552,2789,0.692,2790,0.692,2791,0.51,2792,0.692,2793,0.692,2794,0.692,2795,1.287,2796,0.608,2797,0.608]],["title/coverage.html",[1999,3.664]],["body/coverage.html",[0,0.203,1,1.609,5,0.077,6,2.294,7,2.294,9,1.698,16,0.186,25,0.011,38,1.461,48,1.342,49,2.336,55,0.003,56,0.005,57,0.003,58,2.084,59,2.294,60,2.294,68,1.927,81,0.527,90,1.342,95,1.802,105,2.646,120,1.531,121,1.531,127,2.109,129,2.294,144,0.822,162,1.198,182,1.013,183,3.247,198,1.242,232,2.294,243,1.802,284,1.046,285,2.294,296,1.29,308,1.461,309,2.294,310,3.896,317,1.461,318,3.979,319,0.871,320,1.046,347,1.399,368,1.609,372,1.461,374,1.532,398,1.531,399,1.531,400,1.698,401,3.247,402,3.69,420,3.451,433,2.589,434,1.927,435,3.99,436,3.99,447,2.084,454,2.084,460,2.084,461,2.294,462,2.294,467,1.342,493,1.802,497,2.294,501,2.084,511,3.247,512,3.003,519,1.461,557,1.802,559,2.294,560,2.294,577,1.927,578,3.003,579,2.808,609,5.529,610,5.17,613,2.084,629,2.084,631,2.084,637,2.084,641,2.084,651,4.223,679,1.927,680,2.084,693,2.084,704,1.927,705,2.294,706,2.294,740,1.698,741,3.451,751,1.698,754,1.531,755,3.247,756,3.247,763,1.802,773,2.294,774,2.294,775,1.927,776,2.294,794,1.802,795,2.294,807,1.927,809,1.927,810,2.294,811,2.294,814,3.99,826,2.294,847,1.609,848,2.294,855,2.294,884,2.084,885,2.808,886,2.084,887,2.084,902,2.084,919,5.004,947,1.927,948,2.294,957,1.802,963,1.802,965,1.698,977,1.802,983,1.802,986,1.698,988,1.609,990,1.927,993,1.802,994,1.927,1021,3.247,1022,3.247,1039,2.084,1042,2.294,1056,1.927,1058,1.927,1103,1.609,1117,2.294,1128,1.698,1129,1.802,1144,1.802,1158,3.69,1163,1.802,1169,1.802,1174,2.084,1189,3.247,1190,2.294,1206,2.084,1226,2.294,1227,2.084,1302,2.294,1303,2.294,1321,2.294,1333,2.294,1334,1.399,1335,2.084,1343,2.294,1344,2.294,1345,3.247,1351,2.294,1352,3.247,1356,1.927,1357,2.294,1370,2.646,1373,1.242,1374,1.698,1388,2.294,1397,2.294,1407,1.927,1408,2.294,1412,1.698,1414,1.802,1415,1.927,1431,2.294,1446,1.698,1450,2.294,1500,2.294,1513,2.294,1527,2.294,1529,2.294,1540,1.927,1560,2.294,1570,2.294,1578,2.294,1585,2.294,1589,2.294,1590,2.294,1743,2.084,1753,3.003,1764,2.084,1793,3.574,1811,2.294,1854,4.392,1966,1.698,1999,1.609,2029,2.084,2332,2.084,2337,2.294,2647,6.945,2798,2.294,2799,2.294,2800,6.15,2801,7.004,2802,4.392,2803,2.294,2804,8.694,2805,2.084,2806,2.294,2807,5.647,2808,5.647,2809,5.647,2810,5.647,2811,6.485,2812,6.485,2813,2.294,2814,2.294,2815,4.392,2816,4.392,2817,2.294,2818,2.294,2819,5.002,2820,2.294,2821,7.494,2822,3.99,2823,2.084,2824,2.294,2825,2.612,2826,2.612,2827,2.612,2828,2.294,2829,2.612,2830,5.002,2831,4.071,2832,2.612,2833,4.071,2834,6.122,2835,5.002,2836,2.612,2837,5.002,2838,2.612,2839,2.612,2840,2.612,2841,4.071,2842,2.612,2843,5.946,2844,2.294,2845,2.294,2846,2.294,2847,2.294,2848,2.612,2849,3.574,2850,3.574,2851,2.294,2852,2.294,2853,2.294,2854,2.084,2855,2.294,2856,2.294,2857,2.294,2858,4.392,2859,2.612]],["title/dependencies.html",[87,2.333,2356,2.944]],["body/dependencies.html",[0,0.128,4,0.157,5,0.16,16,0.274,25,0.011,41,0.892,47,1.704,55,0.005,56,0.007,57,0.005,87,1.704,101,2.841,103,3.381,125,2.993,130,2.107,149,2.737,156,2.062,185,0.892,193,1.98,194,1.447,195,2.257,238,3.688,265,2.503,267,2.372,333,3.531,351,2.257,386,2.404,426,1.902,429,3.876,446,2.257,477,3.072,540,1.647,569,2.583,590,4.21,591,3.072,626,3.381,833,5.526,834,2.657,898,3.072,901,2.503,972,2.372,980,2.841,1381,5.103,1417,4.008,1617,3.381,1716,4.334,1747,3.381,1846,2.657,1913,3.381,1914,3.381,1969,3.381,2093,3.381,2116,3.381,2117,3.381,2154,2.503,2163,2.503,2164,3.346,2165,3.381,2168,3.381,2177,3.381,2221,3.381,2236,2.657,2241,3.748,2255,3.381,2260,3.072,2471,3.381,2735,3.381,2774,3.381,2860,5.432,2861,7.687,2862,3.851,2863,3.851,2864,3.851,2865,3.851,2866,3.851,2867,5.432,2868,5.432,2869,3.851,2870,5.432,2871,3.851,2872,3.851,2873,3.851,2874,3.851,2875,3.851,2876,3.851,2877,3.851,2878,3.851,2879,3.851,2880,5.432,2881,3.851,2882,3.851,2883,3.851,2884,3.851,2885,3.851,2886,3.851,2887,5.432,2888,3.851,2889,3.851,2890,5.432,2891,3.851,2892,3.851,2893,7.208,2894,3.851,2895,3.851,2896,3.851,2897,3.851,2898,3.851,2899,3.851,2900,3.851,2901,3.851,2902,3.851,2903,3.851,2904,3.851,2905,3.851,2906,2.841,2907,3.851,2908,3.851,2909,5.432,2910,3.851,2911,3.851,2912,5.432,2913,5.432,2914,3.851,2915,3.851,2916,3.851,2917,3.072,2918,3.851,2919,3.851,2920,3.851,2921,3.851,2922,3.851,2923,5.432,2924,3.851,2925,3.851,2926,3.851,2927,3.851,2928,3.851,2929,3.851,2930,3.851,2931,3.851,2932,3.851,2933,3.851,2934,3.851,2935,3.851,2936,3.851,2937,3.851,2938,3.851,2939,3.851,2940,3.851,2941,5.432,2942,4.77,2943,3.851,2944,3.851,2945,3.851,2946,3.851,2947,3.851,2948,3.851,2949,3.851,2950,3.851,2951,5.432,2952,3.851,2953,3.851,2954,3.851,2955,3.851,2956,3.851,2957,3.851,2958,3.851,2959,3.851,2960,3.851,2961,3.851,2962,3.851,2963,3.851,2964,5.432,2965,3.851,2966,3.851,2967,3.851,2968,3.851,2969,3.851,2970,5.432,2971,3.851,2972,3.381,2973,3.072,2974,3.851,2975,3.851,2976,3.851,2977,3.851,2978,3.851,2979,3.851,2980,3.851,2981,3.851,2982,3.851,2983,3.851,2984,3.851,2985,3.851,2986,3.851,2987,3.851,2988,3.851,2989,3.851,2990,3.851,2991,3.072,2992,3.851,2993,3.851,2994,3.851,2995,3.851,2996,3.851,2997,3.851,2998,3.851,2999,3.851,3000,3.851,3001,3.851,3002,3.851,3003,3.851,3004,3.851]],["title/miscellaneous/functions.html",[3005,2.399,3006,3.636]],["body/miscellaneous/functions.html",[10,0.574,16,0.429,24,1.673,25,0.01,26,1.298,27,1.298,32,1.173,37,1.973,38,4.083,49,3.244,55,0.007,56,0.009,57,0.007,90,4.03,224,2.136,376,2.984,551,3.235,585,3.927,609,4.457,610,5.62,652,4.819,654,4.819,659,4.819,679,5.385,720,3.927,753,3.379,919,3.379,1039,6.257,1209,3.927,2696,5.304,2813,6.409,2814,6.409,2820,5.304,2852,5.304,2853,6.409,3005,3.927,3006,4.167,3007,6.041,3008,6.886,3009,6.041,3010,4.819,3011,6.041,3012,6.041]],["title/index.html",[10,0.351,1597,2.723,1598,2.723]],["body/index.html",[5,0.178,13,2.559,14,2.395,15,1.681,17,1.157,25,0.009,26,0.996,29,2.917,52,3.647,53,2.755,55,0.005,56,0.007,57,0.005,61,1.535,64,2.907,81,0.903,125,2.127,185,1.036,202,4.487,203,3.725,207,3.529,209,3.226,210,1.582,223,1.223,238,2.621,284,1.791,392,2.298,405,2.395,410,2.621,440,3.616,453,2.762,509,2.907,540,1.913,569,2.864,570,2.621,594,2.755,665,2.907,672,4.287,708,3.99,727,3.3,730,2.502,737,3.369,804,2.298,808,2.907,867,3.369,901,2.907,905,3.3,972,2.755,1277,2.502,1417,3.3,1470,3.086,1533,3.086,1586,3.086,1601,3.086,1602,5.432,1604,4.155,1614,3.928,1620,3.928,1621,3.928,1666,4.444,1676,5.505,1723,3.3,1755,3.99,1766,3.928,1804,7.028,1808,3.568,1817,3.3,1843,2.907,1939,3.928,1966,2.907,1998,2.502,1999,2.755,2019,4.805,2049,3.3,2098,3.3,2158,3.086,2163,2.907,2164,3.709,2198,5.979,2200,4.805,2203,3.568,2239,3.928,2285,3.086,2434,3.928,2470,3.928,2532,4.444,2533,3.086,2578,3.568,2692,3.928,2693,3.086,2769,3.928,2791,3.3,2800,3.928,2991,3.568,3013,3.3,3014,6.023,3015,6.249,3016,4.473,3017,3.928,3018,4.473,3019,3.086,3020,4.473,3021,4.473,3022,3.086,3023,3.086,3024,4.473,3025,3.928,3026,4.155,3027,3.928,3028,4.473,3029,3.568,3030,4.473,3031,5.979,3032,5.375,3033,5.026,3034,3.709,3035,3.928,3036,6.023,3037,6.023,3038,7.604,3039,7.285,3040,4.473,3041,4.473,3042,6.023,3043,3.928,3044,4.473,3045,3.928,3046,6.023,3047,4.473,3048,3.928,3049,6.023,3050,6.023,3051,3.3,3052,3.928,3053,4.473,3054,4.473,3055,4.473,3056,4.473,3057,4.473,3058,2.755,3059,4.473,3060,4.473,3061,3.568,3062,4.473,3063,3.3,3064,3.928,3065,4.473,3066,3.928,3067,4.473,3068,3.568,3069,3.928,3070,4.444,3071,4.473,3072,4.473,3073,3.928,3074,4.473,3075,3.928]],["title/license.html",[1597,2.723,1598,2.723,3076,3.241]],["body/license.html",[0,0.022,4,0.319,5,0.049,13,2.797,17,0.237,22,0.111,25,0.002,29,0.667,39,0.059,52,1.512,53,0.564,55,0.003,56,0.002,57,0.002,64,1.083,80,0.195,81,0.872,98,0.405,141,2.14,143,1.512,144,1.807,146,1.249,147,0.327,153,1.229,158,2.013,159,3.345,192,0.355,197,2.964,210,2.277,215,5.474,219,0.324,235,0.491,237,0.932,240,0.405,267,0.564,272,0.676,321,0.392,325,0.344,339,0.595,342,2.388,343,0.564,374,0.788,388,0.405,389,0.405,405,1.228,410,1.654,412,0.676,422,0.512,441,4.884,442,2.221,453,2.317,457,1.887,466,0.405,473,0.452,502,0.632,506,1.654,507,2.314,509,2.809,540,0.713,558,0.862,566,1.412,570,2.151,576,1.294,580,0.738,588,0.471,590,1.026,621,0.632,640,1.026,686,1.229,712,0.595,715,0.632,719,1.09,723,0.676,728,2.252,730,0.932,731,1.15,734,1.738,737,0.932,760,3.112,796,1.026,800,3.623,859,0.632,864,0.564,867,1.282,868,0.676,892,0.595,910,0.595,911,2.771,913,0.731,914,2.533,916,1.691,928,2.082,930,3.874,974,1.083,980,0.676,1013,0.731,1024,4.189,1032,1.947,1111,0.595,1138,0.632,1209,2.13,1248,0.632,1277,2.054,1286,0.731,1304,1.691,1334,3.448,1380,1.654,1387,0.632,1419,2.013,1421,1.412,1457,2.812,1467,1.835,1471,1.229,1483,1.329,1512,0.676,1519,0.731,1520,2.771,1522,0.676,1523,4.007,1524,2.878,1532,1.581,1533,1.947,1565,4.033,1586,0.632,1603,0.804,1604,1.581,1609,2.082,1611,1.463,1619,0.632,1654,1.463,1666,0.676,1672,0.804,1676,2.611,1687,0.731,1692,0.804,1706,1.738,1712,1.463,1716,1.329,1725,0.595,1743,0.731,1750,0.804,1753,1.229,1755,2.151,1759,1.463,1767,0.804,1770,0.731,1786,0.804,1808,5.841,1815,2.614,1817,1.229,1826,0.731,1837,1.463,1839,0.804,1852,1.329,1861,0.595,1873,1.463,1874,2.614,1876,0.632,1884,0.804,1887,0.804,1890,0.804,1908,0.676,1909,2.418,1935,0.804,1971,0.804,1989,0.676,1999,1.026,2021,1.463,2025,1.329,2032,0.731,2049,0.676,2055,2.964,2062,2.252,2070,0.804,2072,5.69,2073,3.336,2074,1.691,2077,5.94,2094,2.261,2098,1.229,2138,0.804,2154,1.49,2157,3.188,2171,4.878,2181,2.981,2186,0.676,2195,0.731,2213,0.731,2231,0.804,2233,1.463,2234,1.329,2238,3.448,2272,0.804,2297,1.835,2298,0.804,2300,0.804,2332,0.731,2338,0.804,2343,0.731,2347,0.804,2363,1.229,2366,0.804,2377,0.731,2403,1.229,2423,0.804,2461,2.387,2467,1.329,2506,1.463,2532,2.082,2533,1.581,2539,1.463,2547,1.947,2559,0.731,2578,1.329,2582,1.691,2618,1.463,2629,0.731,2655,1.691,2662,0.731,2665,2.929,2684,4.032,2693,0.632,2699,5.279,2700,1.463,2702,1.463,2711,0.804,2749,0.804,2756,1.463,2759,0.804,2775,3.728,2785,2.013,2828,0.804,2917,0.731,3015,0.731,3019,2.261,3022,1.947,3023,0.632,3026,0.632,3027,2.478,3029,1.829,3034,0.564,3048,0.804,3051,1.691,3058,3.112,3070,1.691,3076,7.445,3077,6.012,3078,5.884,3079,0.916,3080,2.292,3081,7.023,3082,3.277,3083,4.694,3084,4.936,3085,3.277,3086,0.916,3087,0.916,3088,1.666,3089,2.292,3090,2.292,3091,5.251,3092,0.916,3093,0.916,3094,1.463,3095,3.277,3096,3.527,3097,1.666,3098,1.666,3099,4.913,3100,4.322,3101,0.916,3102,0.916,3103,3.672,3104,1.463,3105,0.804,3106,0.804,3107,4.437,3108,7.613,3109,2.292,3110,2.013,3111,0.916,3112,0.916,3113,2.822,3114,4.593,3115,0.916,3116,4.593,3117,1.229,3118,0.916,3119,2.822,3120,0.731,3121,2.822,3122,0.731,3123,5.045,3124,0.804,3125,0.916,3126,4.835,3127,5.054,3128,3.277,3129,5.251,3130,0.916,3131,1.666,3132,0.916,3133,0.916,3134,2.013,3135,0.916,3136,0.916,3137,0.916,3138,0.916,3139,0.916,3140,0.916,3141,2.822,3142,0.916,3143,2.292,3144,0.916,3145,0.916,3146,4.979,3147,1.691,3148,0.916,3149,0.916,3150,1.829,3151,2.292,3152,0.916,3153,0.676,3154,1.666,3155,1.666,3156,2.292,3157,7.643,3158,0.916,3159,3.277,3160,3.277,3161,3.672,3162,0.731,3163,2.292,3164,4.604,3165,1.666,3166,0.916,3167,0.916,3168,0.916,3169,2.292,3170,0.916,3171,0.916,3172,1.666,3173,3.672,3174,0.916,3175,1.666,3176,0.916,3177,3.336,3178,0.916,3179,2.822,3180,0.804,3181,1.666,3182,7.581,3183,2.292,3184,4.593,3185,2.478,3186,1.229,3187,0.916,3188,1.666,3189,2.292,3190,4.593,3191,4.835,3192,0.916,3193,2.822,3194,1.666,3195,2.822,3196,2.478,3197,0.916,3198,2.292,3199,6.835,3200,1.463,3201,0.916,3202,4.322,3203,0.916,3204,2.013,3205,2.387,3206,0.916,3207,5.746,3208,2.013,3209,1.666,3210,3.527,3211,5.054,3212,3.672,3213,0.916,3214,1.666,3215,4.017,3216,0.916,3217,5.431,3218,1.666,3219,0.916,3220,0.916,3221,0.916,3222,2.292,3223,0.916,3224,0.916,3225,0.916,3226,0.731,3227,2.292,3228,2.478,3229,0.916,3230,0.916,3231,0.916,3232,1.463,3233,4.835,3234,0.804,3235,0.804,3236,2.013,3237,2.292,3238,1.691,3239,2.292,3240,0.916,3241,2.878,3242,3.224,3243,0.804,3244,1.083,3245,2.013,3246,0.916,3247,0.916,3248,0.916,3249,0.916,3250,1.463,3251,0.916,3252,6.06,3253,1.463,3254,2.013,3255,0.632,3256,1.666,3257,2.822,3258,0.804,3259,0.916,3260,1.666,3261,2.614,3262,0.916,3263,0.916,3264,0.916,3265,1.666,3266,0.916,3267,1.329,3268,0.916,3269,2.878,3270,0.916,3271,0.731,3272,4.017,3273,2.252,3274,0.916,3275,2.878,3276,0.916,3277,1.666,3278,0.916,3279,0.916,3280,0.916,3281,0.916,3282,0.916,3283,2.292,3284,0.916,3285,1.666,3286,1.666,3287,1.666,3288,0.916,3289,5.431,3290,1.666,3291,0.916,3292,0.916,3293,0.804,3294,0.916,3295,0.676,3296,0.916,3297,0.916,3298,2.292,3299,0.804,3300,0.916,3301,5.045,3302,0.676,3303,0.916,3304,0.916,3305,3.277,3306,3.224,3307,0.916,3308,0.916,3309,2.292,3310,0.916,3311,0.916,3312,2.822,3313,0.916,3314,0.916,3315,0.916,3316,0.916,3317,0.916,3318,0.916,3319,1.666,3320,0.916,3321,2.292,3322,0.916,3323,0.916,3324,1.666,3325,0.916,3326,0.916,3327,0.916,3328,0.916,3329,0.916,3330,1.666,3331,1.15,3332,4.033,3333,0.916,3334,3.672,3335,0.916,3336,0.916,3337,1.463,3338,2.292,3339,2.822,3340,2.822,3341,2.822,3342,0.916,3343,2.878,3344,3.277,3345,0.916,3346,2.292,3347,0.916,3348,1.666,3349,0.916,3350,1.463,3351,3.277,3352,1.666,3353,2.822,3354,2.822,3355,0.916,3356,2.292,3357,3.277,3358,0.916,3359,0.916,3360,3.204,3361,2.292,3362,2.292,3363,1.666,3364,0.632,3365,0.916,3366,0.804,3367,0.916,3368,0.916,3369,2.013,3370,0.916,3371,0.916,3372,0.916,3373,0.916,3374,0.916,3375,2.292,3376,0.916,3377,0.804,3378,2.013,3379,1.666,3380,3.672,3381,5.654,3382,2.292,3383,1.666,3384,1.666,3385,1.666,3386,0.804,3387,0.916,3388,0.916,3389,0.916,3390,3.224,3391,1.666,3392,0.916,3393,0.916,3394,0.916,3395,0.916,3396,1.666,3397,0.916,3398,1.666,3399,0.916,3400,3.277,3401,0.916,3402,2.981,3403,0.916,3404,4.437,3405,0.916,3406,0.916,3407,0.916,3408,0.916,3409,1.666,3410,0.916,3411,2.822,3412,1.666,3413,0.804,3414,0.916,3415,0.916,3416,0.916,3417,0.916,3418,1.666,3419,0.916,3420,0.916,3421,0.731,3422,2.478,3423,0.916,3424,1.666,3425,0.916,3426,0.916,3427,2.013,3428,0.916,3429,0.916,3430,0.916,3431,0.916,3432,2.822,3433,0.916,3434,0.916,3435,0.916,3436,0.804,3437,0.804,3438,0.804,3439,0.916,3440,0.916,3441,0.916,3442,3.277,3443,0.916,3444,0.916,3445,2.822,3446,0.916,3447,0.804,3448,0.916,3449,0.916,3450,0.916,3451,0.916,3452,0.916,3453,2.822,3454,0.916,3455,0.916,3456,2.292,3457,0.916,3458,0.731,3459,2.292,3460,0.916,3461,0.916,3462,0.916,3463,0.916,3464,0.916,3465,0.916,3466,0.916,3467,0.804,3468,1.463,3469,0.916,3470,0.632,3471,1.666,3472,0.804,3473,0.916,3474,2.822,3475,0.916,3476,0.916,3477,1.666,3478,2.292,3479,2.292,3480,0.731,3481,1.666,3482,0.916,3483,2.292,3484,4.017,3485,0.916,3486,0.916,3487,1.666,3488,0.916,3489,0.916,3490,0.916,3491,0.916,3492,2.822,3493,2.292,3494,0.916,3495,3.277,3496,0.916,3497,0.916,3498,0.916,3499,0.916,3500,0.804,3501,0.916,3502,1.666,3503,1.666,3504,1.463,3505,2.292,3506,0.804,3507,0.916,3508,1.329,3509,2.292,3510,0.916,3511,1.463,3512,0.916,3513,1.666,3514,0.916,3515,0.916,3516,1.666,3517,6.612,3518,2.292,3519,0.916,3520,3.277,3521,4.835,3522,2.292,3523,0.916,3524,0.804,3525,0.916,3526,0.916,3527,2.822,3528,0.916,3529,2.292,3530,0.916,3531,0.916,3532,0.916,3533,0.916,3534,0.916,3535,0.916,3536,0.916,3537,2.822,3538,1.666,3539,0.916,3540,0.916,3541,2.292,3542,0.916,3543,1.666,3544,2.292,3545,1.666,3546,0.916,3547,0.916,3548,0.916,3549,1.666,3550,2.292,3551,0.916,3552,0.804,3553,0.916,3554,0.916,3555,1.666,3556,0.916,3557,0.804,3558,0.916,3559,0.916,3560,0.916,3561,0.916,3562,2.292,3563,1.666,3564,0.804,3565,0.916,3566,0.916,3567,2.822,3568,0.916,3569,2.292,3570,0.916,3571,0.916,3572,1.666,3573,0.916,3574,0.916,3575,0.916,3576,2.292,3577,1.666,3578,1.666,3579,0.916,3580,1.666,3581,4.017,3582,1.463,3583,2.292,3584,2.822,3585,0.804,3586,0.916,3587,1.666,3588,0.916,3589,2.292,3590,0.916,3591,0.916,3592,0.916,3593,0.916,3594,0.916,3595,0.916,3596,2.292,3597,1.666,3598,0.916,3599,1.666,3600,0.804,3601,0.916,3602,0.916,3603,1.666,3604,1.666,3605,0.916,3606,1.666,3607,0.916,3608,0.916,3609,0.731,3610,0.916,3611,2.292,3612,0.916,3613,0.916,3614,0.916,3615,0.916,3616,1.666,3617,2.292,3618,0.916,3619,0.916,3620,0.916,3621,0.916,3622,0.731,3623,1.666,3624,0.916,3625,0.916,3626,0.916,3627,0.916,3628,0.916,3629,0.916,3630,0.916,3631,0.916,3632,0.676,3633,0.916,3634,0.916,3635,0.916,3636,2.822,3637,0.916,3638,0.916,3639,1.666,3640,0.916,3641,0.916,3642,0.916,3643,0.916,3644,0.916,3645,0.916,3646,0.916,3647,0.731,3648,0.916,3649,0.916,3650,0.916,3651,0.804,3652,1.666,3653,0.916,3654,0.916,3655,0.916,3656,0.916,3657,0.804,3658,1.666,3659,0.916,3660,0.916,3661,0.804,3662,0.804,3663,0.595,3664,0.916,3665,1.666,3666,1.666,3667,2.878,3668,0.916,3669,0.916,3670,0.804,3671,0.916,3672,0.916,3673,2.292,3674,1.463,3675,0.916,3676,1.666,3677,1.666,3678,1.666,3679,0.916,3680,0.804,3681,0.804,3682,0.916,3683,0.804,3684,0.916,3685,0.916,3686,1.666,3687,0.916,3688,2.292,3689,0.916,3690,0.916,3691,0.916,3692,0.916,3693,0.916,3694,0.916,3695,0.916,3696,0.916,3697,0.916,3698,0.916,3699,0.804,3700,0.916,3701,0.731,3702,0.916,3703,0.916,3704,0.804,3705,0.916,3706,0.916,3707,0.916,3708,0.916,3709,0.916,3710,0.916,3711,0.916,3712,0.916,3713,0.916,3714,0.916,3715,0.916,3716,0.731,3717,0.804,3718,1.666,3719,1.463,3720,0.916,3721,0.916,3722,0.916,3723,0.916,3724,0.916,3725,0.916,3726,1.666,3727,0.916,3728,0.916,3729,0.804,3730,0.731,3731,0.916,3732,0.916,3733,0.731,3734,0.916,3735,0.916,3736,0.916,3737,0.916]],["title/modules.html",[86,2.236]],["body/modules.html",[25,0.009,55,0.007,56,0.009,57,0.007,85,4.276,86,2.329,114,4.029,119,4.029,257,4.276,260,4.276,261,4.276,262,3.632,263,4.276,883,4.944,1098,4.276,1359,4.276,1362,4.276,2154,5.647,3058,5.06,3738,8.688,3739,8.688,3740,7.778,3741,8.216]],["title/overview.html",[3742,4.747]],["body/overview.html",[2,1.021,25,0.011,55,0.006,56,0.008,57,0.006,84,1.345,85,5.413,86,1.849,87,2.177,88,2.752,89,2.752,90,2.528,91,2.035,92,2.256,93,4.32,94,4.32,95,4.925,96,3.589,97,2.635,98,2.177,113,2.43,114,5.51,115,4.32,116,4.32,117,4.32,118,4.32,119,5.23,120,4.802,121,4.183,128,2.256,257,5.891,258,4.32,259,4.32,260,4.925,261,4.925,262,4.802,263,4.925,467,4.211,519,4.584,558,1.849,562,4.32,563,4.32,564,4.32,878,4.32,879,4.32,880,4.32,988,5.047,1098,5.927,1099,4.32,1100,4.32,1102,4.32,1103,4.396,1359,5.848,1360,4.32,1361,4.32,1362,5.653,1412,4.64,1444,4.32,1445,4.32,1446,4.64,1764,3.925,1770,3.925,2029,3.925,2533,3.394,3742,3.925,3743,4.92]],["title/todo.html",[208,1.478,1597,2.723,1598,2.723]],["body/todo.html",[0,0.099,5,0.123,11,0.756,13,1.574,16,0.409,25,0.01,26,0.953,32,0.673,47,2.549,48,2.152,49,2.383,51,2.89,52,3.981,55,0.007,56,0.007,57,0.005,65,2.069,84,1.799,92,1.921,98,2.549,111,2.152,125,2.739,130,2.553,144,1.318,146,1.854,147,1.459,156,2.243,161,1.281,185,1.335,199,4.595,202,3.547,203,3.742,208,1.677,209,3.526,210,2.507,223,1.574,234,3.974,265,3.744,271,3.744,275,2.343,276,2.89,279,3.091,319,1.396,322,2.152,387,2.641,392,2.152,403,2.739,405,3.085,433,1.921,440,3.653,453,1.921,467,2.152,473,2.845,490,2.455,491,2.343,508,3.222,558,1.574,567,3.683,569,2.739,576,1.921,580,2.914,589,2.723,608,2.89,610,2.89,636,2.723,639,2.58,669,4.366,670,3.744,708,2.455,709,5.93,715,2.89,730,4.402,778,3.744,805,3.091,859,2.89,874,2.455,892,4.279,896,5.781,908,2.723,910,2.723,911,2.89,923,2.89,927,4.542,928,3.091,974,2.723,1111,2.723,1124,3.091,1184,3.091,1277,2.343,1334,2.243,1381,4.279,1466,3.091,1470,2.89,1525,2.89,1604,3.974,1609,3.091,1628,3.678,1664,3.678,1677,3.678,1706,4.366,1722,5.656,1723,3.091,1728,3.342,1851,2.58,1861,2.723,1907,3.091,1966,2.723,1980,3.342,2026,2.455,2050,3.678,2054,3.678,2062,3.342,2101,3.342,2137,3.342,2154,2.723,2157,3.091,2158,2.89,2164,2.58,2253,4.595,2285,2.89,2343,3.342,2356,3.342,2358,3.342,2461,2.723,2693,2.89,2724,3.342,2755,3.744,2788,3.342,2791,3.091,2942,3.678,2972,3.678,2973,3.342,3033,2.89,3034,2.58,3045,3.678,3063,3.091,3117,3.091,3120,3.342,3255,2.89,3293,3.678,3337,3.678,3421,3.342,3670,5.058,3716,4.595,3744,3.342,3745,4.189,3746,3.678,3747,3.678,3748,3.091,3749,3.342,3750,4.189,3751,4.189,3752,4.189,3753,5.058,3754,4.189,3755,4.542,3756,4.189,3757,4.189,3758,4.189,3759,4.189,3760,3.678,3761,4.189,3762,3.342,3763,4.189,3764,4.189,3765,4.189,3766,4.189,3767,3.678,3768,4.189,3769,4.189,3770,4.189,3771,4.189,3772,2.89,3773,3.678,3774,4.189,3775,4.189,3776,3.678,3777,3.678,3778,3.678,3779,4.189,3780,3.678,3781,4.189,3782,4.189,3783,4.189,3784,4.189,3785,4.189,3786,4.189,3787,5.781,3788,4.189,3789,4.189,3790,4.189,3791,4.189,3792,4.189,3793,4.189,3794,3.678,3795,3.678,3796,4.189,3797,5.76,3798,3.678,3799,4.189]],["title/miscellaneous/typealiases.html",[3005,2.399,3800,5.271]],["body/miscellaneous/typealiases.html",[10,0.533,16,0.581,25,0.01,29,2.248,32,0.902,55,0.007,56,0.008,57,0.007,137,2.623,139,3.2,146,2.485,147,1.37,185,1.301,205,3.088,289,4.536,312,4.298,319,2.647,320,2.794,342,3.447,374,1.102,578,4.142,579,5.238,580,2.485,582,5.567,596,5.567,597,5.567,617,6.057,741,3.873,743,5.567,744,6.337,747,5.567,748,3.873,749,4.814,1142,5.238,1158,4.142,1172,6.127,1227,4.479,1256,4.479,1257,4.479,1322,3.649,1699,4.93,1737,4.93,1739,4.479,2822,4.479,2823,5.567,2854,4.479,3005,3.649,3413,4.93,3801,5.614,3802,5.614,3803,5.614,3804,6.978,3805,6.978,3806,6.975,3807,5.614,3808,6.978,3809,6.127,3810,6.978,3811,4.93,3812,4.93,3813,5.614,3814,6.978,3815,5.614,3816,5.614,3817,5.614,3818,3.649,3819,5.614,3820,5.614,3821,5.614,3822,5.614]],["title/miscellaneous/variables.html",[1618,3.636,3005,2.399]],["body/miscellaneous/variables.html",[1,2.134,9,2.253,10,0.203,11,0.385,13,1.303,15,1.645,16,0.53,25,0.011,29,1.388,32,0.809,37,0.537,38,2.448,43,0.203,47,1.937,48,1.097,49,3.513,50,1.575,55,0.004,56,0.004,57,0.003,62,2.134,63,2.952,65,1.054,73,2.05,80,1.629,81,1.198,91,1.434,105,2.844,113,1.054,125,2.081,130,0.828,143,1.143,144,1.743,149,0.854,160,1.874,162,1.589,167,0.913,177,2.031,184,0.883,187,0.567,192,0.828,203,1.648,207,1.251,208,0.854,210,0.755,223,2.343,224,3.026,228,1.015,235,1.856,241,3.491,243,1.472,275,1.194,276,1.472,284,0.854,305,1.314,312,1.314,325,0.802,350,1.143,351,1.251,373,1.143,376,1.712,386,0.945,387,0.979,388,0.945,389,0.945,390,0.945,401,1.703,402,2.557,405,1.856,420,4.094,425,1.251,430,3.019,433,0.979,434,1.575,435,1.703,436,3.491,439,1.387,440,1.648,443,1.575,447,2.765,448,2.765,449,1.874,450,1.874,453,1.589,454,2.765,455,2.253,456,1.703,457,2.249,458,1.703,459,1.575,467,3.213,470,1.575,473,1.712,490,2.952,492,1.781,508,1.194,549,1.589,551,1.856,557,2.391,567,1.194,568,1.097,569,1.648,576,0.979,580,0.945,589,1.387,608,1.472,609,1.575,610,4.494,612,1.703,613,2.765,621,2.391,629,2.765,630,1.874,631,2.765,632,4.734,633,1.703,634,1.703,635,1.874,636,2.844,637,2.765,638,1.472,639,2.695,640,1.314,641,2.765,642,1.874,643,3.043,644,1.874,645,1.703,646,1.874,647,1.874,648,1.874,649,1.874,650,1.874,652,1.703,654,1.703,655,4.42,659,1.703,665,1.387,666,3.043,667,1.575,668,1.874,669,1.314,670,2.844,671,3.043,672,2.344,673,1.703,674,3.043,675,1.874,676,2.765,677,1.874,678,1.874,679,1.575,680,2.765,681,1.874,682,1.874,683,1.703,684,1.703,685,1.703,686,1.575,687,1.703,688,1.874,689,1.874,690,1.874,691,1.874,692,4.864,693,2.765,694,4.864,695,1.874,696,1.703,697,1.874,708,1.251,711,2.765,720,1.387,723,1.575,734,1.314,741,1.472,745,1.387,746,1.472,754,1.251,762,1.472,800,1.472,804,1.097,814,1.703,815,1.874,816,1.575,817,1.874,820,1.703,824,1.874,825,1.874,832,1.703,834,3.822,864,1.314,867,1.194,874,1.251,884,1.703,885,3.019,886,1.703,887,2.765,890,3.043,892,2.253,893,3.043,897,2.557,900,4.42,902,2.765,903,1.874,904,3.043,905,1.575,906,2.557,907,1.703,908,1.387,909,1.703,910,1.387,911,1.472,912,1.575,913,1.703,914,1.472,915,1.874,916,1.575,917,3.043,918,1.874,919,1.194,920,1.874,921,1.874,957,3.019,990,2.557,1021,1.703,1022,2.765,1110,1.472,1158,1.575,1167,1.575,1174,2.765,1206,2.765,1219,1.387,1304,1.575,1334,1.143,1370,4.064,1380,2.564,1386,1.703,1387,2.391,1420,1.874,1502,2.031,1531,1.472,1540,2.557,1564,1.472,1618,1.472,1662,1.874,1671,3.043,1676,2.844,1706,1.314,1728,2.765,1762,1.874,1843,1.387,1861,1.387,1909,1.575,1999,1.314,2026,1.251,2068,1.387,2137,1.703,2163,1.387,2164,2.134,2175,1.874,2195,1.703,2203,1.703,2235,1.874,2236,3.019,2248,4.094,2273,3.043,2285,1.472,2319,1.703,2432,1.874,2788,1.703,2798,1.874,2799,1.874,2802,1.874,2803,3.043,2805,2.765,2806,3.043,2815,1.874,2816,4.423,2817,3.043,2818,3.842,2822,1.703,2823,4.019,2824,3.842,2843,1.874,2844,3.842,2845,3.842,2846,3.842,2847,3.842,2849,1.874,2850,1.874,2851,3.043,2854,1.703,2855,3.043,2856,1.874,2857,3.043,2858,4.423,2906,1.575,3005,1.387,3006,2.391,3008,5.49,3010,1.703,3013,2.557,3033,3.475,3066,1.874,3255,1.472,3749,1.703,3762,3.491,3767,1.874,3772,1.472,3776,3.043,3787,3.043,3806,1.874,3809,1.874,3811,3.043,3812,3.842,3823,6.253,3824,3.466,3825,6.253,3826,2.134,3827,4.376,3828,2.134,3829,4.376,3830,2.134,3831,2.134,3832,2.134,3833,2.134,3834,2.134,3835,3.043,3836,2.134,3837,2.134,3838,2.134,3839,2.134,3840,2.134,3841,2.134,3842,2.134,3843,2.134,3844,1.874,3845,2.134,3846,2.134,3847,2.134,3848,2.134,3849,2.134,3850,2.765,3851,1.874,3852,1.874,3853,1.874,3854,2.134,3855,2.134,3856,2.134,3857,3.043,3858,2.134,3859,2.134,3860,2.134,3861,2.134,3862,2.134,3863,1.874,3864,2.134,3865,2.134,3866,2.134,3867,2.134,3868,2.134,3869,2.134,3870,2.134,3871,2.134,3872,2.134,3873,2.134,3874,2.134,3875,2.134,3876,2.134,3877,2.134,3878,2.134,3879,2.134,3880,2.134,3881,2.134,3882,2.134,3883,2.134,3884,2.134,3885,2.134,3886,2.134,3887,2.134,3888,2.134,3889,1.874,3890,2.134,3891,2.134,3892,2.134,3893,2.134,3894,2.134,3895,2.134,3896,2.134,3897,2.134,3898,2.134,3899,2.134,3900,3.466,3901,3.466]],["title/additional-documentation/nestjs-application.html",[240,1.408,492,1.635,507,1.316,1306,1.513]],["body/additional-documentation/nestjs-application.html",[8,1.338,13,2.9,25,0.009,55,0.005,56,0.007,57,0.007,84,1.162,86,1.598,125,2.022,143,2.277,159,2.619,203,3.757,208,1.702,209,3.117,210,2.346,223,1.162,237,2.379,240,3.56,321,1.819,328,2.668,386,2.576,390,2.576,417,2.619,440,2.768,453,2.668,459,3.137,492,3.965,507,1.759,508,2.379,509,3.783,510,3.392,540,1.819,558,1.598,567,2.379,570,3.41,576,1.95,580,2.576,590,2.619,636,4.313,665,2.764,669,4.086,676,3.392,719,2.022,723,3.137,730,2.379,777,3.734,799,3.734,800,4.015,808,2.764,860,2.934,862,3.137,864,2.619,867,2.379,912,3.137,1032,4.015,1110,4.577,1111,4.313,1116,2.764,1120,3.392,1184,3.137,1306,2.768,1387,2.934,1467,2.764,1564,4.922,1676,5.228,1706,2.619,1722,3.392,1725,2.764,1800,3.734,1826,3.392,1851,2.619,1966,5.135,1980,3.392,1993,3.137,1998,2.379,1999,3.584,2022,5.293,2163,2.764,2164,2.619,2181,4.015,2361,5.11,2469,3.137,2510,5.11,2526,3.734,2559,5.293,2805,5.293,2906,3.137,3013,3.137,3015,3.392,3017,3.734,3032,4.895,3033,4.922,3034,4.086,3058,2.619,3083,3.392,3238,3.137,3243,3.734,3244,2.764,3254,3.734,3255,4.577,3301,3.734,3331,2.934,3402,2.934,3470,2.934,3557,3.734,3564,3.734,3701,3.392,3740,3.734,3760,3.734,3772,2.934,3773,5.826,3777,5.11,3778,5.11,3818,3.783,3835,3.734,3850,4.643,3851,3.734,3852,3.734,3853,3.734,3889,3.734,3902,4.252,3903,3.392,3904,4.252,3905,4.252,3906,5.82,3907,3.392,3908,4.252,3909,6.635,3910,3.137,3911,4.252,3912,3.734,3913,4.252,3914,4.252,3915,4.252,3916,7.472,3917,4.252,3918,4.252,3919,3.734,3920,4.252,3921,4.252,3922,4.252,3923,4.252,3924,4.252,3925,5.82,3926,4.252,3927,4.252,3928,4.252,3929,4.252,3930,4.252,3931,4.252,3932,4.252,3933,4.252,3934,4.252,3935,4.252,3936,4.252,3937,4.252,3938,4.252,3939,3.137,3940,4.252,3941,4.252,3942,4.252,3943,4.252,3944,5.82,3945,3.734,3946,4.252,3947,5.82,3948,4.252,3949,4.643,3950,3.734,3951,4.252,3952,4.252,3953,6.635,3954,5.82,3955,4.252,3956,4.252,3957,4.252,3958,3.734,3959,4.252,3960,3.392,3961,3.734,3962,4.252,3963,4.252,3964,4.252,3965,4.252,3966,4.252,3967,4.252]],["title/additional-documentation/nestjs-application/software-architecture.html",[507,1.316,1306,1.513,3084,2.348,3968,2.069]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.617,4,0.09,5,0.088,13,2.527,14,0.676,22,0.546,24,0.634,25,0.005,26,0.367,29,0.505,45,0.982,47,2.976,48,2.095,49,2.423,51,0.87,52,1.591,53,1.83,55,0.003,56,0.003,57,0.002,62,1.367,63,1.301,65,1.767,80,0.269,81,0.6,87,1.804,92,0.579,98,0.982,111,0.648,141,0.982,143,1.591,144,2.041,146,3.283,147,0.583,150,0.82,156,0.676,159,2.203,170,1.007,177,0.739,185,1.124,202,4.495,203,0.6,205,0.558,208,0.505,209,1.189,210,2.447,214,0.87,215,1.932,223,0.345,224,1.051,233,0.706,235,4.402,236,0.87,237,2.001,238,3.637,240,3.021,267,3.174,268,1.771,271,3.152,272,0.931,273,3.674,275,0.706,284,0.505,287,1.638,305,1.83,320,0.889,321,0.949,342,1.096,350,1.591,355,0.777,373,0.676,374,1.11,376,0.623,389,0.558,392,1.141,404,0.931,410,1.301,417,2.768,422,1.242,432,0.82,440,1.413,441,0.87,442,3.642,457,2.785,464,4.171,465,3.351,473,3.372,483,0.87,490,0.739,506,2.842,507,1.229,509,3.674,540,3.032,549,1.64,558,0.834,567,1.662,568,2.492,569,3.642,570,2.389,572,1.443,576,1.64,588,0.648,594,1.83,598,2.192,638,0.87,639,3.608,640,0.777,645,1.007,667,0.931,670,0.82,672,1.916,708,1.301,719,3.68,720,0.82,730,0.706,734,1.367,736,3.803,737,1.242,745,0.82,758,1.531,760,2.986,761,0.931,762,0.87,772,0.87,778,1.932,784,3.585,797,0.777,801,0.931,802,2.203,804,1.838,805,0.931,806,4.324,808,0.82,816,0.931,849,0.931,859,2.05,860,0.87,864,1.367,865,0.777,867,0.706,868,2.64,872,1.638,901,0.82,909,1.007,910,0.82,911,2.812,914,2.05,927,2.812,929,0.87,930,3.008,964,0.739,970,1.949,972,0.777,1116,0.82,1138,0.87,1212,0.82,1219,0.82,1248,0.87,1277,0.706,1306,0.6,1334,0.676,1380,1.301,1390,0.931,1421,2.203,1425,1.932,1457,2.761,1459,1.949,1460,3.252,1462,0.87,1467,3.152,1468,1.007,1470,0.87,1471,0.931,1487,5.296,1495,2.609,1502,2.634,1522,2.192,1531,0.87,1533,0.87,1534,1.007,1563,1.638,1601,1.531,1602,1.771,1608,1.007,1609,2.192,1612,2.371,1618,0.87,1619,2.812,1641,1.108,1650,1.108,1653,1.771,1655,1.108,1658,1.108,1696,1.108,1698,2.609,1723,0.931,1725,0.82,1734,1.007,1738,1.108,1739,1.771,1753,0.931,1755,2.096,1796,1.949,1815,6.515,1817,0.931,1822,1.771,1843,1.443,1846,2.05,1851,2.203,1861,0.82,1870,1.108,1871,1.108,1876,2.468,1878,5.385,1900,1.108,1908,1.638,1942,1.949,1966,1.443,1989,1.638,1993,0.931,1998,0.706,2005,2.609,2019,1.007,2025,1.007,2026,3.176,2040,3.008,2048,1.108,2049,2.192,2055,2.64,2059,0.87,2066,3.141,2073,3.101,2074,0.931,2078,1.108,2094,4.477,2097,1.108,2098,1.638,2101,1.007,2103,1.108,2109,1.108,2119,1.771,2124,2.371,2141,4.964,2157,2.192,2158,0.87,2159,1.007,2163,1.932,2164,1.83,2169,3.316,2171,3.316,2181,1.531,2200,1.007,2234,1.007,2241,0.87,2248,0.87,2249,3.58,2250,1.007,2261,1.949,2293,2.609,2297,2.65,2302,0.87,2312,1.949,2318,2.609,2353,1.108,2358,1.007,2363,0.931,2375,2.371,2377,1.007,2403,2.64,2405,1.007,2414,1.007,2461,2.921,2467,1.007,2469,0.931,2507,1.108,2514,1.108,2525,1.949,2547,2.05,2548,3.58,2558,1.949,2568,1.638,2582,1.638,2613,1.007,2647,1.007,2650,1.007,2654,3.141,2655,0.931,2662,2.371,2665,1.007,2678,1.108,2684,1.771,2713,1.108,2724,3.869,2738,1.108,2755,0.82,2765,1.108,2775,1.638,2796,1.949,2797,1.949,2991,1.771,3013,2.192,3019,2.05,3022,3.345,3023,2.468,3026,0.87,3029,1.771,3031,1.108,3032,0.931,3051,0.931,3058,1.367,3070,1.638,3083,1.771,3084,0.931,3094,1.949,3096,1.108,3099,1.108,3104,1.108,3107,1.108,3110,1.108,3120,1.007,3123,1.108,3134,1.108,3146,1.771,3147,3.316,3150,3.585,3153,1.638,3164,2.64,3177,2.812,3180,1.108,3185,1.108,3186,4.171,3205,0.82,3208,1.108,3210,1.949,3226,1.007,3228,2.609,3232,1.108,3234,1.108,3241,1.108,3242,2.609,3244,1.932,3252,1.108,3253,1.108,3261,4.952,3267,1.007,3269,1.108,3271,1.771,3273,1.007,3275,1.108,3295,0.931,3302,2.64,3306,1.108,3331,0.87,3332,1.108,3350,1.108,3360,1.007,3364,0.87,3378,1.108,3381,1.108,3386,1.108,3390,1.949,3402,0.87,3404,1.108,3422,1.108,3436,1.949,3437,3.58,3447,1.108,3458,1.007,3467,3.141,3468,1.108,3470,0.87,3472,1.108,3480,1.007,3500,1.108,3504,1.108,3506,1.108,3508,4.324,3511,1.108,3524,1.108,3552,3.946,3582,1.108,3600,1.108,3609,3.869,3632,4.458,3647,1.007,3661,1.108,3662,1.108,3663,3.674,3674,1.108,3704,1.949,3717,1.108,3733,1.007,3742,1.007,3744,1.771,3747,1.108,3748,3.316,3753,1.108,3780,1.949,3798,1.108,3907,1.007,3910,1.638,3939,0.931,3950,1.108,3968,4.822,3969,1.262,3970,1.262,3971,5.145,3972,5.42,3973,2.22,3974,2.972,3975,2.972,3976,4.112,3977,2.22,3978,2.609,3979,4.849,3980,1.262,3981,1.262,3982,2.64,3983,3.141,3984,1.262,3985,1.262,3986,1.262,3987,1.262,3988,1.262,3989,2.22,3990,2.22,3991,1.262,3992,1.262,3993,4.077,3994,1.262,3995,1.262,3996,2.972,3997,2.22,3998,1.262,3999,1.262,4000,1.262,4001,1.262,4002,6.231,4003,1.262,4004,1.262,4005,1.262,4006,1.262,4007,2.22,4008,4.494,4009,1.262,4010,1.262,4011,2.22,4012,2.22,4013,3.578,4014,2.972,4015,3.578,4016,1.262,4017,3.141,4018,3.141,4019,1.262,4020,1.262,4021,1.262,4022,1.262,4023,1.262,4024,1.262,4025,2.854,4026,2.22,4027,1.007,4028,2.609,4029,1.262,4030,1.262,4031,1.262,4032,6.724,4033,1.262,4034,6.199,4035,1.262,4036,1.949,4037,1.262,4038,1.262,4039,2.22,4040,1.108,4041,3.739,4042,5.42,4043,1.262,4044,2.972,4045,1.949,4046,2.22,4047,1.262,4048,1.262,4049,1.262,4050,1.262,4051,1.262,4052,1.262,4053,3.141,4054,2.22,4055,1.262,4056,1.108,4057,1.262,4058,1.262,4059,1.262,4060,1.108,4061,1.262,4062,2.609,4063,1.262,4064,1.262,4065,1.262,4066,1.262,4067,1.262,4068,1.262,4069,1.262,4070,1.108,4071,1.262,4072,2.972,4073,1.262,4074,1.262,4075,1.262,4076,2.854,4077,2.22,4078,1.262,4079,2.22,4080,2.972,4081,1.262,4082,1.262,4083,1.262,4084,1.949,4085,2.22,4086,2.972,4087,1.262,4088,1.262,4089,1.262,4090,1.262,4091,1.262,4092,1.262,4093,1.108,4094,1.262,4095,2.22,4096,1.262,4097,1.638,4098,1.262,4099,5.42,4100,1.262,4101,1.108,4102,1.007,4103,1.262,4104,1.262,4105,1.262,4106,0.931,4107,1.262,4108,1.262,4109,1.262,4110,1.262,4111,1.262,4112,2.22,4113,2.972,4114,1.262,4115,1.262,4116,1.262,4117,1.262,4118,2.22,4119,1.262,4120,1.262,4121,1.262,4122,1.949,4123,1.262,4124,1.262,4125,1.262,4126,2.22,4127,1.262,4128,1.108,4129,1.262,4130,2.22,4131,1.262,4132,1.262,4133,1.108,4134,1.262,4135,1.262,4136,1.108,4137,1.262,4138,1.262,4139,2.22,4140,1.262,4141,1.262,4142,1.262,4143,1.262,4144,1.262,4145,1.108,4146,1.262,4147,1.262,4148,1.262,4149,1.108,4150,1.108,4151,2.972,4152,1.262,4153,1.262,4154,1.262,4155,1.262,4156,1.262,4157,1.262,4158,2.22,4159,1.262,4160,1.108,4161,1.262,4162,2.972,4163,1.262,4164,1.262,4165,1.262,4166,2.22,4167,1.262,4168,2.22,4169,1.262,4170,1.262,4171,1.262,4172,1.262,4173,1.262,4174,1.262,4175,1.262,4176,2.22,4177,1.262,4178,1.262,4179,1.262,4180,1.262,4181,1.262,4182,1.262,4183,1.262,4184,1.262,4185,7.234,4186,1.262,4187,1.262,4188,4.077,4189,1.108,4190,1.262,4191,1.262,4192,2.22,4193,1.262,4194,1.262,4195,1.262,4196,1.262,4197,1.262,4198,1.262,4199,1.262,4200,1.108,4201,1.262,4202,1.262,4203,1.262,4204,1.108,4205,1.262,4206,1.262,4207,1.262,4208,1.262,4209,2.22,4210,1.262,4211,1.262,4212,2.371,4213,1.262,4214,1.262,4215,1.108,4216,1.262,4217,1.262,4218,1.262,4219,4.077,4220,1.262,4221,1.262,4222,1.262,4223,1.262,4224,1.262,4225,1.262,4226,1.262,4227,1.262,4228,1.262,4229,1.262,4230,1.262,4231,1.262,4232,1.262,4233,2.22,4234,1.262,4235,1.262,4236,1.262,4237,2.22,4238,1.262,4239,1.262,4240,1.262,4241,2.22,4242,1.262,4243,1.262,4244,1.262,4245,1.262,4246,1.262,4247,1.108,4248,2.22,4249,1.262,4250,2.22,4251,1.262,4252,1.262,4253,1.262,4254,1.108,4255,2.22]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.051,507,1.157,1306,1.33,3968,1.818,4041,1.93]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.17,2,0.47,3,0.112,4,0.092,5,0.212,11,0.822,13,1.367,16,0.259,19,0.755,22,0.81,25,0.011,26,1.102,39,0.235,43,0.283,47,2.699,48,2.341,52,1.947,55,0.006,56,0.004,57,0.003,63,1.327,64,3.39,65,1.119,73,1.387,80,0.972,81,0.734,84,2.169,86,2.709,87,1.002,91,1.504,92,2.796,111,1.869,113,2.821,114,1.472,119,2.961,120,2.131,121,3.056,125,2.716,127,0.619,130,1.41,143,1.213,144,1.797,146,2.308,147,1.258,149,1.456,150,1.472,156,3.681,164,1.213,167,1.555,185,0.525,187,1.518,192,0.878,203,2.167,205,2.699,207,3.056,210,2.844,216,1.671,217,1.807,223,0.619,233,2.034,234,1.563,235,2.793,237,2.549,239,2.364,240,1.002,265,2.961,275,2.034,289,1.472,319,1.519,321,1.555,325,1.712,350,1.947,374,0.445,390,1.002,392,1.164,400,1.472,403,3.047,405,1.213,417,2.24,422,1.267,429,2.806,433,3.054,440,1.729,442,3.292,453,1.039,455,1.472,464,3.361,490,1.327,492,2.935,506,3.347,507,1.884,508,1.267,510,1.807,512,1.671,517,1.807,519,3.411,540,3.139,549,1.039,558,1.367,566,1.395,567,3.195,568,3.133,571,2.961,572,1.472,573,1.472,574,1.472,576,2.391,579,1.563,580,1.002,584,1.327,589,2.364,594,1.395,598,1.671,625,1.989,636,1.472,639,1.395,670,2.961,672,2.793,707,3.635,709,2.901,719,3.269,720,1.472,727,1.671,731,1.563,734,1.395,736,3.361,737,2.034,754,2.131,772,1.563,801,1.671,802,2.24,809,1.671,834,1.563,849,2.683,867,2.549,872,2.683,874,1.327,910,2.364,955,1.671,957,2.509,965,1.472,974,3.712,980,1.671,983,1.563,999,1.989,1000,1.989,1001,1.989,1002,1.989,1003,1.989,1004,1.989,1013,1.807,1032,3.143,1110,1.563,1170,1.989,1212,1.472,1277,2.034,1334,1.947,1335,1.807,1370,1.472,1373,1.077,1380,1.327,1381,1.472,1389,1.807,1421,1.395,1457,3.266,1462,1.563,1464,1.807,1466,1.671,1487,4.33,1502,1.327,1525,3.143,1532,1.563,1586,1.563,1608,3.635,1612,1.807,1618,1.563,1619,3.143,1653,4.161,1679,1.989,1706,2.806,1755,2.131,1814,1.989,1846,2.509,1851,1.395,1861,3.964,1876,2.509,1878,1.671,1907,1.671,1909,1.671,1910,2.901,1998,2.034,2026,1.327,2055,1.671,2059,1.563,2061,1.807,2067,1.807,2068,2.364,2073,1.563,2074,1.671,2094,1.563,2119,3.635,2130,1.807,2169,1.671,2181,2.509,2186,2.683,2194,1.989,2196,1.989,2236,3.94,2248,2.509,2280,1.989,2287,1.807,2290,1.989,2297,1.472,2302,1.563,2305,1.989,2323,1.989,2324,1.989,2409,1.989,2456,1.989,2461,1.472,2532,1.671,2568,1.671,2589,2.901,2624,1.989,2630,1.807,2650,1.807,2660,1.807,2755,1.472,3010,1.807,3022,1.563,3025,1.989,3026,1.563,3032,3.848,3034,1.395,3043,1.989,3051,1.671,3052,1.989,3058,1.395,3064,1.989,3069,1.989,3070,3.848,3073,1.989,3075,1.989,3106,1.989,3122,1.807,3124,1.989,3153,1.671,3162,3.635,3164,1.671,3177,3.94,3186,1.671,3200,1.989,3205,1.472,3226,1.807,3235,1.989,3236,1.989,3238,1.671,3244,1.472,3258,1.989,3267,1.807,3273,1.807,3295,1.671,3302,1.671,3331,2.509,3343,1.989,3364,1.563,3402,1.563,3458,1.807,3470,1.563,3508,2.901,3585,4,3622,2.901,3632,2.683,3657,1.989,3663,1.472,3683,1.989,3733,1.807,3748,3.848,3749,3.635,3755,4.742,3762,3.635,3794,4,3818,2.961,3844,1.989,3857,1.989,3863,1.989,3907,1.807,3912,1.989,3949,2.901,3968,2.961,3971,1.989,3982,1.671,4002,3.635,4018,1.989,4034,6.057,4036,1.989,4040,3.193,4041,3.94,4056,1.989,4060,1.989,4062,1.989,4070,1.989,4076,1.807,4084,1.989,4093,3.193,4097,5.071,4101,4,4106,2.683,4133,1.989,4136,3.193,4150,4,4160,3.193,4200,3.193,4204,1.989,4212,1.807,4256,1.807,4257,2.265,4258,2.265,4259,4.556,4260,2.265,4261,5.626,4262,3.193,4263,2.265,4264,2.265,4265,3.636,4266,5.215,4267,2.265,4268,2.265,4269,2.265,4270,2.265,4271,2.265,4272,2.265,4273,2.265,4274,3.636,4275,2.265,4276,5.015,4277,2.265,4278,2.265,4279,1.989,4280,3.636,4281,4.556,4282,2.265,4283,2.265,4284,2.265,4285,2.265,4286,2.265,4287,2.265,4288,1.989,4289,3.636,4290,2.265,4291,1.807,4292,2.265,4293,2.265,4294,2.265,4295,2.265,4296,2.265,4297,2.265,4298,2.265,4299,2.265,4300,3.636,4301,3.636,4302,2.265,4303,2.265,4304,3.636,4305,2.265,4306,2.265,4307,2.265,4308,2.265,4309,2.265,4310,2.265,4311,2.265,4312,2.265,4313,2.265,4314,2.265,4315,2.265,4316,2.265,4317,2.265,4318,2.265,4319,2.265,4320,2.265,4321,2.265,4322,2.265,4323,2.265,4324,2.265,4325,2.265,4326,2.265,4327,1.671,4328,2.265,4329,2.265,4330,2.265,4331,2.265,4332,2.265,4333,1.989,4334,2.265,4335,2.265,4336,2.265,4337,2.265,4338,2.265,4339,2.265,4340,2.265,4341,1.989,4342,2.265,4343,2.265,4344,1.807,4345,2.265,4346,1.989,4347,2.265,4348,2.265,4349,2.265,4350,2.265,4351,2.265,4352,2.265,4353,2.265,4354,2.265,4355,2.265,4356,1.989,4357,2.265]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[507,1.157,1306,1.33,3755,1.93,3982,2.064,4358,2.456]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,1.93,22,0.433,25,0.01,32,0.572,46,2.84,49,1.472,52,3.227,53,3.163,55,0.004,56,0.006,57,0.004,64,2.314,73,1.365,80,1.096,81,1.331,98,1.575,130,1.38,137,1.93,144,2.502,147,1.008,149,1.425,156,3.902,167,2.991,170,4.097,177,2.086,187,0.946,205,2.273,208,1.425,209,2.75,210,2.848,235,4.023,236,4.156,237,1.991,238,2.086,239,2.314,240,3.225,265,2.314,268,4.097,271,2.314,272,2.626,273,2.314,314,1.829,322,1.829,325,2.264,335,3.338,342,1.758,348,2.442,374,0.699,404,4.445,422,3.69,442,1.829,465,2.314,473,1.758,483,2.456,490,2.086,492,2.639,506,4.506,540,1.522,549,2.355,568,4.025,573,2.314,574,2.314,576,2.355,638,2.456,639,2.192,651,2.456,665,2.314,672,2.75,719,3.326,727,2.626,731,2.456,800,2.456,804,1.829,865,3.71,867,2.873,919,1.991,923,2.456,955,2.626,1116,2.314,1219,2.314,1248,2.456,1259,3.125,1291,3.125,1373,1.693,1381,2.314,1421,2.192,1425,2.314,1457,3.227,1468,2.84,1487,2.314,1494,4.509,1520,2.456,1523,2.626,1564,2.456,1601,2.456,1604,2.456,1647,5.29,1649,2.626,1676,2.314,1682,3.125,1755,2.086,1851,3.163,1876,4.156,1908,2.626,1910,2.84,2032,2.84,2040,2.626,2068,2.314,2072,4.097,2130,2.84,2171,2.626,2201,3.125,2241,2.456,2260,4.097,2297,2.314,2302,4.825,2403,2.626,2414,2.84,2547,3.543,2589,4.097,2613,2.84,2630,4.097,2655,2.626,2755,3.338,2775,2.626,2917,2.84,3006,2.456,3019,3.543,3022,2.456,3023,3.543,3026,2.456,3061,2.84,3063,2.626,3117,2.626,3122,4.097,3147,5.376,3153,2.626,3164,2.626,3177,3.543,3205,2.314,3244,3.338,3295,3.789,3364,2.456,3402,3.543,3470,2.456,3609,2.84,3632,2.626,3651,3.125,3663,2.314,3701,2.84,3716,2.84,3729,4.509,3730,2.84,3744,2.84,3755,5.75,3818,2.314,3903,2.84,3939,2.626,3949,2.84,3968,4.287,3978,3.125,3982,3.789,3983,3.125,4025,2.84,4027,2.84,4034,5.16,4076,2.84,4097,2.626,4106,3.789,4128,3.125,4149,3.125,4189,3.125,4215,3.125,4256,2.84,4261,4.509,4279,4.509,4327,2.626,4341,3.125,4344,2.84,4346,3.125,4358,3.125,4359,3.559,4360,3.559,4361,3.559,4362,3.559,4363,3.559,4364,3.559,4365,3.559,4366,3.559,4367,5.136,4368,3.559,4369,3.559,4370,3.559,4371,3.559,4372,3.559,4373,3.559,4374,3.559,4375,3.559,4376,3.559,4377,3.559,4378,3.559,4379,3.559,4380,3.559,4381,3.559,4382,3.559,4383,3.559,4384,3.559,4385,3.559,4386,3.125,4387,3.559,4388,3.559,4389,3.125,4390,3.559,4391,3.559,4392,3.559,4393,3.559,4394,3.559,4395,3.559,4396,5.136,4397,3.559,4398,3.559,4399,3.559,4400,3.559,4401,3.559,4402,3.559,4403,3.559,4404,3.559,4405,3.559,4406,3.559,4407,3.559,4408,3.559,4409,3.559,4410,3.559,4411,3.559,4412,3.559,4413,3.559,4414,3.559,4415,3.559,4416,3.559,4417,3.559,4418,3.559,4419,3.559,4420,3.559,4421,3.559,4422,3.559,4423,3.559,4424,3.559,4425,3.559,4426,3.559,4427,3.125,4428,3.559,4429,2.84,4430,3.559,4431,3.125,4432,3.559,4433,3.559,4434,3.559,4435,3.559,4436,2.84]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[267,1.723,507,1.157,1306,1.33,3663,1.818,3976,2.231]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.138,13,2.497,14,2.283,15,1.603,16,0.508,19,1.421,21,4.651,25,0.011,26,0.705,29,2.334,32,1.312,39,0.43,43,0.198,46,3.402,47,2.581,48,3.414,49,3.094,53,2.626,55,0.005,56,0.007,57,0.007,62,2.626,63,2.499,65,3.694,84,2.044,111,2.996,127,1.165,130,1.653,143,2.283,159,4.092,200,3.402,203,2.028,205,2.941,207,2.499,210,2.526,223,2.044,233,2.385,235,4.006,236,2.942,237,3.262,238,2.499,240,1.887,262,3.417,265,2.772,267,3.591,271,2.772,273,4.643,279,3.146,374,1.144,410,3.417,453,1.955,466,1.887,467,4.136,473,4.032,489,3.744,490,3.417,491,2.385,492,2.996,493,2.942,501,3.402,502,4.022,506,2.499,507,2.412,508,3.717,540,2.494,569,2.028,571,2.772,639,4.092,640,4.957,669,3.591,673,3.402,719,2.028,737,3.262,778,3.79,783,3.744,784,3.402,786,3.744,790,3.744,792,3.744,793,3.744,802,2.626,804,2.996,859,2.942,861,3.744,864,2.626,872,4.302,874,3.417,1012,4.302,1108,3.744,1266,3.744,1277,2.385,1380,2.499,1457,3.123,1462,2.942,1593,3.402,1666,3.146,1755,2.499,1843,2.772,1998,2.385,2026,2.499,2059,2.942,2169,3.146,2308,3.744,2363,3.146,2518,5.12,3034,2.626,3250,3.744,3377,3.744,3622,3.402,3663,2.772,3667,3.744,3910,3.146,3945,3.744,3976,4.651,4102,3.402,4145,3.744,4262,3.744,4288,3.744,4291,3.402,4327,3.146,4333,3.744,4344,3.402,4356,3.744,4436,3.402,4437,4.264,4438,7.143,4439,4.264,4440,4.264,4441,7.143,4442,3.744,4443,4.264,4444,4.264,4445,6.644,4446,4.264,4447,4.264,4448,4.264,4449,4.264,4450,5.831,4451,4.264,4452,4.264,4453,4.264,4454,4.264,4455,3.744,4456,4.264,4457,5.831,4458,4.264,4459,4.264,4460,4.264,4461,4.264,4462,4.264,4463,4.264,4464,4.264,4465,4.264,4466,4.264,4467,4.264,4468,4.264,4469,4.264]],["title/additional-documentation/nestjs-application/testing.html",[507,1.527,808,2.399,1306,1.755]],["body/additional-documentation/nestjs-application/testing.html",[0,0.088,2,0.484,13,1.993,16,0.166,22,0.564,24,0.497,25,0.011,37,0.587,39,0.151,47,1.032,49,0.964,55,0.006,56,0.004,57,0.003,62,2.86,63,3.395,73,1.892,80,0.794,81,0.471,84,1.986,86,1.399,87,2.056,91,1.921,98,1.032,111,2.387,113,1.152,120,2.181,130,1.443,131,2.047,132,2.047,138,0.933,141,1.032,143,3.308,144,1.461,146,1.032,147,0.458,148,1.249,154,2.047,156,2.487,167,3.212,193,0.733,203,3.978,205,1.647,209,1.993,210,2.692,214,1.608,216,1.72,223,1.449,234,1.608,235,2.487,237,1.304,239,2.419,240,2.347,262,1.366,269,1.86,317,1.304,319,1.767,348,1.109,357,1.436,376,1.152,388,1.032,392,1.912,403,1.109,433,2.431,440,3.735,442,2.977,444,5.088,453,1.069,456,4.623,457,2.977,458,4.23,459,4.275,464,1.72,465,2.419,470,1.72,473,1.152,492,1.198,502,1.608,506,3.395,508,1.304,540,1.986,546,1.515,551,1.249,566,1.436,568,1.198,569,2.209,576,2.431,588,1.912,594,2.292,608,1.608,640,1.436,651,3.998,669,3.804,670,3.447,672,2.84,708,1.366,710,1.86,716,2.567,719,3.201,731,1.608,757,1.86,758,1.608,802,2.292,804,1.198,808,5.104,862,1.72,865,1.436,866,2.047,868,3.912,874,2.722,885,1.608,897,1.72,899,2.047,900,2.969,905,1.72,906,1.72,907,1.86,908,1.515,912,1.72,923,4.261,926,2.969,929,1.608,950,1.608,951,2.746,955,2.746,964,2.181,986,1.515,988,1.436,1103,2.292,1110,3.998,1111,2.419,1116,3.447,1120,1.86,1122,1.86,1124,2.746,1209,3.766,1212,3.447,1219,2.419,1256,1.86,1257,1.86,1322,1.515,1334,1.249,1359,2.567,1379,2.047,1421,1.436,1457,2.487,1466,1.72,1470,1.608,1487,4.376,1502,1.366,1512,1.72,1520,3.658,1522,1.72,1523,2.746,1525,5.182,1531,3.998,1532,1.608,1534,1.86,1619,3.658,1649,1.72,1674,3.268,1687,1.86,1688,2.047,1708,2.047,1715,5.088,1725,1.515,1734,1.86,1755,1.366,1761,5.692,1791,2.047,1833,2.047,1843,1.515,1851,2.292,1852,1.86,1874,4.23,1878,1.72,1907,1.72,1998,4.138,2026,4.258,2040,2.746,2059,4.261,2061,1.86,2067,1.86,2068,1.515,2073,2.567,2094,2.567,2107,2.047,2124,1.86,2158,1.608,2159,1.86,2186,4.557,2213,3.705,2238,1.86,2241,1.608,2248,2.567,2253,1.86,2285,1.608,2302,2.567,2319,3.705,2405,1.86,2447,4.078,2469,1.72,2533,2.567,2547,3.998,2568,1.72,2575,5.088,2582,2.746,2755,1.515,2772,2.047,2906,2.746,2973,1.86,3006,3.658,3019,2.567,3023,1.608,3058,2.292,3061,1.86,3063,1.72,3084,1.72,3105,2.047,3117,1.72,3146,1.86,3147,3.427,3150,1.86,3177,1.608,3186,1.72,3196,2.047,3204,2.047,3205,1.515,3238,2.746,3244,3.447,3245,2.047,3261,2.969,3271,1.86,3299,2.047,3302,1.72,3331,1.608,3360,1.86,3364,1.608,3369,2.047,3421,1.86,3427,2.047,3438,5.088,3480,1.86,3680,2.047,3681,2.047,3699,4.656,3748,3.427,3755,1.608,3772,1.608,3795,2.047,3818,1.515,3903,1.86,3919,2.047,3939,4.782,4002,1.86,4017,2.047,4025,1.86,4028,3.268,4034,5.25,4041,4.261,4045,2.047,4097,3.912,4102,1.86,4106,3.912,4254,3.268,4256,2.969,4276,2.047,4291,1.86,4327,3.912,4386,2.047,4389,2.047,4427,5.088,4431,2.047,4436,1.86,4442,2.047,4455,2.047,4470,3.722,4471,2.331,4472,2.331,4473,2.331,4474,2.331,4475,2.331,4476,2.331,4477,2.331,4478,2.331,4479,2.331,4480,2.331,4481,2.331,4482,3.722,4483,2.331,4484,3.722,4485,2.331,4486,2.331,4487,2.331,4488,3.722,4489,2.331,4490,2.331,4491,2.331,4492,4.645,4493,3.722,4494,3.722,4495,2.331,4496,2.331,4497,5.302,4498,2.331,4499,2.331,4500,2.331,4501,2.331,4502,2.331,4503,2.331,4504,2.331,4505,3.722,4506,3.722,4507,3.722,4508,2.331,4509,3.722,4510,3.722,4511,2.331,4512,3.722,4513,3.722,4514,3.722,4515,2.331,4516,2.331,4517,2.331,4518,3.722,4519,2.331,4520,2.331,4521,2.331,4522,2.331,4523,2.331,4524,2.331,4525,3.722,4526,3.722,4527,2.331,4528,2.331,4529,2.331,4530,2.331,4531,2.331,4532,2.331,4533,2.331,4534,2.331,4535,2.331,4536,2.331,4537,2.331,4538,2.331,4539,2.331,4540,2.331,4541,2.331,4542,2.331,4543,2.331,4544,2.331,4545,2.331,4546,2.331,4547,2.331,4548,2.331,4549,2.331,4550,2.331,4551,2.331,4552,2.331,4553,2.331,4554,2.331,4555,2.331,4556,2.331,4557,2.331,4558,2.331,4559,2.331,4560,2.331,4561,2.331,4562,2.331,4563,2.331,4564,2.331,4565,2.331]],["title/additional-documentation/nestjs-application/decisions.html",[507,1.527,1306,1.755,4429,2.944]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.451,25,0.009,47,2.494,55,0.007,56,0.008,57,0.007,147,1.106,156,3.746,185,1.306,187,1.498,193,1.773,202,3.47,210,2.69,215,3.663,238,3.302,302,3.302,390,3.095,452,4.157,453,2.584,457,2.895,492,2.895,569,2.68,573,4.546,574,3.663,588,2.895,712,3.663,716,3.887,719,2.68,873,4.948,901,4.944,908,3.663,923,3.887,1212,4.546,1277,3.152,1457,3.018,1493,5.58,1502,4.098,1601,3.887,1725,3.663,1822,4.495,1846,3.887,1936,4.948,1993,5.611,1998,3.152,2022,4.495,2026,3.302,2154,4.944,2173,4.948,2236,3.887,2250,4.495,2297,3.663,2375,5.58,2398,4.948,2461,3.663,2607,4.948,2660,4.495,3205,3.663,3647,4.495,3730,4.495,3910,4.157,3968,3.663,4027,5.58,4041,3.887,4053,4.948,4212,4.495,4247,4.948,4429,5.58,4566,5.635,4567,5.635,4568,5.635,4569,5.635,4570,5.635,4571,5.635,4572,5.635,4573,5.635,4574,5.635,4575,6.994,4576,5.635,4577,5.635,4578,5.635,4579,5.635,4580,5.635,4581,5.635,4582,5.635,4583,5.635,4584,5.635,4585,5.635,4586,5.635,4587,5.635,4588,5.635,4589,5.635]],["title/additional-documentation/nestjs-application/vscode.html",[507,1.527,1306,1.755,3960,2.944]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.218,25,0.01,52,3.955,55,0.007,56,0.009,57,0.007,203,3.512,239,4.005,240,3.269,267,3.794,440,2.93,492,3.795,580,3.269,1138,4.25,1457,3.299,1467,4.005,1502,3.61,1533,4.25,1563,4.545,1649,4.545,1706,4.548,1989,4.545,1998,3.447,2068,4.005,2287,5.892,2629,4.915,3033,4.25,3034,3.794,3035,6.485,3162,4.915,3255,4.25,3366,5.41,3719,6.945,3746,5.41,3772,5.095,3818,4.005,3850,4.915,3958,5.41,3960,5.892,3961,5.41,4590,6.161,4591,6.161,4592,6.161,4593,6.161,4594,6.161,4595,6.161,4596,6.161,4597,6.161,4598,6.161,4599,6.161]],["title/additional-documentation/nestjs-application/git.html",[507,1.527,1306,1.755,3068,2.944]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.008,56,0.009,57,0.008,275,3.76,389,2.975,802,4.139,804,3.454,1370,4.369,1380,3.939,2693,4.637,2791,5.735,3068,6.543,4122,5.902,4600,6.721,4601,6.721,4602,6.721,4603,6.721,4604,6.721]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":919,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":2935,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2896,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":2956,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["0.7.6",{"_index":2950,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2837,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2832,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2811,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2812,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2834,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2819,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2830,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1639,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1777,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1772,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1209,"title":{},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":2922,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":2908,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2919,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["1.22.2",{"_index":2925,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2810,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2833,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2838,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2831,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1304,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":2800,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1873,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2029,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["12.0.0",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1770,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1316",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1764,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1665,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1759,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":1700,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1753,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":2920,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1854,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1750,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3318,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1874,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.0.3",{"_index":2958,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":2923,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["2.2",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["2.2.6",{"_index":2960,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1743,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3080,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1623,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2731,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2337,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1793,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":1917,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":1927,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":1879,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1802,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1828,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1824,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1853,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1834,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1835,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1803,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1769,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1752,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1805,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1785,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1775,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1638,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1633,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1622,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2332,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3768,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1520,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2829,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1786,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":3743,"title":{},"body":{"overview.html":{}}}],["3607",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2533,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":2915,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":2932,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2861,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2916,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3021,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2825,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2827,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3780,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1687,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":2918,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2836,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2835,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1713,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1688,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2911,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1747,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2828,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3397,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3416,"title":{},"body":{"license.html":{}}}],["7",{"_index":1483,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":2914,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":1901,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1652,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1648,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1748,"title":{},"body":{"changelog.html":{}}}],["8.5.1",{"_index":2927,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8020",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":3920,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1640,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1644,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1646,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":1891,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":1931,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":1922,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1690,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1864,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1859,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1836,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1744,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1784,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1719,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1794,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1656,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1740,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1773,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1730,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1754,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1660,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1615,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":3928,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1310,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3042,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":416,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":625,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":648,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":649,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":3937,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":184,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1191,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1535,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":3072,"title":{},"body":{"index.html":{}}}],["ability",{"_index":3458,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3070,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3342,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3709,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":233,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3538,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3537,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3760,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":2696,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":442,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":344,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2234,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2249,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1195,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3382,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3713,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3152,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3341,"title":{},"body":{"license.html":{}}}],["according",{"_index":3704,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":759,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["accountid",{"_index":757,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3717,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3281,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3587,"title":{},"body":{"license.html":{}}}],["action",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2629,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":846,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3198,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3628,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3437,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3176,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":1380,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":3885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":867,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1650,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":507,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":3917,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1192,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1198,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3662,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3171,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2261,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2005,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1724,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1605,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1875,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2109,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3316,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3464,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3700,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3465,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3078,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3568,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3278,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2526,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3331,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3369,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3737,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3645,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3687,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3596,"title":{},"body":{"license.html":{}}}],["aims",{"_index":3969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":822,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3801,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3575,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1649,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1421,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1563,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["along",{"_index":3344,"title":{},"body":{"license.html":{}}}],["already",{"_index":1138,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3135,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3393,"title":{},"body":{"license.html":{}}}],["always",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1739,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":3945,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3539,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3128,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anti",{"_index":3304,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3354,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3185,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":3836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":425,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1159,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1180,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1178,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1034,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1176,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1173,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":3993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":982,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":996,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1423,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":739,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":279,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":278,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":276,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":277,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3799,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3190,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":3930,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":240,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":603,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3910,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3668,"title":{},"body":{"license.html":{}}}],["apply",{"_index":800,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":3837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3210,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3336,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3708,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3812,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3802,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../create",{"_index":3827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":3831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3803,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3805,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3008,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3007,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":3826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":3830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3811,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3806,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.uc.ts",{"_index":3807,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../sorting.ts",{"_index":3809,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":3009,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":3824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":3825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":3813,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":3912,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":3952,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":3957,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/constants.ts",{"_index":2802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":264,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":497,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":499,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1589,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":488,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":609,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":773,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":559,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":798,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":776,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":787,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":785,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":791,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":782,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":789,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":881,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":855,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":705,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1594,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2820,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":814,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2822,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":810,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":755,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":826,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":829,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":827,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":122,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":129,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":152,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:37",{"_index":142,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:57",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":135,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":511,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":884,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":578,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":565,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":401,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1021,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1158,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1166,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1182,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1160,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1165,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1175,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1177,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1181,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1179,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1171,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1164,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1185,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1162,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1183,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1168,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1351,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1560,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1585,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":948,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":956,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":966,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":969,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":979,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":960,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":309,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":318,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":331,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1528,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":944,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":935,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":937,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":938,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":940,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":941,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":942,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":943,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":939,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":936,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":945,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":934,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":946,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1355,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":741,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1343,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1527,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1570,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1042,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1050,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1048,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1054,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1052,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1344,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1578,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1104,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1189,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1117,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":1123,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:14",{"_index":1140,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:25",{"_index":1130,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:40",{"_index":1134,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:45",{"_index":1126,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:49",{"_index":1132,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1227,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1253,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1238,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1234,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1245,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1251,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1244,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1247,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1236,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1240,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1242,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1500,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1508,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1505,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1507,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1509,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1506,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1511,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1510,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1408,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1410,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":285,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":292,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":291,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":297,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":290,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":848,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:11",{"_index":851,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:8",{"_index":852,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1388,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1394,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1392,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1397,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1400,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1404,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1399,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1402,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1403,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1431,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":1433,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1450,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":1452,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:15",{"_index":1454,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1447,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1513,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1518,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1516,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1357,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1358,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1363,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":3875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":232,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":245,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":247,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":246,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":244,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":248,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":2849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":461,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":435,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1529,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1541,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1539,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1538,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1303,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1311,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1314,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1321,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1325,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1328,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1327,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1326,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1324,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1333,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":2850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":2852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":183,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":191,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":222,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":226,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":225,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":229,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":189,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/pagination.interface.ts",{"_index":795,"title":{},"body":{"interfaces/IPagination.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":3815,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":3819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/sorting.ts",{"_index":2854,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":3820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/interface/pagination.interface.ts",{"_index":1302,"title":{},"body":{"interfaces/PaginationModel.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":3968,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3732,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["aren't",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":619,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3691,"title":{},"body":{"license.html":{}}}],["around",{"_index":3744,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3606,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3617,"title":{},"body":{"license.html":{}}}],["array",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["array.isarray(constraint",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":538,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["arrays",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3313,"title":{},"body":{"license.html":{}}}],["asc",{"_index":3900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asking",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3125,"title":{},"body":{"license.html":{}}}],["assets",{"_index":3557,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assignment",{"_index":1889,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3262,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3683,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3712,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3504,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["asynclocalstorage",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3719,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3515,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1857,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3488,"title":{},"body":{"license.html":{}}}],["aud",{"_index":765,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":764,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":811,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":126,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":512,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":520,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":528,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":530,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":524,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":522,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":526,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":819,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":825,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":824,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":990,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":997,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authenticated",{"_index":762,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2248,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":991,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentication/interface/jwt",{"_index":992,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authguard",{"_index":812,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":813,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":85,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3487,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1522,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":124,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1107,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1254,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":114,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":120,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3480,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3582,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3621,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3493,"title":{},"body":{"license.html":{}}}],["auto",{"_index":3935,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":1672,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2532,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":3058,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["avoiding",{"_index":3985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3102,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2774,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2168,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3242,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1620,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1115,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1339,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1342,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":234,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":570,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":182,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":231,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":230,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":198,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":298,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":300,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":299,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":301,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["basic",{"_index":3271,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":1914,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":3887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":3137,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3148,"title":{},"body":{"license.html":{}}}],["before",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":3931,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3043,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3291,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":269,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1534,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2233,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["believe",{"_index":3615,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3299,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3131,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3818,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3716,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["better",{"_index":910,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":1924,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1619,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3371,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1465,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["bob",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":980,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":753,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":2853,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3011,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2300,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":1804,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1671,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brb",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3740,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3738,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":636,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1486,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":3919,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1641,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1746,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3750,"title":{},"body":{"todo.html":{}}}],["business",{"_index":235,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1193,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1200,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1194,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1202,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3082,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2398,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3060,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":465,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":931,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["called",{"_index":2547,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":471,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2040,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2068,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3348,"title":{},"body":{"license.html":{}}}],["case",{"_index":506,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3147,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":612,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["catch(error",{"_index":616,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1837,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":869,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3519,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":742,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3477,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3530,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["chalk",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1609,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changed",{"_index":860,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1599,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1601,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1826,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3455,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3114,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1796,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":131,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":136,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":710,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3053,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3066,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":2469,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2539,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["choosing",{"_index":3672,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1849,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1667,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3297,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3305,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3711,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3572,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3584,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":561,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":803,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2302,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2253,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3405,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":3953,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":1939,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":238,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":906,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clipboard",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3067,"title":{},"body":{"index.html":{}}}],["close",{"_index":926,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":3707,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["cloud",{"_index":3013,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3783,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":2769,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2165,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":2930,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":115,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":116,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":118,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":117,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":258,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":259,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":562,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":563,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":564,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":878,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":880,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":879,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1099,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1102,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1101,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1100,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1360,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1361,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1444,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1445,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2434,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2447,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":722,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3647,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":302,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":293,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1886,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":286,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3657,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1419,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3142,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3355,"title":{},"body":{"license.html":{}}}],["command",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3220,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3440,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2200,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3597,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3065,"title":{},"body":{"index.html":{}}}],["common",{"_index":2917,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3267,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3098,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":633,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3363,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3370,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3631,"title":{},"body":{"license.html":{}}}],["compile",{"_index":459,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3249,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3052,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":872,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["compliance",{"_index":3553,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3288,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":3947,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1815,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["component(s",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":1705,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3193,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1653,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3663,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["conditioned",{"_index":3625,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1523,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":1370,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1723,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('request_timeout",{"_index":3899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":3959,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":266,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":2525,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":928,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connections",{"_index":1655,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":2353,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1832,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3541,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3690,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3506,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":2025,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":3950,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3335,"title":{},"body":{"license.html":{}}}],["const",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3280,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":600,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1323,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":1121,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":134,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":518,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1591,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(newsrepo",{"_index":1233,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":288,"title":{},"body":{"classes/Course.html":{}}}],["constructor(private",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":311,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":605,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1515,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":498,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":242,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3635,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3422,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1692,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3632,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":3990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3048,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3508,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":321,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3594,"title":{},"body":{"license.html":{}}}],["context",{"_index":473,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2021,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3449,"title":{},"body":{"license.html":{}}}],["contract",{"_index":3989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3503,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3641,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3105,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3581,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3583,"title":{},"body":{"license.html":{}}}],["control",{"_index":2665,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3586,"title":{},"body":{"license.html":{}}}],["controller",{"_index":433,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":998,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1424,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller.ts",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1055,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1106,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1448,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3213,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["converted",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3199,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3619,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3456,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3207,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3502,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3097,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3091,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2077,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3159,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3093,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3081,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3168,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3294,"title":{},"body":{"license.html":{}}}],["core",{"_index":265,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4604,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1376,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1108,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":257,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2059,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3685,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2575,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3252,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3391,"title":{},"body":{"license.html":{}}}],["count",{"_index":1006,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1142,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1151,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3573,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":3821,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3197,"title":{},"body":{"license.html":{}}}],["country",{"_index":3611,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":284,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course.entity",{"_index":853,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1463,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":850,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":308,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1503,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":317,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":305,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1472,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3640,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3706,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3601,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3061,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":1999,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3182,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":1702,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":999,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":954,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1235,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":865,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":613,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":622,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2813,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":652,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2814,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":641,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":654,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":329,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":902,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":925,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":400,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":638,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":454,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":404,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":717,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":322,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":335,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3225,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":267,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2318,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":201,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3533,"title":{},"body":{"license.html":{}}}],["current",{"_index":1167,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":912,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":957,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1002,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1001,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":508,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3384,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3654,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3388,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":270,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":876,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":3976,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3361,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3688,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":719,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":2026,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1382,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":887,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:47",{"_index":891,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:57",{"_index":895,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":886,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1459,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":484,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1712,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":927,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_url",{"_index":1369,"title":{},"body":{"modules/ServerModule.html":{}}}],["dbs",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dburl",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dd",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1458,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":777,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{}}}],["debug(message",{"_index":781,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":792,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3035,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3944,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["december",{"_index":3317,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3670,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4429,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["declare",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3494,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":729,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3010,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":187,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":3970,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3307,"title":{},"body":{"license.html":{}}}],["default",{"_index":223,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1307,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1537,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3682,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3132,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3637,"title":{},"body":{"license.html":{}}}],["define",{"_index":205,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":3907,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3162,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":447,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":451,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":434,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":950,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":959,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1237,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(news",{"_index":1125,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["delete(newsid",{"_index":958,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["deletedid",{"_index":1019,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":1900,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1642,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3461,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3598,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dependecy",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3903,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":1673,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1670,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":592,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3607,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":3901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describe",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["describe('get",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":3991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":3982,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3399,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3096,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designing",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":3980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3661,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1590,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1592,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3024,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":635,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2097,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3431,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4590,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":3925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3015,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developers",{"_index":3121,"title":{},"body":{"license.html":{}}}],["development",{"_index":2158,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":1720,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3074,"title":{},"body":{"index.html":{}}}],["di",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1364,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3789,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3660,"title":{},"body":{"license.html":{}}}],["different",{"_index":2461,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3485,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1689,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3292,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3406,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3186,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1489,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":3756,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3328,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3673,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3482,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":199,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3623,"title":{},"body":{"license.html":{}}}],["display",{"_index":3362,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":323,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1504,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":412,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3209,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2471,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":3913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguishing",{"_index":3664,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3089,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3723,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3626,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3160,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3776,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":405,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":1966,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":3880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":1603,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1710,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":915,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doing",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1418,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3755,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1470,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["doubtful",{"_index":3433,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3549,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4358,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["dropdown",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":403,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1063,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1438,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1082,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1077,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1065,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1440,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1436,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1581,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1059,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1583,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1349,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1086,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1075,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1067,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1069,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1089,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1071,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1073,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1061,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1091,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1084,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1080,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":628,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1009,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":709,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":3890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1398,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["duplicated",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3383,"title":{},"body":{"license.html":{}}}],["duration",{"_index":463,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":460,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2101,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3430,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3263,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":893,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":202,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1110,"title":{},"body":{"modules/NewsModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2073,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3181,"title":{},"body":{"license.html":{}}}],["easier",{"_index":3974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":593,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":341,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3703,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3325,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3308,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3721,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["efforts",{"_index":3566,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3727,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1136,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":1124,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":2260,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3379,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3734,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1219,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1206,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":715,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["enabled",{"_index":711,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":725,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":2851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3201,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2397,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3140,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2186,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4595,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4603,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2124,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3599,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3330,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":143,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3633,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3353,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3649,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":147,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":137,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":1122,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1384,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":971,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":431,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["enumname",{"_index":421,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1617,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3763,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2159,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":1717,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3283,"title":{},"body":{"license.html":{}}}],["err",{"_index":1554,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":783,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":495,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":610,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":615,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":620,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":623,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":653,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":560,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":280,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":260,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":256,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":650,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["errros",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":2909,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":386,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3245,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2724,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2578,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2338,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1647,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3088,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2061,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3180,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2062,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":490,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exception.constructor.name.replace('exception",{"_index":647,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":642,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":644,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":738,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":611,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":646,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":640,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":3988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3420,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1887,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2272,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3591,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3286,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3642,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3237,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1111,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1116,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":3916,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3192,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1531,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":470,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3567,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3326,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":845,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1564,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2201,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exp",{"_index":767,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["expect(data.length).tobe(0",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3438,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2298,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expiration",{"_index":766,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":823,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":595,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3277,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2305,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3753,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":590,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3675,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3514,"title":{},"body":{"license.html":{}}}],["extend",{"_index":712,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3622,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3366,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3212,"title":{},"body":{"license.html":{}}}],["external",{"_index":1878,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":817,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":324,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":1495,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":735,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["extractjwt",{"_index":831,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3500,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":415,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2141,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitating",{"_index":3655,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3287,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1839,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4596,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":1884,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["failure",{"_index":3698,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3282,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3425,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3047,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3178,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["favicon",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3435,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":125,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":532,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["feathers/feathers.module",{"_index":123,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":121,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":557,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":630,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2860,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":591,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":119,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":577,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":582,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":519,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":597,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1666,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3046,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3949,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3346,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3963,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1593,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":307,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3752,"title":{},"body":{"todo.html":{}}}],["figure",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":3938,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1706,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1714,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":491,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1022,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1028,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1026,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1033,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1226,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":494,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1196,"title":{},"body":{"classes/NewsScope.html":{}}}],["filters",{"_index":1031,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3525,"title":{},"body":{"license.html":{}}}],["find",{"_index":580,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":581,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":951,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":962,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1127,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1228,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1239,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1451,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1453,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1514,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1517,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["finding",{"_index":750,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1118,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1131,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewstarget",{"_index":747,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["findone",{"_index":952,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":967,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1119,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1133,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1229,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1241,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1383,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1586,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["firstname",{"_index":1571,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3678,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1722,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":3936,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":1611,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2054,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1030,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3268,"title":{},"body":{"license.html":{}}}],["fly",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3032,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2655,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1467,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":3956,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3324,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":3838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":732,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":2138,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2684,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":502,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2361,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3374,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":888,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":889,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1387,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["foundation",{"_index":3085,"title":{},"body":{"license.html":{}}}],["framework",{"_index":3972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3083,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3103,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":2921,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3311,"title":{},"body":{"license.html":{}}}],["full",{"_index":1725,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":651,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":268,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3450,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3006,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3402,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":343,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":3954,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1735,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2171,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["generalerror",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3259,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2070,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["generated",{"_index":3889,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":968,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1409,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":586,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":132,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":151,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":437,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getnewspermissions",{"_index":1230,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1243,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":133,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":513,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":521,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getpermittedtargets",{"_index":514,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["getpermittedtargets(userid",{"_index":523,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1204,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1231,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1246,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":604,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":601,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1232,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1249,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":1597,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":515,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":525,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getuserschoolpermissions",{"_index":516,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":527,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getusertargetpermissions",{"_index":517,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":529,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3068,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":2929,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":2953,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3343,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1532,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":566,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3349,"title":{},"body":{"license.html":{}}}],["global",{"_index":275,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalerrorfilter",{"_index":493,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":799,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["globals",{"_index":2175,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":704,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3077,"title":{},"body":{"license.html":{}}}],["go",{"_index":3031,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3063,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3153,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3474,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3154,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3495,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3272,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3544,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3741,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3401,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3715,"title":{},"body":{"license.html":{}}}],["group",{"_index":1488,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1469,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1223,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1492,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1013,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3844,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guidelines",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1562,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1462,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":236,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2358,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handling",{"_index":271,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["happen",{"_index":4000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3285,"title":{},"body":{"license.html":{}}}],["header",{"_index":820,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3139,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":634,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["helpers",{"_index":2194,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hence",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hereafter",{"_index":3588,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":849,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":3987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":3996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["hints",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":2942,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3521,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3481,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1461,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1389,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1391,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1406,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1478,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2066,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2241,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":3724,"title":{},"body":{"license.html":{}}}],["host",{"_index":618,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3408,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3777,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3426,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2163,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":333,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3087,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3018,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3726,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":241,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/mikro",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3782,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":3965,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":3966,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":3964,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":3758,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":251,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":768,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4599,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":740,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":754,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":185,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1335,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1337,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3804,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3613,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":501,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identity",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":243,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["iframe",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":2432,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":775,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":575,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1856,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":859,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3244,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2169,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":481,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3636,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":598,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["importer",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3579,"title":{},"body":{"license.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3505,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3639,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1218,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3133,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3692,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3695,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3086,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3689,"title":{},"body":{"license.html":{}}}],["include",{"_index":197,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3239,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3196,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2238,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3373,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":718,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2753,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3138,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3656,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3429,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1766,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3501,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3364,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3749,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1677,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3547,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3512,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1852,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3174,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3441,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":3891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":368,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":751,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":310,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1573,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":313,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1057,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1345,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1347,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1186,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1352,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1354,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1588,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1353,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3413,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":509,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3545,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3576,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3189,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":200,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1661,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":866,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3570,"title":{},"body":{"license.html":{}}}],["inject",{"_index":589,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":922,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":924,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":127,"title":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"overview.html":{}}}],["injected",{"_index":571,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":862,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":802,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":239,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["install",{"_index":3254,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3445,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3459,"title":{},"body":{"license.html":{}}}],["instance",{"_index":716,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":632,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2772,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":1851,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3025,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3338,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1715,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3106,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3329,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3729,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3651,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3204,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":468,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":469,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":455,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":283,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":261,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3385,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3563,"title":{},"body":{"license.html":{}}}],["interface",{"_index":374,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"interfaces/User.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":558,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"interfaces/User.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3451,"title":{},"body":{"license.html":{}}}],["internal",{"_index":350,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":624,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3702,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3251,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3266,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":572,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2650,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2613,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3902,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3745,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3359,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":794,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1365,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3274,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1035,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":631,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":427,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":408,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1731,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":629,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1036,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1041,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1315,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1312,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1305,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1037,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1038,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1029,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1567,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1023,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1566,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1027,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1279,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":770,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":428,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":406,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":419,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":414,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":769,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2022,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istechnicalerror",{"_index":637,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":877,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["it('should",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3223,"title":{},"body":{"license.html":{}}}],["items",{"_index":1699,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3462,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":749,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3772,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":3878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3040,"title":{},"body":{"index.html":{}}}],["job",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2548,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":1936,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":2924,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":2906,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2137,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":2926,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":771,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":809,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":105,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":815,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":763,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1604,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":3914,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3246,"title":{},"body":{"license.html":{}}}],["key",{"_index":1286,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":3822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":3447,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3200,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3094,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3120,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["knowingly",{"_index":3603,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3610,"title":{},"body":{"license.html":{}}}],["known",{"_index":1910,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["knows",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":1897,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3050,"title":{},"body":{"index.html":{}}}],["language",{"_index":2467,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3367,"title":{},"body":{"license.html":{}}}],["last",{"_index":1587,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1572,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3667,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["latest",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":3958,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3191,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3165,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3574,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":3994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3748,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1628,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":2928,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":2931,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2414,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3731,"title":{},"body":{"license.html":{}}}],["lean",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["leave",{"_index":3796,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1530,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":567,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3786,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3127,"title":{},"body":{"license.html":{}}}],["legend",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lern",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2713,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":847,"title":{"classes/Lesson.html":{}},"body":{"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":1405,"title":{},"body":{"classes/Task.html":{}}}],["lessonid",{"_index":1401,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":3896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":854,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1474,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3144,"title":{},"body":{"license.html":{}}}],["level",{"_index":2568,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3484,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3188,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3236,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3421,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3076,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3169,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3170,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3172,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3100,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3548,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3492,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3542,"title":{},"body":{"license.html":{}}}],["limit",{"_index":796,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3686,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3676,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3483,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1701,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1817,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3264,"title":{},"body":{"license.html":{}}}],["links",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3773,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":312,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3571,"title":{},"body":{"license.html":{}}}],["living",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3761,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":1782,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1850,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1716,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3016,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2196,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":626,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":778,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log(message",{"_index":786,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3774,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":467,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":614,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":475,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.interface",{"_index":857,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":882,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":281,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":627,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":262,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":273,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":462,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":476,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":472,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1487,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1468,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2456,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3747,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3051,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["longer",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2470,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3693,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3696,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1224,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3376,"title":{},"body":{"license.html":{}}}],["made",{"_index":3134,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2423,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":3767,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2377,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2293,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2558,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3241,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":930,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3302,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1565,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":1822,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3751,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3589,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1669,"title":{},"body":{"changelog.html":{}}}],["many",{"_index":2098,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":303,"title":{},"body":{"classes/Course.html":{}}}],["manytomany({fieldname",{"_index":294,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":330,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":334,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1846,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1043,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1047,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1044,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1049,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":995,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1416,"title":{},"body":{"controllers/TaskController.html":{}}}],["mapping",{"_index":4041,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1045,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1051,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1346,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1432,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1579,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1046,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1053,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3634,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3490,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3499,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3167,"title":{},"body":{"license.html":{}}}],["master",{"_index":2019,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":510,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4517,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3289,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3463,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1651,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1658,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1316,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1320,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1309,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maybe",{"_index":909,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3779,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3507,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3071,"title":{},"body":{"index.html":{}}}],["means",{"_index":3164,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3310,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3321,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3334,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3347,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3224,"title":{},"body":{"license.html":{}}}],["member",{"_index":535,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["members",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":885,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3221,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3677,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3203,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3075,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1800,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3559,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1659,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1663,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3276,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":2973,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":594,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2117,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2409,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":2933,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2678,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1112,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1114,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":193,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":896,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3771,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":917,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":920,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":921,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":897,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forroot",{"_index":1379,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":903,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":918,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":890,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1317,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1318,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1319,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1308,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":1718,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4589,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3005,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3489,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1762,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1217,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":2934,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2203,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocked",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2559,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":422,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1291,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3161,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3227,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2699,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3352,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3129,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3194,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":3905,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":84,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":899,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1366,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1372,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1377,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1378,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1367,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1375,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1371,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":908,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":905,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongod.geturi",{"_index":907,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongod.stop",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongodb",{"_index":901,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":883,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{}}}],["mongomemoryserver",{"_index":900,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongoose",{"_index":1381,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":2955,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1755,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3531,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1464,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":448,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":643,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2514,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":736,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n21",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["named",{"_index":3069,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["names",{"_index":974,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["naming",{"_index":3794,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["nanoid",{"_index":2957,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1741,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3365,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1491,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2403,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3022,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3253,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1460,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nest",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":3785,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":3909,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":3915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":3918,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":3948,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":3933,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":3934,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":3908,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":3921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":3926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":3923,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":3929,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":3946,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":3941,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":3943,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":3940,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2607,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":443,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":492,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":3955,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":446,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":426,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":445,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":856,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3099,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":150,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["new",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":319,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1064,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1083,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1263,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1066,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1060,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":402,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1569,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":424,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":407,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":413,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1568,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":423,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":418,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1087,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1068,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1070,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1283,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1072,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1074,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1062,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":371,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1085,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1079,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Submission.html":{},"interfaces/User.html":{}}}],["news:10",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":361,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":363,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":358,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":332,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":337,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":345,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":352,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":353,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":354,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":356,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":349,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":336,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":360,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":346,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1288,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1113,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1262,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1257,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1174,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1188,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1256,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":947,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1270,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":963,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":961,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist",{"_index":1005,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1276,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1010,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1273,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":994,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1003,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1008,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1004,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1018,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1098,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1103,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":993,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1144,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstarget",{"_index":743,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":1128,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newstargetmodel.course",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodelvalue",{"_index":139,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["newsuc",{"_index":988,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1281,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1268,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":485,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1490,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2788,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3014,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":2952,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":2954,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2157,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3395,"title":{},"body":{"license.html":{}}}],["none",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1296,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":1908,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3424,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1600,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":196,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":531,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{},"interfaces/User.html":{}}}],["notfoundexception(`the",{"_index":1385,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3543,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3215,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3211,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3532,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3528,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3478,"title":{},"body":{"license.html":{}}}],["november",{"_index":3079,"title":{},"body":{"license.html":{}}}],["now",{"_index":483,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":487,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3033,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3666,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3816,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":2250,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3020,"title":{},"body":{"index.html":{}}}],["o",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2221,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":1969,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":1155,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["object",{"_index":1334,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":306,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1287,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":430,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":186,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{}}}],["objectid.isvalid(value",{"_index":1341,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":3646,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3410,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3312,"title":{},"body":{"license.html":{}}}],["observable",{"_index":474,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3394,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":645,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3540,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2032,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1496,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["of.ts",{"_index":3814,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3126,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3415,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3398,"title":{},"body":{"license.html":{}}}],["official",{"_index":3229,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":1898,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1797,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1497,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["old",{"_index":1871,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1519,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["once",{"_index":3977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1277,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1481,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1482,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":894,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":2236,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":3927,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3699,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3403,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3247,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2756,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2048,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3149,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3653,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1664,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":916,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":892,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["orchestration",{"_index":1892,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1471,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["orderby",{"_index":1498,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3555,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3175,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":3979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":1935,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2702,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":923,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":3967,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":194,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/entitymanager",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":195,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":898,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3030,"title":{},"body":{"index.html":{}}}],["others",{"_index":731,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":914,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ours",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2363,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3295,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["over",{"_index":2375,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2319,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":489,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":274,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3742,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1833,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3585,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1170,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2356,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3358,"title":{},"body":{"license.html":{}}}],["packages",{"_index":3759,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3240,"title":{},"body":{"license.html":{}}}],["page",{"_index":1306,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1313,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["paginate",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["pagination",{"_index":964,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationmodel",{"_index":1129,"title":{"interfaces/PaginationModel.html":{}},"body":{"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["paginationquery",{"_index":965,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":986,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1011,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1430,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3728,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3518,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3595,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1791,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1627,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1015,"title":{},"body":{"controllers/NewsController.html":{}}}],["param.ts",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1012,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":584,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1094,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1095,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1260,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1097,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1096,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1093,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1683,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2078,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2280,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":983,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3177,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":289,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1561,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3233,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3202,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3269,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party",{"_index":3404,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3561,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":727,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1420,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":2347,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["passwordrecovery",{"_index":1880,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":338,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":981,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":978,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3517,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3580,"title":{},"body":{"license.html":{}}}],["path",{"_index":608,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":3874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2235,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":432,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["payload",{"_index":830,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{}}}],["payload.ts",{"_index":756,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payment",{"_index":3627,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3411,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3414,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3064,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["performance",{"_index":1767,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3260,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3527,"title":{},"body":{"license.html":{}}}],["permission",{"_index":342,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1301,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":141,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1300,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3340,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3372,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3143,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1524,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3454,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2130,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":2630,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1696,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["personal",{"_index":1654,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3644,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3380,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3392,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3118,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1682,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":707,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1595,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1668,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1338,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3400,"title":{},"body":{"license.html":{}}}],["plain",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":2912,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3565,"title":{},"body":{"license.html":{}}}],["point",{"_index":409,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3722,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2624,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2093,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1493,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":975,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3418,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3389,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3356,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2049,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["post",{"_index":955,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3765,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3323,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3038,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3101,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices/layers/orm",{"_index":3770,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3092,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3158,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3562,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3226,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":949,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["preload",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":870,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2195,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3219,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3486,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2231,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3564,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3113,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3629,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":188,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":3978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3529,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1657,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":466,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2692,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["problems",{"_index":1989,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3028,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3446,"title":{},"body":{"license.html":{}}}],["process",{"_index":2405,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3618,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3381,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":1980,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3630,"title":{},"body":{"license.html":{}}}],["program",{"_index":3108,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3333,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3735,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3234,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3119,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3714,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3293,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3319,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3624,"title":{},"body":{"license.html":{}}}],["project",{"_index":1602,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2116,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3222,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3214,"title":{},"body":{"license.html":{}}}],["promise",{"_index":149,"title":{},"body":{"injectables/AuthorizationService.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["promise((resolve",{"_index":449,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1272,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promisify",{"_index":2910,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3184,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3546,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3195,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":192,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":227,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3012,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":314,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1575,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1577,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":316,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3122,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1536,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3303,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3345,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":3971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3467,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3681,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":457,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":874,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":868,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":272,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3479,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3523,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3669,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3671,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":1894,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":441,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3491,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3151,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3337,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1032,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["publishedat",{"_index":1149,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["pull",{"_index":2198,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3257,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3427,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3616,"title":{},"body":{"license.html":{}}}],["put",{"_index":2755,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":1883,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2177,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3536,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3680,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1212,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1216,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1090,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1088,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1092,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1455,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1499,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["querys",{"_index":1422,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":2913,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":972,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["readable",{"_index":3377,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3605,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3470,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/PaginationModel.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reason",{"_index":3614,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3390,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3534,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3116,"title":{},"body":{"license.html":{}}}],["received",{"_index":3360,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3550,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3620,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3453,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3612,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3173,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3230,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4601,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4594,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4592,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":596,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["redis",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3718,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1738,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2103,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":3986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1708,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":355,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":357,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":2660,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3112,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3163,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":2972,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3648,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3475,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3357,"title":{},"body":{"license.html":{}}}],["regards",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3270,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2273,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1678,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1681,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3522,"title":{},"body":{"license.html":{}}}],["rejections",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":417,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":1993,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3296,"title":{},"body":{"license.html":{}}}],["release",{"_index":1674,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3155,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3145,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3350,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3156,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3778,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3604,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3409,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3110,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3650,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3652,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3476,"title":{},"body":{"license.html":{}}}],["remove",{"_index":730,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3694,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1971,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":1870,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":1907,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["repo",{"_index":1525,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1255,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1105,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1449,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2510,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":3942,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["repositories",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3443,"title":{},"body":{"license.html":{}}}],["req",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":569,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1540,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1386,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":806,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":1909,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":818,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('./tsconfig.json",{"_index":3879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":734,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1280,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3351,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3019,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":723,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3179,"title":{},"body":{"license.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3434,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1135,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3327,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3790,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3552,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1662,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":3911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3791,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":464,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1284,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3320,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3509,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2618,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2857,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3141,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3457,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":970,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1501,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":3984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1745,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3054,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3705,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3658,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2785,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3123,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3679,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2312,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":761,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":758,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["rollback",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3460,"title":{},"body":{"license.html":{}}}],["room",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":206,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":439,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1728,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3569,"title":{},"body":{"license.html":{}}}],["rss",{"_index":351,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":1876,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1676,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["runner",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1533,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3248,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":477,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":479,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3720,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3578,"title":{},"body":{"license.html":{}}}],["same",{"_index":2297,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":536,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["sample",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["samplecontroller",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sampleservice",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":1913,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3757,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":1120,"title":{},"body":{"injectables/NewsRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(news",{"_index":1139,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["saying",{"_index":3407,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1614,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2589,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1679,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":3886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":325,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":348,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":347,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1348,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1350,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1056,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1076,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1169,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":398,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":745,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolyear",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":411,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2164,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":452,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":588,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1146,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1147,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":599,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.sortby",{"_index":1150,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.target",{"_index":1293,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":858,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1190,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1201,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1203,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1199,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1197,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1205,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1290,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1267,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":544,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["scopes",{"_index":973,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1637,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3255,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1734,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3187,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3130,"title":{},"body":{"license.html":{}}}],["secret",{"_index":816,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3301,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3375,"title":{},"body":{"license.html":{}}}],["secure",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1612,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":3781,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3764,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2797,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3593,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3577,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1606,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3166,"title":{},"body":{"license.html":{}}}],["send",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4060,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":505,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["sentry",{"_index":2050,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3417,"title":{},"body":{"license.html":{}}}],["separate",{"_index":864,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["separated",{"_index":3045,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2074,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":3983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["serialization",{"_index":3754,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2173,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":190,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3017,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":453,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1368,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3784,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1356,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1359,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":2711,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3243,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":540,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":547,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.findallforuser(userid",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":543,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.provider",{"_index":533,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/User.html":{}}}],["service.provider.ts",{"_index":579,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":587,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":583,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":606,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":607,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":568,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3684,"title":{},"body":{"license.html":{}}}],["session",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":804,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":875,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":3882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":2107,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":450,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":3840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2287,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":3881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":708,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":3884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":3306,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3104,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":1861,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":985,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1411,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":987,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":984,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1040,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1143,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/pipes",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1207,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TaskRepo.html":{}}}],["shared/repo/interface/pagination.interface",{"_index":1141,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":2951,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":1942,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3736,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3444,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3029,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplicity",{"_index":3798,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simulates",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3643,"title":{},"body":{"license.html":{}}}],["single",{"_index":737,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":797,"title":{},"body":{"interfaces/IPagination.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":733,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":3788,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":4598,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2765,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3084,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3428,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3284,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3298,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3733,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1148,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["sorted",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1823,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":2855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sortordermap",{"_index":3808,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sortordervalue",{"_index":3810,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":326,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1172,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":3995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3387,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3111,"title":{},"body":{"license.html":{}}}],["spec",{"_index":3835,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":146,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3095,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2119,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3232,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3665,"title":{},"body":{"license.html":{}}}],["specify",{"_index":913,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3659,"title":{},"body":{"license.html":{}}}],["split",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":249,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":250,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":480,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["stabilisation",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":3992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1675,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3228,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3231,"title":{},"body":{"license.html":{}}}],["start",{"_index":3034,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1598,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starting",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":3922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2308,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2213,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3275,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["states",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":328,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":3932,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3339,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1512,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1494,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3124,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["still",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":929,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":1890,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1698,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":2823,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":3833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":3981,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":871,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1039,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":573,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4600,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["structures",{"_index":873,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1390,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["student_create",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1393,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":287,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3037,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3073,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["styling",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":772,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3558,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3551,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3590,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3300,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1374,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1480,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1396,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1476,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1479,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3265,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3396,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3439,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3556,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["succesful",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2518,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["such",{"_index":3146,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3602,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3448,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":145,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3797,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3746,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3471,"title":{},"body":{"license.html":{}}}],["support",{"_index":2154,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3904,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2700,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3109,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3638,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3510,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3697,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3739,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1417,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swaggermodule.createdocument(app",{"_index":3892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":3893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["synced",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1636,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1285,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2094,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2654,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":617,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/PaginationResponse.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":4597,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1811,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":304,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3026,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["taken",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2067,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3423,"title":{},"body":{"license.html":{}}}],["tap",{"_index":478,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":320,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["target.targetids",{"_index":1215,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1298,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1213,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1214,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":420,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":140,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetids",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetmodel",{"_index":138,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1250,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1294,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":542,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["targets",{"_index":546,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1297,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{},"interfaces/User.html":{}}}],["task",{"_index":1373,"title":{"classes/Task.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course?.color",{"_index":1441,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1439,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1442,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1437,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1395,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1434,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1435,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1443,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskcontroller",{"_index":1407,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmapper",{"_index":1415,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1429,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodel",{"_index":3894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1362,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1446,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1414,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["tasks",{"_index":1425,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1428,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskschema",{"_index":2847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1427,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":1412,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2796,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1788,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":372,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":399,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":746,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["teardown",{"_index":3766,"title":{},"body":{"todo.html":{}}}],["tech",{"_index":3962,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":639,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3309,"title":{},"body":{"license.html":{}}}],["technology",{"_index":3973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":3951,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["tells",{"_index":3216,"title":{},"body":{"license.html":{}}}],["template",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3516,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3535,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3526,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3513,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2072,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":440,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":456,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":436,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":438,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3056,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tested",{"_index":3939,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":808,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":444,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":203,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1814,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":204,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3150,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2366,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["third",{"_index":3332,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1210,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1208,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1225,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1211,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1557,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1222,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1220,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1221,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1282,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1261,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1299,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1295,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.code",{"_index":252,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.content",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1329,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.displayat",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(course",{"_index":1473,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1475,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1477,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1485,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1156,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1153,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.persistandflush(news",{"_index":1145,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(obj",{"_index":1157,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.removeandflush(news",{"_index":1154,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":169,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":541,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":545,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1152,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1574,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.getentitypermissions(userid",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1274,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1269,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1292,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":534,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.lastname",{"_index":1576,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.limit",{"_index":1332,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1259,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4446,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1265,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1275,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1266,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1258,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":482,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":486,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":255,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":933,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":315,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1289,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1271,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1278,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1264,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1000,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1020,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1007,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1016,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1017,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":932,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.request.app",{"_index":602,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.skip",{"_index":1331,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1526,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1426,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.title",{"_index":254,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1330,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":253,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validationerrors",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2775,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3473,"title":{},"body":{"license.html":{}}}],["thr",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2506,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["through",{"_index":3205,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["throwerror",{"_index":1548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1556,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1555,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3290,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":3039,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3041,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":410,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":805,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timeout(milliseconds",{"_index":1559,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":807,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1558,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2507,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1161,"title":{},"body":{"classes/NewsResponse.html":{}}}],["tiny",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":208,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICurrentUser.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1025,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["toggle",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1645,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3258,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1322,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":784,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3497,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3496,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3498,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2055,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3206,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3452,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3554,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":720,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1336,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":724,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":721,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":861,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4602,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3412,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3315,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["trigger",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2738,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3762,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2662,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typ",{"_index":821,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/PaginationModel.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":774,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3800,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1187,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1608,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":2816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1014,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3436,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":574,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1466,"title":{},"body":{"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":989,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1413,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":2991,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":500,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":228,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3157,"title":{},"body":{"license.html":{}}}],["understand",{"_index":3975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unhandled",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":504,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{}}}],["unit",{"_index":1998,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3059,"title":{},"body":{"index.html":{}}}],["universal",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":655,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":656,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3442,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3279,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3183,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2759,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3469,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":752,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1109,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3524,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1843,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":953,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1252,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":976,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1184,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":977,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":327,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":359,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2749,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":748,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1137,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":503,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":2285,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2323,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":496,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1457,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usefactory",{"_index":904,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":3725,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":3834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":144,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":539,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.repo.ts",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.tostring",{"_index":537,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.test.js",{"_index":3057,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user/class",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userid",{"_index":148,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":548,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["userids",{"_index":295,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":296,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1582,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1580,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1584,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1058,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1078,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1081,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1163,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["userrepo",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":760,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/UserInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2761,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2760,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1484,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2582,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":458,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":576,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["util",{"_index":2324,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2290,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2735,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":3883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":1643,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3787,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3792,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":728,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":801,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":828,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1596,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":706,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":714,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":282,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":263,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":713,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":429,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1340,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":224,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["valueof",{"_index":744,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/typealiases.html":{}}}],["values",{"_index":1737,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["variable",{"_index":2647,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1618,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3090,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":779,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":788,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":793,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":1761,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1808,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3107,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1502,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1248,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":340,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3466,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3520,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":2949,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3769,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":339,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3036,"title":{},"body":{"index.html":{}}}],["void",{"_index":621,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3368,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3795,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":3960,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4593,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3793,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":3961,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4591,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3322,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3710,"title":{},"body":{"license.html":{}}}],["want",{"_index":3117,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":780,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":790,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1456,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3218,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3217,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3775,"title":{},"body":{"todo.html":{}}}],["way",{"_index":911,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3378,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1521,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1736,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3023,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3560,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":863,"title":{},"body":{"injectables/Logger.html":{}}}],["whether",{"_index":3432,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":726,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3238,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3419,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3235,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["widespread",{"_index":3136,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2343,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2791,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2255,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3049,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3314,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3062,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3115,"title":{},"body":{"license.html":{}}}],["within",{"_index":237,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2181,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3044,"title":{},"body":{"index.html":{}}}],["work",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3256,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2693,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["works",{"_index":1024,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3592,"title":{},"body":{"license.html":{}}}],["wraps",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writeerrorlog",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["written",{"_index":3027,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["x",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3386,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":585,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3055,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3608,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants)],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:37\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:57\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel, NewsTargetModelValue } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModelValue, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModelValue, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for finding news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         FindNewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FindNewsTarget\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, ValueOf } from '@shared/domain';\n\nexport const NewsTargetModel = {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const;\n\nexport type NewsTargetModelValue = ValueOf;\n\n/** define the news target for a specific entity  */\nexport type NewsTarget = { targetModel: NewsTargetModelValue; targetId: EntityId };\n\n/** define the news target for find */\nexport type FindNewsTarget = { targetModel: NewsTargetModelValue; targetId?: EntityId };\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: NewsTarget;\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** news interface for finding news */\nexport interface INewsScope {\n\ttarget?: FindNewsTarget;\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tvalidate(payload: JwtPayload): JwtPayload {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MikroOrmModuleSyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            MikroOrmModuleSyncOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MikroOrmModuleSyncOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\tpagination\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModelValue } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModelValue,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [\n\t\t/* NewsController\n\t\t * to enable:\n\t\t * - unskip e2e tests\n\t\t * - execute migration news_add_target_schools (in migrations/scheduled)\n\t\t * - update backup/setup/news.json from db after migration has been executed\n\t\t */\n\t],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:25\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query, pagination: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:40\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PaginationModel } from '@shared/repo/interface/pagination.interface';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync save(news: News): Promise {\n\t\tawait this.em.persistAndFlush(news);\n\t\treturn news;\n\t}\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param pagination\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\tpagination: PaginationModel = {}\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\t// TODO sort by publishedAt?\n\t\t// scope.sortBy(...)\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, pagination);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tasync delete(news: News): Promise {\n\t\tawait this.em.removeAndFlush(news);\n\t}\n\n\tprivate async findNewsAndCount(query, pagination: PaginationModel): Promise> {\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModelValue\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModelValue\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModelValue } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModelValue;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModelValue[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModelValue[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, NewsTargetModelValue, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, pagination?: IPagination): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, pagination);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModelValue[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginationModel.html":{"url":"interfaces/PaginationModel.html","title":"interface - PaginationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PaginationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/interface/pagination.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginationModel {\n\treadonly skip?: number;\n\treadonly limit?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL } from './config';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Lesson, Course, Submission } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tNewsModule,\n\t\tTaskModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\n\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: PaginationModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                PaginationModel\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { PaginationModel } from '@shared/repo';\nimport { Counted } from '@shared/domain/types';\nimport { Task, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: PaginationModel = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task } from '../entity';\n\n// filter tasks older than 3 weeks\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModelValue\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModelValue, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModelValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel, NewsTargetModelValue } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModelValue;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModelValue, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : REQUEST_TIMEOUT\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        permissions\n                                \n                                \n                                        schoolId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModelValue } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModelValue,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n26.2.2 - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n26.2.1 - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n26.2.0 - 2021-06-01\nAdded\n\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\n\nChanged\n\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            variable\n            NewsTargetModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/pagination.interface.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/types/sorting.ts\n            \n            variable\n            SortOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/interface/pagination.interface.ts\n            \n            interface\n            PaginationModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^6.10.2\n        \n            amqplib : ^0.7.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^6.0.1\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.22.2\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.7.6\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^2.0.3\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FindNewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            NewsTargetModelValue   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../sorting.ts)\n                        \n                        \n                            SortOrderValue   (apps/.../sorting.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    FindNewsTarget\n                \n            \n            \n                \n                    define the news target for find \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                    define the news target for a specific entity  \n\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetModelValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/sorting.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SortOrderValue\n                \n            \n            \n                \n                            ValueOf<>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../constants.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../constants.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/controller/swagger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                        \n                    \n\n                \n                    \n                        \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableOpenApiDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTestModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NewsTargetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tSchool: 'schools',\n\tCourse: 'courses',\n\tTeam: 'teams',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/domain/types/sorting.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SortOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : {\n\tasc: 'asc',\n\tdesc: 'desc',\n} as const\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process. \nIt improves the code quality and ensure that the code operates correctly especially after refactoring. \n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer. \nThey prove that the database queries are executed correctly. \nUse case tests operate on logic layer. \nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application. \nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks \nthe expected status codes and the structure of the received objects.\n\nTesting Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing. \nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests. \n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state. \n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries. \nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function. \nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nDefine MongoMemoryServer\nCreate Nest JS testing module: \n2.1 with MikroOrmModule defining entities which are used in tests.\n2.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    beforeAll(async () => {\n        mongod = new MongoMemoryServer();                               (1)\n        const dbUrl = await mongod.getUri();\n        const module: TestingModule = await Test.createTestingModule({  (2)\n             imports: [\n                 MikroOrmModule.forRoot({                               (2.1)\n                     type: 'mongo',\n                     clientUrl: dbUrl,\n                     entities: [News, CourseNews, ...],\n                 }),\n              ],\n             providers: [NewsRepo],                                     (2.2)                          \n      }).compile();\n      repo = module.get(NewsRepo);                            (3)\n      orm = module.get(MikroORM);\n      em = module.get(EntityManager);\n    })Post conditions (afterAll)\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await orm.close();\n        await mongod.stop();         \n    });\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects. \nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application. \nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story). \n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called. \nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions     it('should search for news by empty scope ', async () => {\n         const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n         await service.findAllForUser(userId, scope, pagination);    (2)\n         const expectedParams = [targets, false, pagination];\n         expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n     });\n\nE2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below \nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside mapping) inside a controller, use the logic layer instead. Mapping can be unit tested.\n\nPreconditions\n\nCreate Nest testing module\n\nImport ServerModule as the whole\n\nOverride authentication using JwAuthGuard\n\n1 Override authorized user with the mocked user data\n\nOverride other services for example for authorization\n\nCreate and initialize the whole Nest Application using createNestApplication()\n\nGet Orm and Entity Manager from module\n\n beforeAll(async () => {\n     const module: TestingModule = await Test.createTestingModule({  (1)\n         imports: [ServerModule],                                    (2)\n     })\n         .overrideGuard(JwtAuthGuard)                                (3)\n         .useValue({\n             canActivate(context: ExecutionContext) {\n                 const req: Request = context.switchToHttp().getRequest();\n                 req.user = {                                        (3.1)\n                         userId: '0000d224816abba584714c9c',\n                         roles: [],\n                         schoolId: '5f2987e020834114b8efd6f8',\n                         accountId: '0000d225816abba584714c9d',\n                 };                                      \n                 return true;\n             },\n         })\n         .overrideProvider(AuthorizationService)                     (4)\n         .useValue({\n             checkEntityPermissions() {},\n             getEntityPermissions() {\n                 return ['NEWS_VIEW', 'NEWS_EDIT'];\n             },\n         })\n         .compile();\n\n     app = module.createNestApplication();                           (5)\n     await app.init();\n     orm = module.get(MikroORM);                           (6)\n     em = module.get(EntityManager);\n });\n\nClean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
