var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdminIdAndToken.html",[0,0.538,1,4.051]],["body/interfaces/AdminIdAndToken.html",[0,0.498,1,6.554,2,0.876,3,0.049,4,0.041,5,0.03,6,2.267,7,2.388,8,0.128,9,0.518,10,1.75,11,6.969,12,1,13,0.214,14,0.005,15,0.116,16,4.924,17,1.727,18,0.903,19,0.537,20,2.388,21,2.267,22,0.084,23,3.56,24,3.044,25,3.402,26,3.402,27,3.402,28,3.402,29,6.051,30,1.938,31,0.115,32,2.388,33,0.638,34,2.229,35,2.622,36,2.539,37,0.814,38,3.611,39,2.167,40,1.475,41,2.539,42,2.539,43,4.025,44,4.1,45,3.689,46,3.883,47,4.1,48,4.84,49,7.032,50,6.051,51,4.924,52,2.388,53,2.539,54,2.561,55,2.539,56,2.388,57,2.539,58,2.539,59,2.539,60,3.348,61,2.539,62,2.539,63,4.924,64,2.539,65,2.539,66,2.539,67,2.539,68,2.388,69,0.602,70,2.539,71,1.523,72,1.236,73,5.938,74,2.788,75,2.539,76,3.467,77,2.689,78,1.415,79,2.539,80,6.729,81,2.539,82,2.229,83,2.539,84,1.727,85,2.539,86,2.539,87,2.539,88,2.539,89,2.539,90,2.539,91,2.539,92,2.539,93,6.729,94,6.729,95,2.539,96,2.539,97,2.539,98,2.539,99,2.539,100,2.539,101,2.539,102,2.539,103,2.539,104,2.539,105,2.539,106,2.539,107,2.539,108,2.539,109,2.539,110,3.987,111,3.987,112,2.364,113,2.539,114,0.474,115,2.539,116,2.539,117,2.539,118,3.888,119,4.63,120,2.539,121,1.823,122,2.388,123,0.97,124,2.539,125,2.539,126,2.539,127,4.258,128,1.375,129,2.144,130,3.987,131,2.539,132,3.987,133,3.987,134,2.539,135,2.539,136,2.539,137,4.924,138,3.888,139,3.642,140,3.888,141,2.539,142,3.75,143,3.611,144,3.75,145,1.294,146,4.201,147,4.924,148,3.101,149,1.342,150,4.924,151,4.924,152,4.924,153,2.539,154,2.539,155,2.539,156,2.539,157,6.062,158,4.924,159,4.924,160,4.924,161,2.539,162,3.987,163,3.987,164,2.539,165,2.539,166,2.539,167,2.539,168,1.299,169,2.539,170,3.987,171,3.75,172,0.002,173,0.002]],["title/classes/ApiValidationError.html",[31,0.125,174,3.676]],["body/classes/ApiValidationError.html",[3,0.099,4,0.082,5,0.06,8,0.259,9,0.862,12,0.831,13,0.326,14,0.004,15,0.193,19,1.09,22,0.088,30,5.06,31,0.149,33,1.664,34,2.881,37,1.653,69,1.222,71,3.282,84,4.508,114,0.497,172,0.003,173,0.003,174,5.656,175,1.402,176,7.959,177,6.189,178,7.042,179,3.777,180,5.593,181,2.951,182,1.485,183,7.327,184,7.327,185,6.189,186,6.906,187,0.8,188,6.189,189,0.862,190,0.512,191,7.911,192,5.152,193,5.565,194,5.565,195,5.565,196,5.565,197,5.565,198,5.565,199,1.468,200,5.565,201,3.934,202,4.847,203,5.565,204,5.154,205,1.994,206,5.154,207,4.013,208,4.628,209,4.602,210,4.847,211,2.881,212,5.565]],["title/classes/ApiValidationErrorResponse.html",[31,0.125,213,4.308]],["body/classes/ApiValidationErrorResponse.html",[3,0.103,4,0.085,5,0.063,8,0.269,9,0.883,13,0.285,14,0.005,15,0.217,22,0.091,31,0.155,33,1.705,34,2.991,38,4.395,69,1.269,78,1.149,84,4.617,114,0.516,128,1.524,149,1.503,172,0.003,173,0.003,174,7.057,175,1.456,179,3.868,181,2.734,187,0.644,189,0.895,190,0.532,191,8.051,201,5.692,207,4.11,208,5.867,210,5.033,213,6.789,214,8.954,215,6.426,216,1.617,217,5.563,218,5.361,219,5.476,220,8.152,221,6.426,222,7.457,223,6.426,224,5.033,225,5.778,226,6.426,227,6.426,228,6.426,229,6.426,230,8.152,231,8.152,232,6.426,233,8.152,234,6.426]],["title/interfaces/AppendedAttachment.html",[0,0.538,235,3.402]],["body/interfaces/AppendedAttachment.html",[0,1.065,2,1.979,3,0.11,4,0.092,5,0.067,8,0.288,9,0.922,12,1.008,14,0.004,22,0.098,33,2.074,114,0.553,172,0.004,173,0.004,235,6.078,236,4.699,237,6.349,238,6.769,239,4.699,240,4.699,241,5.599,242,4.699,243,4.699,244,4.699,245,6.078,246,4.529,247,4.699,248,5.599,249,5.809,250,5.809,251,5.599,252,4.822,253,4.529,254,4.699,255,4.699,256,4.699]],["title/modules/AuthModule.html",[257,1.382,258,3.53]],["body/modules/AuthModule.html",[3,0.107,4,0.089,5,0.066,14,0.005,15,0.25,19,1.184,22,0.095,31,0.162,172,0.003,173,0.003,257,2.24,258,7.211,259,2.601,260,3.697,261,6.044,262,6.044,263,6.044,264,6.606,265,7.867,266,7.469,267,5.689,268,4.141,269,3.129,270,2.863,271,6.722,272,3.513,273,3.697,274,8.386,275,5.264,276,6.722,277,6.044,278,5.598,279,3.541,280,6.722,281,4.998,282,5.598,283,6.722,284,6.044,285,6.722]],["title/modules/AuthorizationModule.html",[257,1.382,286,3.53]],["body/modules/AuthorizationModule.html",[3,0.112,4,0.093,5,0.068,14,0.004,15,0.235,19,1.231,22,0.099,31,0.168,172,0.004,173,0.004,257,2.294,259,2.704,260,3.787,268,4.242,269,3.253,270,2.976,272,3.598,273,3.787,286,7.216,287,6.283,288,6.283,289,6.283,290,6.283,291,7.206,292,6.984,293,7.206,294,6.987,295,4.242,296,6.283,297,6.987,298,3.957,299,6.283]],["title/injectables/AuthorizationService.html",[18,0.976,292,3.402]],["body/injectables/AuthorizationService.html",[3,0.075,4,0.062,5,0.046,8,0.195,12,0.855,13,0.264,14,0.005,15,0.185,18,1.241,19,0.822,22,0.066,31,0.112,40,4.38,69,0.922,74,2.707,76,3.367,77,2.447,78,0.928,114,0.664,128,1.408,129,2.57,145,2.143,148,1.988,149,0.861,172,0.003,173,0.003,182,1.227,187,0.654,189,1.153,190,0.685,199,1.609,292,4.327,293,6.432,298,2.643,299,4.196,300,1.609,301,4.667,302,6.852,303,5.916,304,7.62,305,4.667,306,4.667,307,4.667,308,3.349,309,5.196,310,5.042,311,6.096,312,4.717,313,4.667,314,4.183,315,6.579,316,1.54,317,4.892,318,6.579,319,4.667,320,4.172,321,4.196,322,4.667,323,2.598,324,5.153,325,5.916,326,4.327,327,5.153,328,1.147,329,1.892,330,4.557,331,4.675,332,4.667,333,4.667,334,3.887,335,4.667,336,4.667,337,4.667,338,6.579,339,4.667,340,4.667,341,4.667,342,6.579,343,4.667,344,4.667]],["title/entities/BaseEntity.html",[316,0.88,345,3.288]],["body/entities/BaseEntity.html",[3,0.105,4,0.087,5,0.064,8,0.274,9,0.978,10,1.983,12,0.853,13,0.263,14,0.004,15,0.2,22,0.117,31,0.218,149,1.666,172,0.003,173,0.003,179,3.109,187,0.652,316,1.614,323,2.057,345,5.743,346,5.891,347,6.739,348,5.371,349,2.071,350,8.528,351,6.551,352,8.528,353,6.551,354,2.836,355,2.005,356,1.859,357,2.94,358,5.131,359,5.456,360,2.967,361,5.456,362,5.456,363,5.891,364,4.47,365,3.81,366,5.891,367,3.375,368,5.131,369,4.165,370,2.355,371,3.71,372,2.7,373,5.891,374,5.891,375,5.891,376,4.655,377,3.81,378,5.131,379,5.456,380,3.375,381,2.8,382,5.891,383,3.303]],["title/entities/BaseEntityWithTimestamps.html",[316,0.88,360,1.86]],["body/entities/BaseEntityWithTimestamps.html",[3,0.099,4,0.083,5,0.061,8,0.261,9,0.955,10,1.946,12,0.833,13,0.255,14,0.005,15,0.194,22,0.113,31,0.212,149,1.775,172,0.003,173,0.003,179,2.953,187,0.735,316,1.583,323,1.954,345,5.078,346,5.596,347,6.613,348,5.271,349,2.206,350,8.368,352,8.368,354,2.922,355,1.94,356,1.766,357,2.793,358,4.874,359,5.183,360,3.171,361,5.183,362,5.183,363,5.596,364,4.247,365,3.619,366,5.596,367,3.206,368,4.874,369,3.956,370,2.237,371,3.525,372,2.564,373,5.596,374,5.596,375,5.596,376,4.422,377,3.619,378,4.874,379,5.183,380,4.544,381,2.983,382,5.596,383,4.447,384,6.223,385,2.413,386,2.54,387,6.223,388,6.223,389,6.223,390,6.223]],["title/classes/BaseFactory.html",[31,0.125,391,3.676]],["body/classes/BaseFactory.html",[0,0.464,3,0.045,4,0.037,5,0.027,8,0.117,9,0.69,10,1.555,12,0.527,13,0.305,14,0.005,15,0.108,22,0.04,31,0.134,37,2.085,43,2.549,44,2.597,45,3.27,46,2.459,47,2.597,48,2.406,54,1.934,69,1.102,71,2.027,72,3.166,78,1.179,114,0.688,128,1.598,139,4.996,149,1.671,168,1.901,172,0.002,173,0.002,175,0.632,182,0.833,187,0.716,189,1.331,190,0.71,199,1.731,211,2.078,216,1.604,316,1.638,320,3.515,323,2.001,329,1.132,330,3.993,347,1.983,348,1.58,367,3.591,385,2.591,386,2.66,391,3.172,392,2.79,393,7.427,394,2.406,395,4.74,396,4.464,397,5.317,398,6.909,399,3.319,400,5.529,401,5.723,402,3.319,403,3.319,404,3.172,405,2.095,406,4.73,407,4.74,408,6.096,409,5.853,410,2.79,411,3.436,412,4.464,413,6.031,414,2.075,415,4.148,416,2.79,417,4.54,418,4.963,419,3.948,420,4.809,421,3.284,422,5.184,423,2.075,424,1.669,425,1.983,426,5.404,427,2.075,428,2.075,429,3.319,430,4.447,431,2.79,432,5.284,433,3.319,434,6.737,435,5.805,436,2.79,437,3.672,438,2.715,439,3.319,440,2.79,441,3.319,442,2.79,443,2.935,444,2.075,445,5.979,446,2.79,447,2.075,448,4.74,449,4.74,450,2.79,451,5.805,452,3.336,453,3.319,454,3.319,455,2.79,456,2.79,457,3.319,458,2.79,459,3.319,460,2.79,461,2.185,462,1.835,463,4.014,464,3.717,465,2.838,466,3.496,467,3.672,468,2.79,469,2.79,470,2.79,471,2.79,472,2.79,473,2.79,474,4.464,475,2.79,476,2.79,477,1.169,478,6.375,479,2.79,480,8.111,481,6.375,482,2.79,483,2.79,484,2.79,485,2.79,486,2.79,487,4.014,488,2.79,489,2.79,490,2.79,491,2.79,492,2.79]],["title/entities/BaseFile.html",[316,0.88,493,3.53]],["body/entities/BaseFile.html",[0,0.617,3,0.095,4,0.079,5,0.076,8,0.248,9,0.838,12,0.863,13,0.302,14,0.005,15,0.221,22,0.13,31,0.208,33,1.802,123,2.461,145,2,172,0.003,173,0.003,187,0.681,190,0.756,205,1.91,316,1.554,323,1.861,349,1.975,354,3.188,355,1.44,356,1.682,360,2.782,381,2.671,493,6.234,494,4.642,495,4.253,496,6.793,497,7.155,498,5.927,499,5.927,500,2.461,501,5.927,502,2.403,503,2.226,504,5.512,505,4.642,506,2.568,507,5.754,508,5.499,509,5.499,510,3.335,511,4.344,512,3.651,513,4.076,514,4.92,515,3.898,516,2.95,517,4.642,518,2.259,519,4.642,520,1.935,521,4.642,522,4.642,523,4.642,524,4.642,525,4.642,526,4.642,527,4.642,528,4.642,529,4.642,530,3.651,531,3.357]],["title/injectables/BaseRepo.html",[18,0.976,532,3.53]],["body/injectables/BaseRepo.html",[3,0.078,4,0.065,5,0.048,8,0.205,13,0.311,14,0.005,15,0.189,18,1.283,19,0.861,22,0.069,31,0.118,69,0.966,71,1.556,74,2.88,77,2.672,78,1.295,114,0.783,128,1.157,129,2.615,168,3.598,172,0.003,173,0.003,182,1.268,187,0.781,189,1.36,190,0.808,199,1.8,300,1.686,316,1.563,323,2.652,328,1.202,345,3.109,355,1.188,357,2.195,426,6.199,532,4.639,533,4.891,534,6.615,535,4.322,536,5.325,537,5.325,538,4.831,539,3.581,540,5.325,541,5.325,542,5.325,543,2.925,544,4.449,545,4.891,546,3.357,547,4.891,548,4.831,549,4.891,550,5.325,551,4.891,552,5.325,553,4.891,554,4.831,555,4.891,556,5.325,557,4.891,558,5.325,559,4.891,560,5.325,561,4.891,562,5.325,563,4.891,564,3.831,565,4.891,566,4.891,567,7.034,568,6.799,569,6.799,570,6.799,571,7.815,572,7.815,573,4.891,574,6.799]],["title/interfaces/Board.html",[0,0.538,575,3.288]],["body/interfaces/Board.html",[0,0.45,2,1.244,3,0.069,4,0.058,5,0.042,8,0.181,9,0.675,12,0.909,13,0.297,14,0.005,15,0.177,18,1.177,19,0.763,22,0.104,31,0.15,35,2.767,69,0.855,71,2.544,74,1.214,76,2.211,77,1.17,78,1.375,82,3.724,123,2.544,128,1.752,129,2.356,145,1.933,149,1.15,172,0.003,173,0.003,181,2.844,267,4.14,279,2.281,308,2.387,328,1.064,370,2.628,500,3.063,516,2.787,575,5.785,576,3.606,577,4.274,578,4.57,579,5.575,580,7.353,581,2.808,582,3.407,583,5.222,584,4.023,585,4.372,586,4.808,587,4.808,588,4.885,589,5.608,590,3.606,591,3.894,592,3.223,593,3.077,594,3.894,595,3.391,596,3.894,597,6.264,598,3.894,599,5.608,600,3.894,601,5.608,602,3.894,603,4.372,604,3.894,605,3.894,606,7.623,607,3.894,608,4.372,609,3.894,610,7.192,611,3.894,612,3.894,613,3.894,614,4.885,615,4.885,616,5.389,617,5.608,618,3.894,619,3.894,620,3.894,621,3.894,622,3.894,623,3.894,624,3.894,625,3.894,626,3.606,627,3.606,628,3.894,629,6.088,630,3.606,631,5.194,632,3.606,633,3.894,634,3.445,635,3.894,636,3.894,637,5.608,638,5.608,639,3.894,640,3.213,641,3.894]],["title/classes/BoardElementResponse.html",[31,0.125,642,3.676]],["body/classes/BoardElementResponse.html",[3,0.078,4,0.065,5,0.048,8,0.204,9,0.735,10,1.969,12,0.958,13,0.315,14,0.005,15,0.189,22,0.12,31,0.203,40,3.776,69,1.751,82,3.633,114,0.756,172,0.003,173,0.003,175,1.105,181,2.83,187,0.616,189,0.679,190,0.404,216,2.37,349,1.555,354,1.531,370,1.753,380,4.729,381,2.845,383,4.628,500,1.551,575,6.105,577,4.253,578,4.207,579,5.132,582,3.593,584,4.003,592,4.151,603,2.916,608,2.916,634,4.309,642,6.692,643,3.82,644,2.629,645,4.877,646,5.994,647,5.994,648,3.946,649,4.877,650,5.314,651,4.877,652,4.202,653,4.748,654,1.681,655,6.264,656,2.36,657,4.63,658,3.82,659,3.626,660,3.101,661,3.159,662,4.462,663,4.462,664,3.004,665,2.762,666,2.762,667,4.63,668,3.466,669,3.466,670,2.916,671,3.004,672,3.466,673,4.63,674,3.82,675,2.188,676,3.1,677,3.82,678,3.466,679,3.626,680,2.36,681,2.459,682,2.459,683,2.512,684,3.328]],["title/classes/BoardLessonResponse.html",[31,0.125,647,3.676]],["body/classes/BoardLessonResponse.html",[3,0.075,4,0.062,5,0.046,8,0.195,9,0.712,10,2.019,12,0.963,13,0.319,14,0.005,15,0.185,22,0.117,31,0.199,40,3.184,69,1.723,82,3.547,114,0.775,172,0.003,173,0.003,175,1.058,181,2.775,187,0.735,189,0.65,190,0.63,216,2.341,349,2.075,354,1.465,370,1.678,380,4.893,381,2.944,383,4.789,500,2.093,575,5.754,577,4.172,578,4.108,579,5.011,582,2.802,584,3.122,592,3.648,603,2.791,608,2.791,634,4.818,642,5.88,643,3.655,644,2.516,646,5.415,647,6.432,650,3.655,652,4.24,653,4.69,654,1.609,655,6.177,656,2.258,657,4.489,658,3.655,659,3.47,660,3.006,661,3.063,662,4.327,663,4.327,664,2.875,665,2.643,666,2.643,667,5.646,668,3.316,669,3.316,670,2.791,671,2.875,672,3.316,673,4.489,674,3.655,675,2.094,676,2.967,677,3.655,678,3.316,679,3.47,680,2.258,681,2.353,682,2.353,683,2.404,684,3.185,685,4.667,686,3.887,687,4.667,688,4.667,689,4.667,690,4.667,691,3.887,692,4.667,693,4.667]],["title/injectables/BoardMapper.html",[18,0.976,694,3.846]],["body/injectables/BoardMapper.html",[3,0.089,4,0.074,5,0.055,8,0.234,10,1.556,13,0.267,14,0.005,15,0.225,18,1.403,19,0.983,22,0.079,31,0.134,78,0.787,82,3.463,114,0.671,128,1.751,149,1.714,172,0.003,173,0.003,181,1.872,182,1.388,187,0.441,189,0.778,190,0.462,199,1.029,300,1.924,328,1.372,380,3.832,383,3.75,575,6.077,577,2.814,578,4.01,579,3.671,581,2.366,582,3.564,583,4.582,584,4.234,592,3.279,634,3.083,642,6.792,646,5.286,647,5.286,673,6.089,694,5.531,695,5.582,696,4.582,697,7.439,698,5.582,699,5.019,700,4.649,701,4.649,702,5.582,703,5.582,704,7.439,705,5.582,706,7.439,707,5.582,708,5.582,709,7.439,710,5.582,711,7.439,712,5.582,713,5.582,714,5.582,715,5.582,716,5.582,717,5.582,718,5.582,719,5.582,720,5.582,721,5.582,722,5.582,723,5.582,724,5.582,725,5.582,726,5.582,727,5.582,728,7.439,729,5.582,730,7.439,731,5.582,732,5.582,733,5.582,734,5.582,735,5.582,736,5.582,737,5.582,738,5.582,739,5.582,740,5.826,741,5.582,742,5.582,743,5.582]],["title/classes/BoardResponse.html",[31,0.125,673,3.53]],["body/classes/BoardResponse.html",[3,0.075,4,0.062,5,0.046,8,0.196,9,0.713,10,1.987,12,0.964,13,0.316,14,0.005,15,0.185,22,0.117,31,0.199,40,3.69,69,1.724,82,3.55,114,0.747,172,0.003,173,0.003,175,1.059,181,3.121,187,0.689,189,0.651,190,0.387,216,2.391,349,1.898,354,2.068,370,1.68,380,4.665,381,2.807,383,4.566,500,1.486,575,6.224,577,4.566,578,4.706,579,5.741,582,2.805,584,3.125,592,3.65,603,3.938,608,3.938,634,4.211,642,6.203,643,3.66,644,2.519,646,5.419,647,5.419,648,4.435,650,3.66,652,4.179,653,4.692,654,1.611,655,6.18,656,2.262,657,4.494,658,3.66,659,3.475,660,3.009,661,3.066,662,4.331,663,4.331,664,2.879,665,2.647,666,2.647,667,4.494,668,3.321,669,3.321,670,2.795,671,2.879,672,3.321,673,5.956,674,3.66,675,2.097,676,2.971,677,3.66,678,4.68,679,4.897,680,3.187,681,3.32,682,3.32,683,3.393,684,4.494,744,4.673,745,4.673,746,3.074,747,1.657,748,4.673,749,4.673,750,4.673]],["title/classes/BoardTaskResponse.html",[31,0.125,646,3.676]],["body/classes/BoardTaskResponse.html",[3,0.07,4,0.058,5,0.043,8,0.183,9,0.68,10,1.989,12,0.965,13,0.324,14,0.005,15,0.178,22,0.114,31,0.194,40,3.041,69,1.681,82,3.963,114,0.763,172,0.003,173,0.003,175,0.991,181,2.696,187,0.772,189,0.609,190,0.809,216,2.394,349,2.213,354,1.374,370,1.573,380,4.811,381,2.992,383,4.709,500,1.392,575,5.633,577,4.467,578,3.964,579,4.836,582,2.677,584,2.982,592,3.543,603,2.616,608,2.616,634,4.061,642,5.711,643,3.427,644,2.359,646,6.297,647,5.225,650,3.427,652,4.21,653,4.867,654,1.508,655,6.046,656,2.117,657,5.018,658,3.427,659,3.253,660,2.871,661,2.925,662,4.133,663,4.133,664,2.695,665,4.165,666,4.165,667,5.484,668,3.109,669,3.109,670,2.616,671,2.695,672,3.109,673,4.288,674,3.427,675,1.963,676,2.781,677,3.427,678,3.109,679,3.253,680,2.117,681,2.206,682,2.206,683,2.254,684,2.985,686,5.233,691,3.644,751,4.375,752,4.375,753,4.375,754,4.375,755,4.375,756,4.375,757,4.375,758,4.375,759,4.375,760,4.375,761,4.375]],["title/classes/BoardTaskStatusMapper.html",[31,0.125,701,4.308]],["body/classes/BoardTaskStatusMapper.html",[3,0.118,4,0.098,5,0.072,8,0.309,13,0.235,14,0.004,15,0.215,22,0.105,31,0.178,78,1.039,82,3.431,114,0.591,128,1.254,149,1.359,172,0.004,173,0.004,175,1.67,182,1.655,187,0.582,189,1.027,190,0.61,199,1.359,328,1.812,405,3.575,657,6.497,659,5.48,696,5.466,699,6.627,701,7.39,762,8.874,763,7.37,764,7.979,765,6.498,766,7.37,767,3.78,768,7.37]],["title/classes/BoardTaskStatusResponse.html",[31,0.125,657,3.53]],["body/classes/BoardTaskStatusResponse.html",[3,0.102,4,0.085,5,0.063,8,0.268,9,0.881,13,0.316,14,0.004,15,0.155,22,0.091,31,0.154,37,2.65,69,1.606,114,0.514,172,0.003,173,0.003,175,1.451,187,0.784,189,0.892,190,0.53,349,2.225,500,2.991,644,3.451,652,4.235,654,2.207,657,6.624,769,10.079,770,6.401,771,6.624,772,6.624,773,6.384,774,6.898,775,6.898,776,6.401,777,6.401,778,6.401,779,6.401,780,6.401,781,6.401,782,5.756,783,5.756,784,5.756,785,4.549,786,5.756]],["title/injectables/BsonConverter.html",[18,0.976,787,3.676]],["body/injectables/BsonConverter.html",[3,0.097,4,0.08,5,0.059,8,0.254,13,0.25,14,0.005,15,0.19,18,1.481,19,1.066,22,0.086,31,0.146,78,1.106,114,0.63,128,1.335,172,0.003,173,0.003,182,1.464,187,0.62,189,1.093,190,0.649,199,1.698,216,1.975,300,2.087,330,3.653,787,5.576,788,6.055,789,6.535,790,6.535,791,7.847,792,6.055,793,7.847,794,7.646,795,6.545,796,7.168,797,10.087,798,7.108,799,8.282,800,7.67,801,6.213,802,9.211,803,7.847,804,6.055,805,7.847,806,6.146,807,6.671,808,6.055,809,6.146,810,6.055]],["title/classes/BusinessError.html",[31,0.125,178,3.53]],["body/classes/BusinessError.html",[3,0.086,4,0.072,5,0.053,8,0.226,9,0.788,12,0.894,13,0.329,14,0.005,15,0.199,19,0.952,22,0.077,30,6.152,31,0.198,33,1.522,37,1.944,69,1.437,71,3.311,78,1.026,84,4.987,114,0.433,149,0.996,172,0.003,173,0.003,175,1.224,178,4.966,179,4.73,180,6.152,181,3.176,182,1.357,183,7.334,184,7.334,187,0.777,189,0.753,190,0.447,199,1.342,201,5.232,202,6.897,205,1.741,208,3.142,209,6.12,216,1.36,219,5.121,438,2.301,513,4.335,644,2.912,669,3.839,675,3.266,811,5.403,812,4.966,813,4.627,814,5.412,815,4.352,816,4.966,817,5.172,818,3.749,819,7.334,820,6.897,821,7.278,822,5.403,823,5.403,824,5.403,825,5.403,826,5.403,827,5.403,828,5.403,829,5.403,830,5.403,831,3.839,832,5.403,833,4.858,834,7.278,835,7.278,836,7.278,837,5.403]],["title/modules/ConsoleWriterModule.html",[257,1.382,838,3.846]],["body/modules/ConsoleWriterModule.html",[3,0.118,4,0.098,5,0.072,14,0.004,15,0.216,19,1.304,22,0.105,31,0.178,172,0.004,173,0.004,257,2.376,259,2.865,260,3.922,268,4.393,269,3.446,270,3.153,272,3.727,295,4.393,838,7.73,839,6.657,840,6.657,841,6.657,842,7.034,843,6.657,844,5.505,845,7.403,846,4.193,847,6.165]],["title/injectables/ConsoleWriterService.html",[18,0.976,842,3.402]],["body/injectables/ConsoleWriterService.html",[3,0.148,4,0.092,5,0.068,8,0.29,9,0.925,12,0.875,13,0.272,14,0.004,15,0.225,18,1.612,19,1.22,22,0.098,31,0.167,35,2.663,114,0.556,168,3.64,172,0.004,173,0.004,182,1.594,187,0.675,189,0.965,190,0.573,199,1.278,300,2.389,385,2.093,386,2.204,437,3.422,842,5.62,843,8.333,844,6.891,846,4.84,848,6.93,849,9.675,850,8.546,851,6.93,852,4.728,853,8.546,854,9.267,855,6.93,856,3.353,857,9.267,858,6.93,859,3.736,860,6.93,861,6.93]],["title/modules/CoreModule.html",[257,1.382,862,3.53]],["body/modules/CoreModule.html",[3,0.103,4,0.086,5,0.063,14,0.004,15,0.236,19,1.138,22,0.092,31,0.156,34,4.18,172,0.003,173,0.003,208,3.758,216,1.626,257,2.52,259,2.501,260,3.607,268,4.04,269,3.009,270,2.753,273,3.607,818,4.215,862,7.173,863,5.811,864,5.811,865,7.395,866,7.395,867,6.126,868,7.395,869,6.463,870,5.814,871,8.182,872,5.583,873,6.408,874,6.408,875,8.182,876,5.201,877,6.408,878,5.814,879,8.182,880,5.04,881,6.084,882,7.357,883,8.182,884,6.408,885,3.66,886,4.41]],["title/entities/Course.html",[316,0.88,581,1.645]],["body/entities/Course.html",[0,0.451,3,0.069,4,0.058,5,0.042,8,0.355,9,0.867,12,0.91,13,0.297,14,0.005,15,0.214,22,0.089,31,0.104,33,0.907,37,1.158,69,0.856,78,0.88,114,0.748,128,1.062,145,1.752,149,1.629,172,0.003,173,0.003,187,0.75,190,0.662,205,1.397,216,2.134,316,1.062,323,1.361,349,2.175,354,3.024,355,1.053,356,1.231,360,2.245,370,2.245,381,2.738,385,2.867,386,2.81,418,2.756,500,1.379,502,1.758,503,1.628,506,1.878,510,1.678,516,1.653,518,3.551,520,1.416,546,2.141,581,1.986,661,2.018,683,4.69,747,3.131,876,2.756,887,3.611,888,3.499,889,6.268,890,5.578,891,6.919,892,6.919,893,5.461,894,5.614,895,4.336,896,5.614,897,4.336,898,5.614,899,4.336,900,3.969,901,3.148,902,4.336,903,4.336,904,4.454,905,5.441,906,4.889,907,4.336,908,5.614,909,4.336,910,5.614,911,4.336,912,3.396,913,4.336,914,4.336,915,2.186,916,4.106,917,3.224,918,2.851,919,3.396,920,2.456,921,2.521,922,4.889,923,3.969,924,4.436,925,3.899,926,3.396,927,3.899,928,2.958,929,3.899,930,3.899,931,3.611,932,3.224,933,3.224,934,3.081,935,3.899,936,2.958,937,3.611,938,3.396,939,3.224,940,1.758,941,2.456,942,2.394,943,3.899,944,3.448,945,5.614,946,3.899,947,2.756,948,2.756,949,3.396,950,3.396,951,3.899,952,3.899,953,3.899,954,3.899,955,5.614,956,3.899,957,5.614,958,5.73,959,5.614,960,3.396,961,3.899,962,3.899,963,4.106]],["title/controllers/CourseController.html",[964,2.167,965,4.308]],["body/controllers/CourseController.html",[3,0.101,4,0.084,5,0.062,8,0.266,13,0.202,14,0.005,15,0.247,19,1.117,22,0.09,31,0.153,71,2.017,74,2.495,77,2.185,78,0.894,114,0.509,128,1.595,129,1.868,149,1.169,172,0.003,173,0.003,182,1.508,187,0.501,189,0.883,190,0.525,199,1.169,328,1.559,329,2.571,349,1.454,640,4.164,654,2.186,656,3.068,767,2.701,941,4.578,964,2.656,965,6.732,966,2.845,967,6.341,968,3.792,969,8.002,970,5.702,971,5.052,972,6.536,973,6.341,974,5.772,975,3.763,976,4.17,977,4.031,978,4.17,979,6.617,980,5.702,981,4.966,982,5.281,983,6.341,984,6.341,985,4.17,986,6.341,987,4.464,988,6.341,989,6.341,990,6.341,991,6.341,992,4.358,993,4.075,994,6.341]],["title/classes/CourseFactory.html",[31,0.125,995,4.051]],["body/classes/CourseFactory.html",[3,0.062,4,0.052,5,0.038,8,0.163,9,0.625,10,1.438,12,0.545,13,0.316,14,0.004,15,0.184,22,0.055,31,0.094,33,1.207,37,2.031,45,2.417,54,1.687,69,0.769,71,1.836,72,3.084,78,0.97,114,0.754,128,1.447,149,1.064,168,1.658,172,0.002,173,0.002,175,0.882,182,1.076,187,0.777,189,1.358,190,0.764,192,4.97,199,1.667,211,1.813,216,2.044,316,1.382,320,2.91,323,1.812,328,0.957,367,3.542,385,2.57,386,2.705,391,7.046,393,7.046,395,2.895,397,5.407,398,5.655,399,4.291,400,5.655,401,5.688,402,4.291,403,4.291,404,4.101,405,2.167,406,4.91,407,5.113,408,6.563,409,5.541,411,3.111,413,4.291,414,2.895,415,4.291,417,4.423,418,4.834,419,4.307,420,4.684,421,2.973,422,4.291,423,2.895,424,2.328,425,2.767,426,4.723,427,2.895,428,2.895,429,2.895,430,4.548,432,4.886,433,2.895,434,7.088,435,5.655,437,3.395,438,3.239,439,2.895,441,2.895,443,2.561,444,2.895,445,5.804,447,2.895,448,4.291,449,4.291,451,2.895,452,2.328,453,2.895,454,2.895,457,2.895,459,2.895,461,3.049,581,2.187,683,2.006,888,3.306,893,5.189,922,3.049,963,5.001,995,5.386,996,3.501,997,7.605,998,3.049,999,3.893,1000,3.893,1001,3.049,1002,3.049,1003,3.049,1004,3.049,1005,3.049,1006,3.049,1007,3.049,1008,3.049,1009,3.049,1010,3.049,1011,3.049,1012,3.501,1013,3.893,1014,3.049,1015,6.183,1016,3.501,1017,4.806,1018,3.501,1019,4.52,1020,4.806,1021,3.501,1022,3.501,1023,3.501,1024,3.501,1025,3.501]],["title/entities/CourseGroup.html",[316,0.88,1026,3.402]],["body/entities/CourseGroup.html",[0,0.674,3,0.103,4,0.086,5,0.063,8,0.271,9,0.887,13,0.286,14,0.005,15,0.236,22,0.116,31,0.156,33,1.354,78,0.913,145,1.793,149,1.511,172,0.003,173,0.003,187,0.647,205,2.087,316,1.394,323,2.033,348,4.639,349,1.878,355,1.99,356,1.838,357,2.906,360,2.945,385,1.956,386,2.06,502,2.626,503,2.432,506,2.805,510,2.506,518,3.6,520,2.115,581,3.252,747,2.904,890,6.211,904,4.13,905,5.046,906,6.416,915,3.265,940,2.626,949,5.071,950,5.071,1026,5.387,1027,5.823,1028,4.639,1029,4.899,1030,6.475,1031,6.475,1032,3.336,1033,6.822,1034,5.392,1035,4.259,1036,4.259,1037,5.823,1038,5.823]],["title/injectables/CourseGroupRepo.html",[18,0.976,1039,4.651]],["body/injectables/CourseGroupRepo.html",[3,0.11,4,0.092,5,0.067,8,0.289,13,0.272,14,0.004,15,0.224,18,1.608,19,1.215,22,0.098,31,0.166,69,1.363,71,2.195,74,2.593,77,2.304,78,0.973,114,0.684,128,1.174,129,2.033,172,0.004,173,0.004,182,1.59,187,0.673,189,1.188,190,0.705,199,1.273,300,2.379,308,3.155,328,1.696,329,2.798,355,1.677,357,3.097,543,4.127,544,5.089,546,4.209,581,2.195,1026,4.539,1034,7.099,1039,7.665,1040,6.901,1041,8.525,1042,6.901,1043,8.525,1044,6.901,1045,5.817,1046,4.127,1047,4.828,1048,6.901]],["title/classes/CourseMapper.html",[31,0.125,982,4.308]],["body/classes/CourseMapper.html",[3,0.116,4,0.096,5,0.071,8,0.303,13,0.231,14,0.004,15,0.213,22,0.103,31,0.174,78,1.021,114,0.581,128,1.494,149,1.336,172,0.004,173,0.004,175,1.641,182,1.638,187,0.572,189,1.009,190,0.599,199,1.336,328,1.78,405,3.549,581,3.2,767,3.74,982,7.312,1049,7.243,1050,8.781,1051,8.781,1052,7.243,1053,7.693,1054,4.943,1055,7.243,1056,7.243,1057,7.243,1058,7.243,1059,7.243,1060,7.243,1061,7.243,1062,7.243]],["title/classes/CourseMetadataListResponse.html",[31,0.125,981,4.051]],["body/classes/CourseMetadataListResponse.html",[3,0.085,4,0.071,5,0.052,8,0.224,9,0.782,10,1.833,12,0.911,13,0.301,14,0.005,15,0.198,22,0.102,31,0.174,33,1.51,37,2.776,69,1.426,114,0.429,172,0.003,173,0.003,175,1.211,181,3.071,187,0.723,189,0.744,190,0.758,192,4.516,216,2.375,308,2.359,328,1.313,349,2.009,381,2.925,438,3.077,577,4.126,581,2.603,652,3.98,654,1.842,656,2.585,660,2.441,675,2.397,676,3.396,680,2.585,681,2.693,682,2.693,683,2.752,746,5.765,747,1.894,889,6.409,893,5.584,958,4.184,960,4.184,981,5.657,987,5.057,992,5.088,993,4.758,1053,7.557,1063,4.804,1064,5.943,1065,3.836,1066,4.75,1067,5.342,1068,5.342,1069,4.184,1070,4.184,1071,4.184,1072,5.202,1073,3.972,1074,4.965,1075,5.242,1076,3.972,1077,3.396,1078,3.513,1079,4.449,1080,3.796,1081,3.513,1082,3.513]],["title/classes/CourseMetadataResponse.html",[31,0.125,1053,4.051]],["body/classes/CourseMetadataResponse.html",[3,0.08,4,0.067,5,0.049,8,0.211,9,0.751,10,2.023,12,0.982,13,0.308,14,0.005,15,0.192,22,0.098,31,0.167,33,1.052,37,2.118,69,1.369,114,0.404,172,0.003,173,0.003,175,1.14,181,3.367,187,0.75,189,0.701,190,0.742,216,2.332,308,2.791,328,1.236,349,2.125,381,3.179,438,2.953,577,4.788,581,2.948,648,5.39,652,3.924,654,1.734,656,2.434,660,2.299,675,2.257,676,3.198,680,3.355,681,3.495,682,3.495,683,3.571,889,7.438,893,6.481,958,3.94,960,3.94,981,3.94,987,2.778,992,3.737,993,3.495,1053,7.022,1063,4.523,1064,4.27,1065,2.904,1066,3.308,1072,6.037,1073,3.74,1074,5.48,1075,5.786,1076,5.155,1077,4.407,1078,4.559,1079,5.773,1080,4.926,1081,3.308,1082,3.308,1083,3.94,1084,5.03,1085,5.03,1086,5.03,1087,5.03,1088,5.03,1089,5.03,1090,5.03]],["title/entities/CourseNews.html",[316,0.88,1091,3.288]],["body/entities/CourseNews.html",[0,0.472,3,0.073,4,0.1,5,0.044,8,0.19,9,0.699,10,0.949,12,0.906,13,0.275,14,0.005,15,0.229,22,0.122,31,0.197,33,1.709,43,3.43,44,3.495,45,3.144,46,3.309,47,3.495,48,4.047,78,0.64,114,0.518,123,1.444,145,1.89,149,1.384,172,0.003,173,0.003,181,2.518,187,0.359,205,1.463,308,2.669,309,4.121,310,3.867,312,2.038,316,1.469,323,1.426,331,3.227,349,1.041,354,2.897,355,1.103,356,1.289,360,2.32,367,3.867,372,3.093,381,2,405,1.705,467,2.392,495,3.495,502,1.841,503,1.705,506,1.967,510,2.497,512,2.797,513,3.399,514,4.772,518,2.861,520,1.483,531,2.572,581,2.388,592,3.309,670,2.715,675,2.038,888,3.466,900,4.102,901,2.289,920,2.572,921,2.641,948,2.887,1028,3.655,1032,2.339,1091,4.102,1092,3.376,1093,4.643,1094,4.541,1095,2.896,1096,3.253,1097,3.376,1098,4.772,1099,3.376,1100,5.334,1101,3.479,1102,4.798,1103,3.859,1104,4.102,1105,4.244,1106,4.937,1107,4.479,1108,3.098,1109,3.376,1110,4.102,1111,3.376,1112,3.376,1113,2.508,1114,3.098,1115,3.227,1116,2.197,1117,3.098,1118,2.887,1119,3.227,1120,3.479,1121,2.887,1122,3.376,1123,2.986,1124,3.376,1125,3.098,1126,3.376,1127,2.797,1128,3.376,1129,3.376,1130,3.376,1131,3.376,1132,3.098,1133,3.376,1134,3.098,1135,3.376,1136,3.376,1137,4.798,1138,4.489,1139,3.376,1140,4.798,1141,3.376,1142,3.376,1143,2.986,1144,2.986,1145,3.376]],["title/injectables/CourseRepo.html",[18,0.976,585,3.093]],["body/injectables/CourseRepo.html",[3,0.072,4,0.06,5,0.044,8,0.188,10,0.938,13,0.285,14,0.005,15,0.208,18,1.207,19,0.79,22,0.064,31,0.154,33,0.938,69,0.886,71,1.427,72,3.296,74,2.683,76,3.572,77,2.415,78,1.297,114,0.652,128,1.736,129,2.197,149,1.499,172,0.003,173,0.003,182,1.193,187,0.642,189,1.132,190,0.673,199,1.375,300,1.546,308,3.331,328,1.103,329,1.819,355,1.554,356,1.273,357,2.013,381,1.39,411,3.449,438,3.176,500,1.427,516,1.71,543,2.683,544,4.282,546,3.159,581,2.372,585,3.826,597,6.367,616,4.74,773,5.346,890,2.95,891,5.01,892,5.01,893,4.365,938,5.01,939,5.545,941,4.604,993,2.262,1029,3.826,1046,2.683,1047,4.604,1146,4.034,1147,5.753,1148,4.486,1149,4.034,1150,5.346,1151,4.486,1152,5.753,1153,4.486,1154,5.753,1155,4.486,1156,5.01,1157,4.16,1158,7.83,1159,4.034,1160,5.753,1161,6.045,1162,4.034,1163,4.034,1164,4.067,1165,5.753,1166,2.683,1167,5.753,1168,3.736,1169,4.034,1170,3.736,1171,5.753,1172,4.034,1173,4.034,1174,2.478,1175,3.623,1176,5.753,1177,3.736,1178,3.736,1179,3.736,1180,3.188,1181,5.753,1182,5.84,1183,3.188,1184,4.034,1185,4.034,1186,4.034,1187,4.034]],["title/classes/CourseScope.html",[31,0.125,1158,4.308]],["body/classes/CourseScope.html",[3,0.069,4,0.058,5,0.042,8,0.182,9,0.677,10,0.908,13,0.282,14,0.005,15,0.206,18,1.179,19,0.765,22,0.062,31,0.151,33,1.307,35,2.301,71,1.381,72,2.534,74,2.053,76,3.495,77,1.979,78,1.284,114,0.643,128,1.727,129,2.157,149,1.477,168,1.849,172,0.003,173,0.003,175,0.984,182,1.166,187,0.719,189,1.116,190,0.663,192,3.771,199,1.565,308,3.273,328,1.067,329,1.76,355,1.518,356,1.232,357,1.948,381,1.345,385,1.312,386,1.381,500,1.381,516,1.655,544,3.292,546,2.144,581,2.329,585,2.596,597,6.272,616,2.76,773,5.267,890,2.855,891,4.894,892,4.894,893,4.264,939,3.228,941,4.536,975,2.021,993,2.189,1029,3.737,1046,2.596,1047,4.536,1146,3.904,1150,4.11,1152,3.904,1154,3.904,1156,4.894,1157,4.486,1158,8.284,1159,5.619,1160,5.619,1161,5.955,1162,5.619,1163,7.201,1164,3.972,1165,5.619,1166,2.596,1167,5.619,1168,3.615,1169,5.619,1170,3.615,1171,5.619,1172,3.904,1173,3.904,1174,2.397,1175,3.539,1176,5.619,1177,3.615,1178,3.615,1179,3.615,1180,3.085,1181,5.619,1182,5.734,1183,3.085,1184,3.904,1185,3.904,1186,3.904,1187,3.904,1188,4.646,1189,4.646,1190,6.249,1191,6.249,1192,6.249,1193,4.646,1194,3.085,1195,3.4,1196,4.815,1197,3.4,1198,4.341,1199,4.341,1200,4.341,1201,4.341,1202,3.228,1203,4.44,1204,3.4]],["title/injectables/CourseUc.html",[18,0.976,979,3.846]],["body/injectables/CourseUc.html",[3,0.109,4,0.091,5,0.067,8,0.285,13,0.27,14,0.005,15,0.233,18,1.596,19,1.201,22,0.097,31,0.164,69,1.346,71,2.168,72,3.901,76,2.416,77,2.287,78,0.961,114,0.679,172,0.004,173,0.004,182,1.578,187,0.668,189,1.179,190,0.7,199,1.257,279,3.591,300,2.35,308,3.141,328,1.676,329,2.764,383,3.437,438,2.904,581,2.168,585,6.028,656,3.299,972,6.115,979,6.291,1046,4.077,1174,3.765,1175,3.861,1205,6.817,1206,8.46,1207,5.677,1208,6.817,1209,8.46,1210,6.817,1211,4.483,1212,6.817,1213,5.339]],["title/classes/CreateNewsParams.html",[31,0.125,1214,3.846]],["body/classes/CreateNewsParams.html",[3,0.089,4,0.074,5,0.054,8,0.233,9,0.804,10,1.552,12,0.935,13,0.296,14,0.004,15,0.202,22,0.079,31,0.179,40,3.592,128,0.947,172,0.003,173,0.003,175,1.261,181,3.114,187,0.733,190,0.614,216,2.492,309,4.211,310,4.303,311,5.145,316,1.724,328,1.368,349,2.128,381,2.3,592,4.093,652,3.764,653,3.742,654,1.918,680,2.692,681,3.742,682,3.742,767,3.161,1093,4.312,1095,2.497,1101,4.503,1107,4.585,1164,4.719,1214,5.519,1215,8.587,1216,4.633,1217,6.181,1218,4.572,1219,6.181,1220,5.003,1221,5.564,1222,4.882,1223,4.719,1224,5.813,1225,5.519,1226,6.181,1227,5.065,1228,5.564,1229,5.564,1230,5.665,1231,5.564,1232,5.564,1233,6.211,1234,5.813,1235,4.719,1236,5.564,1237,5.564,1238,6.674,1239,5.274,1240,6.335,1241,2.805,1242,3.954]],["title/controllers/DashboardController.html",[964,2.167,1243,4.308]],["body/controllers/DashboardController.html",[3,0.083,4,0.069,5,0.051,8,0.217,12,0.883,13,0.257,14,0.005,15,0.236,19,0.913,22,0.074,31,0.125,37,2.498,71,1.649,74,2.771,77,2.529,78,1.136,114,0.647,127,5.123,128,1.592,129,2.374,143,4.668,172,0.003,173,0.003,182,1.32,187,0.637,189,1.123,190,0.667,199,1.486,328,1.275,329,2.103,330,2.414,349,1.847,406,4.819,654,1.788,656,2.509,671,3.194,767,4.078,964,2.172,966,2.327,968,3.101,969,6.365,970,4.663,971,5.39,974,6.216,975,2.414,976,3.41,977,3.297,978,3.41,985,3.41,1243,5.895,1244,5.186,1245,4.561,1246,7.246,1247,8.059,1248,5.186,1249,5.186,1250,6.781,1251,7.078,1252,5.186,1253,8.412,1254,5.186,1255,5.178,1256,7.211,1257,7.078,1258,5.186,1259,4.319,1260,5.3,1261,5.992,1262,4.663,1263,4.319,1264,5.186,1265,5.186,1266,5.186,1267,5.186,1268,5.186,1269,8.059,1270,5.544,1271,5.186,1272,5.186,1273,5.186,1274,5.263,1275,5.186,1276,5.186,1277,5.186,1278,4.663]],["title/classes/DashboardEntity.html",[31,0.125,1279,3.288]],["body/classes/DashboardEntity.html",[0,0.252,3,0.039,4,0.032,5,0.024,8,0.271,9,0.431,10,1.665,12,0.859,13,0.303,14,0.005,15,0.123,19,0.427,22,0.109,31,0.096,35,2.879,37,2.503,69,0.479,76,2.08,78,1.393,114,0.688,128,1.674,143,3.163,148,2.159,149,1.418,168,3.777,172,0.002,173,0.002,175,0.549,181,2.469,182,0.743,187,0.752,189,1.195,190,0.71,199,1.678,308,2.896,386,1.267,405,2.204,467,2.669,477,2.458,500,1.866,520,0.792,577,2.008,578,2.147,640,3.023,660,2.962,675,2.633,678,1.722,747,2.08,916,6.546,917,1.802,918,2.619,942,1.339,1072,2.531,1074,3.946,1075,5.023,1083,3.119,1116,2.452,1123,2.619,1127,1.493,1246,3.581,1255,3.509,1279,2.531,1280,1.802,1281,4.22,1282,3.982,1283,4.887,1284,3.982,1285,3.982,1286,4.887,1287,4.596,1288,5.803,1289,3.982,1290,4.887,1291,3.982,1292,3.982,1293,3.982,1294,3.982,1295,3.982,1296,3.982,1297,4.596,1298,2.424,1299,2.424,1300,3.458,1301,2.424,1302,2.424,1303,2.424,1304,3.316,1305,2.424,1306,2.424,1307,3.316,1308,2.424,1309,3.581,1310,3.316,1311,6.492,1312,2.424,1313,5.049,1314,6.945,1315,2.424,1316,2.424,1317,4.429,1318,2.424,1319,3.316,1320,6.492,1321,2.424,1322,2.424,1323,3.316,1324,2.424,1325,4.596,1326,3.316,1327,2.424,1328,3.316,1329,2.424,1330,3.316,1331,2.424,1332,3.316,1333,2.424,1334,3.316,1335,2.424,1336,2.424,1337,3.316,1338,2.424,1339,1.594,1340,1.898,1341,1.802,1342,3.119,1343,1.654,1344,3.316,1345,2.019,1346,3.119,1347,3.316,1348,3.316,1349,2.019,1350,3.316,1351,2.019,1352,3.316,1353,2.019,1354,4.121,1355,2.83,1356,6.094,1357,2.019,1358,1.654,1359,3.316,1360,2.019,1361,3.316,1362,2.019,1363,2.732,1364,4.419,1365,2.717,1366,3.316,1367,2.019,1368,2.019,1369,2.019,1370,2.019,1371,2.019,1372,3.316,1373,2.019,1374,3.316,1375,1.898,1376,3.316,1377,2.019,1378,1.722,1379,3.316,1380,2.019,1381,2.019,1382,2.019,1383,2.019,1384,1.802,1385,2.019,1386,3.316,1387,5.398,1388,2.019,1389,1.594,1390,2.019,1391,2.019,1392,2.019,1393,2.019,1394,2.019,1395,2.019,1396,2.019,1397,3.119,1398,1.898,1399,2.019,1400,2.019,1401,3.316,1402,3.316,1403,1.898,1404,4.22,1405,2.019,1406,3.316,1407,2.019,1408,2.019,1409,2.019,1410,2.019,1411,2.019,1412,2.019,1413,2.019,1414,2.019,1415,2.019,1416,2.019,1417,2.019,1418,2.019,1419,2.019,1420,2.019,1421,2.019,1422,2.019,1423,2.019,1424,2.019,1425,2.019,1426,2.019,1427,2.019,1428,2.019,1429,2.019,1430,2.019,1431,2.019,1432,3.316,1433,2.019,1434,2.019,1435,2.019,1436,3.316,1437,2.619,1438,3.316,1439,2.019,1440,2.019,1441,2.019,1442,2.019,1443,2.019,1444,2.019,1445,2.019,1446,4.22,1447,2.019,1448,2.019]],["title/entities/DashboardGridElementModel.html",[316,0.88,1449,3.53]],["body/entities/DashboardGridElementModel.html",[0,0.738,3,0.083,4,0.069,5,0.051,8,0.218,9,0.768,10,1.897,12,0.857,13,0.276,14,0.005,15,0.22,22,0.123,31,0.171,33,1.483,37,2.501,69,1.027,76,2.514,123,2.567,145,1.898,149,1.488,172,0.003,173,0.003,181,3.141,187,0.717,190,0.587,205,2.286,316,1.373,323,1.633,348,2.946,349,2.08,354,3.008,355,1.723,356,1.476,357,2.334,360,2.902,385,1.571,386,1.654,502,2.109,506,2.254,510,2.745,518,3.077,520,1.699,581,2.256,660,3.241,675,2.334,747,2.514,904,4.07,915,2.623,940,2.876,1032,2.68,1120,2.804,1245,5.047,1364,4.891,1365,3.549,1449,5.508,1450,4.074,1451,6.962,1452,6.962,1453,5.916,1454,5.555,1455,5.508,1456,5.202,1457,5.555,1458,5.555,1459,5.202,1460,5.202,1461,5.202,1462,5.202,1463,3.421,1464,3.696,1465,4.074,1466,5.274,1467,4.509,1468,4.074,1469,5.555,1470,4.074,1471,4.074,1472,4.074,1473,4.074,1474,4.074,1475,3.868,1476,5.274,1477,4.509,1478,4.074,1479,3.549,1480,4.074,1481,4.074,1482,4.074,1483,4.074,1484,4.074]],["title/interfaces/DashboardGridElementModelProperties.html",[0,0.538,1466,3.846]],["body/interfaces/DashboardGridElementModelProperties.html",[0,0.748,2,1.525,3,0.085,4,0.071,5,0.052,8,0.222,9,0.779,10,2.049,12,0.925,13,0.3,14,0.005,15,0.221,22,0.124,31,0.173,33,1.504,37,2.617,69,1.048,76,2.549,123,2.288,145,1.914,149,1.326,172,0.003,173,0.003,181,3.231,190,0.723,205,2.318,316,1.388,348,3.007,354,2.745,355,1.747,356,1.507,357,2.382,360,2.933,502,2.153,506,2.3,510,2.783,518,2.741,520,1.734,581,2.781,660,3.286,675,2.382,747,1.882,904,3.626,915,2.676,940,2.916,1032,2.735,1120,2.862,1245,5.162,1364,5.078,1365,3.622,1449,4.908,1450,4.158,1451,7.163,1452,7.163,1453,5.566,1454,4.158,1455,4.908,1457,4.158,1458,4.158,1463,3.491,1464,3.772,1465,4.158,1466,6.065,1467,5.558,1468,4.158,1469,5.633,1470,4.158,1471,4.158,1472,4.158,1473,4.158,1474,4.158,1475,3.947,1476,5.348,1477,4.572,1478,4.158,1479,3.622,1480,4.158,1481,4.158,1482,4.158,1483,4.158,1484,4.158]],["title/classes/DashboardGridElementResponse.html",[31,0.125,1485,3.846]],["body/classes/DashboardGridElementResponse.html",[3,0.07,4,0.058,5,0.043,8,0.184,9,0.682,10,2.137,12,0.955,13,0.312,14,0.005,15,0.106,22,0.104,31,0.178,37,2.15,69,1.59,114,0.352,143,3.397,172,0.003,173,0.003,175,0.995,181,3.369,187,0.752,189,0.612,190,0.788,216,2.544,316,0.747,320,3.715,349,2.143,577,4.714,578,2.368,644,2.368,648,5.315,652,4.1,654,1.514,660,3.367,671,3.881,675,2.828,676,4.006,680,4.294,681,4.473,682,4.473,683,3.796,746,2.889,747,1.557,1072,5.944,1073,4.686,1074,5.76,1075,6.141,1076,5.48,1110,2.792,1245,3.319,1255,3.768,1313,4.959,1354,5.118,1355,6.058,1477,4.685,1485,6.796,1486,3.658,1487,7.099,1488,6.677,1489,6.677,1490,4.392,1491,4.392,1492,6.339,1493,5.248,1494,4.392,1495,4.392,1496,4.392,1497,4.392,1498,4.392,1499,4.392,1500,4.392,1501,3.658,1502,3.658,1503,3.658,1504,3.658,1505,3.658]],["title/classes/DashboardGridSubElementResponse.html",[31,0.125,1492,3.846]],["body/classes/DashboardGridSubElementResponse.html",[3,0.077,4,0.064,5,0.047,8,0.202,9,0.728,10,2.154,12,0.962,13,0.299,14,0.005,15,0.117,22,0.11,31,0.187,37,1.796,69,1.657,114,0.386,143,2.595,172,0.003,173,0.003,175,1.091,181,3.418,187,0.697,189,0.671,190,0.398,216,2.564,316,0.819,320,3.39,349,1.923,577,4.826,578,2.595,644,2.595,648,4.878,652,4.156,654,1.659,660,3.541,671,4.142,675,3.017,676,4.275,680,4.271,681,4.449,682,4.449,683,3.992,1072,6.085,1073,5,1074,5.771,1075,6.128,1076,5.762,1110,3.06,1245,3.542,1255,2.879,1313,4.142,1354,4.275,1355,5.507,1477,4.926,1485,6.237,1486,4.009,1487,6.453,1488,6.069,1489,6.069,1492,6.977,1493,4.009,1501,4.009,1502,4.009,1503,4.009,1504,4.009,1505,4.009,1506,4.814,1507,4.814,1508,4.814,1509,4.814,1510,4.814]],["title/classes/DashboardMapper.html",[31,0.125,1263,4.308]],["body/classes/DashboardMapper.html",[3,0.094,4,0.079,5,0.058,8,0.248,10,1.237,13,0.274,14,0.005,15,0.187,22,0.084,31,0.143,35,2.792,78,1.214,114,0.691,128,1.553,149,1.588,172,0.003,173,0.003,175,1.341,181,1.985,182,1.442,187,0.68,189,1.199,190,0.712,199,1.588,328,1.454,405,3.812,577,2.983,671,5.623,696,4.761,767,3.888,918,6.004,1054,4.037,1065,2.478,1072,3.761,1245,4.072,1263,6.437,1279,5.803,1287,4.634,1313,3.644,1317,5.803,1477,3.761,1485,6.788,1488,4.634,1489,4.634,1492,6.402,1511,5.916,1512,7.73,1513,7.73,1514,7.73,1515,5.916,1516,7.73,1517,5.916,1518,4.399,1519,7.73,1520,5.916,1521,5.916,1522,5.916,1523,5.916,1524,5.916,1525,5.916,1526,5.916,1527,5.916,1528,5.916,1529,5.916,1530,5.916,1531,5.916,1532,7.73,1533,5.32,1534,5.916,1535,7.73,1536,5.916,1537,5.916,1538,5.916,1539,5.916,1540,5.916]],["title/entities/DashboardModelEntity.html",[316,0.88,1467,3.288]],["body/entities/DashboardModelEntity.html",[0,0.761,3,0.087,4,0.072,5,0.053,8,0.228,9,0.792,10,1.927,12,0.834,13,0.233,14,0.005,15,0.223,22,0.125,31,0.176,33,1.53,37,2.36,69,1.076,76,2.929,123,2.628,145,2.078,149,1.524,172,0.003,173,0.003,181,2.963,187,0.578,205,2.358,316,1.406,323,1.71,348,3.085,349,1.677,354,2.774,355,1.778,356,1.546,357,2.444,360,2.971,385,1.645,386,1.732,502,2.208,506,2.36,510,3.198,518,3.15,520,1.779,581,2.327,660,3.344,675,2.444,747,1.931,904,4.166,915,2.746,940,2.967,1032,2.806,1120,3.945,1245,4.999,1364,4.455,1365,3.716,1449,4.993,1450,4.265,1451,6.57,1452,6.57,1453,6.029,1454,4.265,1455,5.639,1457,4.265,1458,4.265,1463,3.582,1464,3.87,1465,4.265,1466,5.441,1467,5.253,1468,4.265,1469,5.731,1470,4.265,1471,4.265,1472,4.265,1473,4.265,1474,4.265,1475,4.05,1476,5.441,1477,5.617,1478,4.265,1479,3.716,1480,4.265,1481,4.265,1482,4.265,1483,5.731,1484,4.265,1541,5.446,1542,5.446]],["title/injectables/DashboardModelMapper.html",[18,0.976,1543,3.676]],["body/injectables/DashboardModelMapper.html",[3,0.055,4,0.046,5,0.034,8,0.144,10,1.098,12,0.324,13,0.299,14,0.005,15,0.155,18,0.991,19,0.605,22,0.049,31,0.083,35,2.698,69,0.678,71,1.093,74,2.885,76,1.218,77,2.679,78,1.354,114,0.743,128,1.713,129,2.83,143,1.852,145,1.396,148,1.463,149,1.317,172,0.002,173,0.002,182,0.98,187,0.731,189,1.29,190,0.766,199,1.679,300,1.184,316,0.894,328,0.844,355,0.835,356,0.975,543,2.054,544,3.761,546,2.593,564,2.691,581,2.838,640,2.706,747,1.218,916,4.696,919,2.691,1074,2.975,1116,2.542,1245,4.946,1255,2.054,1279,5.366,1317,6.043,1325,2.691,1356,5.467,1364,4.147,1375,2.691,1449,5.94,1451,2.555,1452,2.555,1464,2.441,1467,6.107,1475,2.555,1477,2.184,1518,2.555,1543,3.732,1544,3.436,1545,6.376,1546,6.376,1547,5.252,1548,5.252,1549,5.252,1550,5.252,1551,6.376,1552,5.252,1553,5.252,1554,6.376,1555,3.436,1556,3.436,1557,3.436,1558,9.506,1559,3.436,1560,3.436,1561,5.252,1562,3.436,1563,5.252,1564,3.436,1565,6.756,1566,5.252,1567,3.436,1568,5.252,1569,3.436,1570,3.436,1571,3.436,1572,5.252,1573,3.436,1574,5.252,1575,3.436,1576,3.436,1577,3.436,1578,7.693,1579,3.089,1580,5.252,1581,3.436,1582,3.436,1583,3.436,1584,3.436,1585,3.436,1586,3.436,1587,3.436,1588,3.436,1589,3.436,1590,3.436,1591,3.436,1592,3.732,1593,3.436,1594,2.555,1595,3.436,1596,3.436,1597,3.436,1598,3.436,1599,3.436,1600,3.436,1601,3.436,1602,5.062,1603,3.436,1604,5.252,1605,3.436,1606,5.252,1607,3.436,1608,3.436,1609,3.436,1610,5.252,1611,3.436,1612,5.252,1613,3.436,1614,5.252,1615,3.436,1616,3.436,1617,3.436,1618,5.252,1619,5.252,1620,3.436,1621,3.436,1622,3.436,1623,3.436,1624,3.436,1625,3.436,1626,3.436,1627,3.436,1628,3.436,1629,3.436,1630,2.861,1631,5.252,1632,3.089,1633,3.436]],["title/injectables/DashboardRepo.html",[18,0.976,1634,3.846]],["body/injectables/DashboardRepo.html",[0,0.53,3,0.081,4,0.068,5,0.05,8,0.213,10,1.462,13,0.287,14,0.005,15,0.208,18,1.319,19,0.897,22,0.099,31,0.168,69,1.005,71,2.223,74,2.843,76,3.046,77,2.719,78,1.312,114,0.722,128,1.675,129,2.807,145,1.115,149,0.939,172,0.003,173,0.003,182,1.304,187,0.711,189,1.254,190,0.745,199,1.584,211,2.37,300,1.755,308,3.253,316,1.189,328,1.251,348,2.884,355,1.237,357,2.285,370,1.83,397,3.237,513,2.682,532,3.474,535,4.444,538,4.967,543,3.045,544,4.526,546,3.452,548,4.967,554,5.672,564,3.987,942,2.812,1074,2.884,1245,4.9,1279,6.169,1317,4.444,1467,3.237,1543,6.106,1565,5.821,1630,4.24,1634,5.198,1635,4.24,1636,6.285,1637,5.821,1638,5.672,1639,5.091,1640,7.178,1641,5.091,1642,6.647,1643,5.091,1644,5.091,1645,5.091,1646,4.578,1647,4.24,1648,5.821,1649,4.24,1650,4.24,1651,5.474,1652,4.578,1653,6.285,1654,4.578,1655,6.285,1656,4.578,1657,7.178,1658,4.578,1659,6.285,1660,4.578,1661,4.578]],["title/classes/DashboardResponse.html",[31,0.125,671,3.186]],["body/classes/DashboardResponse.html",[3,0.08,4,0.066,5,0.049,8,0.209,9,0.746,10,2.164,12,0.946,13,0.285,14,0.005,15,0.121,22,0.112,31,0.19,37,1.84,69,1.682,114,0.4,143,2.688,172,0.003,173,0.003,175,1.13,181,3.328,187,0.624,189,0.695,190,0.412,216,2.592,316,1.172,320,3.98,349,1.579,577,4.66,578,3.714,644,2.688,648,2.899,652,4.176,654,1.719,660,3.608,671,5.505,675,3.092,676,4.38,680,4.325,681,4.506,682,4.506,683,3.549,746,3.279,747,1.767,1072,5.876,1073,5.123,1074,5.619,1075,5.993,1076,5.123,1110,4.38,1245,4.486,1255,2.981,1313,4.244,1354,4.38,1355,5.61,1477,5.682,1485,6.646,1486,4.152,1487,6.575,1488,6.183,1489,6.183,1492,6.332,1493,4.152,1501,4.152,1502,4.152,1503,4.152,1504,4.152,1505,4.152,1662,4.986,1663,4.986,1664,4.986]],["title/injectables/DashboardUc.html",[18,0.976,1261,3.846]],["body/injectables/DashboardUc.html",[3,0.079,4,0.066,5,0.049,8,0.208,12,0.744,13,0.285,14,0.005,15,0.216,17,2.815,18,1.297,19,0.876,22,0.07,31,0.12,35,2.565,69,1.358,71,2.187,74,2.746,76,3.629,77,2.496,78,1.111,114,0.741,123,1.581,128,1.519,129,2.789,148,2.117,149,0.917,168,2.117,172,0.003,173,0.003,182,1.282,187,0.705,189,1.244,190,0.739,199,1.568,211,2.314,279,2.618,300,1.714,308,3.417,328,1.222,406,4.06,585,5.661,941,2.815,1170,4.14,1175,2.815,1211,3.269,1245,5.082,1253,7.648,1261,5.113,1279,5.407,1311,6.324,1313,4.855,1320,7.039,1339,4.522,1356,3.532,1403,3.893,1634,5.113,1637,5.726,1642,5.726,1651,6.661,1665,4.971,1666,7.882,1667,7.882,1668,6.876,1669,4.971,1670,4.971,1671,4.971,1672,4.971,1673,4.971,1674,4.971,1675,4.971,1676,6.876,1677,4.971,1678,4.47,1679,4.47,1680,3.696,1681,4.971,1682,4.971,1683,4.971,1684,4.47,1685,4.971,1686,7.882,1687,6.876,1688,6.876,1689,4.971,1690,4.971,1691,4.971,1692,4.971,1693,3.893,1694,3.16]],["title/classes/DatabaseManagementConsole.html",[31,0.125,1695,4.051]],["body/classes/DatabaseManagementConsole.html",[0,0.526,3,0.081,4,0.067,5,0.049,8,0.212,12,0.477,13,0.253,14,0.005,15,0.193,22,0.132,31,0.122,35,1.452,69,0.998,72,4.136,74,2.602,77,2.315,78,0.98,114,0.638,123,1.607,128,1.618,129,2.049,172,0.003,173,0.003,175,1.145,182,1.297,187,0.628,189,1.108,190,0.709,199,1.282,216,2.438,269,3.237,329,2.049,349,1.594,452,4.158,500,1.607,510,3.077,511,2.548,516,3.031,747,3.183,842,5.633,844,3.757,846,4.851,847,4.208,856,2.445,1065,2.913,1602,2.939,1695,5.446,1696,7.701,1697,4.544,1698,6.253,1699,6.954,1700,4.544,1701,6.254,1702,5.053,1703,5.791,1704,6.253,1705,5.791,1706,4.491,1707,6.985,1708,6.369,1709,5.053,1710,6.253,1711,6.369,1712,5.053,1713,6.595,1714,4.208,1715,3.957,1716,3.957,1717,5.425,1718,4.044,1719,7.149,1720,4.755,1721,5.122,1722,4.044,1723,6.253,1724,6.253,1725,4.544,1726,5.791,1727,6.253,1728,6.253,1729,4.208,1730,3.212,1731,5.446,1732,4.544,1733,4.544]],["title/controllers/DatabaseManagementController.html",[964,2.167,1734,4.308]],["body/controllers/DatabaseManagementController.html",[3,0.099,4,0.083,5,0.061,8,0.26,12,0.929,13,0.254,14,0.004,15,0.193,19,1.094,22,0.088,31,0.15,74,2.931,77,2.741,78,1.311,114,0.64,172,0.003,173,0.003,182,1.488,187,0.735,189,1.111,190,0.66,199,1.715,329,2.519,330,2.892,349,2.132,964,2.602,966,2.787,968,3.715,1698,8.362,1701,5.796,1715,4.865,1716,4.865,1734,6.644,1735,9.619,1736,6.212,1737,6.212,1738,7.978,1739,7.174,1740,9.3,1741,6.212,1742,7.978,1743,6.212,1744,6.915,1745,7.978,1746,6.212,1747,5.586,1748,7.978,1749,6.212,1750,7.978,1751,6.212,1752,4.619,1753,6.212,1754,6.212,1755,6.212,1756,6.212,1757,6.212,1758,6.212,1759,6.212]],["title/modules/DatabaseManagementModule.html",[257,1.382,1760,3.846]],["body/modules/DatabaseManagementModule.html",[3,0.118,4,0.099,5,0.073,14,0.004,15,0.216,19,1.307,22,0.105,31,0.179,172,0.004,173,0.004,257,2.379,259,2.871,260,3.927,268,4.399,269,3.454,270,3.16,273,3.927,295,4.399,1706,3.59,1760,7.733,1761,6.671,1762,6.671,1763,6.671,1764,7.301,1765,6.671,1766,7.419,1767,7.419]],["title/injectables/DatabaseManagementService.html",[18,0.976,1764,3.53]],["body/injectables/DatabaseManagementService.html",[3,0.071,4,0.059,5,0.043,8,0.186,12,0.985,13,0.299,14,0.005,15,0.18,18,1.199,19,0.783,22,0.063,31,0.107,35,2.326,69,0.878,74,2.916,77,2.72,78,1.322,114,0.766,123,2.359,128,1.668,129,2.702,172,0.003,173,0.003,182,1.185,187,0.765,189,1.307,190,0.776,199,1.729,300,1.532,329,1.802,355,1.08,357,1.994,462,2.923,477,3.107,510,3.629,543,2.658,544,4.264,546,3.138,640,3.274,794,4.726,807,5.062,809,5.81,1707,4.516,1739,5.715,1744,6.819,1747,5.715,1764,4.337,1765,8.815,1768,4.445,1769,6.355,1770,5.293,1771,6.355,1772,6.355,1773,6.355,1774,8.095,1775,6.355,1776,4.726,1777,5.844,1778,4.445,1779,6.355,1780,4.445,1781,6.355,1782,4.445,1783,6.355,1784,4.445,1785,6.355,1786,4.445,1787,6.355,1788,4.445,1789,4.445,1790,6.355,1791,4.445,1792,4.445,1793,4.445,1794,4.445,1795,4.445,1796,4.445,1797,7.418,1798,4.445,1799,6.355,1800,4.445,1801,4.445,1802,4.445,1803,4.445,1804,6.355,1805,4.445,1806,4.445,1807,4.445,1808,4.445,1809,6.355,1810,4.445,1811,4.445,1812,4.445,1813,4.445,1814,4.445,1815,4.445]],["title/injectables/DatabaseManagementUc.html",[18,0.976,1701,3.402]],["body/injectables/DatabaseManagementUc.html",[0,0.258,3,0.04,4,0.103,5,0.081,8,0.104,9,0.439,12,0.923,13,0.247,14,0.005,15,0.18,18,0.765,19,0.437,22,0.093,31,0.06,34,1.154,35,2.764,37,1.083,69,0.801,74,2.534,77,2.097,78,1.165,114,0.693,123,0.789,128,1.672,129,2.695,148,1.056,149,0.949,172,0.002,173,0.002,182,0.757,187,0.682,189,1.036,190,0.727,199,1.645,216,1.021,273,1.788,295,2.003,300,0.855,320,2.999,330,3.054,371,1.404,381,1.596,385,0.749,386,0.789,394,4.182,438,2.794,477,1.039,500,2.24,510,3.643,511,4.265,535,1.576,616,2.579,747,0.879,787,5.283,789,2.065,790,2.065,794,5.528,796,4.227,798,1.692,800,3.378,801,1.527,806,5.822,807,2.768,809,4.032,812,2.768,852,4.806,874,4.659,923,2.579,1065,3.363,1078,1.631,1116,1.963,1164,1.576,1166,1.483,1180,1.762,1230,3.781,1363,1.337,1592,2.883,1602,4.669,1701,2.668,1706,4.251,1707,6.57,1708,5.237,1711,5.528,1717,2.768,1718,2.994,1721,3.923,1730,5.104,1731,5.516,1744,5.768,1764,5.073,1770,3.378,1776,3.016,1816,7.606,1817,2.229,1818,4.629,1819,4.057,1820,5.349,1821,4.057,1822,4.057,1823,4.057,1824,4.629,1825,4.057,1826,5.349,1827,2.479,1828,5.005,1829,4.057,1830,3.648,1831,2.479,1832,3.285,1833,5.349,1834,4.954,1835,5.21,1836,5.463,1837,2.479,1838,3.648,1839,3.648,1840,2.479,1841,3.016,1842,3.648,1843,2.479,1844,5.349,1845,3.378,1846,5.237,1847,6.685,1848,3.648,1849,2.479,1850,5.899,1851,2.479,1852,5.899,1853,2.479,1854,3.648,1855,3.378,1856,5.349,1857,3.648,1858,2.479,1859,3.648,1860,3.648,1861,3.912,1862,3.378,1863,2.479,1864,2.479,1865,3.378,1866,1.942,1867,2.065,1868,1.277,1869,1.844,1870,2.065,1871,5.463,1872,5.463,1873,3.378,1874,2.229,1875,2.229,1876,3.648,1877,3.648,1878,3.648,1879,2.229,1880,2.229,1881,2.229,1882,2.229,1883,5.349,1884,2.229,1885,2.229,1886,2.229,1887,2.065,1888,2.229,1889,2.229,1890,2.229,1891,2.065,1892,2.229,1893,5.349,1894,4.287,1895,2.499,1896,2.229,1897,2.229,1898,1.576,1899,1.631,1900,2.229,1901,3.648,1902,3.648,1903,2.229,1904,2.229,1905,2.229,1906,1.483,1907,3.648,1908,2.229,1909,2.229,1910,2.229,1911,3.177,1912,3.648,1913,2.229,1914,3.648,1915,3.648,1916,2.229,1917,2.229,1918,2.359,1919,2.229,1920,2.229,1921,2.065,1922,2.229,1923,1.762,1924,2.065,1925,1.692,1926,1.483,1927,2.229,1928,2.065,1929,2.229,1930,2.229,1931,2.229,1932,2.229,1933,2.229,1934,2.768,1935,2.229,1936,2.229,1937,2.229,1938,2.229,1939,2.229,1940,3.648,1941,2.229,1942,2.229,1943,2.229,1944,2.229,1945,1.404,1946,2.229,1947,2.229,1948,2.229,1949,2.229,1950,3.016,1951,2.229,1952,3.177,1953,2.229,1954,2.229,1955,2.229,1956,2.229]],["title/controllers/DelayController.html",[964,2.167,1957,4.308]],["body/controllers/DelayController.html",[3,0.107,4,0.089,5,0.066,8,0.281,14,0.005,15,0.221,19,1.182,22,0.095,31,0.162,37,1.792,60,4.744,73,5.159,74,2.56,77,2.469,78,1.181,128,1.425,129,1.976,149,1.237,172,0.003,173,0.003,182,1.562,187,0.53,199,1.237,207,3.382,272,2.81,349,1.538,385,2.53,881,6.228,886,5.715,964,3.508,966,3.758,1957,7.605,1958,7.531,1959,6.032,1960,7.965,1961,6.708,1962,6.228,1963,5.043,1964,6.56,1965,5.586,1966,6.032,1967,4.412,1968,6.032,1969,6.975,1970,6.032,1971,6.032,1972,6.708,1973,5.586,1974,3.382,1975,6.032,1976,5.254,1977,3.456,1978,4.412,1979,4.988]],["title/classes/DeleteFilesConsole.html",[31,0.125,1980,4.308]],["body/classes/DeleteFilesConsole.html",[3,0.097,4,0.081,5,0.077,8,0.255,9,0.854,13,0.279,14,0.004,15,0.212,22,0.086,31,0.147,35,2.51,37,2.333,69,1.204,74,2.449,77,2.131,114,0.633,128,1.038,129,1.797,149,1.454,172,0.003,173,0.003,175,1.382,182,1.471,187,0.69,189,1.098,190,0.652,199,1.125,216,2.199,329,2.473,349,1.398,381,1.89,511,4.656,539,4.602,846,5.231,856,2.951,885,5.548,932,6.868,1705,5.079,1713,6.563,1980,6.566,1981,9.236,1982,6.099,1983,7.089,1984,6.099,1985,7.284,1986,7.884,1987,7.884,1988,8.808,1989,7.856,1990,9.236,1991,7.856,1992,8.737,1993,6.099,1994,8.737,1995,4.011,1996,4.162,1997,5.484,1998,6.099,1999,6.099,2000,5.484,2001,6.099,2002,6.099,2003,6.099,2004,3.757]],["title/injectables/DeleteFilesUc.html",[18,0.976,1985,3.846]],["body/injectables/DeleteFilesUc.html",[3,0.095,4,0.079,5,0.076,8,0.25,12,0.563,13,0.248,14,0.005,15,0.209,18,1.465,19,1.049,22,0.084,31,0.144,35,1.712,43,3.549,44,3.615,45,3.253,46,3.423,69,1.177,74,2.422,77,2.099,114,0.623,128,1.558,129,2.545,145,1.7,172,0.003,173,0.003,182,1.448,187,0.613,189,1.082,190,0.643,199,1.099,270,2.538,279,3.139,300,2.054,329,2.416,330,2.774,381,2.677,477,2.496,511,4.786,885,5.615,1983,6.983,1985,5.774,2000,8.231,2005,8.639,2006,5.958,2007,5.958,2008,7.238,2009,5.958,2010,7.766,2011,5.958,2012,7.766,2013,7.623,2014,6.983,2015,5.958,2016,5.958,2017,7.766,2018,5.958,2019,7.766,2020,5.958,2021,7.766,2022,7.768,2023,7.766,2024,5.358,2025,5.358,2026,4.234,2027,5.958,2028,5.958,2029,4.431,2030,4.962,2031,5.958,2032,5.958,2033,7.766,2034,4.962,2035,5.958,2036,4.234]],["title/entities/Directory.html",[316,0.88,515,3.402]],["body/entities/Directory.html",[0,0.66,3,0.101,4,0.084,5,0.079,12,0.885,13,0.258,14,0.005,15,0.227,22,0.133,31,0.214,33,1.861,123,2.571,145,1.948,172,0.003,173,0.003,205,2.043,316,1.595,323,1.991,354,3.107,355,1.54,356,1.8,360,2.906,381,2.505,493,6.072,494,4.966,495,3.763,496,6.011,497,6.331,500,2.017,502,2.571,503,2.381,504,5.629,505,4.966,506,2.747,507,6.011,508,5.744,509,5.744,510,3.444,511,4.486,512,3.906,513,4.258,514,5.139,515,5.316,516,3.081,517,4.966,518,2.417,519,4.966,520,2.071,521,4.966,522,4.966,523,4.966,524,4.966,525,4.966,526,4.966,527,4.966,528,4.966,529,4.966,530,3.906,531,3.591]],["title/injectables/DurationLoggingInterceptor.html",[18,0.976,2037,4.651]],["body/injectables/DurationLoggingInterceptor.html",[3,0.104,4,0.087,5,0.064,8,0.274,9,0.892,13,0.208,14,0.004,15,0.23,18,1.555,19,1.152,21,4.862,22,0.093,31,0.157,35,2.594,45,3.781,71,2.871,78,0.922,114,0.525,128,1.112,149,1.52,172,0.003,173,0.003,182,1.537,187,0.651,189,0.911,190,0.541,199,1.206,216,1.645,300,2.254,385,1.975,386,2.08,424,4.929,878,5.857,885,5.367,886,5.624,942,3.611,1164,4.156,1964,6.455,1995,4.3,2037,7.411,2038,9.026,2039,6.538,2040,8.242,2041,6.455,2042,7.411,2043,7.411,2044,7.422,2045,8.522,2046,6.538,2047,3.802,2048,8.116,2049,8.242,2050,6.538,2051,5.445,2052,6.538,2053,6.538,2054,8.242,2055,6.538,2056,6.538,2057,6.538]],["title/classes/EncryptedStringType.html",[31,0.125,2058,4.051]],["body/classes/EncryptedStringType.html",[3,0.085,4,0.071,5,0.052,8,0.223,9,0.78,12,0.995,13,0.317,14,0.005,15,0.198,22,0.076,31,0.128,33,1.507,35,2.348,69,1.052,78,1.329,114,0.655,128,1.226,149,1.329,172,0.003,173,0.003,175,1.207,182,1.344,187,0.692,189,1.138,190,0.676,199,1.329,205,1.716,216,1.34,355,1.294,356,1.511,370,1.915,386,2.999,438,2.268,477,3.019,747,3.342,859,2.871,1706,3.488,1934,4.918,2058,5.645,2059,5.326,2060,6.481,2061,6.481,2062,7.346,2063,6.51,2064,8.17,2065,7.208,2066,7.208,2067,7.208,2068,7.208,2069,7.208,2070,6.075,2071,7.208,2072,10.282,2073,5.326,2074,7.208,2075,5.326,2076,3.784,2077,3.502,2078,3.385,2079,4.171,2080,5.326,2081,5.326,2082,7.208,2083,5.326,2084,5.326,2085,7.208,2086,6.399,2087,5.575,2088,6.804,2089,7.208,2090,7.208,2091,5.326,2092,6.481,2093,7.208,2094,5.326]],["title/modules/EncryptionModule.html",[257,1.382,2095,4.051]],["body/modules/EncryptionModule.html",[0,0.747,3,0.115,4,0.095,5,0.07,12,0.678,13,0.229,14,0.005,15,0.212,19,1.265,22,0.124,31,0.173,72,2.912,78,1.013,114,0.576,172,0.004,173,0.004,182,1.339,187,0.567,189,1,190,0.594,199,1.324,257,2.514,259,2.779,272,3.008,295,3.546,405,3.28,1977,3.699,1978,4.723,2070,7,2095,7.373,2096,6.457,2097,5.34,2098,5.745,2099,8.157,2100,7.181,2101,5.985,2102,6.457,2103,6.457,2104,6.457,2105,6.457]],["title/interfaces/EncryptionModuleOptions.html",[0,0.538,2099,4.308]],["body/interfaces/EncryptionModuleOptions.html",[0,0.758,2,2.095,3,0.116,4,0.097,5,0.071,8,0.305,9,0.955,12,0.895,13,0.232,14,0.005,15,0.214,19,1.284,22,0.125,31,0.176,78,1.028,172,0.004,173,0.004,257,2.531,272,3.054,295,3.6,405,2.738,1977,3.756,1978,4.795,2070,7.046,2095,6.904,2096,6.555,2098,4.795,2099,7.891,2101,5.604,2102,6.555,2103,8.852,2104,6.555,2105,6.555]],["title/modules/ErrorModule.html",[257,1.382,865,3.846]],["body/modules/ErrorModule.html",[3,0.118,4,0.098,5,0.072,14,0.004,15,0.231,19,1.301,22,0.105,31,0.178,172,0.004,173,0.004,216,1.859,257,2.373,259,2.858,272,3.094,326,5.843,385,2.684,856,4.3,865,6.607,880,5.473,884,7.744,1721,5.313,1967,4.858,1977,3.805,2106,7.387,2107,7.99,2108,5.648,2109,6.959,2110,7.387,2111,7.387,2112,5.785]],["title/classes/ErrorResponse.html",[31,0.125,201,3.288]],["body/classes/ErrorResponse.html",[3,0.108,4,0.09,5,0.066,12,0.981,13,0.314,14,0.005,15,0.163,19,1.186,22,0.096,31,0.162,34,4.259,37,2.444,38,4.527,69,1.658,71,3.046,84,5.182,114,0.54,172,0.003,173,0.003,175,1.526,179,4.545,181,3.069,187,0.532,189,0.938,190,0.557,201,5.338,202,5.275,216,2.113,217,6.243,218,5.522,219,4.883,833,6.056,923,5.338,1832,3.719,2113,6.735,2114,6.735,2115,6.735,2116,6.735,2117,6.056,2118,6.735,2119,4.786,2120,6.056,2121,4.596,2122,3.548,2123,4.148,2124,5.008]],["title/injectables/FeathersAuthProvider.html",[18,0.976,293,3.676]],["body/injectables/FeathersAuthProvider.html",[0,0.478,3,0.073,4,0.061,5,0.045,8,0.192,12,0.819,13,0.287,14,0.005,15,0.199,18,1.228,19,0.81,22,0.065,31,0.111,35,2.172,50,3.6,69,0.908,74,2.854,76,3.283,77,2.637,78,1.27,114,0.723,128,1.66,129,2.555,145,2.071,148,1.958,149,0.848,172,0.003,173,0.003,182,1.214,187,0.712,189,1.255,190,0.745,199,1.6,293,4.625,296,4.133,300,1.585,308,3.428,309,4.541,310,4.771,311,5.062,312,3.893,317,4.84,328,1.13,329,1.864,345,4.138,347,3.266,348,4.28,355,1.117,357,2.063,516,1.752,859,4.074,888,1.726,901,4.373,975,2.14,1339,4.281,1962,4.84,1963,2.539,2125,9.262,2126,4.133,2127,6.509,2128,6.795,2129,6.509,2130,6.509,2131,6.795,2132,4.597,2133,6.146,2134,4.597,2135,6.509,2136,4.597,2137,4.133,2138,4.597,2139,6.509,2140,4.597,2141,6.509,2142,4.597,2143,4.597,2144,4.597,2145,6.509,2146,6.509,2147,6.509,2148,4.597,2149,4.597,2150,4.597,2151,6.509,2152,6.509,2153,6.509,2154,4.597,2155,3.418,2156,4.597,2157,4.597,2158,4.597,2159,5.421,2160,4.133,2161,4.597,2162,4.597,2163,2.539]],["title/interfaces/FeathersError.html",[0,0.538,2164,3.846]],["body/interfaces/FeathersError.html",[0,0.787,2,2.175,3,0.121,4,0.101,5,0.074,8,0.317,9,0.976,12,0.976,13,0.333,14,0.004,22,0.107,33,1.885,34,4.197,37,2.572,172,0.004,173,0.004,179,4.73,2164,6.704,2165,7.57,2166,7.57,2167,8.964]],["title/modules/FeathersModule.html",[257,1.382,291,3.676]],["body/modules/FeathersModule.html",[3,0.11,4,0.091,5,0.067,14,0.004,15,0.206,19,1.211,22,0.097,31,0.166,60,4.816,172,0.004,173,0.004,216,1.73,257,2.577,259,3.573,260,3.748,268,4.199,269,3.2,270,2.927,272,3.562,291,7.275,295,4.199,298,5.229,394,4.584,437,4.199,859,4.584,2133,7.231,2168,6.18,2169,6.18,2170,6.18,2171,6.873,2172,5.802,2173,4.945,2174,4.945,2175,4.816,2176,6.042,2177,6.323,2178,6.042,2179,6.042,2180,7.081,2181,6.873]],["title/interfaces/FeathersService.html",[0,0.538,2182,4.308]],["body/interfaces/FeathersService.html",[0,0.555,2,1.533,3,0.085,4,0.071,5,0.052,8,0.223,10,1.509,12,0.827,13,0.279,14,0.005,15,0.212,17,3.021,18,1.361,19,0.939,22,0.124,30,4.587,31,0.128,35,1.533,43,3.297,44,3.359,45,3.022,46,3.181,47,3.359,48,3.89,60,5.183,77,2.368,78,0.752,114,0.579,128,1.228,148,2.272,149,0.984,172,0.003,173,0.003,182,1.346,187,0.646,189,1.005,190,0.597,199,1.33,211,2.483,218,3.508,257,1.425,259,2.064,298,4.631,330,3.806,377,3.102,394,2.875,406,4.86,437,2.634,438,3.073,466,5.651,818,3.717,859,5.289,1157,3.359,1895,3.285,1967,3.508,2133,3.64,2163,2.946,2172,3.64,2173,5.322,2174,3.102,2175,5.183,2176,3.79,2177,3.966,2178,3.79,2179,3.79,2180,4.442,2182,7.295,2183,6.809,2184,4.177,2185,4.961,2186,7.877,2187,5.978,2188,6.488,2189,8.032,2190,5.334,2191,6.488,2192,5.334,2193,4.442,2194,3.64,2195,4.442,2196,6.009,2197,4.442,2198,3.64,2199,4.796,2200,4.796,2201,4.796,2202,6.488,2203,4.796,2204,4.442,2205,4.923,2206,4.442,2207,3.64,2208,4.796,2209,4.796,2210,4.796,2211,4.442,2212,3.79,2213,4.796]],["title/injectables/FeathersServiceProvider.html",[18,0.976,2133,3.53]],["body/injectables/FeathersServiceProvider.html",[0,0.556,3,0.085,4,0.071,5,0.052,8,0.224,10,1.117,12,0.828,13,0.279,14,0.005,15,0.212,17,3.026,18,1.363,19,0.941,22,0.124,30,4.592,31,0.129,35,1.535,43,3.301,44,3.363,45,3.026,46,3.184,47,3.363,48,3.894,60,4.965,69,1.055,77,1.952,78,0.753,114,0.58,128,1.229,148,2.275,149,0.985,172,0.003,173,0.003,182,1.347,187,0.646,189,1.006,190,0.598,199,0.985,211,2.487,216,1.344,218,3.513,257,1.427,259,2.795,298,4.965,300,1.842,330,3.81,377,3.107,394,3.894,406,4.215,437,3.567,466,5.657,818,3.721,859,5.291,1157,3.363,1861,3.513,1895,3.291,1967,3.513,2133,4.929,2163,2.95,2172,4.929,2173,5.098,2174,4.201,2175,5.633,2176,5.133,2177,5.371,2178,5.133,2179,5.133,2180,6.015,2182,7.3,2183,6.815,2184,4.184,2185,3.026,2186,6.495,2187,4.929,2188,4.804,2189,6.815,2191,4.804,2193,4.449,2194,3.645,2195,4.449,2196,6.015,2197,4.449,2198,4.929,2199,4.804,2200,4.804,2201,6.495,2202,6.495,2203,4.804,2204,4.449,2205,4.929,2206,4.449,2207,3.645,2208,4.804,2209,4.804,2210,4.804,2211,4.449,2212,3.796,2213,4.804,2214,7.223,2215,5.342,2216,5.342,2217,5.342]],["title/entities/File.html",[5,0.051,316,0.88]],["body/entities/File.html",[0,0.619,3,0.095,4,0.079,5,0.084,8,0.249,9,0.84,12,0.919,13,0.302,14,0.005,15,0.222,22,0.13,31,0.208,33,1.805,123,2.467,145,1.89,172,0.003,173,0.003,187,0.682,205,1.917,316,1.557,323,1.867,349,1.979,354,3.155,355,1.445,356,1.688,360,2.789,381,2.404,493,5.89,494,4.658,495,3.611,496,5.768,497,6.075,500,1.892,502,2.412,503,2.234,504,5.844,505,4.658,506,2.577,507,5.768,508,6.501,509,6.501,510,3.34,511,4.352,512,3.664,513,4.086,514,4.931,515,3.912,516,2.957,517,6.075,518,2.957,519,6.075,520,1.942,521,4.658,522,4.658,523,4.658,524,4.658,525,4.658,526,4.658,527,4.658,528,4.658,529,4.658,530,3.664,531,3.369,2218,5.948,2219,5.948,2220,5.948]],["title/injectables/FileStorageAdapter.html",[18,0.976,2221,3.846]],["body/injectables/FileStorageAdapter.html",[3,0.106,4,0.088,5,0.099,8,0.279,13,0.212,14,0.005,15,0.221,18,1.572,19,1.172,22,0.094,31,0.16,74,2.551,77,2.253,78,0.938,114,0.534,123,2.651,128,1.548,129,1.96,149,1.537,172,0.003,173,0.003,182,1.554,187,0.526,189,0.927,190,0.551,199,1.227,300,2.294,328,1.636,419,3.769,504,5.292,508,5.922,509,6.466,2221,6.197,2222,5.984,2223,7.494,2224,7.494,2225,6.655,2226,8.182,2227,8.334,2228,5.984,2229,6.655,2230,6.655,2231,7.494,2232,5.984,2233,6.655,2234,6.655,2235,5.542,2236,6.655,2237,6.655,2238,6.655,2239,5.212,2240,6.655,2241,5.212,2242,6.655,2243,6.655,2244,6.655,2245,5.212,2246,6.655]],["title/injectables/FileSystemAdapter.html",[18,0.976,1828,3.676]],["body/injectables/FileSystemAdapter.html",[3,0.057,4,0.048,5,0.094,8,0.15,9,0.586,12,0.985,13,0.281,14,0.005,15,0.19,18,1.021,19,0.63,22,0.051,31,0.086,35,1.877,69,1.29,74,2.796,77,2.561,78,1.162,114,0.687,128,1.402,129,2.306,172,0.002,173,0.002,182,1.01,187,0.727,189,1.192,190,0.708,199,1.696,216,1.834,300,1.232,330,3.984,372,1.473,465,3.441,511,2.729,515,3.56,592,3.212,684,3.694,795,3.847,831,3.847,852,6.378,923,5.603,1166,4.358,1226,4.508,1602,5.125,1708,4.025,1717,3.694,1730,6.023,1776,4.025,1828,3.847,1846,2.658,1861,6.474,1872,6.069,1873,7.339,1887,6.861,1898,5.603,1926,2.137,2087,3.694,2247,7.784,2248,7.784,2249,3.214,2250,7.408,2251,5.413,2252,5.413,2253,5.413,2254,6.533,2255,6.533,2256,5.413,2257,6.533,2258,6.533,2259,5.413,2260,5.413,2261,3.574,2262,5.419,2263,5.413,2264,3.574,2265,3.847,2266,7.287,2267,7.83,2268,5.413,2269,5.413,2270,4.867,2271,3.847,2272,7.287,2273,8.813,2274,5.413,2275,3.574,2276,6.533,2277,3.574,2278,5.413,2279,6.533,2280,3.574,2281,3.56,2282,6.533,2283,6.533,2284,6.553,2285,4.867,2286,5.413,2287,3.574,2288,5.413,2289,4.867,2290,4.239,2291,6.533,2292,3.574,2293,4.025,2294,3.847,2295,5.413,2296,3.574,2297,3.574,2298,3.214,2299,4.867,2300,3.574,2301,3.574,2302,4.867,2303,3.574,2304,3.574,2305,3.574,2306,6.533,2307,3.574,2308,3.574,2309,3.574,2310,3.574,2311,3.574,2312,5.413,2313,3.574,2314,3.574,2315,2.799,2316,2.977,2317,3.574,2318,3.574,2319,2.977,2320,3.574]],["title/modules/FileSystemModule.html",[257,1.382,2321,3.846]],["body/modules/FileSystemModule.html",[3,0.118,4,0.098,5,0.087,14,0.004,15,0.216,19,1.304,22,0.105,31,0.178,172,0.004,173,0.004,257,2.376,259,2.865,260,3.922,268,4.393,269,3.446,270,3.153,272,3.727,295,4.393,1828,7.601,2247,6.165,2248,6.165,2321,7.73,2322,6.657,2323,6.657,2324,6.657,2325,7.403,2326,7.403]],["title/modules/FilesModule.html",[257,1.382,2327,3.402]],["body/modules/FilesModule.html",[3,0.108,4,0.09,5,0.066,14,0.004,15,0.244,19,1.189,22,0.096,31,0.163,172,0.003,173,0.003,257,2.245,259,2.612,260,3.706,268,4.151,269,3.142,270,2.874,272,3.522,273,3.706,279,3.555,867,6.193,1980,7.001,1985,7.476,1995,4.438,1996,4.605,2008,7.476,2221,7.476,2327,7.005,2328,6.068,2329,6.068,2330,6.749,2331,7.875,2332,6.749,2333,6.068,2334,6.749,2335,6.749]],["title/injectables/FilesRepo.html",[18,0.976,2008,3.846]],["body/injectables/FilesRepo.html",[3,0.073,4,0.061,5,0.09,8,0.192,9,0.703,13,0.317,14,0.005,15,0.21,18,1.225,19,0.806,22,0.065,31,0.11,33,1.357,69,0.904,71,1.456,74,2.868,77,2.599,78,0.645,114,0.791,128,1.283,129,2.417,168,2.764,172,0.003,173,0.003,182,1.211,187,0.793,189,1.374,190,0.816,192,4.953,199,1.818,300,1.578,316,1.396,323,2.576,328,1.125,329,1.856,355,1.112,357,2.054,381,2.337,385,1.383,386,1.456,397,2.91,426,6.004,493,5.598,496,3.404,504,3.774,511,3.272,532,6.794,534,5.905,535,4.126,536,5.083,537,5.083,538,4.612,539,3.419,540,5.083,541,5.083,542,5.083,544,4.321,546,3.723,548,3.253,550,3.585,552,3.585,554,3.253,556,3.585,558,3.585,560,3.585,562,3.585,2008,4.826,2221,6.689,2223,5.836,2224,5.836,2333,4.116,2336,4.578,2337,6.78,2338,6.49,2339,4.578,2340,4.578,2341,4.578,2342,6.49,2343,4.578,2344,6.49,2345,3.812,2346,3.812,2347,3.812,2348,3.812,2349,3.812,2350,3.812,2351,3.812,2352,3.812,2353,3.812,2354,4.578,2355,4.116,2356,4.578,2357,6.49,2358,3.812,2359,4.578,2360,4.578,2361,4.578,2362,4.826,2363,4.578,2364,4.116,2365,4.578,2366,4.578]],["title/interfaces/GlobalConstants.html",[0,0.538,2367,4.308]],["body/interfaces/GlobalConstants.html",[0,0.753,2,2.081,3,0.116,4,0.096,5,0.071,8,0.303,9,0.951,12,0.993,13,0.301,14,0.004,15,0.176,22,0.103,128,1.494,172,0.004,173,0.004,190,0.813,1706,3.505,2367,7.869,2368,6.513,2369,7.881,2370,7.881,2371,7.881,2372,7.896,2373,7.243,2374,7.896,2375,5.386]],["title/classes/GlobalErrorFilter.html",[31,0.125,2109,4.051]],["body/classes/GlobalErrorFilter.html",[0,0.373,3,0.057,4,0.048,5,0.035,8,0.15,9,0.588,13,0.263,14,0.005,15,0.214,19,0.632,22,0.051,31,0.131,34,4.923,35,1.881,38,5.111,43,2.479,44,2.526,45,2.273,46,2.392,47,1.669,71,2.082,78,1.378,84,3.073,114,0.525,128,1.743,138,2.358,139,2.209,140,2.358,149,1.521,168,2.788,172,0.002,173,0.002,174,5.187,175,0.813,178,4.981,179,3.464,181,2.196,182,1.221,187,0.517,189,0.756,190,0.449,199,1.346,201,5.946,207,1.808,208,3.156,213,2.986,217,2.447,219,3.156,224,2.808,225,3.224,298,3.707,330,2.526,354,1.126,372,1.478,385,1.639,386,1.141,401,3.342,405,2.458,419,3.707,426,4.797,437,1.771,516,1.367,747,1.271,807,5.35,813,3.449,819,6.079,856,2.626,885,4.996,942,2.997,1579,3.224,1594,2.666,1680,2.666,1866,2.808,1911,2.808,1918,3.807,1995,2.358,2026,2.548,2029,5.83,2108,4.984,2109,4.25,2164,5.427,2167,3.224,2174,2.085,2194,2.447,2262,2.666,2362,6.37,2376,6.079,2377,2.808,2378,6.546,2379,5.886,2380,5.861,2381,5.426,2382,3.586,2383,5.426,2384,6.546,2385,7.299,2386,3.586,2387,6.546,2388,3.586,2389,3.224,2390,3.586,2391,3.586,2392,3.224,2393,3.224,2394,3.224,2395,3.224,2396,2.808,2397,3.224,2398,4.467,2399,2.447,2400,3.224,2401,3.224,2402,4.879,2403,3.224,2404,2.986,2405,3.224,2406,3.224,2407,3.224,2408,3.224,2409,3.224,2410,4.519,2411,3.586,2412,3.586,2413,3.224,2414,3.586,2415,3.586,2416,3.586,2417,4.519,2418,3.586,2419,3.586,2420,5.426,2421,3.586,2422,3.586,2423,4.879,2424,2.808,2425,2.986,2426,2.447,2427,2.447,2428,4.879,2429,2.986,2430,4.879,2431,3.224,2432,4.519,2433,4.25,2434,3.224,2435,3.224,2436,3.224,2437,3.224,2438,3.224,2439,3.224,2440,3.224,2441,3.224,2442,3.224,2443,7.05,2444,3.224,2445,7.05,2446,3.224,2447,3.224,2448,3.224,2449,3.586,2450,3.586,2451,3.586,2452,5.426,2453,3.586,2454,3.586]],["title/classes/GlobalValidationPipe.html",[31,0.125,2455,4.308]],["body/classes/GlobalValidationPipe.html",[3,0.101,4,0.084,5,0.062,9,0.684,13,0.283,14,0.005,15,0.195,19,1.113,22,0.09,31,0.214,33,1.686,69,1.754,78,0.891,123,2.976,146,5.73,149,1.165,172,0.003,173,0.003,174,4.489,175,1.431,186,5.996,187,0.499,205,2.036,208,5.442,216,1.59,219,3.674,224,4.947,349,1.849,372,3.323,385,2.436,406,3.254,417,4.69,516,2.408,539,3.327,652,2.561,767,3.784,812,5.503,880,4.967,975,2.941,1065,2.646,1241,4.066,1718,4.69,1720,3.778,1722,3.674,2122,3.327,2205,4.31,2212,4.489,2455,6.716,2456,8.064,2457,6.317,2458,6.316,2459,7.251,2460,6.716,2461,8.883,2462,6.317,2463,5.73,2464,5.261,2465,6.317,2466,4.489,2467,6.317,2468,6.317,2469,6.317,2470,6.317,2471,5.261,2472,4.489,2473,4.489,2474,6.317,2475,4.697,2476,6.317,2477,5.68,2478,5.68,2479,4.947,2480,6.317,2481,6.317,2482,6.317]],["title/classes/GridElement.html",[31,0.125,1356,3.676]],["body/classes/GridElement.html",[0,0.258,3,0.04,4,0.033,5,0.024,8,0.275,9,0.44,10,1.728,12,0.896,13,0.3,14,0.005,15,0.125,19,0.437,22,0.11,31,0.098,35,2.599,37,2.444,69,0.49,76,1.44,78,1.397,114,0.644,128,1.68,143,3.21,148,2.195,149,1.431,168,3.801,172,0.002,173,0.002,175,0.563,181,2.897,182,0.758,187,0.738,189,1.119,190,0.727,199,1.621,308,3.02,385,0.75,386,1.639,405,3.243,411,2.189,467,2.139,477,2.494,500,2.242,520,1.326,577,2.048,578,2.189,640,3.067,660,3,675,2.672,747,2.637,916,6.649,917,1.846,918,2.671,942,2.243,1072,2.582,1074,3.372,1075,4.942,1083,1.945,1116,3.6,1123,2.671,1127,1.529,1255,3.56,1279,1.579,1280,1.846,1281,2.068,1283,2.068,1286,2.068,1287,1.945,1288,5.87,1290,2.068,1297,3.181,1300,2.771,1304,2.068,1307,2.068,1310,2.068,1311,5.241,1313,4.044,1314,6.472,1317,3.785,1319,2.068,1320,4.882,1323,2.068,1325,4.036,1326,2.068,1328,2.068,1330,2.068,1332,2.068,1334,2.068,1337,2.068,1339,1.633,1340,1.945,1341,1.846,1342,3.181,1343,1.694,1344,5.468,1345,4.958,1346,4.036,1347,5.468,1348,4.292,1349,3.382,1350,5.468,1351,3.382,1352,4.292,1353,2.068,1354,4.729,1355,2.886,1356,6.572,1357,4.292,1358,1.694,1359,3.382,1360,2.068,1361,3.382,1362,2.068,1363,2.778,1364,4.81,1365,2.771,1366,3.382,1367,2.068,1368,3.382,1369,3.382,1370,3.382,1371,3.382,1372,3.382,1373,2.068,1374,3.382,1375,1.945,1376,3.382,1377,2.068,1378,1.765,1379,3.382,1380,2.068,1381,2.068,1382,2.068,1383,3.382,1384,1.846,1385,2.068,1386,3.382,1387,5.468,1388,2.068,1389,1.633,1390,2.068,1391,2.068,1392,2.068,1393,2.068,1394,2.068,1395,2.068,1396,2.068,1397,3.181,1398,1.945,1399,2.068,1400,2.068,1401,3.382,1402,3.382,1403,1.945,1404,4.292,1405,2.068,1406,3.382,1407,2.068,1408,2.068,1409,2.068,1410,2.068,1411,2.068,1412,2.068,1413,2.068,1414,2.068,1415,2.068,1416,2.068,1417,2.068,1418,2.068,1419,2.068,1420,2.068,1421,2.068,1422,2.068,1423,2.068,1424,2.068,1425,2.068,1426,2.068,1427,2.068,1428,2.068,1429,2.068,1430,2.068,1431,2.068,1432,3.382,1433,2.068,1434,2.068,1435,2.068,1436,3.382,1437,2.671,1438,3.382,1439,2.068,1440,2.068,1441,2.068,1442,2.068,1443,2.068,1444,2.068,1445,2.068,1446,4.292,1447,2.068,1448,2.068,2483,3.652,2484,4.062,2485,4.062,2486,4.062,2487,4.062,2488,3.652,2489,3.652,2490,3.652,2491,2.483,2492,2.483,2493,2.483,2494,2.483,2495,2.483,2496,2.483,2497,2.233,2498,2.483,2499,2.483,2500,2.483,2501,2.483,2502,2.483,2503,2.483,2504,2.483,2505,2.483,2506,2.483,2507,2.483,2508,2.483,2509,2.483]],["title/interfaces/HtmlMailContent.html",[0,0.538,251,3.402]],["body/interfaces/HtmlMailContent.html",[0,1.059,2,1.927,3,0.107,4,0.089,5,0.066,8,0.281,9,0.907,12,1.015,13,0.267,14,0.004,22,0.095,33,2.058,114,0.538,172,0.003,173,0.003,190,0.693,235,5.508,236,4.577,237,6.006,238,5.715,239,4.577,240,4.577,241,5.508,242,4.577,243,4.577,244,4.577,245,6.29,246,4.412,247,4.577,248,5.508,249,6.717,250,6.717,251,6.006,252,4.744,253,4.412,254,4.577,255,4.577,256,4.577]],["title/interfaces/ICollectionFilePath.html",[0,0.538,1871,4.308]],["body/interfaces/ICollectionFilePath.html",[0,0.325,2,0.898,3,0.05,4,0.108,5,0.076,8,0.131,9,0.529,12,0.899,13,0.156,14,0.005,15,0.198,18,0.921,19,0.55,22,0.096,31,0.075,34,1.455,35,2.549,37,1.304,69,0.617,74,2.065,77,1.835,78,1.251,114,0.545,123,0.994,128,1.726,129,2.83,148,1.331,149,1.108,172,0.002,173,0.002,187,0.247,190,0.497,199,1.44,273,1.378,295,1.543,320,2.461,330,3.429,371,1.77,381,1.513,394,3.971,477,1.309,500,1.553,510,3.645,511,3.936,535,1.987,616,1.987,747,1.108,787,4.269,789,2.603,790,2.603,794,6.065,796,4.269,798,2.133,800,4.066,801,1.925,806,5.769,807,2.133,809,4.705,812,2.133,852,5.327,874,3.823,923,3.104,1065,3.27,1078,2.055,1116,1.512,1164,1.987,1166,1.869,1180,2.221,1230,3.104,1363,1.685,1592,3.469,1602,4.284,1701,2.055,1706,4.084,1707,6.525,1708,5.049,1711,5.049,1717,2.133,1718,2.839,1721,3.592,1730,4.317,1731,4.705,1744,6.721,1764,4.099,1770,4.066,1816,2.81,1817,2.81,1818,2.81,1820,2.81,1824,2.81,1826,2.81,1828,4.269,1830,2.81,1832,2.696,1833,5.402,1834,4.066,1835,4.809,1836,5.003,1838,2.81,1839,2.81,1841,2.324,1842,2.81,1844,4.39,1845,2.603,1846,4.467,1847,7.02,1848,2.81,1850,5.402,1852,5.402,1854,2.81,1855,2.603,1856,4.39,1857,2.81,1859,2.81,1860,2.81,1861,3.211,1862,2.603,1865,2.603,1866,2.448,1867,2.603,1868,1.61,1869,2.324,1870,2.603,1871,6.502,1872,7.028,1873,4.066,1874,2.81,1875,2.81,1876,4.39,1877,4.39,1878,4.39,1879,2.81,1880,2.81,1881,2.81,1882,2.81,1883,6.106,1884,2.81,1885,2.81,1886,2.81,1887,2.603,1888,2.81,1889,2.81,1890,2.81,1891,2.603,1892,2.81,1893,6.106,1894,5.003,1895,3.007,1896,2.81,1897,2.81,1898,1.987,1899,2.055,1900,2.81,1901,4.39,1902,4.39,1903,2.81,1904,2.81,1905,2.81,1906,1.869,1907,4.39,1908,2.81,1909,2.81,1910,2.81,1911,3.823,1912,4.39,1913,2.81,1914,4.39,1915,4.39,1916,2.81,1917,2.81,1918,2.839,1919,2.81,1920,2.81,1921,2.603,1922,2.81,1923,2.221,1924,2.603,1925,2.133,1926,1.869,1927,2.81,1928,2.603,1929,2.81,1930,2.81,1931,2.81,1932,2.81,1933,2.81,1934,3.331,1935,2.81,1936,2.81,1937,2.81,1938,2.81,1939,2.81,1940,4.39,1941,2.81,1942,2.81,1943,2.81,1944,2.81,1945,1.77,1946,2.81,1947,2.81,1948,2.81,1949,2.81,1950,3.63,1951,2.81,1952,3.823,1953,2.81,1954,2.81,1955,2.81,1956,2.81]],["title/interfaces/ICourseGroupProperties.html",[0,0.538,1033,4.308]],["body/interfaces/ICourseGroupProperties.html",[0,0.688,2,1.901,3,0.106,4,0.088,5,0.065,8,0.277,9,0.899,13,0.303,14,0.005,15,0.238,22,0.118,31,0.159,33,1.383,78,0.933,145,2.083,149,1.22,172,0.003,173,0.003,190,0.687,205,2.132,316,1.413,348,4.703,355,2.017,356,1.878,357,2.969,360,2.985,502,2.683,503,2.484,506,2.866,510,2.56,518,3.165,520,2.16,581,3.318,747,2.345,890,6.448,904,3.335,905,4.075,906,5.181,915,3.335,940,2.683,949,5.181,950,5.181,1026,4.351,1027,5.949,1028,3.747,1029,3.956,1032,3.408,1033,7.557,1034,5.509,1035,4.351,1036,4.351,1037,5.949,1038,5.949]],["title/interfaces/ICourseProperties.html",[0,0.538,922,4.051]],["body/interfaces/ICourseProperties.html",[0,0.479,2,1.323,3,0.074,4,0.061,5,0.045,8,0.363,9,0.891,12,0.949,13,0.315,14,0.005,15,0.218,22,0.092,31,0.111,33,0.962,37,1.229,69,0.909,78,0.919,114,0.772,128,1.109,145,2.136,149,1.395,172,0.003,173,0.003,190,0.847,205,1.483,216,2.268,316,1.109,354,2.829,355,1.118,356,1.306,360,2.342,370,2.342,381,2.933,385,2.285,418,2.926,500,1.464,502,1.866,503,1.729,506,1.994,510,1.781,516,1.755,518,3.135,520,1.503,546,2.273,581,1.464,661,2.143,683,4.876,747,2.681,876,2.926,887,3.833,888,3.665,889,6.797,890,5.927,891,7.256,892,7.256,893,5.922,894,4.139,896,4.139,898,4.139,900,2.926,901,2.321,904,3.813,905,4.658,906,3.605,908,4.139,910,4.139,915,2.321,916,4.285,917,3.423,918,3.027,919,3.605,920,2.607,921,2.677,922,5.923,923,4.142,924,4.63,925,4.139,926,3.605,927,4.139,928,3.141,929,4.139,930,4.139,931,3.833,932,3.423,933,3.423,934,3.271,935,4.139,936,3.141,937,3.833,938,3.605,939,3.423,940,1.866,941,2.607,942,2.542,943,4.139,944,3.598,945,5.859,946,4.139,947,2.926,948,2.926,949,3.605,950,3.605,951,4.139,952,4.139,953,4.139,954,4.139,955,5.859,956,4.139,957,5.859,958,5.923,959,5.859,960,3.605,961,4.139,962,4.139,963,4.285]],["title/interfaces/ICreateNews.html",[0,0.538,2510,3.846]],["body/interfaces/ICreateNews.html",[0,1.021,2,1.765,3,0.098,4,0.082,5,0.06,8,0.257,9,0.858,10,1.285,12,0.927,13,0.331,14,0.005,15,0.224,22,0.136,172,0.003,173,0.003,181,3.106,190,0.725,216,1.546,308,2.863,309,3.994,310,4.516,311,5.4,316,1.045,381,2.717,411,4.27,430,3.674,500,1.954,581,2.788,592,4.083,888,3.292,941,3.479,1093,4.639,1095,2.757,1096,4.42,1098,3.906,1101,4.993,1107,4.402,2510,5.89,2511,4.812,2512,7.123,2513,5.524,2514,5.524,2515,5.524,2516,4.366,2517,4.366,2518,4.366,2519,4.568,2520,5.524,2521,4.568,2522,4.192]],["title/interfaces/ICurrentUser.html",[0,0.538,971,2.789]],["body/interfaces/ICurrentUser.html",[0,0.92,2,1.798,3,0.1,4,0.083,5,0.061,8,0.262,9,0.868,10,2.062,12,1.022,13,0.32,14,0.004,15,0.152,22,0.132,76,3.306,114,0.502,145,2.041,172,0.003,173,0.003,312,3.597,324,6.278,380,3.224,381,2.484,383,3.155,901,5.056,971,4.321,2523,4.901,2524,6.133,2525,4.68,2526,5.47,2527,6.075,2528,4.605,2529,6.934,2530,5.96,2531,4.901,2532,5.696,2533,3.296,2534,3.296,2535,4.901]],["title/interfaces/IDashboardModelProperties.html",[0,0.538,1476,3.846]],["body/interfaces/IDashboardModelProperties.html",[0,0.767,2,1.583,3,0.088,4,0.073,5,0.054,8,0.231,9,0.798,10,2.066,12,0.899,13,0.265,14,0.005,15,0.224,22,0.126,31,0.178,33,1.542,37,2.371,69,1.088,76,2.614,123,2.345,145,2.191,149,1.36,172,0.003,173,0.003,181,2.977,190,0.61,205,2.376,316,1.414,348,3.12,354,2.787,355,1.791,356,1.564,357,2.472,360,2.988,502,2.234,506,2.387,510,2.853,518,2.811,520,1.799,581,2.345,660,3.369,675,2.472,747,1.953,904,3.718,915,2.777,940,2.99,1032,2.838,1120,2.97,1245,4.874,1364,4.481,1365,3.759,1449,6.057,1450,4.314,1451,6.6,1452,6.6,1453,5.671,1454,4.314,1455,5.032,1457,4.314,1458,4.314,1463,3.623,1464,3.915,1465,4.314,1466,5.483,1467,4.687,1468,4.314,1469,5.775,1470,4.314,1471,4.314,1472,4.314,1473,4.314,1474,4.314,1475,4.096,1476,6.18,1477,5.882,1478,4.314,1479,3.759,1480,4.314,1481,4.314,1482,4.314,1483,4.314,1484,4.314]],["title/interfaces/IDashboardRepo.html",[0,0.538,1651,4.051]],["body/interfaces/IDashboardRepo.html",[0,0.564,2,1.557,3,0.087,4,0.072,5,0.053,8,0.227,10,1.525,13,0.263,14,0.005,15,0.214,18,1.376,19,0.955,22,0.103,31,0.176,71,2.32,74,2.472,76,3.126,77,2.725,78,1.336,114,0.661,128,1.697,129,2.853,145,1.187,149,0.999,172,0.003,173,0.003,182,1.36,187,0.651,189,1.148,190,0.682,199,1.52,211,2.523,308,3.292,316,0.922,328,1.332,348,3.07,355,1.317,357,2.432,370,1.949,397,3.446,513,2.855,532,3.698,538,5.183,544,3.842,546,2.676,548,3.851,554,5.858,564,4.245,942,2.993,1074,3.07,1245,4.992,1279,6.025,1317,4.637,1467,3.446,1543,5.183,1565,6.074,1630,4.514,1634,4.03,1635,4.514,1636,6.558,1637,6.074,1638,3.851,1640,7.412,1642,6.865,1646,4.874,1647,4.514,1648,6.074,1649,4.514,1650,4.514,1651,6.456,1652,4.874,1653,6.558,1654,4.874,1655,6.558,1656,4.874,1657,7.412,1658,4.874,1659,6.558,1660,4.874,1661,4.874,2536,5.42,2537,5.42,2538,5.42]],["title/interfaces/IErrorType.html",[0,0.538,820,4.051]],["body/interfaces/IErrorType.html",[0,0.789,2,2.18,3,0.121,4,0.101,5,0.074,8,0.318,9,0.978,12,1,13,0.333,14,0.004,22,0.108,71,3.066,172,0.004,173,0.004,181,3.346,209,7.418,820,7.071,2539,7.587,2540,7.587]],["title/interfaces/IFileProperties.html",[0,0.538,507,3.846]],["body/interfaces/IFileProperties.html",[0,0.611,2,1.688,3,0.094,4,0.078,5,0.075,8,0.246,9,0.833,12,0.946,13,0.315,14,0.005,15,0.221,22,0.129,31,0.207,33,1.794,123,2.447,145,2.069,172,0.003,173,0.003,190,0.753,205,1.893,316,1.549,354,3.044,355,1.427,356,1.667,360,2.766,381,2.822,493,5.855,494,4.601,495,4.4,496,7.027,497,6.026,500,1.869,502,2.382,503,2.206,504,5.949,505,4.601,506,2.545,507,6.38,508,6.716,509,6.716,510,3.32,511,4.326,512,3.619,513,4.053,514,4.892,515,3.864,516,2.933,517,4.601,518,2.239,519,4.601,520,1.919,521,4.601,522,4.601,523,4.601,524,4.601,525,4.601,526,4.601,527,4.601,528,4.601,529,4.601,530,3.619,531,3.327]],["title/interfaces/IFindOptions.html",[0,0.538,1150,3.402]],["body/interfaces/IFindOptions.html",[0,0.918,2,2.099,3,0.117,4,0.097,5,0.071,8,0.306,9,0.956,13,0.302,14,0.004,22,0.14,37,2.357,172,0.004,173,0.004,190,0.815,430,4.369,992,3.939,993,3.684,1095,3.279,1150,5.805,1174,5.441,1175,5.58,1211,4.805,1950,6.563,2541,5.722,2542,5.722,2543,8.205,2544,7.716,2545,7.351]],["title/interfaces/IGridElement.html",[0,0.538,1314,4.051]],["body/interfaces/IGridElement.html",[0,0.291,2,0.802,3,0.045,4,0.037,5,0.027,8,0.292,9,0.484,10,1.555,12,0.878,13,0.279,14,0.005,15,0.135,19,0.492,22,0.115,31,0.108,35,2.564,37,2.508,76,1.583,78,1.42,114,0.512,128,1.707,143,3.438,148,2.377,149,1.496,168,3.912,172,0.002,173,0.002,181,2.62,182,0.833,187,0.617,189,0.888,190,0.528,199,1.44,308,2.862,386,1.421,405,2.395,419,3.612,467,1.471,477,2.671,500,2.366,520,0.912,577,2.252,578,2.408,640,3.285,660,3.187,675,2.862,747,2.261,916,6.547,917,2.077,918,2.937,942,1.542,1072,2.839,1074,3.612,1075,5.131,1083,2.187,1116,3.086,1123,2.937,1127,1.72,1255,3.814,1279,1.775,1280,2.077,1281,2.326,1283,2.326,1286,2.326,1287,2.187,1288,6.195,1290,2.326,1297,3.498,1300,3.048,1304,2.326,1307,2.326,1310,2.326,1311,5.531,1313,4.296,1314,6.72,1317,4.054,1319,2.326,1320,5.186,1323,2.326,1325,4.371,1326,2.326,1328,2.326,1330,2.326,1332,2.326,1334,2.326,1337,2.326,1339,1.837,1340,2.187,1341,2.077,1342,3.498,1343,1.906,1344,5.808,1345,5.311,1346,3.498,1347,5.808,1348,4.648,1349,3.72,1350,5.808,1351,3.72,1352,4.648,1353,2.326,1354,4.434,1355,3.174,1356,6.341,1357,2.326,1358,1.906,1359,3.72,1360,2.326,1361,3.72,1362,2.326,1363,3.009,1364,4.626,1365,3.048,1366,3.72,1367,2.326,1368,2.326,1369,2.326,1370,2.326,1371,2.326,1372,3.72,1373,2.326,1374,3.72,1375,2.187,1376,3.72,1377,2.326,1378,1.985,1379,3.72,1380,2.326,1381,2.326,1382,2.326,1383,3.72,1384,2.077,1385,2.326,1386,3.72,1387,5.808,1388,2.326,1389,1.837,1390,2.326,1391,2.326,1392,2.326,1393,2.326,1394,2.326,1395,2.326,1396,2.326,1397,3.498,1398,2.187,1399,2.326,1400,2.326,1401,3.72,1402,3.72,1403,2.187,1404,4.648,1405,2.326,1406,3.72,1407,2.326,1408,2.326,1409,2.326,1410,2.326,1411,2.326,1412,2.326,1413,2.326,1414,2.326,1415,2.326,1416,2.326,1417,2.326,1418,2.326,1419,2.326,1420,2.326,1421,2.326,1422,2.326,1423,2.326,1424,2.326,1425,2.326,1426,2.326,1427,2.326,1428,2.326,1429,2.326,1430,2.326,1431,2.326,1432,3.72,1433,2.326,1434,2.326,1435,2.326,1436,3.72,1437,2.937,1438,3.72,1439,2.326,1440,2.326,1441,2.326,1442,2.326,1443,2.326,1444,2.326,1445,2.326,1446,4.648,1447,2.326,1448,2.326,2483,4.016,2488,4.016,2489,4.016,2490,4.016,2497,2.511,2546,2.793,2547,2.793,2548,2.793,2549,2.793,2550,2.793,2551,2.793,2552,2.793]],["title/interfaces/IImportUserProperties.html",[0,0.538,2553,4.051]],["body/interfaces/IImportUserProperties.html",[0,0.44,2,1.214,3,0.067,4,0.056,5,0.041,8,0.177,9,0.781,12,0.996,13,0.316,14,0.005,15,0.203,22,0.119,31,0.174,33,1.282,54,1.831,76,1.498,78,0.596,121,5.402,123,2.873,145,1.579,172,0.003,173,0.003,190,0.766,205,1.975,316,1.227,354,2.961,355,1.027,356,1.2,360,2.593,370,2.204,421,2.177,477,2.567,500,2.294,502,2.924,503,1.587,506,1.831,516,1.611,518,2.749,520,2.001,888,3.597,921,2.458,940,1.714,947,2.687,1095,3.768,1116,2.045,1364,2.278,1453,4.921,1455,4.182,1479,2.884,1832,4.637,1868,4.934,2525,2.006,2533,4.423,2534,4.423,2553,5.648,2554,3.31,2555,3.31,2556,6.244,2557,6.576,2558,6.993,2559,6.993,2560,6.244,2561,6.717,2562,6.576,2563,5.104,2564,4.8,2565,3.52,2566,2.458,2567,3.31,2568,3.31,2569,5.104,2570,3.52,2571,3.52,2572,3.52,2573,6.005,2574,5.104,2575,3.52,2576,4.8,2577,4.182,2578,3.003,2579,4.442,2580,3.471,2581,3.775,2582,3.52,2583,3.31,2584,3.31,2585,4.8,2586,4.355,2587,5.104,2588,3.31,2589,3.52,2590,3.52,2591,3.52,2592,3.52,2593,3.52,2594,3.52,2595,3.52,2596,2.687,2597,2.78,2598,2.687,2599,2.78,2600,3.143,2601,3.143,2602,3.52,2603,3.52,2604,3.52,2605,3.52,2606,3.52,2607,3.52,2608,4.557,2609,3.143,2610,5.104,2611,3.52]],["title/interfaces/ILearnroom.html",[0,0.538,916,3.402]],["body/interfaces/ILearnroom.html",[0,0.817,2,2.256,3,0.125,4,0.104,5,0.077,8,0.329,9,0.998,13,0.25,14,0.004,15,0.19,22,0.111,172,0.004,173,0.004,419,5.219,916,6.06,918,6.06,1341,5.839,2612,7.853,2613,10.089]],["title/interfaces/ILessonProperties.html",[0,0.538,2614,4.051]],["body/interfaces/ILessonProperties.html",[0,0.69,2,1.905,3,0.106,4,0.088,5,0.065,8,0.38,9,0.9,12,0.899,13,0.304,14,0.005,15,0.22,22,0.118,31,0.16,33,1.386,114,0.803,172,0.003,173,0.003,190,0.688,205,2.136,316,1.415,354,2.852,355,1.61,356,1.881,360,2.989,500,2.889,502,2.688,503,2.489,516,2.527,518,2.527,520,2.165,581,3.319,584,3.145,608,3.964,634,5.417,661,3.086,668,4.71,747,2.35,940,2.688,944,3.661,1028,3.754,1029,3.964,1032,3.415,1035,4.359,1036,4.359,2614,7.114,2615,5.96,2616,5.52,2617,7.475]],["title/interfaces/ILogger.html",[0,0.538,2380,3.676]],["body/interfaces/ILogger.html",[0,0.662,2,1.829,3,0.102,4,0.085,5,0.062,8,0.267,12,1.01,13,0.309,14,0.004,22,0.09,34,3.772,84,5.488,114,0.778,172,0.003,173,0.003,182,1.511,187,0.765,189,1.35,190,0.851,199,1.787,438,4.219,2047,6.173,2380,5.758,2618,6.365,2619,6.025,2620,5.758,2621,8.103,2622,8.103,2623,6.365,2624,6.365,2625,7.286,2626,7.424,2627,6.365,2628,7.286,2629,6.365,2630,6.365,2631,6.365,2632,7.286,2633,6.365,2634,5.723,2635,5.723]],["title/interfaces/INewsProperties.html",[0,0.538,1100,3.676]],["body/interfaces/INewsProperties.html",[0,0.424,2,1.172,3,0.065,4,0.115,5,0.04,8,0.171,9,0.647,10,0.853,12,0.955,13,0.316,14,0.005,15,0.222,22,0.117,31,0.187,33,1.626,43,3.228,44,3.289,45,2.959,46,3.114,47,3.289,48,3.808,78,0.575,114,0.479,123,1.297,145,2.046,149,1.303,172,0.002,173,0.002,181,2.901,190,0.758,205,1.314,308,3.102,309,3.921,310,3.639,312,1.83,316,1.408,331,2.898,354,2.805,355,0.991,356,1.157,360,2.147,367,3.639,372,2.911,381,2.41,405,1.531,467,2.148,495,4.026,502,1.654,503,1.531,506,1.767,510,2.311,512,2.512,513,3.145,514,4.491,518,2.693,520,1.332,531,2.309,581,1.899,592,3.812,670,2.438,675,1.83,888,3.658,900,3.796,901,2.056,920,2.309,921,2.371,948,2.592,1028,2.309,1032,2.101,1091,2.592,1092,3.032,1093,4.597,1095,2.679,1096,3.01,1097,3.032,1098,5.262,1099,3.032,1100,5.526,1101,4.462,1102,6.155,1103,4.65,1104,4.944,1105,5.443,1106,5.688,1107,4.405,1108,2.782,1109,3.032,1110,3.796,1111,3.032,1112,3.032,1113,2.252,1114,2.782,1115,2.898,1116,1.973,1117,2.782,1118,2.592,1119,2.898,1120,3.219,1121,2.592,1122,3.032,1123,2.682,1124,3.032,1125,2.782,1126,3.032,1127,2.512,1128,3.032,1129,3.032,1130,3.032,1131,3.032,1132,2.782,1133,3.032,1134,2.782,1135,3.032,1136,3.032,1137,4.44,1138,4.225,1139,3.032,1140,4.44,1141,3.032,1142,3.032,1143,2.682,1144,2.682,1145,3.032]],["title/interfaces/INewsScope.html",[0,0.538,2521,3.846]],["body/interfaces/INewsScope.html",[0,1.026,2,1.802,3,0.1,4,0.083,5,0.061,8,0.263,9,0.869,10,1.311,12,0.758,13,0.327,14,0.005,15,0.226,22,0.137,172,0.003,173,0.003,181,2.103,190,0.816,216,1.578,308,2.891,309,4.046,310,4.56,311,5.748,316,1.067,381,1.943,411,4.326,430,3.749,500,2.815,581,2.815,592,2.764,888,3.324,941,3.551,1093,4.668,1095,2.813,1096,4.463,1098,3.986,1101,3.38,1107,4.35,2510,4.662,2511,4.91,2512,5.638,2513,5.638,2514,5.638,2515,5.638,2516,4.455,2517,4.455,2518,4.455,2519,4.662,2520,7.216,2521,5.968,2522,6.368]],["title/interfaces/IPagination.html",[0,0.538,2544,4.051]],["body/interfaces/IPagination.html",[0,0.918,2,2.099,3,0.117,4,0.097,5,0.071,8,0.306,9,0.956,13,0.302,14,0.004,22,0.14,37,2.737,172,0.004,173,0.004,190,0.815,430,4.369,992,5.311,993,4.967,1095,3.279,1150,4.805,1174,4.035,1175,4.138,1211,4.805,1950,6.563,2541,5.722,2542,5.722,2543,7.351,2544,7.428,2545,7.351]],["title/interfaces/IResolvedUser.html",[0,0.538,2529,3.846]],["body/interfaces/IResolvedUser.html",[0,0.914,2,1.772,3,0.098,4,0.082,5,0.06,8,0.258,9,0.86,10,2.09,12,1.02,13,0.329,14,0.005,15,0.149,22,0.132,76,2.186,114,0.495,145,1.35,172,0.003,173,0.003,312,4.306,324,4.829,380,4.777,381,3.045,383,4.676,901,4.953,971,3.324,2523,4.829,2524,4.055,2525,4.662,2526,4.208,2527,5.409,2528,4.337,2529,6.53,2530,4.585,2531,4.829,2532,6.59,2533,4.885,2534,4.885,2535,4.829]],["title/interfaces/IRole.html",[0,0.538,2532,3.676]],["body/interfaces/IRole.html",[0,0.948,2,1.92,3,0.107,4,0.089,5,0.065,8,0.28,9,0.905,10,2.128,12,1.017,13,0.304,14,0.004,15,0.162,22,0.135,76,2.368,114,0.766,145,1.463,172,0.003,173,0.003,312,3.749,324,5.233,380,3.442,381,2.589,383,3.369,901,4.596,971,3.602,2523,5.233,2524,4.394,2525,4.326,2526,4.559,2527,5.615,2528,4.501,2529,6.212,2530,4.968,2531,5.233,2532,6.478,2533,3.519,2534,3.519,2535,5.233]],["title/interfaces/IRoleProperties.html",[0,0.538,2636,4.308]],["body/interfaces/IRoleProperties.html",[0,0.647,2,1.788,3,0.099,4,0.083,5,0.061,8,0.369,9,0.865,12,0.958,13,0.297,14,0.005,15,0.194,22,0.113,31,0.15,33,1.301,114,0.79,149,1.627,172,0.003,173,0.003,190,0.77,205,2.006,312,4.319,316,1.501,354,2.769,355,1.512,356,1.766,360,2.872,370,2.237,419,3.525,452,3.722,503,2.337,510,2.408,518,2.372,520,2.032,661,2.897,684,4.247,904,4.447,915,4.447,940,2.524,944,3.437,1095,3.584,1113,3.437,1241,3.138,1358,4.247,2119,5.676,2473,4.422,2525,4.902,2528,4.863,2636,7.346,2637,5.596,2638,5.596,2639,4.093,2640,4.874,2641,7.182,2642,4.874,2643,5.596,2644,4.874]],["title/interfaces/ISchoolProperties.html",[0,0.538,2645,4.308]],["body/interfaces/ISchoolProperties.html",[0,0.768,2,2.122,3,0.118,4,0.098,5,0.072,8,0.309,9,0.962,12,0.934,13,0.235,14,0.004,15,0.215,22,0.126,31,0.178,33,1.545,114,0.812,172,0.004,173,0.004,205,2.38,316,1.512,345,5.648,354,2.79,355,1.795,356,2.096,503,2.774,520,2.412,661,3.439,888,2.774,940,2.995,944,4.079,2516,5.249,2645,7.936,2646,6.642]],["title/interfaces/IStorageProviderProperties.html",[0,0.538,2647,4.308]],["body/interfaces/IStorageProviderProperties.html",[0,0.683,2,1.886,3,0.105,4,0.087,5,0.064,8,0.275,9,0.895,12,1.009,13,0.312,14,0.004,15,0.219,22,0.117,31,0.158,33,1.373,172,0.003,173,0.003,190,0.684,205,2.115,316,1.406,354,3.071,355,1.595,356,1.863,360,2.971,503,2.465,504,3.817,518,2.502,520,2.143,940,2.662,2058,6.471,2235,8.145,2239,7.66,2241,7.82,2647,7.53,2648,5.902,2649,8.145,2650,5.902,2651,5.902,2652,5.902,2653,5.902,2654,5.902,2655,5.902,2656,5.902,2657,5.902,2658,5.902,2659,5.902]],["title/interfaces/ISubmissionProperties.html",[0,0.538,2660,4.051]],["body/interfaces/ISubmissionProperties.html",[0,0.487,2,1.345,3,0.075,4,0.062,5,0.093,8,0.196,9,0.714,12,0.912,13,0.321,14,0.005,15,0.226,22,0.093,31,0.113,33,0.979,37,2.332,78,0.929,128,1.122,145,2.081,149,1.407,172,0.003,173,0.003,190,0.827,205,1.508,308,2.153,316,1.122,354,2.601,355,1.137,356,1.328,360,2.37,467,2.465,477,3.197,500,1.489,502,1.898,503,1.757,506,2.028,510,1.811,518,3.454,520,1.528,582,4.171,747,2.937,904,3.848,905,2.883,915,2.359,920,2.651,940,1.898,1026,6.574,1120,2.523,1127,2.883,1437,4.335,2163,4.823,2580,5.131,2581,2.883,2660,5.977,2661,4.208,2662,6.84,2663,7.853,2664,7.273,2665,8.371,2666,8.371,2667,7.916,2668,4.208,2669,4.208,2670,4.208,2671,3.078,2672,2.883,2673,4.208,2674,4.208,2675,4.208,2676,4.208,2677,4.208,2678,5.928,2679,5.928,2680,4.208,2681,4.208,2682,4.208,2683,4.208,2684,4.208,2685,4.208,2686,3.326,2687,4.208,2688,6.862,2689,4.208,2690,5.928,2691,4.208,2692,5.423,2693,4.208,2694,4.208,2695,4.208,2696,4.208,2697,4.208]],["title/interfaces/ITaskProperties.html",[0,0.538,2698,3.676]],["body/interfaces/ITaskProperties.html",[0,0.518,2,0.92,3,0.051,4,0.043,5,0.031,8,0.288,9,0.661,10,0.67,12,0.777,13,0.302,14,0.005,15,0.199,22,0.106,31,0.12,33,0.67,35,2.445,37,2.106,54,1.388,78,1.32,82,3.832,114,0.717,123,1.019,128,1.731,145,2.049,148,1.364,149,1.374,172,0.002,173,0.002,187,0.253,190,0.798,205,1.032,216,1.536,308,1.993,316,0.847,354,2.339,355,0.778,356,0.909,360,1.789,370,2.194,372,1.32,377,1.863,381,2.637,394,2.683,477,2.556,495,3.469,500,2.841,502,1.299,503,1.203,506,1.388,510,1.239,516,1.897,518,2.623,520,1.046,530,1.973,531,1.814,581,2.841,582,3.506,583,1.973,584,4.238,661,1.491,664,1.973,665,4.22,666,4.467,683,3.143,747,2.163,765,4.9,771,5.382,772,5.382,773,5.596,774,5.295,775,5.604,785,3.536,904,2.509,905,1.973,915,1.615,924,2.276,934,2.276,936,2.186,940,1.299,944,1.769,963,4.9,1028,1.814,1029,1.915,1032,1.65,1035,4.525,1036,2.106,1047,3.897,1080,2.276,1120,1.727,1222,2.106,1363,3.29,1463,2.106,1706,2.408,2004,5.07,2163,1.769,2294,2.276,2639,2.106,2671,5.413,2672,4.589,2686,2.276,2692,3.536,2698,4.336,2699,2.382,2700,2.508,2701,2.508,2702,2.508,2703,2.508,2704,4.537,2705,2.508,2706,2.508,2707,2.382,2708,2.508,2709,2.508,2710,2.508,2711,2.508,2712,2.508,2713,2.508,2714,2.508,2715,2.508,2716,2.508,2717,3.897,2718,3.897,2719,3.897,2720,2.508,2721,2.508,2722,2.508,2723,2.508,2724,2.508,2725,2.508,2726,2.508,2727,2.508,2728,2.508,2729,2.276,2730,2.508,2731,2.508,2732,3.897,2733,2.508,2734,3.897,2735,3.897,2736,2.508,2737,2.508,2738,2.508,2739,2.508,2740,2.508,2741,3.897,2742,2.508,2743,2.508,2744,2.508,2745,2.508,2746,3.897,2747,2.508,2748,2.508,2749,2.508,2750,2.508,2751,2.508,2752,5.116,2753,2.508,2754,2.508,2755,2.508,2756,2.276,2757,2.276,2758,3.897,2759,2.508,2760,2.508,2761,2.508,2762,2.508,2763,2.508,2764,3.897,2765,1.915,2766,2.276,2767,2.508,2768,2.508,2769,2.508,2770,2.508,2771,2.508,2772,3.897,2773,3.163,2774,2.508,2775,2.508,2776,2.508,2777,3.897,2778,2.508,2779,2.508,2780,2.508,2781,2.508,2782,1.915,2783,1.727,2784,3.7,2785,2.508,2786,5.389,2787,2.508,2788,2.508,2789,2.508]],["title/interfaces/ITaskStatus.html",[0,0.538,765,3.402]],["body/interfaces/ITaskStatus.html",[0,0.532,2,0.954,3,0.053,4,0.044,5,0.032,8,0.294,9,0.676,10,0.694,12,0.715,13,0.293,14,0.005,15,0.202,22,0.107,31,0.123,33,0.694,35,2.177,37,2.488,54,1.438,78,1.33,82,3.882,114,0.669,123,1.056,128,1.739,145,1.934,148,1.414,149,1.397,172,0.002,173,0.002,187,0.262,205,1.07,216,1.571,308,2.038,316,0.871,354,2.378,355,0.807,356,0.942,360,1.839,370,2.244,372,1.368,377,1.931,381,2.174,394,2.758,477,2.615,495,2.382,500,3.034,502,1.346,503,1.247,506,1.438,510,1.285,516,1.95,518,2.673,520,1.084,530,2.045,531,1.88,581,2.409,582,3.552,583,2.045,584,3.594,661,1.546,664,2.045,665,2.898,666,3.535,683,3.215,747,2.212,765,5.263,771,6.027,772,6.027,773,6.037,774,6.118,775,6.277,785,3.636,904,2.579,905,2.045,915,1.674,924,2.359,934,2.359,936,2.265,940,1.346,944,1.833,963,5.662,1028,1.88,1029,1.985,1032,1.71,1035,4.612,1036,2.183,1047,3.972,1080,2.359,1120,1.79,1222,2.183,1363,3.365,1463,2.183,1706,2.476,2004,4.32,2163,1.833,2294,2.359,2639,2.183,2671,4.612,2672,3.845,2686,2.359,2692,3.636,2698,3.636,2699,2.469,2700,2.6,2701,2.6,2702,2.6,2703,2.6,2704,4.641,2705,2.6,2706,2.6,2707,2.469,2708,2.6,2709,2.6,2710,2.6,2711,2.6,2712,2.6,2713,2.6,2714,2.6,2715,2.6,2716,2.6,2717,4.007,2718,4.007,2719,4.007,2720,2.6,2721,2.6,2722,2.6,2723,2.6,2724,2.6,2725,2.6,2726,2.6,2727,2.6,2728,2.6,2729,2.359,2730,2.6,2731,2.6,2732,4.007,2733,2.6,2734,4.007,2735,4.007,2736,2.6,2737,2.6,2738,2.6,2739,2.6,2740,2.6,2741,4.007,2742,2.6,2743,2.6,2744,2.6,2745,2.6,2746,4.007,2747,2.6,2748,2.6,2749,2.6,2750,2.6,2751,2.6,2752,5.215,2753,2.6,2754,2.6,2755,2.6,2756,2.359,2757,2.359,2758,4.007,2759,2.6,2760,2.6,2761,2.6,2762,2.6,2763,2.6,2764,4.007,2765,1.985,2766,2.359,2767,2.6,2768,2.6,2769,2.6,2770,2.6,2771,2.6,2772,4.007,2773,3.252,2774,2.6,2775,2.6,2776,2.6,2777,4.007,2778,2.6,2779,2.6,2780,2.6,2781,2.6,2782,1.985,2783,1.79,2784,3.804,2785,2.6,2786,5.493,2787,2.6,2788,2.6,2789,2.6]],["title/interfaces/ITeamProperties.html",[0,0.538,2790,4.308]],["body/interfaces/ITeamProperties.html",[0,0.768,2,2.122,3,0.118,4,0.098,5,0.072,8,0.309,9,0.962,12,0.934,13,0.235,14,0.004,15,0.215,22,0.126,31,0.178,33,1.545,114,0.812,172,0.004,173,0.004,205,2.38,316,1.512,345,5.648,354,2.79,355,1.795,356,2.096,503,2.774,520,2.412,661,3.439,940,2.995,944,4.079,1096,3.724,2517,5.249,2790,7.936,2791,6.642]],["title/interfaces/IUserProperties.html",[0,0.538,2792,4.308]],["body/interfaces/IUserProperties.html",[0,0.626,2,1.731,3,0.096,4,0.08,5,0.059,8,0.399,9,0.847,12,0.983,13,0.317,14,0.005,15,0.223,22,0.111,31,0.145,33,1.259,114,0.697,121,5.696,145,1.318,149,1.111,172,0.003,173,0.003,190,0.761,205,1.941,316,1.331,354,2.886,355,1.463,356,1.709,360,2.811,502,2.442,503,2.262,510,2.331,518,2.981,520,1.967,747,2.135,888,3.858,900,3.829,901,3.036,904,3.036,915,3.036,921,3.502,940,2.442,947,3.829,948,3.829,2119,5.557,2525,4.632,2527,3.71,2528,4.539,2533,5.018,2534,5.018,2596,3.829,2597,3.961,2598,3.829,2599,3.961,2600,4.478,2601,4.478,2640,4.717,2644,4.717,2792,7.232,2793,5.415,2794,5.415,2795,5.415,2796,5.415,2797,5.415]],["title/entities/ImportUser.html",[316,0.88,2586,3.676]],["body/entities/ImportUser.html",[0,0.404,3,0.062,4,0.052,5,0.056,8,0.162,9,0.743,12,0.973,13,0.307,14,0.005,15,0.197,22,0.115,31,0.165,33,1.204,54,1.681,76,1.375,78,0.547,121,5.08,123,3.067,145,1.502,172,0.002,173,0.002,187,0.752,190,0.476,205,1.855,316,1.168,323,1.218,349,2.183,354,3.133,355,0.943,356,1.101,360,2.467,370,2.467,385,2.073,386,2.183,421,2.965,477,2.411,500,1.234,502,2.783,503,1.457,506,1.681,516,2.194,518,2.616,520,1.88,539,2.044,888,3.302,921,2.256,940,1.573,947,2.466,1095,3.639,1116,1.878,1166,2.32,1364,2.092,1453,5.533,1455,5.18,1479,2.648,1832,4.193,1868,4.53,2525,2.731,2533,3.999,2534,3.999,2553,4.508,2554,7.551,2555,3.039,2556,5.645,2557,5.946,2558,6.322,2559,6.322,2560,5.645,2561,6.539,2562,5.946,2563,4.794,2564,4.508,2565,3.231,2566,2.256,2567,3.039,2568,3.039,2569,4.794,2570,3.231,2571,3.231,2572,3.231,2573,5.715,2574,4.794,2575,3.231,2576,4.508,2577,3.928,2578,2.757,2579,4.227,2580,3.26,2581,3.546,2582,3.231,2583,3.039,2584,3.039,2585,4.508,2586,4.877,2587,6.322,2588,3.039,2589,3.231,2590,3.231,2591,3.231,2592,3.231,2593,3.231,2594,3.231,2595,3.231,2596,2.466,2597,2.552,2598,2.466,2599,2.552,2600,2.885,2601,2.885,2602,3.231,2603,3.231,2604,3.231,2605,3.231,2606,3.231,2607,3.231,2608,4.28,2609,2.885,2610,4.794,2611,3.231,2798,3.88,2799,3.88,2800,3.88,2801,3.88,2802,3.88,2803,3.88,2804,3.88,2805,3.88,2806,3.88,2807,3.489,2808,3.88,2809,5.756,2810,3.88,2811,3.88,2812,3.231,2813,3.039,2814,2.466]],["title/controllers/ImportUserController.html",[964,2.167,2815,4.308]],["body/controllers/ImportUserController.html",[3,0.086,4,0.071,5,0.071,8,0.224,12,0.892,13,0.261,14,0.005,15,0.241,19,0.944,22,0.076,31,0.129,77,2.554,114,0.658,127,4.602,145,1.173,148,3.491,149,1.511,172,0.003,173,0.003,182,1.35,187,0.647,189,1.142,190,0.678,199,1.511,328,1.317,330,2.495,349,1.879,370,3.156,406,4.222,539,2.823,654,1.847,656,2.593,964,2.245,966,2.405,968,3.205,971,5.423,972,5.58,974,6.299,975,3.816,976,3.525,977,3.407,978,3.525,985,3.525,1157,3.816,1166,3.205,1174,4.527,1259,4.463,1260,5.391,1270,5.669,1925,3.657,2193,7.31,2812,4.463,2813,4.197,2814,3.407,2815,6.028,2816,5.772,2817,8.777,2818,5.36,2819,5.36,2820,5.825,2821,8.197,2822,8.197,2823,4.463,2824,7.31,2825,5.36,2826,5.36,2827,7.239,2828,5.36,2829,7.31,2830,5.36,2831,7.31,2832,7.239,2833,5.36,2834,7.239,2835,5.36,2836,4.197,2837,5.36,2838,5.36,2839,5.36,2840,3.985,2841,5.36,2842,4.463,2843,4.819,2844,5.36]],["title/classes/ImportUserFilterQuery.html",[31,0.125,2824,4.308]],["body/classes/ImportUserFilterQuery.html",[3,0.097,4,0.081,5,0.06,8,0.255,9,0.854,12,0.925,13,0.305,14,0.004,15,0.191,22,0.112,31,0.19,145,2.144,172,0.003,173,0.003,175,1.382,187,0.755,190,0.852,349,2.192,500,2.508,653,4.939,654,2.102,1095,3.538,1239,6.961,1240,6.302,1241,3.075,1832,4.825,2533,4.602,2534,4.602,2557,6.842,2577,5.38,2578,4.334,2579,3.757,2816,6.442,2824,6.566,2845,7.672,2846,4.777,2847,6.842,2848,8.737,2849,6.099,2850,6.099,2851,6.099,2852,6.099,2853,6.099,2854,8.305,2855,6.099,2856,6.099,2857,6.099,2858,7.089,2859,6.099,2860,9.236,2861,7.089,2862,6.099]],["title/classes/ImportUserListResponse.html",[31,0.125,2836,4.051]],["body/classes/ImportUserListResponse.html",[3,0.08,4,0.067,5,0.049,8,0.211,9,0.751,10,1.052,12,0.847,13,0.295,14,0.005,15,0.225,22,0.098,31,0.191,33,1.45,37,2.754,69,0.993,114,0.556,145,2.079,172,0.003,173,0.003,175,1.571,187,0.708,189,0.701,190,0.742,192,4.404,216,2.39,320,2.536,349,1.96,438,2.953,520,1.643,652,3.924,653,3.495,654,1.734,656,2.434,680,2.434,681,2.536,682,2.536,746,5.622,747,1.783,888,1.889,987,4.952,992,4.997,993,4.673,1064,5.85,1065,3.756,1066,4.559,1069,3.94,1070,3.94,1071,3.94,1081,3.308,1082,3.308,1095,2.257,1116,2.434,1240,5.833,1241,2.536,1832,2.778,1835,3.098,1868,4.404,2163,2.778,2265,4.926,2525,2.387,2526,3.433,2528,2.484,2533,3.652,2534,3.652,2556,3.74,2560,3.74,2566,5.214,2579,3.098,2580,2.849,2581,3.098,2596,3.198,2597,3.308,2598,3.198,2599,3.308,2608,5.155,2609,3.74,2816,4.559,2829,4.189,2836,5.429,2840,5.155,2842,4.189,2845,5.429,2847,3.94,2863,4.523,2864,8.058,2865,5.03,2866,5.03,2867,5.155,2868,6.606,2869,4.523,2870,4.523,2871,4.523,2872,4.189,2873,4.189,2874,4.523,2875,4.523,2876,4.523,2877,4.523,2878,3.74,2879,4.523,2880,4.523,2881,3.575]],["title/modules/ImportUserModule.html",[257,1.382,2882,3.53]],["body/modules/ImportUserModule.html",[3,0.108,4,0.09,5,0.066,14,0.005,15,0.233,19,1.196,22,0.096,31,0.164,145,1.486,172,0.004,173,0.004,257,2.452,259,2.627,260,3.72,268,4.167,269,3.161,270,2.892,272,2.844,273,3.72,286,6.871,295,3.352,323,2.132,867,6.203,966,3.787,1364,3.66,1602,3.948,1868,3.497,1977,3.497,1995,4.465,2463,4.825,2527,4.182,2566,3.948,2586,4.825,2815,7.647,2816,4.465,2882,7.041,2883,6.105,2884,6.789,2885,5.654,2886,6.789,2887,6.105,2888,6.789,2889,6.789,2890,6.789,2891,6.105,2892,5.654,2893,6.105,2894,4.825,2895,5.654]],["title/classes/ImportUserResponse.html",[31,0.125,2864,4.308]],["body/classes/ImportUserResponse.html",[3,0.074,4,0.062,5,0.046,8,0.195,9,0.712,10,1.374,12,0.924,13,0.308,14,0.005,15,0.225,22,0.093,31,0.183,33,0.975,37,2.034,69,0.92,114,0.611,145,2.204,172,0.003,173,0.003,175,1.725,187,0.75,189,0.649,190,0.63,216,2.389,320,3.314,349,2.131,467,2.455,520,2.146,648,3.822,652,3.85,653,3.314,654,1.607,656,2.255,680,2.255,681,3.314,682,3.314,888,1.75,987,2.574,992,3.543,993,3.314,1064,4.049,1065,2.753,1066,3.065,1081,3.065,1082,3.065,1095,2.949,1116,3.181,1219,6.341,1240,5.643,1241,2.35,1832,4.205,1835,4.049,1868,4.79,2163,2.574,2265,5.876,2525,3.119,2526,4.485,2528,2.301,2533,4.593,2534,4.593,2556,5.662,2560,5.662,2566,5.69,2579,4.049,2580,3.723,2581,4.049,2596,2.963,2597,3.065,2598,2.963,2599,3.065,2608,4.887,2609,3.465,2816,6.349,2829,6.341,2836,3.65,2840,5.662,2842,3.881,2845,7.561,2847,5.963,2863,4.191,2864,7.907,2867,4.887,2868,7.262,2869,4.191,2870,4.191,2871,4.191,2872,3.881,2873,3.881,2874,4.191,2875,4.191,2876,4.191,2877,4.191,2878,4.887,2879,5.91,2880,5.91,2881,4.671,2896,4.661,2897,4.661,2898,4.661,2899,4.661,2900,4.661,2901,4.661,2902,4.661,2903,3.881,2904,4.661,2905,4.661]],["title/interfaces/InlineAttachment.html",[0,0.538,241,3.402]],["body/interfaces/InlineAttachment.html",[0,1.062,2,1.951,3,0.108,4,0.09,5,0.066,8,0.284,9,0.914,12,1.012,13,0.216,14,0.004,22,0.096,33,2.066,114,0.545,172,0.004,173,0.004,235,5.55,236,4.633,237,6.317,238,6.741,239,4.633,240,4.633,241,6.039,242,4.633,243,6.555,244,4.633,245,6.039,246,4.465,247,4.633,248,5.55,249,5.758,250,5.758,251,5.55,252,4.779,253,4.465,254,4.633,255,4.633,256,4.633]],["title/modules/InterceptorModule.html",[257,1.382,866,3.846]],["body/modules/InterceptorModule.html",[3,0.11,4,0.092,5,0.067,14,0.005,15,0.224,19,1.215,22,0.098,31,0.166,54,3.693,172,0.004,173,0.004,216,1.737,224,5.405,257,2.277,259,2.671,272,2.891,369,5.419,370,2.481,437,4.77,539,3.635,866,6.339,880,5.251,881,6.878,886,5.817,1065,3.571,1718,4.957,1899,5.606,1967,4.539,1977,4.391,2112,6.676,2906,6.901,2907,7.099,2908,6.339,2909,5.419,2910,9.661,2911,6.339,2912,7.665,2913,8.045,2914,4.387]],["title/injectables/JwtAuthGuard.html",[18,0.976,2915,4.308]],["body/injectables/JwtAuthGuard.html",[3,0.127,4,0.106,5,0.078,14,0.004,15,0.225,18,1.753,19,1.403,22,0.113,31,0.192,33,1.665,172,0.004,173,0.004,275,6.238,300,2.745,2915,7.737,2916,7.965,2917,7.965,2918,7.965,2919,7.965]],["title/interfaces/JwtConstants.html",[0,0.538,281,3.846]],["body/interfaces/JwtConstants.html",[0,0.711,2,1.963,3,0.109,4,0.091,5,0.067,8,0.286,9,0.917,12,0.984,13,0.307,14,0.004,15,0.166,22,0.12,76,2.421,123,2.173,128,1.441,172,0.004,173,0.004,281,7.158,298,3.869,370,2.456,411,4.566,1602,3.972,2524,5.571,2920,6.142,2921,8.899,2922,8.241,2923,7.617,2924,6.831,2925,6.831,2926,6.142,2927,7.054,2928,5.689,2929,5.35,2930,4.854,2931,6.831,2932,6.142,2933,6.142,2934,6.142,2935,6.831,2936,6.142,2937,5.35,2938,5.35,2939,6.831,2940,6.142,2941,6.831,2942,6.142,2943,6.142,2944,6.831,2945,6.831,2946,6.142,2947,6.142]],["title/interfaces/JwtPayload.html",[0,0.538,2948,4.308]],["body/interfaces/JwtPayload.html",[0,0.699,2,1.931,3,0.107,4,0.089,5,0.066,8,0.281,9,0.908,12,0.998,13,0.32,14,0.005,15,0.163,22,0.095,33,1.754,37,2.683,172,0.003,173,0.003,328,1.652,370,3.441,971,4.928,2932,8.607,2933,8.607,2934,8.607,2936,8.607,2937,7.496,2938,7.496,2942,7.541,2943,7.541,2948,6.984,2949,6.722,2950,6.722,2951,7.541]],["title/injectables/JwtStrategy.html",[18,0.976,265,4.051]],["body/injectables/JwtStrategy.html",[3,0.096,4,0.08,5,0.059,8,0.253,13,0.25,14,0.005,15,0.241,18,1.477,19,1.063,22,0.086,31,0.145,33,1.262,35,1.734,69,1.192,71,2.49,74,2.437,76,2.139,77,2.116,78,0.851,114,0.628,128,1.027,129,2.306,145,1.321,148,2.57,149,1.113,172,0.003,173,0.003,182,1.46,187,0.618,189,1.091,190,0.648,199,1.113,205,1.944,265,6.132,266,7.393,267,5.532,275,4.725,279,3.178,281,4.486,282,5.024,284,5.425,300,2.08,327,4.725,329,2.446,370,2.169,371,4.922,417,3.509,516,2.3,595,4.725,1166,3.608,1906,3.608,2026,4.287,2029,4.486,2030,5.024,2471,5.024,2524,3.968,2528,2.979,2908,5.822,2938,6.132,2948,7.66,2952,6.033,2953,6.033,2954,6.033,2955,7.829,2956,6.033,2957,9.198,2958,6.033,2959,5.024,2960,5.425,2961,6.176,2962,6.033,2963,6.033,2964,6.033,2965,6.033,2966,6.033,2967,6.033,2968,6.033,2969,6.033,2970,6.033,2971,6.033,2972,5.425,2973,6.033,2974,6.033,2975,6.033,2976,6.033]],["title/injectables/JwtValidationAdapter.html",[18,0.976,266,3.846]],["body/injectables/JwtValidationAdapter.html",[3,0.092,4,0.076,5,0.056,8,0.241,10,1.888,12,0.976,13,0.242,14,0.004,15,0.184,18,1.432,19,1.014,22,0.082,31,0.139,43,3.468,44,3.534,45,3.179,46,3.346,47,3.534,48,4.092,49,5.945,74,2.703,77,2.441,114,0.609,128,1.291,129,2.236,172,0.003,173,0.003,182,1.416,187,0.6,189,1.057,190,0.628,199,1.4,216,1.448,266,5.644,300,1.984,330,3.534,369,5.741,371,4.299,424,5.401,516,2.193,795,5.394,1223,4.825,1720,4.539,1945,4.299,2471,6.321,2524,5.939,2526,5.179,2527,4.675,2567,5.945,2938,7.907,2951,6.825,2961,7.09,2977,7.637,2978,5.174,2979,7.59,2980,7.59,2981,7.59,2982,5.754,2983,7.59,2984,5.754,2985,7.59,2986,6.321,2987,5.644,2988,7.59,2989,6.825,2990,6.825,2991,5.754,2992,7.59,2993,5.754,2994,5.754,2995,5.754,2996,5.754,2997,5.754,2998,5.754]],["title/modules/LearnroomModule.html",[257,1.382,2999,3.53]],["body/modules/LearnroomModule.html",[3,0.095,4,0.079,5,0.058,14,0.005,15,0.246,19,1.053,22,0.085,31,0.144,172,0.003,173,0.003,257,2.079,259,2.314,260,3.431,267,5.518,268,3.843,269,2.784,270,2.547,272,3.26,273,2.636,279,3.15,585,5.827,586,6.408,587,6.408,593,6.924,694,7.245,700,4.98,965,7.207,966,3.493,979,7.245,980,5.377,1243,7.207,1261,7.245,1262,5.377,1543,6.924,1634,5.788,1977,3.08,2112,4.683,2999,7.319,3000,5.377,3001,5.377,3002,5.98,3003,7.207,3004,5.98,3005,5.98,3006,5.98,3007,5.377,3008,5.98]],["title/entities/Lesson.html",[316,0.88,584,2.455]],["body/entities/Lesson.html",[0,0.675,3,0.104,4,0.086,5,0.063,8,0.377,9,0.888,12,0.849,13,0.287,14,0.005,15,0.218,22,0.116,31,0.156,33,1.357,114,0.782,172,0.003,173,0.003,187,0.71,205,2.091,316,1.396,323,2.037,349,2.062,354,2.967,355,1.576,356,1.841,360,2.949,385,1.96,386,2.064,500,2.064,502,2.631,503,2.436,516,3.126,518,3.126,520,2.119,581,3.253,584,3.892,608,3.88,634,5.219,661,3.02,668,4.61,747,2.3,912,5.081,940,2.631,944,3.583,1028,4.645,1029,4.905,1032,3.342,1035,4.267,1036,4.267,2614,6.424,2615,5.834,2616,5.403,2617,7.375,3009,6.488,3010,6.488,3011,6.488,3012,6.488]],["title/classes/LessonFactory.html",[31,0.125,3013,4.308]],["body/classes/LessonFactory.html",[3,0.068,4,0.056,5,0.041,8,0.177,9,0.664,10,1.509,12,0.579,13,0.32,14,0.004,15,0.175,22,0.06,31,0.102,33,1.283,37,2.114,45,2.57,54,1.833,69,0.836,71,1.951,72,3.209,78,0.597,114,0.769,128,0.72,168,1.802,172,0.003,173,0.003,175,0.959,182,1.144,187,0.775,189,1.379,190,0.781,192,5.054,199,1.707,211,1.97,216,1.816,316,1.429,320,3.093,323,1.926,328,1.04,367,3.717,385,2.647,386,2.787,391,7.143,393,7.143,395,3.147,397,5.569,398,5.885,399,4.562,400,5.885,401,5.811,402,4.562,403,4.562,404,4.359,405,2.304,406,4.86,407,5.366,408,6.578,409,5.733,411,3.307,413,4.562,414,3.147,415,4.562,417,4.602,418,5.031,419,4.482,420,4.875,421,3.16,422,4.562,423,3.147,424,2.531,425,3.007,426,4.886,427,3.147,428,3.147,429,3.147,430,4.733,432,5.128,433,3.147,434,6.883,435,5.885,437,3.563,438,3.371,439,3.147,441,3.147,443,2.783,444,3.147,445,5.978,447,3.147,448,4.562,449,4.562,451,3.147,452,2.531,453,3.147,454,3.147,457,3.147,459,3.147,581,2.874,584,2.911,995,3.314,998,3.314,1001,3.314,1002,3.314,1003,3.314,1004,3.314,1005,3.314,1006,3.314,1007,3.314,1008,3.314,1009,3.314,1010,3.314,1011,3.314,1014,3.314,2614,3.314,3013,6.01,3014,3.805,3015,4.232,3016,3.805,3017,5.516,3018,3.805]],["title/injectables/LessonRepo.html",[18,0.976,586,3.402]],["body/injectables/LessonRepo.html",[3,0.104,4,0.087,5,0.064,8,0.273,13,0.302,14,0.004,15,0.229,18,1.553,19,1.149,22,0.093,31,0.157,69,1.289,71,2.076,74,2.528,77,2.225,78,0.92,114,0.66,128,1.401,129,2.425,149,1.203,172,0.003,173,0.003,182,1.535,187,0.65,189,1.147,190,0.681,199,1.203,300,2.249,308,3.093,328,1.604,329,2.646,355,1.585,357,2.928,411,4.438,438,2.779,500,2.076,543,3.902,544,4.988,546,4.065,581,2.076,584,3.906,586,5.414,608,4.923,616,5.733,634,3.604,747,2.313,1045,4.453,1046,3.902,1047,4.662,1157,3.832,1182,5.111,2616,6.855,3019,6.526,3020,6.526,3021,8.232,3022,6.526,3023,6.855,3024,6.526,3025,6.526,3026,6.526,3027,6.526,3028,6.526]],["title/classes/LessonScope.html",[31,0.125,3023,4.308]],["body/classes/LessonScope.html",[3,0.1,4,0.083,5,0.061,8,0.262,9,0.868,13,0.307,14,0.005,15,0.194,22,0.089,31,0.151,33,1.676,35,2.68,78,1.13,114,0.71,168,2.666,172,0.003,173,0.003,175,1.418,182,1.495,187,0.762,189,1.232,190,0.732,192,4.556,199,1.631,308,3.045,328,1.538,385,1.891,386,1.99,500,2.813,581,1.99,584,2.97,634,3.456,975,2.913,1045,5.47,1157,4.668,1161,5.96,1188,5.96,1189,5.96,1193,5.96,1194,4.447,1195,4.901,1196,5.816,1197,4.901,1202,4.653,1203,5.696,1204,4.901,3023,8.214,3029,8.844,3030,5.212,3031,7.208,3032,8.016,3033,7.208,3034,6.258,3035,8.016,3036,6.258,3037,8.016,3038,5.627]],["title/injectables/Logger.html",[18,0.976,885,2.93]],["body/injectables/Logger.html",[3,0.109,4,0.091,5,0.067,14,0.004,15,0.206,18,1.6,19,1.206,22,0.097,31,0.165,33,1.773,172,0.004,173,0.004,182,1.277,300,2.359,326,4.502,330,3.948,372,2.821,385,2.068,409,4.671,417,3.981,465,4.351,818,3.526,859,3.69,885,5.608,942,4.684,1065,3.553,1157,3.948,1945,3.877,1974,3.451,2047,5.36,2088,5.7,2123,4.216,2176,4.864,2205,4.671,2315,5.361,2380,6.845,2620,6.549,3039,6.845,3040,9.633,3041,6.845,3042,6.845,3043,5.09,3044,5.7,3045,5.7,3046,4.671,3047,7.626,3048,5.09,3049,6.845,3050,6.845,3051,5.09,3052,6.155,3053,4.671,3054,6.845,3055,6.845,3056,6.845]],["title/modules/LoggerModule.html",[257,1.382,867,3.186]],["body/modules/LoggerModule.html",[3,0.119,4,0.099,5,0.073,14,0.004,15,0.216,19,1.313,22,0.106,31,0.179,172,0.004,173,0.004,257,2.386,259,2.884,260,3.938,268,4.411,269,3.469,270,3.174,272,3.742,295,4.411,867,6.412,885,6.063,3057,6.701,3058,6.701,3059,6.701,3060,7.452,3061,7.452]],["title/interfaces/Mail.html",[0,0.538,252,2.93]],["body/interfaces/Mail.html",[0,1.044,2,1.808,3,0.101,4,0.084,5,0.062,8,0.264,9,0.871,12,1.02,13,0.315,14,0.004,22,0.089,33,1.954,114,0.505,172,0.003,173,0.003,190,0.841,235,5.291,236,4.294,237,5.832,238,5.489,239,4.294,240,4.294,241,5.291,242,4.294,243,4.294,244,4.294,245,5.832,246,4.139,247,4.294,248,6.146,249,5.489,250,5.489,251,6.146,252,5.594,253,6.146,254,6.377,255,6.377,256,6.377]],["title/interfaces/MailAttachment.html",[0,0.538,237,3.402]],["body/interfaces/MailAttachment.html",[0,1.058,2,1.916,3,0.106,4,0.089,5,0.065,8,0.279,9,0.904,12,1.018,13,0.29,14,0.004,22,0.095,33,1.996,114,0.766,172,0.003,173,0.003,235,5.488,236,4.55,237,6.277,238,5.694,239,6.513,240,6.513,241,5.488,242,4.55,243,4.55,244,4.55,245,5.99,246,4.385,247,4.55,248,5.488,249,5.694,250,5.694,251,5.488,252,4.726,253,4.385,254,4.55,255,4.55,256,4.55]],["title/interfaces/MailContent.html",[0,0.538,245,3.402]],["body/interfaces/MailContent.html",[0,1.058,2,1.92,3,0.107,4,0.089,5,0.065,8,0.28,9,0.905,12,1.01,13,0.266,14,0.004,22,0.095,33,1.997,114,0.536,172,0.003,173,0.003,190,0.691,235,6.281,236,4.559,237,5.995,238,5.701,239,4.559,240,4.559,241,6.281,242,4.559,243,4.559,244,4.559,245,6.281,246,6.281,247,6.517,248,5.495,249,5.701,250,5.701,251,5.495,252,4.732,253,4.394,254,4.559,255,4.559,256,4.559]],["title/modules/MailModule.html",[257,1.382,3062,3.676]],["body/modules/MailModule.html",[0,0.679,3,0.104,4,0.087,5,0.064,12,0.852,13,0.288,14,0.005,15,0.219,19,1.149,22,0.093,24,5.233,31,0.157,72,3.338,78,1.161,114,0.66,128,1.401,172,0.003,173,0.003,182,1.217,187,0.515,189,0.909,190,0.54,199,1.203,257,2.409,259,2.525,272,2.733,273,2.877,295,3.222,405,3.091,1977,3.362,1978,4.292,2097,4.852,2098,5.414,2101,5.733,3062,6.408,3063,5.111,3064,7.887,3065,6.526,3066,7.51,3067,4.852,3068,4.292,3069,6.706,3070,5.868,3071,5.617,3072,5.617,3073,6.447,3074,5.434,3075,5.434,3076,5.434,3077,5.434,3078,6.855,3079,5.111,3080,5.434,3081,5.868,3082,5.868,3083,5.868]],["title/interfaces/MailModuleOptions.html",[0,0.538,3064,4.308]],["body/interfaces/MailModuleOptions.html",[0,0.67,2,1.85,3,0.103,4,0.086,5,0.063,8,0.27,9,0.884,12,0.973,13,0.31,14,0.005,15,0.217,19,1.134,22,0.091,24,6.182,31,0.155,72,2.611,78,1.151,114,0.517,128,1.389,172,0.003,173,0.003,257,2.394,272,2.697,273,2.838,295,3.179,405,2.418,1977,3.316,1978,4.234,2098,4.234,2101,5.189,3062,5.8,3063,5.042,3064,7.463,3066,7.463,3067,4.787,3068,4.234,3069,6.664,3070,5.789,3071,6.636,3072,6.636,3073,6.392,3074,5.361,3075,5.361,3076,5.361,3077,5.361,3078,6.797,3079,5.042,3080,5.361,3081,5.789,3082,5.789,3083,5.789]],["title/injectables/MailService.html",[18,0.976,3069,3.846]],["body/injectables/MailService.html",[0,0.698,3,0.107,4,0.089,5,0.066,8,0.281,12,0.791,13,0.267,14,0.004,15,0.221,17,3.799,18,1.58,19,1.182,22,0.095,31,0.162,35,2.407,69,1.654,71,2.664,72,3.703,73,5.625,74,2.56,77,2.264,114,0.672,123,2.134,129,1.976,172,0.003,173,0.003,182,1.562,187,0.662,189,1.167,190,0.693,199,1.237,252,5.417,300,2.312,1065,3.508,3067,4.988,3068,4.412,3069,6.228,3071,4.577,3072,4.577,3084,6.032,3085,7.531,3086,6.708,3087,9.028,3088,7.965,3089,6.708,3090,7.531,3091,6.708,3092,6.032,3093,6.032,3094,6.032,3095,6.032,3096,5.586]],["title/interfaces/MailServiceOptions.html",[0,0.538,3088,4.308]],["body/interfaces/MailServiceOptions.html",[0,0.73,2,2.016,3,0.112,4,0.093,5,0.069,8,0.294,9,0.933,12,0.959,13,0.275,14,0.004,15,0.226,17,3.974,18,1.625,19,1.236,22,0.099,31,0.169,35,2.475,69,1.386,71,2.739,72,2.845,73,4.322,74,1.967,77,1.897,123,2.232,129,2.067,172,0.004,173,0.004,252,4.877,1065,2.939,3067,5.217,3068,4.614,3069,5.217,3071,6.63,3072,6.63,3084,6.309,3087,8.379,3088,7.76,3090,6.309,3092,6.309,3093,6.309,3094,6.309,3095,6.309,3096,5.843]],["title/modules/ManagementModule.html",[257,1.382,3097,3.846]],["body/modules/ManagementModule.html",[3,0.089,4,0.074,5,0.055,12,0.528,13,0.178,14,0.005,15,0.249,19,0.985,22,0.079,31,0.135,43,2.555,44,2.603,45,2.342,46,2.465,47,2.603,78,0.788,118,3.677,138,3.677,139,3.444,140,3.677,145,1.224,149,1.031,172,0.003,173,0.003,257,2.236,259,2.164,260,3.283,268,3.677,269,2.603,270,2.382,272,3.508,273,3.283,323,1.755,328,1.374,355,1.809,356,1.587,370,2.01,787,6.796,801,3.444,842,6.289,846,3.167,966,3.342,1339,3.677,1694,3.555,1695,5.833,1701,6.289,1715,4.379,1716,4.379,1734,6.973,1760,7.111,1764,6.526,1867,4.656,1868,2.88,1869,4.158,1870,4.656,1974,2.819,2174,3.252,2321,7.111,2369,5.833,2370,5.833,2371,5.833,3097,7.804,3098,5.028,3099,5.591,3100,5.028,3101,5.591,3102,4.158,3103,4.158,3104,5.833,3105,5.833,3106,5.538,3107,5.028,3108,5.591,3109,5.591,3110,5.591,3111,5.591,3112,5.591,3113,4.379,3114,5.591,3115,4.379,3116,3.973,3117,4.379,3118,5.833,3119,4.379,3120,4.379,3121,5.591]],["title/modules/MongoMemoryDatabaseModule.html",[257,1.382,3122,3.53]],["body/modules/MongoMemoryDatabaseModule.html",[3,0.082,4,0.068,5,0.05,13,0.224,14,0.005,15,0.231,17,3.98,19,0.904,22,0.122,31,0.124,35,2.303,69,1.013,71,1.632,72,3.495,74,2.531,77,2.166,78,1.215,114,0.412,128,1.587,129,2.66,172,0.003,173,0.003,182,0.957,187,0.555,189,0.715,190,0.424,199,1.296,257,2.302,259,1.985,272,2.149,273,2.262,295,2.533,323,1.611,328,1.261,355,1.707,356,1.456,358,4.018,370,1.844,405,2.639,424,4.202,438,2.185,462,3.374,477,2.149,801,5.562,880,3.16,920,2.906,942,2.833,1777,3.501,1967,3.374,1974,3.543,1977,3.62,2097,3.815,2098,4.621,2101,5.48,2185,2.906,2426,3.501,2987,3.815,3053,3.501,3102,6.409,3103,3.815,3106,5.225,3116,4.993,3122,5.468,3123,6.674,3124,6.784,3125,7.206,3126,4.613,3127,6.751,3128,5.13,3129,9.029,3130,5.13,3131,6.318,3132,6.318,3133,7.206,3134,8.384,3135,5.13,3136,6.318,3137,4.613,3138,6.318,3139,4.613,3140,4.613,3141,4.613,3142,4.272,3143,3.646,3144,3.815,3145,4.018,3146,4.272,3147,3.815,3148,4.613,3149,4.272,3150,4.272,3151,4.613,3152,4.613,3153,4.613,3154,4.613,3155,4.613,3156,4.613,3157,5.13,3158,3.646,3159,5.13,3160,4.613,3161,7.027,3162,6.318,3163,3.501,3164,4.018,3165,4.613,3166,5.13,3167,5.13]],["title/classes/MoveElementParams.html",[31,0.125,1250,4.051]],["body/classes/MoveElementParams.html",[3,0.111,4,0.092,5,0.068,8,0.29,9,0.925,13,0.272,14,0.004,15,0.207,22,0.121,31,0.223,37,2.475,112,3.422,143,3.736,172,0.004,173,0.004,175,1.57,187,0.675,216,1.744,349,1.959,652,4.03,653,4.309,654,2.389,767,2.951,815,4.144,1075,4.144,1239,6.073,1241,3.494,1245,3.65,1250,6.693,1255,4.144,1313,5.264,1354,4.405,1384,5.153,2518,4.924,3168,6.231,3169,8.276,3170,8.546,3171,6.93,3172,6.93,3173,8.333,3174,8.699,3175,5.771,3176,7.717,3177,5.771]],["title/classes/MoveElementPosition.html",[31,0.125,3169,4.308]],["body/classes/MoveElementPosition.html",[3,0.105,4,0.087,5,0.064,8,0.275,9,0.895,13,0.288,14,0.004,15,0.2,22,0.117,31,0.218,37,2.667,112,4.08,143,4.875,172,0.003,173,0.003,175,1.487,187,0.714,190,0.684,216,2.079,349,2.073,652,3.966,653,4.166,654,2.263,767,3.519,815,4.941,1075,4.941,1239,5.871,1241,3.309,1245,4.352,1250,5.141,1255,5.407,1313,5.846,1354,5.252,1384,6.724,2518,5.871,3168,5.902,3169,7.903,3173,8.131,3174,8.534,3175,5.466,3176,7.53,3177,6.881,3178,6.564,3179,6.564,3180,8.262,3181,6.564,3182,6.564]],["title/entities/News.html",[316,0.88,1107,2.28]],["body/entities/News.html",[0,0.393,3,0.06,4,0.107,5,0.037,8,0.158,9,0.611,10,1.18,12,0.924,13,0.317,14,0.005,15,0.217,22,0.114,31,0.181,33,1.567,43,3.087,44,3.145,45,2.83,46,2.979,47,3.145,48,3.642,78,0.533,114,0.601,123,1.202,145,1.909,149,1.246,172,0.002,173,0.002,181,2.822,187,0.757,190,0.742,205,1.218,308,2.447,309,4.242,310,3.861,312,3.032,316,1.365,323,1.187,331,2.686,349,2.138,354,3.043,355,0.918,356,1.073,360,2.03,367,3.481,372,2.784,381,2.094,385,1.142,386,1.202,405,1.419,467,1.991,495,3.734,502,1.533,503,1.419,506,1.637,510,2.9,512,2.328,513,2.973,514,4.295,518,3.207,520,1.234,531,2.141,581,1.795,592,3.709,670,2.26,675,1.696,888,3.503,900,4.295,901,2.846,920,2.141,921,2.198,948,2.403,1028,2.141,1032,1.947,1091,2.403,1092,2.81,1093,4.514,1095,3.032,1096,2.846,1097,2.81,1098,4.764,1099,2.81,1100,4.801,1101,4.04,1102,5.573,1103,4.04,1104,4.295,1105,4.929,1106,5.275,1107,4.478,1108,3.852,1109,4.197,1110,4.764,1111,4.197,1112,4.197,1113,3.117,1114,3.852,1115,4.011,1116,2.732,1117,3.852,1118,3.589,1119,4.011,1120,4.04,1121,3.589,1122,4.197,1123,2.486,1124,2.81,1125,2.579,1126,2.81,1127,2.328,1128,2.81,1129,2.81,1130,2.81,1131,2.81,1132,2.579,1133,2.81,1134,2.579,1135,2.81,1136,2.81,1137,4.197,1138,4.04,1139,2.81,1140,4.197,1141,2.81,1142,2.81,1143,2.486,1144,2.486,1145,2.81,3183,3.78,3184,3.78,3185,3.78,3186,3.78,3187,3.78,3188,3.78,3189,3.78,3190,3.78,3191,3.78,3192,3.78,3193,3.78,3194,3.78]],["title/controllers/NewsController.html",[964,2.167,3195,4.308]],["body/controllers/NewsController.html",[3,0.064,4,0.053,5,0.039,8,0.168,9,0.638,10,1.231,12,0.878,13,0.262,14,0.005,15,0.221,19,0.705,22,0.057,31,0.096,38,3.174,40,2.849,71,1.272,74,2.792,77,2.556,78,1.158,114,0.659,127,4.441,128,1.609,129,2.419,145,1.995,146,2.842,149,0.738,172,0.002,173,0.002,182,1.098,187,0.649,189,1.144,190,0.679,199,1.514,316,1.002,328,0.983,329,1.622,330,2.741,349,1.883,406,4.425,654,1.379,656,1.936,767,3.782,888,2.894,964,1.676,966,1.795,968,2.392,971,5.406,972,4.898,974,6.246,975,3.252,976,2.631,977,2.543,978,2.631,985,2.631,1047,3.334,1096,2.968,1107,4.47,1113,3.251,1117,4.017,1147,6.282,1157,3.823,1174,4.255,1214,5.729,1259,3.331,1260,5.401,1270,5.471,1274,6.106,1752,5.195,1835,3.626,1898,3.743,1918,4.481,1925,5.861,2172,2.729,2281,5.067,2766,2.842,2820,4.964,2823,3.331,2972,5.294,3195,4.903,3196,4,3197,6.106,3198,4,3199,4,3200,4,3201,5.887,3202,4,3203,7.723,3204,5.729,3205,4,3206,4.903,3207,4,3208,5.887,3209,4,3210,5.294,3211,5.887,3212,4,3213,6.035,3214,5.887,3215,4,3216,4.767,3217,3.597,3218,2.842,3219,2.974,3220,3.133,3221,3.597,3222,3.597,3223,4,3224,3.597,3225,3.597,3226,3.597,3227,3.597,3228,6.417,3229,3.331,3230,3.597,3231,3.597,3232,3.597,3233,3.597,3234,3.597,3235,3.331,3236,4,3237,4,3238,4,3239,4,3240,5.887,3241,4]],["title/classes/NewsFilterQuery.html",[31,0.125,3204,3.846]],["body/classes/NewsFilterQuery.html",[3,0.098,4,0.081,5,0.06,8,0.256,9,0.855,10,1.651,12,0.873,13,0.279,14,0.004,15,0.224,22,0.087,31,0.19,40,3.82,128,1.04,172,0.003,173,0.003,175,1.385,187,0.691,190,0.811,216,2.408,309,4.825,310,4.504,311,5.386,328,1.502,349,2.004,500,2.511,616,5.018,653,4.66,654,2.106,680,2.957,681,3.98,682,3.98,1093,4.472,1095,2.742,1107,4.32,1227,5.386,1230,5.875,1233,6.502,1234,6.182,1235,5.018,1239,6.568,1240,5.386,1241,3.081,1242,4.342,2522,5.967,2846,4.785,2858,7.098,2867,5.869,3204,5.869,3242,8.311,3243,6.11,3244,5.869,3245,7.098,3246,6.11,3247,6.11,3248,6.11,3249,6.11,3250,7.894,3251,6.11,3252,6.11,3253,7.098,3254,6.11,3255,6.11]],["title/classes/NewsListResponse.html",[31,0.125,3218,3.676]],["body/classes/NewsListResponse.html",[3,0.068,4,0.117,5,0.041,8,0.178,9,0.666,10,1.834,12,0.875,13,0.301,14,0.005,15,0.212,22,0.087,31,0.148,33,1.285,37,2.686,40,2.053,69,1.214,114,0.58,128,1.23,145,1.734,172,0.003,173,0.003,175,0.961,181,2.658,187,0.664,189,0.591,190,0.696,192,4.082,216,2.546,309,3.643,310,3.166,311,4.451,312,3.555,316,1.652,320,2.139,328,1.043,349,1.816,380,3.723,381,2.24,383,3.643,421,2.185,438,2.618,465,2.697,495,3.364,530,2.613,581,1.349,592,3.493,652,4.049,653,3.995,654,1.462,656,2.053,660,1.939,662,2.79,663,2.79,670,2.537,675,1.904,680,2.974,681,3.099,682,3.099,746,5.211,747,1.504,888,3.293,947,2.697,987,4.644,992,4.727,993,4.421,1064,5.571,1065,3.523,1066,4.042,1069,3.323,1070,3.323,1071,3.323,1081,2.79,1082,2.79,1093,4.377,1095,2.758,1096,2.139,1101,3.896,1103,2.537,1104,2.697,1105,4.753,1106,4.753,1107,4.281,1116,2.974,1125,2.895,1132,2.895,1134,2.895,1222,2.79,1223,2.697,1224,3.323,1225,3.155,1230,3.907,1233,4.57,1234,3.323,1235,2.697,1242,3.015,1437,2.79,1841,3.155,2464,3.533,2642,3.323,3197,3.155,3218,4.367,3219,6.887,3256,3.323,3257,4.243,3258,4.243,3259,4.57,3260,6.018,3261,4.57,3262,5.374,3263,5.118,3264,5.118,3265,3.815,3266,3.815,3267,3.815,3268,3.815,3269,3.815,3270,3.533,3271,3.323,3272,5.118]],["title/classes/NewsMapper.html",[31,0.125,3220,4.051]],["body/classes/NewsMapper.html",[3,0.082,4,0.093,5,0.05,8,0.215,10,1.074,13,0.275,14,0.005,15,0.219,22,0.073,31,0.124,78,1.216,114,0.692,128,1.625,145,1.125,149,0.947,172,0.003,173,0.003,175,1.164,181,2.69,182,1.312,187,0.681,189,1.202,190,0.714,199,1.59,309,4.044,310,4.132,311,4.94,312,2.306,328,1.263,380,2.647,383,2.59,405,3.814,406,3.623,495,3.275,592,3.536,696,4.333,767,4.142,888,3.012,975,3.275,1054,3.506,1093,4.174,1101,4.324,1105,3.379,1107,3.982,1214,6.413,1278,6.325,2510,5.964,2519,5.964,2521,6.413,2522,3.506,3204,6.413,3213,6.755,3219,6.413,3220,5.509,3273,5.138,3274,7.034,3275,7.034,3276,7.034,3277,7.034,3278,5.138,3279,7.034,3280,5.138,3281,7.034,3282,5.138,3283,7.034,3284,5.138,3285,4.279,3286,8.02,3287,4.279,3288,4.279,3289,5.138,3290,5.138,3291,5.138,3292,4.62,3293,5.138,3294,5.138,3295,4.62,3296,5.138,3297,5.138,3298,4.62,3299,4.62,3300,5.138,3301,5.138,3302,4.62,3303,5.138,3304,5.138,3305,5.138,3306,7.034,3307,5.138,3308,5.138,3309,5.138,3310,5.138,3311,7.034,3312,7.034,3313,5.138,3314,5.138]],["title/modules/NewsModule.html",[257,1.382,3315,3.53]],["body/modules/NewsModule.html",[3,0.101,4,0.084,5,0.062,14,0.005,15,0.244,19,1.117,22,0.09,31,0.153,172,0.003,173,0.003,257,2.159,259,2.454,260,3.563,268,3.991,269,2.952,270,2.701,272,3.386,273,3.563,279,3.34,286,6.753,295,3.991,365,3.687,867,6.096,966,3.627,1777,4.327,1995,4.17,2463,4.506,2887,5.702,2891,7.269,3195,7.804,3197,4.715,3216,7.154,3217,5.702,3315,7.187,3316,5.702,3317,6.341,3318,5.702,3319,5.702,3320,7.033,3321,6.341,3322,7.411,3323,6.341,3324,6.341,3325,6.341,3326,6.341,3327,4.506,3328,4.327,3329,6.341,3330,6.341,3331,6.341,3332,4.715]],["title/injectables/NewsRepo.html",[18,0.976,3320,3.676]],["body/injectables/NewsRepo.html",[3,0.059,4,0.049,5,0.036,8,0.155,9,0.603,10,1.165,13,0.305,14,0.005,15,0.21,18,1.051,19,0.654,22,0.053,31,0.089,33,1.165,35,1.921,72,3.697,74,2.827,77,2.549,78,0.943,114,0.757,128,1.551,129,2.626,149,0.685,168,2.372,172,0.002,173,0.002,182,1.039,187,0.763,189,1.314,190,0.78,192,4.697,199,1.762,300,1.28,308,2.426,316,1.264,320,3.37,323,2.332,328,0.913,330,3.112,355,1.353,356,1.054,385,1.122,386,1.181,426,5.833,438,2.372,495,2.593,500,2.126,512,4.575,532,6.518,534,5.236,535,3.541,536,4.362,537,4.362,538,3.958,539,2.934,540,4.362,541,4.362,542,4.362,548,2.638,550,2.908,552,2.908,554,2.638,556,2.908,558,2.908,560,2.908,562,2.908,578,4.005,794,4.142,831,5.279,888,3.139,920,2.103,975,2.593,1046,2.22,1047,3.155,1091,4.25,1093,4.412,1106,3.663,1107,4.258,1117,5.069,1143,4.396,1144,4.396,1150,5.7,1156,4.362,1157,2.593,1174,3.076,1175,3.155,1180,2.638,1196,4.885,1218,3.431,1721,2.22,2155,4.971,2185,3.155,2337,6.011,2345,3.092,2346,3.092,2347,3.092,2348,3.092,2349,3.092,2350,3.092,2351,3.092,2352,3.092,2353,3.092,2362,4.971,2364,5.009,2522,5.069,2820,4.75,3244,2.761,3320,3.958,3333,3.713,3334,5.57,3335,5.009,3336,3.713,3337,5.523,3338,3.713,3339,5.57,3340,3.713,3341,7.428,3342,7.428,3343,5.009,3344,3.713,3345,3.713,3346,3.713,3347,3.713,3348,4.639,3349,3.713,3350,3.713,3351,5.57,3352,3.713,3353,5.57,3354,3.713,3355,3.713,3356,5.57,3357,3.713,3358,3.713,3359,3.092,3360,3.713,3361,2.761,3362,2.287,3363,6.685,3364,3.713,3365,3.713,3366,3.713]],["title/classes/NewsResponse.html",[31,0.125,3219,3.846]],["body/classes/NewsResponse.html",[3,0.056,4,0.122,5,0.034,8,0.148,9,0.58,10,1.948,12,0.927,13,0.322,14,0.005,15,0.199,22,0.076,31,0.129,33,0.737,37,1.73,40,2.592,69,1.058,114,0.624,128,1.102,145,1.864,172,0.002,173,0.002,175,0.799,181,2.857,187,0.776,189,0.491,190,0.705,216,2.532,309,3.924,310,3.337,311,4.794,312,3.822,316,1.727,320,2.701,328,0.867,349,2.233,380,4.009,381,2.54,383,3.924,421,2.76,465,3.405,495,3.623,530,2.172,581,1.704,592,3.754,644,1.901,648,5.33,652,3.915,653,3.648,654,1.215,656,1.706,660,1.611,662,2.319,663,2.319,670,2.108,675,1.582,680,3.135,681,3.648,682,3.648,888,3.442,947,2.241,987,1.947,992,2.888,993,2.701,1064,3.3,1065,2.244,1066,2.319,1081,2.319,1082,2.319,1093,4.571,1095,2.907,1096,2.701,1101,4.195,1103,2.108,1104,2.241,1105,5.118,1106,5.118,1107,4.474,1116,3.502,1125,2.406,1132,2.406,1134,2.406,1222,3.523,1223,3.405,1224,4.195,1225,3.983,1230,4.6,1233,4.817,1234,4.195,1235,3.405,1242,2.505,1437,2.319,1841,3.983,2464,4.461,2642,2.761,2903,4.461,3197,3.983,3218,2.505,3219,6.525,3256,2.761,3259,4.817,3260,5.395,3261,4.817,3262,5.787,3263,5.395,3264,5.395,3265,3.17,3266,3.17,3267,3.17,3268,3.17,3269,3.17,3270,4.461,3271,4.195,3272,6.026,3367,3.526,3368,3.526,3369,3.526,3370,3.526,3371,3.526,3372,3.526,3373,3.526,3374,3.526,3375,3.526,3376,3.526,3377,3.526,3378,3.526,3379,2.761,3380,3.526,3381,3.526,3382,3.526,3383,3.526,3384,3.526,3385,3.526]],["title/classes/NewsScope.html",[31,0.125,3348,4.308]],["body/classes/NewsScope.html",[3,0.089,4,0.074,5,0.054,8,0.233,9,0.804,13,0.296,14,0.005,15,0.225,22,0.079,31,0.134,33,1.552,35,2.561,78,1.178,114,0.67,128,1.263,149,1.026,168,2.37,172,0.003,173,0.003,175,1.261,182,1.384,187,0.733,189,1.164,190,0.691,192,4.303,199,1.54,309,2.805,314,3.537,328,1.368,355,1.352,356,1.579,381,1.724,385,1.681,386,1.77,477,2.33,500,2.657,640,2.866,975,4.148,1093,2.692,1101,2.999,1107,3.272,1157,4.539,1161,5.519,1164,5.31,1188,5.519,1189,5.519,1193,5.519,1194,3.954,1195,4.357,1196,6.105,1197,4.357,1202,4.137,1203,5.274,1204,4.357,1363,2.999,1721,3.327,2087,3.796,2155,4.137,2160,5.003,2358,4.633,2522,5.065,3030,4.633,3337,6.626,3348,7.953,3386,7.511,3387,7.423,3388,7.423,3389,7.423,3390,5.564,3391,7.423,3392,5.564,3393,4.633,3394,5.519,3395,5.564,3396,5.564,3397,5.564,3398,7.423,3399,5.564,3400,5.564,3401,5.564,3402,5.564,3403,5.564]],["title/interfaces/NewsTargetFilter.html",[0,0.538,3337,3.846]],["body/interfaces/NewsTargetFilter.html",[0,0.798,2,2.205,3,0.123,4,0.102,5,0.075,8,0.321,9,0.984,13,0.29,14,0.004,15,0.186,22,0.109,172,0.004,173,0.004,308,3.27,309,5.049,310,5.158,328,1.886,1093,3.713,2159,8.339,3337,6.759,3386,6.9,3404,7.674]],["title/injectables/NewsUc.html",[18,0.976,3216,3.53]],["body/injectables/NewsUc.html",[3,0.043,4,0.036,5,0.026,8,0.112,9,0.467,10,1.77,12,0.512,13,0.281,14,0.005,15,0.177,18,0.814,19,0.471,22,0.038,31,0.064,35,2.674,40,1.294,43,1.222,44,1.245,45,1.12,46,1.179,54,2.349,69,0.528,72,2.958,74,2.761,76,3.522,77,2.457,78,1.194,114,0.679,128,1.613,129,2.853,145,1.597,149,1,172,0.002,173,0.002,182,0.805,187,0.684,189,1.179,190,0.7,199,1.676,216,0.673,279,1.409,292,5.047,300,0.922,308,3.353,309,4.268,310,3.205,311,4.727,312,4.022,328,0.658,329,1.085,330,4.232,381,1.928,385,2.062,386,1.725,405,2.036,406,4.247,438,1.838,465,1.7,467,2.273,477,1.12,495,1.245,500,1.725,539,1.409,747,1.922,807,1.825,885,3.523,888,1.005,901,3.441,1046,1.6,1093,3.302,1101,4.305,1107,4.495,1113,4.41,1114,2.944,1150,4.091,1157,3.718,1174,1.477,1211,1.759,1213,2.095,1227,4.245,1235,1.7,1242,1.901,1341,1.989,1592,3.066,1722,1.556,1906,1.6,1918,2.509,1925,2.944,1995,1.759,1997,2.405,2024,2.405,2025,2.405,2128,3.88,2137,3.88,2155,5.707,2159,3.593,2163,2.994,2185,2.444,2245,2.095,2380,3.853,2510,4.626,2519,4.626,2521,5.707,2522,4.657,2527,2.658,3048,3.208,3197,4.032,3216,2.944,3229,3.593,3292,2.405,3295,2.405,3298,5.594,3299,5.594,3302,3.88,3320,5.184,3337,3.208,3405,2.405,3406,4.315,3407,4.315,3408,4.315,3409,4.315,3410,5.422,3411,2.675,3412,4.315,3413,4.315,3414,2.675,3415,4.315,3416,2.675,3417,4.315,3418,2.675,3419,4.315,3420,5.422,3421,4.876,3422,3.853,3423,4.315,3424,2.675,3425,4.315,3426,2.675,3427,2.675,3428,4.315,3429,2.675,3430,3.379,3431,2.675,3432,5.422,3433,2.675,3434,4.315,3435,2.675,3436,2.675,3437,3.593,3438,5.181,3439,2.675,3440,2.405,3441,2.675,3442,6.221,3443,2.675,3444,4.315,3445,2.675,3446,4.315,3447,2.675,3448,5.594,3449,2.675,3450,2.675,3451,2.675,3452,4.315,3453,4.315,3454,2.675,3455,2.675,3456,4.315,3457,2.675,3458,2.675,3459,5.422,3460,2.675,3461,4.315,3462,2.675,3463,2.675,3464,2.675,3465,2.675,3466,2.675,3467,2.675,3468,2.405,3469,4.315,3470,2.675,3471,2.675,3472,2.675,3473,4.315,3474,2.675,3475,2.675,3476,2.675,3477,2.675,3478,2.675]],["title/interfaces/Options.html",[0,0.538,72,2.098]],["body/interfaces/Options.html",[0,0.579,2,1.599,3,0.089,4,0.074,5,0.054,8,0.233,9,0.804,12,0.789,13,0.237,14,0.005,15,0.202,22,0.126,31,0.134,35,1.599,72,3.872,74,2.081,77,2.006,78,1.047,123,1.77,128,1.659,129,2.187,172,0.003,173,0.003,190,0.768,216,2.403,269,2.59,329,2.256,452,4.439,500,2.657,510,3.696,511,2.805,516,3.184,747,2.961,842,4.882,844,4.137,846,5.047,847,4.633,856,2.692,1065,2.33,1602,3.235,1695,4.357,1696,5.003,1697,5.003,1701,5.493,1703,4.633,1704,5.003,1706,4.312,1707,6.928,1708,5.519,1710,5.003,1711,5.519,1713,6.786,1714,4.633,1715,4.357,1716,4.357,1717,6.516,1718,4.317,1719,7.511,1720,4.995,1721,5.329,1722,4.317,1723,6.674,1724,6.674,1725,5.003,1726,6.181,1727,6.674,1728,6.674,1729,4.633,1730,3.537,1731,5.813,1732,5.003,1733,5.003]],["title/classes/PaginationQuery.html",[31,0.125,972,3.288]],["body/classes/PaginationQuery.html",[3,0.107,4,0.089,5,0.066,8,0.281,9,0.908,13,0.267,14,0.004,15,0.203,22,0.095,31,0.202,37,2.683,172,0.003,173,0.003,175,1.523,187,0.662,190,0.792,216,2.11,349,1.922,385,2.533,386,2.667,477,3.513,578,4.521,653,4.608,654,2.317,972,5.331,992,4.928,993,4.966,1226,6.984,1241,3.389,1363,4.521,2477,7.541,3175,5.598,3176,5.598,3479,6.722,3480,7.971,3481,6.722,3482,4.877,3483,8.386,3484,8.386,3485,8.386,3486,6.722,3487,6.722,3488,7.541,3489,6.722,3490,9.141,3491,6.722,3492,6.722,3493,6.722]],["title/classes/PaginationResponse.html",[31,0.125,1064,3.186]],["body/classes/PaginationResponse.html",[3,0.102,4,0.085,5,0.062,8,0.267,9,0.877,13,0.325,14,0.004,15,0.154,22,0.09,31,0.153,37,2.874,69,1.257,114,0.511,172,0.003,173,0.003,175,1.442,187,0.765,189,0.887,190,0.802,349,2.151,426,4.712,438,3.451,513,4.943,652,4.017,654,2.194,746,5.863,987,5.352,992,5.427,993,5.075,1064,4.991,1065,3.734,3494,6.365,3495,8.103,3496,6.365,3497,6.365,3498,6.365,3499,6.365,3500,6.365,3501,6.365,3502,6.365,3503,6.365]],["title/injectables/ParseObjectIdPipe.html",[18,0.976,1260,3.402]],["body/injectables/ParseObjectIdPipe.html",[3,0.114,4,0.095,5,0.07,8,0.299,12,0.946,13,0.227,14,0.004,15,0.227,18,1.642,19,1.257,22,0.101,31,0.172,78,1.006,114,0.572,128,1.214,148,3.039,149,1.316,172,0.004,173,0.004,182,1.623,187,0.564,189,0.994,190,0.59,199,1.316,300,2.46,308,2.33,328,1.754,348,4.928,355,1.734,357,3.202,386,2.767,421,4.482,942,3.941,1260,5.722,1340,5.588,2466,6.183,3504,8.701,3505,6.416,3506,8.701,3507,7.136,3508,8.701,3509,8.701,3510,7.136,3511,7.136]],["title/classes/PatchGroupParams.html",[31,0.125,1256,4.308]],["body/classes/PatchGroupParams.html",[3,0.116,4,0.096,5,0.071,8,0.304,9,0.952,12,0.83,13,0.231,14,0.004,15,0.213,22,0.103,31,0.212,114,0.705,172,0.004,173,0.004,175,1.645,181,3.377,187,0.573,216,2.213,349,1.664,652,3.565,654,2.502,767,3.745,1074,5.568,1075,5.879,1219,6.045,1240,6,1241,3.66,1256,7.322,1354,6.249,3512,7.259,3513,8.792,3514,7.259]],["title/injectables/PermissionService.html",[18,0.976,3515,3.53]],["body/injectables/PermissionService.html",[3,0.096,4,0.08,5,0.059,8,0.251,12,0.898,13,0.248,14,0.005,15,0.21,18,1.47,19,1.055,22,0.085,31,0.144,35,2.489,78,1.099,114,0.625,128,1.326,145,2.247,148,2.551,149,1.437,172,0.003,173,0.003,182,1.454,187,0.616,189,1.086,190,0.645,199,1.597,300,2.065,312,4.454,330,2.789,477,3.264,1138,4.66,1707,5.538,2187,5.317,2198,5.317,2289,7.007,2425,6.49,2525,4.353,2528,4.813,2531,4.691,2639,3.94,2729,6.155,2987,5.795,3359,6.49,3515,5.317,3516,5.99,3517,7.793,3518,7.793,3519,7.793,3520,5.99,3521,7.793,3522,7.007,3523,7.793,3524,6.49,3525,7.007,3526,7.793,3527,5.99,3528,5.99,3529,5.99,3530,5.99,3531,5.99,3532,7.793,3533,5.99,3534,7.793,3535,5.99,3536,5.99]],["title/interfaces/PlainTextMailContent.html",[0,0.538,248,3.402]],["body/interfaces/PlainTextMailContent.html",[0,1.059,2,1.927,3,0.107,4,0.089,5,0.066,8,0.281,9,0.907,12,1.015,13,0.267,14,0.004,22,0.095,33,2.058,114,0.538,172,0.003,173,0.003,190,0.693,235,5.508,236,4.577,237,6.006,238,5.715,239,4.577,240,4.577,241,5.508,242,4.577,243,4.577,244,4.577,245,6.29,246,4.412,247,4.577,248,6.006,249,6.717,250,6.717,251,5.508,252,4.744,253,4.412,254,4.577,255,4.577,256,4.577]],["title/classes/ResolvedUser.html",[31,0.125,3537,4.051]],["body/classes/ResolvedUser.html",[3,0.1,4,0.083,5,0.061,8,0.263,9,0.869,10,1.851,12,0.977,13,0.327,14,0.004,15,0.194,22,0.114,31,0.151,172,0.003,173,0.003,175,1.421,187,0.802,312,3.972,328,1.541,349,2.329,380,4.56,381,2.892,383,4.463,652,4.322,654,2.161,901,4.463,942,4.432,2525,4.2,2528,4.371,2529,6.582,2532,5.703,2533,4.663,2534,4.663,3537,6.285,3538,5.638,3539,6.27,3540,6.27,3541,6.27,3542,6.27,3543,6.27,3544,6.27,3545,6.27,3546,6.27]],["title/classes/ResolvedUserMapper.html",[31,0.125,3547,4.308]],["body/classes/ResolvedUserMapper.html",[3,0.105,4,0.088,5,0.065,8,0.276,10,1.381,12,0.856,13,0.21,14,0.005,15,0.201,22,0.094,31,0.159,78,0.931,114,0.665,128,1.123,145,2.145,149,1.218,172,0.003,173,0.003,175,1.496,182,1.547,187,0.522,189,0.92,190,0.546,199,1.218,312,4.268,328,1.623,385,1.995,386,2.1,405,3.405,696,5.108,767,3.532,1054,4.505,1533,5.937,2525,4.302,2528,4.696,2773,4.197,3537,7.448,3547,6.906,3548,6.603,3549,7.457,3550,6.603,3551,6.603,3552,5.937,3553,6.603,3554,5.937,3555,6.603,3556,6.603,3557,6.603,3558,6.603,3559,6.603,3560,6.603,3561,6.603,3562,6.603,3563,6.603,3564,6.603,3565,6.603]],["title/classes/RocketChatError.html",[31,0.125,32,4.051]],["body/classes/RocketChatError.html",[0,0.488,1,6.266,3,0.047,4,0.039,5,0.029,6,5.346,7,2.327,8,0.124,9,0.508,10,1.503,11,5.987,12,0.995,13,0.244,14,0.005,15,0.114,16,4.841,17,1.682,18,0.885,19,0.523,20,2.327,21,2.209,22,0.082,23,3.488,24,2.982,25,3.334,26,3.334,27,3.334,28,3.334,29,6.266,30,1.888,31,0.113,32,3.674,33,0.981,34,2.706,35,2.778,36,4.841,37,1.253,38,4.119,39,2.111,40,1.438,41,4.841,42,3.907,43,3.994,44,4.069,45,3.661,46,3.853,47,4.069,48,4.806,49,6.983,50,5.985,51,4.841,52,2.327,53,2.474,54,2.519,55,2.474,56,2.327,57,2.474,58,2.474,59,2.474,60,3.292,61,2.474,62,2.474,63,4.841,64,2.474,65,2.474,66,2.474,67,2.474,68,2.327,69,0.926,70,2.474,71,1.492,72,1.205,73,5.909,74,2.778,75,2.474,76,3.451,77,2.678,78,1.41,79,2.474,80,6.663,81,2.474,82,2.184,83,2.474,84,1.682,85,2.474,86,2.474,87,2.474,88,2.474,89,2.474,90,2.474,91,2.474,92,2.474,93,6.663,94,6.663,95,2.474,96,2.474,97,2.474,98,2.474,99,2.474,100,2.474,101,2.474,102,2.474,103,2.474,104,2.474,105,2.474,106,2.474,107,2.474,108,2.474,109,2.474,110,3.907,111,3.907,112,2.316,113,2.474,114,0.53,115,2.474,116,2.474,117,2.474,118,3.823,119,4.553,120,2.474,121,1.776,122,2.327,123,0.945,124,2.474,125,2.474,126,2.474,127,4.198,128,1.361,129,2.118,130,3.907,131,2.474,132,3.907,133,3.907,134,2.474,135,2.474,136,2.474,137,4.841,138,3.823,139,3.581,140,3.823,141,2.474,142,3.674,143,3.56,144,3.674,145,1.273,146,4.131,147,4.841,148,3.062,149,1.326,150,4.841,151,4.841,152,4.841,153,2.474,154,2.474,155,2.474,156,2.474,157,5.987,158,4.841,159,4.841,160,4.841,161,2.474,162,3.907,163,3.907,164,2.474,165,2.474,166,2.474,167,2.474,168,1.265,169,2.474,170,3.907,171,3.674,172,0.002,173,0.002,175,0.673,187,0.522,189,0.414,190,0.246,1594,2.209,3566,4.691,3567,2.971,3568,2.971]],["title/modules/RocketChatModule.html",[257,1.382,3569,3.846]],["body/modules/RocketChatModule.html",[3,0.115,4,0.095,5,0.07,6,6.495,13,0.229,14,0.004,15,0.212,19,1.265,22,0.102,23,7.283,31,0.173,68,7.373,72,3.542,78,1.013,114,0.576,172,0.004,173,0.004,182,1.339,187,0.567,189,1,190,0.594,199,1.324,257,2.514,259,2.779,272,3.008,273,3.166,295,3.546,405,3.28,1977,3.699,1978,4.723,2097,5.34,2098,5.745,2101,5.985,3569,7,3570,7.181,3571,7.181,3572,8.735,3573,7.181,3574,7.181,3575,7.181]],["title/interfaces/RocketChatOptions.html",[0,0.538,23,3.846]],["body/interfaces/RocketChatOptions.html",[0,0.487,1,6.262,2,0.852,3,0.047,4,0.039,5,0.029,6,2.205,7,2.322,8,0.124,9,0.507,10,1.502,11,5.982,12,1.004,13,0.255,14,0.005,15,0.114,16,4.836,17,1.679,18,0.884,19,0.522,20,2.322,21,2.205,22,0.082,23,4.318,24,4.566,25,5.104,26,5.104,27,5.104,28,5.104,29,5.98,30,1.885,31,0.113,32,2.322,33,0.62,34,2.181,35,2.604,36,2.47,37,0.792,38,3.556,39,2.107,40,1.435,41,2.47,42,2.47,43,3.992,44,4.067,45,3.66,46,3.851,47,4.067,48,4.804,49,6.979,50,5.98,51,4.836,52,2.322,53,2.47,54,2.516,55,2.47,56,2.322,57,2.47,58,2.47,59,2.47,60,3.289,61,2.47,62,2.47,63,4.836,64,2.47,65,2.47,66,2.47,67,2.47,68,2.322,69,0.586,70,2.47,71,1.49,72,1.202,73,5.907,74,2.777,75,2.47,76,3.45,77,2.677,78,1.41,79,2.47,80,6.659,81,2.47,82,2.181,83,2.47,84,1.679,85,2.47,86,2.47,87,2.47,88,2.47,89,2.47,90,2.47,91,2.47,92,2.47,93,6.659,94,6.659,95,2.47,96,2.47,97,2.47,98,2.47,99,2.47,100,2.47,101,2.47,102,2.47,103,2.47,104,2.47,105,2.47,106,2.47,107,2.47,108,2.47,109,2.47,110,3.901,111,3.901,112,2.313,113,2.47,114,0.466,115,2.47,116,2.47,117,2.47,118,3.819,119,4.548,120,2.47,121,1.773,122,2.322,123,0.943,124,2.47,125,2.47,126,2.47,127,4.194,128,1.36,129,2.116,130,3.901,131,2.47,132,3.901,133,3.901,134,2.47,135,2.47,136,2.47,137,4.836,138,3.819,139,3.577,140,3.819,141,2.47,142,3.669,143,3.556,144,3.669,145,1.271,146,4.126,147,4.836,148,3.06,149,1.325,150,4.836,151,4.836,152,4.836,153,2.47,154,2.47,155,2.47,156,2.47,157,5.982,158,4.836,159,4.836,160,4.836,161,2.47,162,3.901,163,3.901,164,2.47,165,2.47,166,2.47,167,2.47,168,1.263,169,2.47,170,3.901,171,3.669,172,0.002,173,0.002,190,0.723]],["title/entities/Role.html",[316,0.88,2528,2.554]],["body/entities/Role.html",[0,0.632,3,0.097,4,0.081,5,0.059,8,0.365,9,0.852,12,0.924,13,0.278,14,0.005,15,0.191,22,0.112,31,0.146,33,1.271,114,0.766,149,1.701,172,0.003,173,0.003,187,0.689,205,1.958,312,4.139,316,1.484,323,1.908,349,1.999,354,2.896,355,1.476,356,1.725,360,2.828,370,2.185,385,2.376,386,2.502,419,3.442,452,3.634,503,2.282,510,2.352,518,2.316,520,1.984,661,2.829,684,4.147,904,4.65,915,4.397,940,2.464,944,3.356,1095,3.53,1113,3.356,1241,3.064,1358,4.147,2119,5.589,2473,4.318,2525,4.841,2528,4.832,2636,6.55,2637,5.464,2638,5.464,2639,3.997,2640,4.759,2641,7.073,2642,4.759,2643,5.464,2644,4.759,3576,5.464,3577,6.077,3578,6.077,3579,6.077,3580,6.077,3581,6.077]],["title/injectables/RoleRepo.html",[18,0.976,3582,4.651]],["body/injectables/RoleRepo.html",[3,0.1,4,0.083,5,0.061,8,0.261,9,0.866,10,1.672,12,0.834,13,0.297,14,0.005,15,0.214,18,1.509,19,1.098,22,0.088,31,0.15,37,1.665,69,1.231,71,1.983,74,2.762,77,2.517,78,1.128,114,0.773,128,1.361,129,2.356,172,0.003,173,0.003,182,1.492,187,0.736,189,1.23,190,0.73,199,1.475,300,2.149,308,3.041,328,1.533,329,2.528,355,1.515,357,2.798,385,1.884,386,1.983,543,3.728,544,4.905,546,3.949,2528,4.755,3582,7.191,3583,6.235,3584,9.63,3585,7.191,3586,7.997,3587,7.997,3588,7.191,3589,6.235,3590,7.997,3591,6.235,3592,7.997,3593,7.997,3594,7.997]],["title/controllers/RoomsController.html",[964,2.167,3003,4.308]],["body/controllers/RoomsController.html",[3,0.103,4,0.086,5,0.063,8,0.271,12,0.849,13,0.206,14,0.005,15,0.248,19,1.141,22,0.092,31,0.156,35,1.861,71,2.606,74,2.519,77,2.214,78,0.913,114,0.52,128,1.394,129,1.908,172,0.003,173,0.003,182,1.528,187,0.511,189,0.902,190,0.536,199,1.194,328,1.592,329,2.626,330,3.014,349,1.484,575,4.116,579,5.387,593,6.385,654,2.232,656,3.133,673,4.418,694,6.091,700,5.392,740,6.416,964,2.712,966,2.906,968,3.872,971,5.091,974,6,976,4.259,977,4.116,978,4.259,985,4.259,1260,5.387,1270,5.071,1274,4.815,1309,5.823,1638,4.601,3003,6.822,3007,5.823,3595,6.475,3596,8.986,3597,6.475,3598,8.192,3599,6.475,3600,6.475,3601,6.475,3602,6.475,3603,6.475,3604,6.475]],["title/injectables/RoomsUc.html",[18,0.976,593,3.676]],["body/injectables/RoomsUc.html",[0,0.378,3,0.058,4,0.048,5,0.036,8,0.152,12,0.694,13,0.31,14,0.005,15,0.16,18,1.035,19,0.64,22,0.094,31,0.132,35,2.928,69,1.083,71,2.338,74,1.851,76,2.606,77,1.482,78,1.323,82,3.422,114,0.711,123,2.338,128,1.711,129,2.166,145,2.106,149,1.011,172,0.002,173,0.002,181,1.839,182,1.023,187,0.7,189,1.234,190,0.733,199,1.587,267,4.875,279,1.915,300,1.253,308,2.811,328,0.894,370,2.373,411,2.956,500,3.161,516,2.516,575,5.472,576,3.028,577,2.765,578,2.956,579,4.342,580,7.168,581,3.025,582,3.532,583,5.457,584,4.084,585,4.959,586,5.661,587,5.661,588,4.295,589,4.931,590,3.028,591,3.27,592,2.91,593,3.897,594,4.931,595,2.848,596,3.27,597,7.101,598,3.27,599,6.61,600,3.27,601,6.61,602,3.27,603,4.959,604,3.27,605,3.27,606,7.093,607,3.27,608,4.717,609,3.27,610,7.456,611,3.27,612,3.27,613,4.931,614,4.295,615,4.295,616,5.015,617,4.931,618,3.27,619,4.931,620,3.27,621,3.27,622,3.27,623,3.27,624,3.27,625,4.931,626,3.028,627,3.028,628,4.931,629,5.498,630,3.028,631,4.567,632,3.028,633,4.931,634,3.028,635,3.27,636,4.931,637,4.931,638,4.931,639,3.27,640,2.825,641,3.27,678,2.584,1207,3.028,3605,5.484,3606,5.484,3607,5.484,3608,5.484,3609,3.636,3610,3.636,3611,3.636,3612,3.636,3613,3.636,3614,3.636,3615,3.636,3616,3.636]],["title/entities/School.html",[316,0.88,888,1.943]],["body/entities/School.html",[0,0.763,3,0.117,4,0.098,5,0.072,8,0.307,9,0.958,12,0.897,13,0.234,14,0.004,15,0.214,22,0.125,31,0.177,33,1.534,114,0.792,172,0.004,173,0.004,187,0.58,205,2.365,316,1.506,323,2.304,345,5.626,349,1.682,354,2.983,355,1.783,356,2.083,503,2.756,520,2.396,661,3.416,888,3.324,940,2.976,944,4.053,2516,5.215,2645,7.37,2646,6.598,3617,7.338]],["title/classes/SchoolInfoMapper.html",[31,0.125,3285,4.308]],["body/classes/SchoolInfoMapper.html",[3,0.117,4,0.097,5,0.071,8,0.306,10,1.528,13,0.233,14,0.004,15,0.214,22,0.104,31,0.176,78,1.03,114,0.708,128,1.243,149,1.347,172,0.004,173,0.004,175,1.656,182,1.646,187,0.577,189,1.018,190,0.605,199,1.347,328,1.796,405,3.562,696,5.437,767,3.76,888,3.7,1054,4.986,3259,7.326,3285,7.351,3618,8.827,3619,6.085,3620,8.827,3621,6.085,3622,7.306,3623,7.306,3624,7.306]],["title/classes/SchoolInfoResponse.html",[31,0.125,3259,3.846]],["body/classes/SchoolInfoResponse.html",[3,0.109,4,0.091,5,0.067,8,0.285,9,0.916,10,2.137,12,0.908,13,0.293,14,0.004,15,0.165,22,0.097,31,0.164,69,1.671,114,0.829,172,0.004,173,0.004,175,1.545,187,0.727,189,0.95,190,0.564,216,2.315,316,1.637,349,1.939,644,3.675,648,3.964,652,3.73,654,2.35,660,3.115,661,3.174,680,3.299,681,4.265,682,4.265,888,3.612,3259,7.354,3379,5.339,3625,9.619,3626,5.677,3627,5.677,3628,6.13,3629,6.13]],["title/entities/SchoolNews.html",[316,0.88,1143,3.402]],["body/entities/SchoolNews.html",[0,0.472,3,0.073,4,0.1,5,0.044,8,0.19,9,0.699,10,0.949,12,0.906,13,0.275,14,0.005,15,0.229,22,0.122,31,0.197,33,1.709,43,3.43,44,3.495,45,3.144,46,3.309,47,3.495,48,4.047,78,0.64,114,0.518,123,1.444,145,1.89,149,1.384,172,0.003,173,0.003,181,2.518,187,0.359,205,1.463,308,2.669,309,4.121,310,3.867,312,2.038,316,1.469,323,1.426,331,3.227,349,1.041,354,2.897,355,1.103,356,1.289,360,2.32,367,3.867,372,3.093,381,2,405,1.705,467,2.392,495,3.495,502,1.841,503,1.705,506,1.967,510,2.497,512,2.797,513,3.399,514,4.772,518,2.861,520,1.483,531,2.572,581,2.052,592,3.309,670,2.715,675,2.038,888,3.542,900,4.772,901,2.289,920,2.572,921,2.641,948,2.887,1028,2.572,1032,2.339,1091,2.887,1092,3.376,1093,4.643,1095,2.896,1096,3.253,1097,3.376,1098,4.772,1099,3.376,1100,5.334,1101,3.479,1102,4.798,1103,3.859,1104,4.102,1105,4.244,1106,4.937,1107,4.479,1108,3.098,1109,3.376,1110,4.102,1111,3.376,1112,3.376,1113,2.508,1114,3.098,1115,3.227,1116,2.197,1117,3.098,1118,2.887,1119,3.227,1120,3.479,1121,2.887,1122,3.376,1123,2.986,1124,3.376,1125,3.098,1126,3.376,1127,2.797,1128,3.376,1129,3.376,1130,3.376,1131,3.376,1132,3.098,1133,3.376,1134,3.098,1135,3.376,1136,3.376,1137,4.798,1138,4.489,1139,3.376,1140,4.798,1141,3.376,1142,3.376,1143,4.244,1144,2.986,1145,3.376,3630,4.541]],["title/classes/Scope.html",[31,0.125,1157,2.408]],["body/classes/Scope.html",[3,0.098,4,0.082,5,0.06,8,0.257,9,0.857,13,0.313,14,0.005,15,0.192,22,0.087,31,0.148,35,2.819,69,1.211,78,1.116,114,0.635,128,1.043,168,3.37,172,0.003,173,0.003,175,1.39,182,1.476,187,0.757,189,1.102,190,0.655,199,1.131,355,1.49,356,1.74,385,1.853,386,1.95,477,2.569,975,4.567,1157,3.683,1188,6.513,1189,6.513,1193,5.883,1194,6.971,1196,6.72,1202,5.883,1203,6.577,1363,3.306,1437,4.033,1776,5.883,3393,7.295,3631,5.514,3632,7.912,3633,7.912,3634,7.114,3635,6.133,3636,6.133,3637,6.133,3638,6.133,3639,6.133,3640,6.133,3641,7.912,3642,7.912,3643,6.133,3644,6.133,3645,6.133]],["title/classes/ServerConsole.html",[31,0.125,3646,4.308]],["body/classes/ServerConsole.html",[3,0.099,4,0.083,5,0.061,8,0.261,12,0.833,13,0.255,14,0.004,15,0.194,22,0.088,31,0.15,69,1.229,78,1.126,114,0.641,168,3.964,172,0.003,173,0.003,175,1.41,182,1.49,187,0.697,189,1.113,190,0.661,199,1.473,207,3.138,216,2.422,270,3.402,329,2.524,349,1.831,842,6.12,846,5.745,856,3.012,1700,5.596,1703,6.652,1705,6.652,1713,6.998,1960,7.75,1963,5.602,1974,4.447,2187,6.35,2207,6.019,2909,5.916,3107,5.596,3646,6.652,3647,6.223,3648,7.987,3649,6.223,3650,6.92,3651,6.223,3652,7.987,3653,6.256,3654,6.223,3655,7.182,3656,6.223,3657,6.223]],["title/modules/ServerConsoleModule.html",[257,1.382,3658,3.846]],["body/modules/ServerConsoleModule.html",[3,0.11,4,0.091,5,0.067,14,0.005,15,0.245,19,1.208,22,0.097,31,0.165,172,0.004,173,0.004,257,2.268,259,2.654,260,3.744,268,4.193,269,3.193,270,2.921,272,3.557,273,3.744,838,7.506,844,5.1,846,4.81,856,3.319,1714,5.712,2174,3.989,2327,6.639,2783,3.697,3097,7.506,3646,7.072,3658,7.801,3659,6.167,3660,6.859,3661,6.859,3662,8.492,3663,6.859,3664,6.859,3665,6.859,3666,6.859]],["title/controllers/ServerController.html",[964,2.167,3667,4.051]],["body/controllers/ServerController.html",[3,0.12,4,0.1,5,0.073,8,0.314,12,0.847,14,0.004,15,0.182,19,1.321,22,0.106,31,0.181,60,5.079,73,5.524,78,1.058,172,0.004,173,0.004,182,1.673,187,0.593,199,1.383,207,3.782,349,1.72,385,2.709,964,3.757,966,3.366,1960,8.278,1962,6.669,1963,4.953,1973,6.248,1974,3.782,3667,7.024,3668,7.502,3669,7.502]],["title/modules/ServerModule.html",[257,1.382,3670,3.676]],["body/modules/ServerModule.html",[3,0.069,4,0.058,5,0.042,12,0.896,13,0.138,14,0.005,15,0.249,19,0.763,22,0.088,24,3.965,25,3.077,26,3.077,27,3.077,28,3.077,31,0.15,39,3.077,43,1.979,44,2.016,45,1.814,46,1.909,47,2.016,72,2.964,78,0.879,112,3.61,118,2.848,123,1.377,128,1.061,138,2.848,139,2.667,140,2.848,145,0.948,149,0.798,172,0.003,173,0.003,211,2.016,216,1.09,252,2.452,257,2.43,258,6.025,259,3.095,260,2.75,264,5.807,268,3.08,269,2.016,270,1.844,273,3.526,278,3.606,323,1.359,328,1.064,355,1.515,356,1.229,370,2.628,372,2.57,405,1.626,801,3.842,862,6.025,966,3.589,1339,2.848,1694,2.753,1706,2.095,1869,3.22,1926,3.73,1974,3.686,2076,3.077,2077,2.848,2078,2.753,2079,3.391,2098,2.848,2101,3.965,2123,2.667,2327,5.807,2369,4.885,2370,4.885,2371,4.885,2566,2.518,2619,3.22,2783,3.362,2882,6.025,2885,3.606,2914,2.753,2999,6.025,3062,3.077,3068,2.848,3071,2.955,3072,2.955,3102,3.22,3103,3.22,3104,4.885,3105,4.885,3106,4.638,3113,3.391,3116,3.077,3117,3.391,3118,4.885,3119,3.391,3120,3.391,3122,2.955,3124,4.432,3127,4.885,3163,2.955,3315,6.025,3362,2.667,3569,3.22,3667,6.64,3670,7.392,3671,3.894,3672,3.894,3673,6.025,3674,3.606,3675,4.885,3676,3.894,3677,3.894,3678,3.894,3679,3.894,3680,3.894,3681,3.894,3682,3.894,3683,3.894,3684,3.894,3685,3.894,3686,3.894,3687,3.22,3688,3.894,3689,3.894,3690,6.661,3691,3.606,3692,3.606,3693,3.606,3694,3.606,3695,3.606,3696,3.606,3697,3.606,3698,3.606,3699,3.606,3700,3.606,3701,6.661,3702,3.077,3703,3.894,3704,3.606,3705,3.391,3706,3.894,3707,2.955,3708,3.894,3709,3.894,3710,3.894,3711,5.194,3712,4.638]],["title/modules/ServerTestModule.html",[257,1.382,3712,3.846]],["body/modules/ServerTestModule.html",[3,0.065,4,0.054,5,0.04,12,0.882,13,0.19,14,0.005,15,0.247,19,0.716,22,0.084,24,3.786,25,2.887,26,2.887,27,2.887,28,2.887,31,0.143,39,4.232,43,1.857,44,1.891,45,1.702,46,1.791,47,1.891,72,3.148,78,0.84,112,3.481,114,0.326,118,2.672,123,1.292,128,1.013,138,2.672,139,2.503,140,2.672,145,0.889,149,0.749,172,0.002,173,0.002,182,0.758,187,0.321,189,0.566,190,0.336,199,0.749,211,1.891,216,1.022,252,3.373,257,2.383,258,5.894,259,3.453,260,2.625,264,5.68,268,2.941,269,1.891,270,1.731,273,3.422,278,3.384,323,1.276,328,0.999,355,1.447,356,1.153,370,2.971,372,2.905,405,2.236,438,1.731,801,3.668,862,5.894,966,3.484,1339,2.672,1694,2.583,1706,2.882,1869,3.021,1926,4.642,1974,3.554,2076,2.887,2077,2.672,2078,2.583,2079,3.182,2097,3.021,2098,3.917,2101,4.482,2123,3.668,2327,5.68,2369,4.664,2370,4.664,2371,4.664,2566,3.463,2619,3.021,2783,3.8,2882,5.894,2885,3.384,2914,3.786,2999,5.894,3062,2.887,3068,3.917,3071,2.772,3072,2.772,3102,3.021,3103,3.021,3104,4.664,3105,4.664,3106,4.428,3113,3.182,3116,2.887,3117,3.182,3118,4.664,3119,3.182,3120,3.182,3122,5.64,3124,5.01,3127,6.08,3163,4.064,3315,5.894,3362,3.668,3569,3.021,3667,6.473,3670,5.873,3673,5.894,3674,3.384,3675,3.182,3676,3.653,3677,3.653,3678,3.653,3679,3.653,3680,3.653,3681,3.653,3682,3.653,3683,3.653,3684,3.653,3685,3.653,3686,3.653,3687,3.021,3688,3.653,3689,3.653,3690,6.465,3691,3.384,3692,3.384,3693,3.384,3694,3.384,3695,3.384,3696,3.384,3697,3.384,3698,3.384,3699,3.384,3700,3.384,3701,6.465,3702,2.887,3703,3.653,3704,3.384,3705,3.182,3706,3.653,3707,4.064,3708,5.355,3709,5.355,3710,5.355,3711,4.959,3712,7.704,3713,3.653,3714,3.653,3715,4.063]],["title/entities/StorageProvider.html",[316,0.88,504,3.008]],["body/entities/StorageProvider.html",[0,0.663,3,0.102,4,0.085,5,0.062,8,0.267,9,0.878,12,0.991,13,0.316,14,0.005,15,0.216,22,0.115,31,0.154,33,1.333,172,0.003,173,0.003,187,0.742,190,0.671,205,2.055,316,1.38,323,2.002,349,2.153,354,3.2,355,1.549,356,1.81,360,2.917,503,2.395,504,4.718,518,2.431,520,2.082,940,2.586,2058,6.988,2235,7.82,2239,7.355,2241,7.762,2647,6.756,2648,5.734,2649,7.82,2650,5.734,2651,5.734,2652,5.734,2653,5.734,2654,5.734,2655,5.734,2656,5.734,2657,5.734,2658,5.734,2659,5.734,3716,6.377,3717,6.377,3718,6.377,3719,5.734,3720,6.377]],["title/injectables/StorageProviderRepo.html",[18,0.976,2331,4.051]],["body/injectables/StorageProviderRepo.html",[3,0.085,4,0.071,5,0.052,8,0.224,10,1.51,13,0.317,14,0.004,15,0.198,18,1.363,19,0.941,22,0.076,31,0.129,33,1.51,74,2.884,77,2.608,78,0.753,114,0.798,128,0.909,129,1.574,168,3.077,172,0.003,173,0.003,182,1.347,187,0.794,189,1.386,190,0.823,192,5.124,199,1.854,300,1.842,308,2.863,316,1.492,323,2.752,328,1.313,426,6.113,504,4.759,532,6.975,534,6.409,535,4.592,536,5.657,537,5.657,538,5.133,539,3.805,540,5.657,541,5.657,542,5.657,548,3.796,550,4.184,552,4.184,554,3.796,556,4.184,558,4.184,560,4.184,562,4.184,2331,5.657,2345,4.449,2346,4.449,2347,4.449,2348,4.449,2349,4.449,2350,4.449,2351,4.449,2352,4.449,2353,4.449,2355,4.804,3335,6.495,3343,6.495,3721,5.342,3722,5.342,3723,5.342]],["title/entities/Submission.html",[316,0.88,2672,3.186]],["body/entities/Submission.html",[0,0.459,3,0.07,4,0.059,5,0.079,8,0.185,9,0.684,12,0.864,13,0.308,14,0.005,15,0.222,22,0.09,31,0.106,33,0.922,37,2.154,78,0.891,128,1.075,145,1.869,149,1.638,172,0.003,173,0.003,187,0.753,190,0.523,205,1.421,308,2.064,316,1.075,323,1.384,349,2.184,354,2.873,355,1.071,356,1.252,360,2.272,385,2.231,386,2.349,467,2.323,477,3.094,500,1.403,502,1.788,503,1.656,506,1.91,510,1.706,518,3.769,520,1.44,582,3.986,747,3.243,904,4.479,905,3.892,915,2.223,920,2.497,940,1.788,1026,6.359,1120,3.407,1127,2.716,1437,4.156,2163,5.169,2580,4.835,2581,2.716,2660,4.949,2661,3.965,2662,6.317,2663,7.253,2664,6.717,2665,7.989,2666,7.989,2667,7.794,2668,3.965,2669,3.965,2670,3.965,2671,2.9,2672,3.892,2673,5.682,2674,5.682,2675,5.682,2676,5.682,2677,5.682,2678,5.682,2679,7.253,2680,5.682,2681,5.682,2682,3.965,2683,3.965,2684,3.965,2685,3.965,2686,3.134,2687,3.965,2688,6.641,2689,3.965,2690,5.682,2691,3.965,2692,5.248,2693,3.965,2694,3.965,2695,3.965,2696,3.965,2697,3.965,3724,4.41,3725,4.41,3726,4.41,3727,4.41,3728,4.41,3729,4.41,3730,4.41,3731,4.41,3732,4.41]],["title/classes/SubmissionFactory.html",[31,0.125,3733,4.308]],["body/classes/SubmissionFactory.html",[3,0.066,4,0.055,5,0.04,8,0.173,9,0.654,10,1.49,12,0.57,13,0.319,14,0.004,15,0.202,22,0.059,31,0.1,33,1.262,37,2.091,45,2.528,54,1.793,69,0.817,71,1.92,72,3.175,78,0.851,114,0.753,128,1.027,168,1.763,172,0.003,173,0.003,175,0.938,182,1.126,187,0.779,189,1.374,190,0.776,192,5.032,199,1.696,211,1.926,216,1.793,316,1.417,320,3.043,323,1.895,328,1.017,367,3.67,385,2.626,386,2.765,391,7.117,393,7.117,395,3.077,397,5.526,398,5.823,399,4.488,400,5.823,401,5.778,402,4.488,403,4.488,404,4.289,405,2.267,406,4.833,407,5.298,408,6.537,409,5.682,411,3.254,413,4.488,414,3.077,415,4.488,417,4.554,418,4.978,419,4.435,420,4.823,421,3.109,422,4.488,423,3.077,424,2.475,425,2.94,426,4.842,427,3.077,428,3.077,429,3.077,430,4.683,432,5.063,433,3.077,434,7.088,435,5.823,437,3.518,438,3.335,439,3.077,441,3.077,443,2.721,444,3.077,445,5.932,447,3.077,448,4.488,449,4.488,451,3.077,452,2.475,453,3.077,454,3.077,457,3.077,459,3.077,461,3.241,582,1.763,771,5.682,852,2.824,998,3.241,1001,3.241,1002,3.241,1003,3.241,1004,3.241,1005,3.241,1006,3.241,1007,3.241,1008,3.241,1009,3.241,1010,3.241,1011,3.241,1014,3.241,1020,3.446,2580,2.344,2660,3.241,2662,4.727,2664,3.446,2672,3.718,3733,5.933,3734,3.721,3735,4.138,3736,3.241,3737,4.138,3738,3.721,3739,4.138,3740,3.721,3741,3.721,3742,3.721]],["title/injectables/SubmissionRepo.html",[18,0.976,3743,4.651]],["body/injectables/SubmissionRepo.html",[3,0.091,4,0.076,5,0.056,8,0.239,13,0.287,14,0.005,15,0.218,18,1.424,19,1.005,22,0.081,31,0.137,35,2.43,69,1.127,71,1.815,74,2.826,76,3.318,77,2.6,78,1.193,114,0.722,128,1.531,129,2.651,172,0.003,173,0.003,182,1.408,187,0.711,189,1.254,190,0.745,199,1.56,300,1.967,308,3.323,328,1.402,329,2.314,355,1.834,356,1.619,357,2.56,370,2.051,543,3.412,544,4.741,546,3.727,582,2.43,640,3.888,890,3.752,939,5.612,975,3.514,1026,4.964,1046,3.412,1047,4.275,1149,6.787,1157,2.656,1196,3.752,2396,4.468,2580,3.231,2667,4.751,2671,4.964,2672,3.514,2783,3.076,3743,6.787,3744,5.705,3745,7.548,3746,7.548,3747,5.705,3748,7.548,3749,5.705,3750,7.548,3751,5.705,3752,7.548,3753,5.705,3754,7.548,3755,5.705,3756,7.548,3757,5.705]],["title/injectables/SymetricKeyEncryptionService.html",[18,0.976,2070,3.846]],["body/injectables/SymetricKeyEncryptionService.html",[3,0.108,4,0.09,5,0.066,8,0.284,12,1.003,13,0.293,14,0.004,15,0.205,17,3.845,18,1.592,19,1.196,22,0.096,31,0.164,35,1.951,69,1.341,71,2.159,73,6.203,78,1.19,114,0.737,172,0.004,173,0.004,182,1.574,187,0.725,189,1.279,190,0.76,199,1.556,300,2.34,928,4.633,1065,3.535,2062,7.588,2070,6.275,2092,7.588,2245,6.609,3758,6.789,3759,6.789,3760,6.789,3761,8.439,3762,6.789,3763,8.439,3764,6.789,3765,6.789,3766,6.105,3767,6.789,3768,6.789,3769,6.789,3770,6.789,3771,6.789]],["title/entities/System.html",[316,0.88,1868,2.665]],["body/entities/System.html",[3,0.105,4,0.088,5,0.081,8,0.276,9,0.898,12,0.944,13,0.319,14,0.005,15,0.201,22,0.094,31,0.159,33,1.381,172,0.003,173,0.003,187,0.716,190,0.787,205,2.128,211,3.074,316,1.411,323,2.073,349,2.078,354,3.186,355,1.604,356,1.874,360,2.982,370,2.374,503,2.479,520,2.156,539,3.478,669,4.692,940,2.677,1095,2.963,1166,3.948,1868,4.671,2063,4.91,2163,4.58,2173,3.84,2265,4.692,2375,6.742,2473,4.692,2812,5.498,2813,5.171,2814,4.197,3772,6.603,3773,9.067,3774,6.603,3775,6.603,3776,6.603,3777,6.603,3778,8.293,3779,6.603,3780,8.293,3781,6.603]],["title/classes/TargetInfoMapper.html",[31,0.125,3287,4.308]],["body/classes/TargetInfoMapper.html",[3,0.116,4,0.097,5,0.071,8,0.305,10,1.524,13,0.232,14,0.004,15,0.214,22,0.103,31,0.176,78,1.028,114,0.707,128,1.24,149,1.344,172,0.004,173,0.004,175,1.652,182,1.644,187,0.576,189,1.016,190,0.603,199,1.344,328,1.792,405,3.559,696,5.43,767,3.755,1093,3.528,1098,6.259,3260,6.071,3261,7.32,3287,7.341,3619,6.071,3621,6.071,3782,8.815,3783,8.815,3784,7.29,3785,7.29,3786,7.29]],["title/classes/TargetInfoResponse.html",[31,0.125,3261,3.846]],["body/classes/TargetInfoResponse.html",[3,0.109,4,0.091,5,0.067,8,0.285,9,0.916,10,2.137,12,0.908,13,0.293,14,0.004,15,0.165,22,0.097,31,0.164,69,1.671,114,0.829,172,0.004,173,0.004,175,1.545,187,0.727,189,0.95,190,0.564,216,2.315,316,1.637,349,1.939,644,3.675,648,3.964,652,3.73,654,2.35,660,3.115,661,3.174,680,3.299,681,4.265,682,4.265,1093,4.655,3261,7.354,3379,5.339,3626,5.677,3627,5.677,3628,6.13,3629,6.13,3787,9.619]],["title/entities/Task.html",[316,0.88,582,2.203]],["body/entities/Task.html",[0,0.504,3,0.049,4,0.041,5,0.03,8,0.283,9,0.646,10,0.647,12,0.734,13,0.287,14,0.005,15,0.197,22,0.104,31,0.117,33,0.647,35,2.335,37,2.076,54,1.34,78,1.309,82,3.783,114,0.694,123,1.54,128,1.724,145,1.936,148,1.318,149,1.498,172,0.002,173,0.002,187,0.699,190,0.732,205,0.997,216,1.502,308,1.949,316,0.824,323,0.971,349,1.982,354,2.714,355,0.752,356,0.878,360,1.741,370,2.146,372,1.275,377,1.799,381,2.409,385,1.803,386,1.898,394,2.611,477,2.5,495,3.144,500,2.675,502,1.254,503,1.162,506,1.34,510,1.197,516,1.846,518,3.206,520,1.01,530,1.906,531,1.752,581,2.675,582,3.683,583,1.906,584,3.991,661,1.44,664,1.906,665,3.824,666,4.152,683,3.074,747,2.394,765,4.821,771,5.305,772,5.305,773,5.531,774,5.209,775,5.524,785,3.442,904,3.404,905,1.906,912,2.423,915,1.56,924,2.198,934,2.198,936,2.111,940,1.254,944,1.709,963,4.821,1028,2.743,1029,2.896,1032,1.594,1035,4.441,1036,2.035,1047,3.824,1080,3.442,1120,2.611,1222,2.035,1363,3.217,1463,2.035,1706,2.344,2004,4.789,2163,1.709,2294,2.198,2639,2.035,2671,5.113,2672,3.676,2686,2.198,2692,3.442,2698,3.442,2699,2.3,2700,2.423,2701,2.423,2702,2.423,2703,2.423,2704,4.438,2705,2.423,2706,2.423,2707,3.601,2708,3.793,2709,3.793,2710,3.793,2711,2.423,2712,2.423,2713,2.423,2714,2.423,2715,2.423,2716,2.423,2717,3.793,2718,3.793,2719,3.793,2720,2.423,2721,2.423,2722,2.423,2723,2.423,2724,2.423,2725,2.423,2726,2.423,2727,2.423,2728,2.423,2729,2.198,2730,2.423,2731,2.423,2732,3.793,2733,2.423,2734,3.793,2735,3.793,2736,2.423,2737,2.423,2738,2.423,2739,2.423,2740,2.423,2741,3.793,2742,2.423,2743,2.423,2744,2.423,2745,2.423,2746,3.793,2747,2.423,2748,2.423,2749,2.423,2750,2.423,2751,2.423,2752,5.021,2753,2.423,2754,2.423,2755,2.423,2756,2.198,2757,2.198,2758,3.793,2759,2.423,2760,2.423,2761,2.423,2762,2.423,2763,2.423,2764,3.793,2765,1.85,2766,2.198,2767,2.423,2768,2.423,2769,2.423,2770,2.423,2771,2.423,2772,3.793,2773,3.079,2774,2.423,2775,2.423,2776,2.423,2777,3.793,2778,2.423,2779,2.423,2780,2.423,2781,2.423,2782,1.85,2783,1.668,2784,3.601,2785,2.423,2786,5.288,2787,2.423,2788,2.423,2789,2.423,3788,3.094,3789,3.094,3790,3.094,3791,3.094,3792,3.094,3793,3.094,3794,3.094,3795,3.094,3796,3.094,3797,3.094]],["title/injectables/TaskAuthorizationService.html",[18,0.976,3798,3.846]],["body/injectables/TaskAuthorizationService.html",[3,0.063,4,0.052,5,0.038,8,0.165,13,0.282,14,0.005,15,0.168,18,1.096,19,0.692,22,0.098,31,0.095,35,2.66,69,1.148,71,2.199,74,2.393,76,1.393,77,2.065,78,1.245,114,0.708,128,1.645,129,2.037,145,2.29,172,0.002,173,0.002,182,1.084,187,0.698,189,1.23,190,0.731,199,1.574,279,2.07,300,1.355,312,1.763,316,0.669,328,0.966,452,2.35,500,2.995,516,2.636,581,3.2,582,3.761,584,1.865,585,5.104,586,5.807,626,4.839,627,4.839,634,3.209,672,2.793,941,4.327,975,1.829,1045,3.965,1095,2.608,1113,5.007,1207,3.273,1592,2.793,1721,2.35,1945,2.226,2281,4.547,2293,5.141,2472,2.793,2908,2.922,3515,6.025,3798,4.321,3799,3.534,3800,5.811,3801,5.811,3802,5.811,3803,5.811,3804,6.914,3805,5.811,3806,3.93,3807,5.811,3808,8.153,3809,7.354,3810,3.93,3811,5.811,3812,3.93,3813,5.811,3814,3.93,3815,5.811,3816,3.93,3817,3.93,3818,7.354,3819,3.93,3820,5.811,3821,3.93,3822,3.534,3823,3.534,3824,3.534,3825,3.534,3826,3.93,3827,5.811,3828,3.078,3829,3.93,3830,3.93,3831,7.64,3832,5.225,3833,3.93,3834,5.225,3835,3.93,3836,3.93,3837,5.225,3838,5.811,3839,3.93,3840,3.93,3841,3.93,3842,3.93,3843,5.225,3844,3.93,3845,3.93,3846,3.93,3847,3.93,3848,3.93,3849,5.811,3850,5.811,3851,3.93,3852,3.93,3853,5.811,3854,9.066,3855,3.93,3856,5.811,3857,3.93,3858,7.64,3859,7.64,3860,3.93,3861,3.534,3862,3.93,3863,3.93,3864,3.93,3865,3.93]],["title/controllers/TaskController.html",[964,2.167,3866,4.308]],["body/controllers/TaskController.html",[3,0.089,4,0.074,5,0.054,8,0.233,13,0.237,14,0.005,15,0.24,19,0.98,22,0.079,31,0.134,71,1.77,74,2.677,77,2.409,78,1.256,114,0.596,128,1.685,129,2.187,149,1.369,172,0.003,173,0.003,182,1.384,187,0.586,189,1.034,190,0.614,199,1.369,328,1.368,329,2.256,349,1.701,603,3.327,640,4.59,654,1.918,656,2.692,767,2.37,964,2.33,966,2.497,968,3.327,971,5.256,972,6.691,974,6.005,975,3.889,976,3.659,977,3.537,978,3.659,985,3.659,987,4.921,992,4.804,993,4.493,2820,5.936,2823,4.633,3866,6.181,3867,5.564,3868,7.511,3869,5.564,3870,5.564,3871,7.423,3872,5.564,3873,6.211,3874,5.564,3875,4.357,3876,4.633,3877,5.564,3878,5.564,3879,5.564,3880,7.423,3881,5.564,3882,7.423,3883,5.564,3884,5.564,3885,7.423,3886,5.564,3887,5.564,3888,5.564]],["title/classes/TaskFactory.html",[31,0.125,3736,4.051]],["body/classes/TaskFactory.html",[3,0.063,4,0.053,5,0.039,8,0.166,9,0.633,10,1.452,12,0.552,13,0.321,14,0.004,15,0.186,22,0.056,31,0.095,33,1.221,35,2.203,37,2.047,45,2.447,54,1.715,69,1.154,71,1.858,72,3.108,78,0.979,114,0.768,123,1.858,128,1.304,145,1.873,149,0.73,168,1.686,172,0.002,173,0.002,175,0.897,182,1.09,187,0.779,189,1.374,190,0.78,192,4.987,199,1.675,211,1.842,216,1.747,316,1.391,320,2.945,323,1.834,328,0.973,367,3.577,385,2.674,386,2.721,391,7.065,393,7.065,395,2.943,397,5.439,398,5.7,399,4.343,400,5.7,401,5.713,402,4.343,403,4.343,404,4.151,405,2.194,406,4.859,407,5.163,408,6.455,409,5.579,411,3.149,413,4.343,414,2.943,415,4.343,417,4.458,418,4.873,419,4.341,420,4.722,421,3.009,422,4.343,423,2.943,424,2.367,425,2.812,426,4.755,427,2.943,428,2.943,429,2.943,430,4.584,432,4.934,433,2.943,434,7.114,435,5.7,437,3.428,438,3.265,439,2.943,441,2.943,443,2.603,444,2.943,445,5.839,447,2.943,448,4.343,449,4.343,451,2.943,452,2.367,453,2.943,454,2.943,457,2.943,459,2.943,461,3.1,516,2.227,582,2.488,614,6.004,665,2.241,998,3.1,1001,3.1,1002,3.1,1003,3.1,1004,3.1,1005,3.1,1006,3.1,1007,3.1,1008,3.1,1009,3.1,1010,3.1,1011,3.1,1014,3.1,1019,3.1,1020,4.865,1963,2.186,2004,4.276,2698,2.812,2765,2.367,3736,5.438,3889,3.559,3890,3.958,3891,5.841,3892,3.958,3893,3.958,3894,5.252,3895,3.559,3896,3.559,3897,2.812]],["title/classes/TaskListResponse.html",[31,0.125,3875,4.051]],["body/classes/TaskListResponse.html",[3,0.087,4,0.072,5,0.053,8,0.228,9,0.792,10,1.728,12,0.896,13,0.303,14,0.005,15,0.2,22,0.104,31,0.176,33,1.53,37,2.783,69,1.445,82,3.847,114,0.709,172,0.003,173,0.003,175,1.234,187,0.728,189,0.759,190,0.763,192,4.551,207,2.746,216,1.371,349,2.025,380,4.257,381,2.738,383,4.166,438,3.117,577,2.746,582,3.117,652,3.997,653,4.647,654,1.877,655,6.029,656,2.636,660,2.489,661,2.535,662,3.582,663,3.582,664,3.355,665,3.085,666,3.085,667,5.639,746,5.81,747,1.931,767,2.32,987,5.09,992,5.117,993,4.785,1064,5.973,1065,3.861,1066,4.812,1069,4.265,1070,4.265,1071,4.265,1081,3.582,1082,3.582,1218,3.355,3875,5.731,3898,4.897,3899,7.72,3900,5.446,3901,5.446,3902,5.441,3903,4.536,3904,4.897,3905,3.462,3906,4.897]],["title/classes/TaskMapper.html",[31,0.125,3876,4.308]],["body/classes/TaskMapper.html",[3,0.108,4,0.09,5,0.066,8,0.282,10,1.408,13,0.215,14,0.005,15,0.222,22,0.096,31,0.162,78,0.95,82,3.909,114,0.674,128,1.63,149,1.242,172,0.003,173,0.003,175,1.526,182,1.566,187,0.532,189,0.938,190,0.557,199,1.242,328,1.655,380,3.469,383,3.396,405,3.436,582,3.576,583,5.9,667,4.596,696,5.172,767,3.576,1054,4.596,3876,6.993,3899,7.502,3907,6.735,3908,8.397,3909,6.735,3910,8.397,3911,5.609,3912,6.735,3913,6.735,3914,6.735,3915,8.397,3916,6.735,3917,6.735,3918,6.735,3919,6.735,3920,6.735,3921,6.735,3922,6.735,3923,6.735,3924,6.735,3925,6.735,3926,6.735,3927,6.735,3928,6.735,3929,6.735]],["title/modules/TaskModule.html",[257,1.382,3673,3.53]],["body/modules/TaskModule.html",[3,0.104,4,0.086,5,0.064,14,0.004,15,0.241,19,1.145,22,0.092,31,0.157,172,0.003,173,0.003,257,2.193,259,2.515,260,3.62,267,5.641,268,4.055,269,3.026,270,2.769,272,3.44,273,2.866,279,3.424,328,1.598,585,5.956,586,6.55,587,6.55,966,3.685,1996,4.436,3515,6.797,3673,7.316,3798,7.406,3866,7.497,3873,7.406,3930,5.845,3931,5.845,3932,6.5,3933,6.5,3934,6.5]],["title/injectables/TaskRepo.html",[18,0.976,587,3.402]],["body/injectables/TaskRepo.html",[3,0.056,4,0.047,5,0.034,8,0.147,13,0.305,14,0.005,15,0.188,18,1.008,19,0.619,22,0.05,31,0.085,35,1.858,69,0.694,71,1.118,72,4.008,74,2.646,76,1.246,77,2.37,78,1.019,114,0.624,123,2.298,128,1.702,129,2.411,149,1.741,172,0.002,173,0.002,182,0.997,187,0.614,189,1.083,190,0.643,199,1.433,216,0.884,300,1.212,308,3.205,320,3.642,328,0.864,329,1.425,330,3.01,355,1.298,356,0.997,357,1.577,381,1.656,386,1.118,411,4.726,438,3.486,500,2.057,543,2.102,544,3.806,546,2.639,581,2.057,582,3.077,584,3.688,587,3.515,603,4.32,608,3.196,614,2.753,615,2.753,616,5.709,666,1.99,747,2.561,941,4.092,975,2.488,993,2.694,1029,3.867,1045,2.398,1046,2.102,1047,4.092,1121,4.593,1150,6.282,1156,4.185,1157,3.363,1174,3.99,1175,4.092,1177,4.45,1178,4.45,1179,4.45,1180,3.798,1182,2.753,1196,4.751,1211,2.311,1213,2.753,2004,2.165,2185,3.662,2581,4.45,2671,3.515,2752,2.613,2757,3.798,3935,3.515,3936,6.466,3937,6.466,3938,6.466,3939,5.344,3940,3.515,3941,3.515,3942,3.515,3943,4.805,3944,8.508,3945,5.344,3946,3.515,3947,3.515,3948,3.515,3949,3.515,3950,5.344,3951,3.515,3952,7.301,3953,3.16,3954,3.16,3955,3.16,3956,3.16,3957,7.772,3958,3.515,3959,3.515,3960,3.515,3961,3.515,3962,3.515,3963,3.515,3964,3.515,3965,3.515,3966,3.515,3967,3.515,3968,3.515,3969,3.515,3970,3.515,3971,3.16,3972,2.497,3973,3.515,3974,3.515,3975,3.515,3976,3.515,3977,3.515,3978,3.515,3979,3.515,3980,3.515,3981,3.515,3982,3.515,3983,3.515,3984,3.515,3985,3.515,3986,3.515,3987,3.515,3988,3.515,3989,3.515,3990,5.344,3991,3.515,3992,2.927,3993,2.927,3994,2.927,3995,3.515,3996,6.466,3997,3.515,3998,3.515,3999,3.515,4000,3.515,4001,3.515,4002,3.515,4003,3.515,4004,3.515,4005,3.515,4006,3.515,4007,5.344,4008,3.515,4009,3.515,4010,3.515,4011,3.515,4012,3.515,4013,3.515,4014,7.225,4015,5.344,4016,3.515,4017,5.344,4018,3.515,4019,3.515,4020,3.515,4021,5.344,4022,3.515]],["title/classes/TaskResponse.html",[31,0.125,3899,4.051]],["body/classes/TaskResponse.html",[3,0.081,4,0.067,5,0.049,8,0.212,9,0.754,10,1.879,12,0.957,13,0.323,14,0.005,15,0.193,22,0.099,31,0.168,33,1.058,37,2.125,69,1.375,82,4.183,114,0.745,172,0.003,173,0.003,175,1.147,187,0.794,189,0.705,190,0.814,207,3.51,216,2.157,349,2.281,380,4.629,381,3.003,383,4.53,385,1.529,386,1.61,577,4.012,582,3.389,644,2.728,652,4.108,653,4.885,654,1.744,655,5.848,656,2.449,660,2.313,661,2.356,662,3.328,663,3.328,664,3.117,665,4.507,666,4.507,667,6.131,686,4.214,691,5.797,767,2.965,987,2.795,992,3.753,993,3.51,1064,4.288,1065,2.916,1066,3.328,1081,3.328,1082,3.328,1218,4.288,3875,3.963,3898,4.551,3899,7.589,3902,5.917,3903,4.214,3904,6.259,3905,4.425,3906,4.551,4023,5.061,4024,5.061,4025,5.061,4026,5.061,4027,5.061,4028,5.061,4029,5.061,4030,5.061,4031,5.061,4032,5.061,4033,5.061]],["title/classes/TaskScope.html",[31,0.125,3952,4.308]],["body/classes/TaskScope.html",[3,0.057,4,0.047,5,0.035,8,0.149,9,0.583,13,0.311,14,0.005,15,0.158,22,0.05,31,0.086,33,1.126,35,2.719,76,2.307,78,1.35,114,0.768,123,2.07,128,1.236,149,0.655,168,1.513,172,0.002,173,0.002,175,0.805,182,1.005,187,0.777,189,1.333,190,0.792,192,3.352,199,1.783,308,3.353,328,0.873,355,0.863,356,1.008,381,2.791,385,1.073,386,2.614,495,3.635,500,2.865,516,1.354,581,1.713,582,1.513,584,3.088,615,5.689,665,4.422,666,4.114,772,4.441,975,3.975,1019,2.782,1045,3.676,1121,5.592,1157,3.975,1161,6.828,1168,2.958,1188,4.006,1189,4.006,1193,4.006,1194,2.524,1195,2.782,1196,5.785,1197,2.782,1202,2.641,1203,3.828,1204,2.782,2004,3.318,2163,4.011,2358,5.42,2707,4.006,3030,2.958,3031,4.844,3033,4.844,3038,3.194,3952,8.523,3992,4.486,3993,4.486,3994,6.049,4034,9.67,4035,5.387,4036,5.387,4037,5.387,4038,5.387,4039,5.387,4040,5.387,4041,5.387,4042,5.387,4043,5.387,4044,5.387,4045,5.387,4046,3.552,4047,5.387,4048,3.552,4049,3.552,4050,5.387,4051,3.552,4052,5.387,4053,3.552,4054,5.387,4055,3.552,4056,5.387,4057,3.552,4058,5.387,4059,3.552,4060,5.387,4061,3.552,4062,5.387,4063,3.552,4064,5.387,4065,3.552,4066,5.387,4067,3.552,4068,3.552,4069,6.508,4070,3.552,4071,5.387,4072,3.552,4073,3.552,4074,3.552]],["title/classes/TaskStatusMapper.html",[31,0.125,3911,4.308]],["body/classes/TaskStatusMapper.html",[3,0.118,4,0.098,5,0.072,8,0.309,13,0.235,14,0.004,15,0.215,22,0.105,31,0.178,78,1.039,82,3.431,114,0.591,128,1.254,149,1.359,172,0.004,173,0.004,175,1.67,182,1.655,187,0.582,189,1.027,190,0.61,199,1.359,328,1.812,405,3.575,696,5.466,764,7.979,765,6.498,767,3.78,3902,7.079,3903,6.138,3911,7.39,4075,8.874,4076,7.37,4077,7.37,4078,7.37,4079,7.37]],["title/classes/TaskStatusResponse.html",[31,0.125,3902,3.846]],["body/classes/TaskStatusResponse.html",[3,0.099,4,0.082,5,0.06,8,0.259,9,0.862,13,0.319,14,0.004,15,0.15,22,0.088,31,0.149,37,2.626,69,1.572,114,0.497,172,0.003,173,0.003,175,1.402,187,0.79,189,0.862,190,0.512,349,2.254,500,3.128,644,3.336,652,4.258,654,2.133,771,6.556,772,6.556,773,6.319,774,6.827,775,6.827,782,5.565,783,5.565,784,5.565,785,4.398,786,5.565,963,6.319,3902,7.144,4080,10.132,4081,6.189,4082,6.189,4083,6.189,4084,6.189,4085,6.189,4086,6.189,4087,6.189,4088,6.189,4089,6.189]],["title/injectables/TaskUC.html",[18,0.976,3873,3.846]],["body/injectables/TaskUC.html",[3,0.056,4,0.047,5,0.034,8,0.148,13,0.248,14,0.005,15,0.175,18,1.011,19,0.622,22,0.05,31,0.085,35,2.715,38,3.903,69,1.059,71,2.062,74,2.649,76,2.76,77,2.373,78,1.238,82,4.087,114,0.625,123,1.705,128,1.751,129,2.816,145,2.093,148,2.283,149,1.619,172,0.002,173,0.002,182,1,187,0.648,189,1.085,190,0.644,199,1.436,267,4.825,279,1.859,292,4.263,300,1.217,308,2.782,327,5.077,328,0.868,371,1.999,381,2.413,386,1.705,438,1.503,516,2.044,582,1.503,583,2.174,587,5.391,595,4.199,603,3.877,608,3.877,629,5.399,630,4.465,631,5.399,632,4.465,666,4.1,765,3.526,938,4.199,941,4.1,987,4.527,1045,3.658,1046,3.206,1121,4.121,1174,5.462,1175,3.036,1211,2.321,1213,2.764,1684,3.174,1894,4.465,2004,3.302,2290,4.199,2525,2.544,2544,7.487,2773,4.603,2820,3.81,3798,5.384,3809,2.939,3818,2.939,3832,4.821,3834,5.829,3837,6.51,3843,6.51,3868,4.821,3873,3.986,3953,4.821,3954,4.821,3955,4.821,3956,4.821,3992,4.465,3993,2.939,3994,4.465,4090,3.529,4091,5.361,4092,7.24,4093,3.529,4094,3.529,4095,5.361,4096,3.529,4097,5.361,4098,3.529,4099,5.361,4100,3.529,4101,5.361,4102,3.529,4103,3.529,4104,3.529,4105,6.483,4106,5.361,4107,5.361,4108,6.483,4109,6.483,4110,5.361,4111,5.361,4112,5.361,4113,7.24,4114,3.529,4115,8.198,4116,3.529,4117,2.939,4118,3.174,4119,3.529,4120,3.529,4121,7.24,4122,5.361,4123,3.529,4124,7.24,4125,5.361,4126,5.361,4127,5.361,4128,5.361,4129,3.529,4130,3.174]],["title/classes/TaskWithStatusVo.html",[31,0.125,583,3.186]],["body/classes/TaskWithStatusVo.html",[0,0.537,3,0.054,4,0.045,5,0.033,8,0.296,9,0.681,10,0.703,12,0.719,13,0.276,14,0.005,15,0.203,22,0.108,31,0.124,33,0.703,35,2.189,37,2.148,54,1.456,69,0.664,78,1.334,82,4.286,114,0.693,123,1.069,128,1.741,145,1.94,148,1.431,149,1.404,172,0.002,173,0.002,175,0.761,187,0.557,189,0.468,190,0.278,205,1.083,216,1.583,308,2.054,316,0.879,354,2.391,355,0.816,356,0.954,360,1.856,370,2.261,372,1.385,377,1.954,381,2.187,394,2.784,477,2.634,495,2.404,500,2.749,502,1.362,503,1.262,506,1.456,510,1.3,516,1.968,518,2.69,520,1.097,530,2.07,531,1.903,581,2.422,582,4.029,583,3.18,584,3.614,661,1.564,664,2.07,665,2.924,666,3.562,683,3.239,747,2.229,765,5.684,771,5.487,772,5.487,773,5.684,774,5.412,775,5.714,785,3.669,904,2.603,905,2.07,915,1.694,924,2.388,934,2.388,936,2.293,940,1.362,944,1.855,963,5.009,1028,1.903,1029,2.009,1032,1.731,1035,4.642,1036,2.21,1047,3.997,1080,2.388,1120,1.811,1222,2.21,1363,3.39,1463,2.21,1706,2.499,2004,4.347,2163,1.855,2294,2.388,2639,2.21,2671,4.642,2672,3.873,2686,2.388,2692,3.669,2698,3.669,2699,2.498,2700,2.631,2701,2.631,2702,2.631,2703,4.044,2704,4.676,2705,2.631,2706,2.631,2707,2.498,2708,2.631,2709,2.631,2710,2.631,2711,2.631,2712,2.631,2713,2.631,2714,2.631,2715,2.631,2716,2.631,2717,4.044,2718,4.044,2719,4.044,2720,2.631,2721,2.631,2722,2.631,2723,2.631,2724,2.631,2725,2.631,2726,2.631,2727,2.631,2728,2.631,2729,2.388,2730,2.631,2731,2.631,2732,4.044,2733,2.631,2734,4.044,2735,4.044,2736,2.631,2737,2.631,2738,2.631,2739,2.631,2740,2.631,2741,4.044,2742,2.631,2743,2.631,2744,2.631,2745,2.631,2746,4.044,2747,2.631,2748,2.631,2749,2.631,2750,2.631,2751,2.631,2752,5.248,2753,2.631,2754,2.631,2755,2.631,2756,2.388,2757,2.388,2758,4.044,2759,2.631,2760,2.631,2761,2.631,2762,2.631,2763,2.631,2764,4.044,2765,2.009,2766,2.388,2767,2.631,2768,2.631,2769,2.631,2770,2.631,2771,2.631,2772,4.044,2773,3.282,2774,2.631,2775,2.631,2776,2.631,2777,4.044,2778,2.631,2779,2.631,2780,2.631,2781,2.631,2782,2.009,2783,1.811,2784,3.839,2785,2.631,2786,5.527,2787,2.631,2788,2.631,2789,2.631,4131,5.163,4132,3.36]],["title/entities/Team.html",[316,0.88,1096,2.608]],["body/entities/Team.html",[0,0.763,3,0.117,4,0.098,5,0.072,8,0.307,9,0.958,12,0.897,13,0.234,14,0.004,15,0.214,22,0.125,31,0.177,33,1.534,114,0.792,172,0.004,173,0.004,187,0.58,205,2.365,316,1.506,323,2.304,345,5.626,349,1.682,354,2.983,355,1.783,356,2.083,503,2.756,520,2.396,661,3.416,940,2.976,944,4.053,1096,4.462,2517,5.215,2790,7.37,2791,6.598,4133,7.338]],["title/entities/TeamNews.html",[316,0.88,1144,3.402]],["body/entities/TeamNews.html",[0,0.472,3,0.073,4,0.1,5,0.044,8,0.19,9,0.699,10,0.949,12,0.906,13,0.275,14,0.005,15,0.229,22,0.122,31,0.197,33,1.709,43,3.43,44,3.495,45,3.144,46,3.309,47,3.495,48,4.047,78,0.64,114,0.518,123,1.444,145,1.89,149,1.384,172,0.003,173,0.003,181,2.518,187,0.359,205,1.463,308,2.669,309,4.121,310,3.867,312,2.038,316,1.469,323,1.426,331,3.227,349,1.041,354,2.897,355,1.103,356,1.289,360,2.32,367,3.867,372,3.093,381,2,405,1.705,467,2.392,495,3.495,502,1.841,503,1.705,506,1.967,510,2.497,512,2.797,513,3.399,514,4.772,518,2.861,520,1.483,531,2.572,581,2.052,592,3.309,670,2.715,675,2.038,888,3.466,900,4.102,901,2.289,920,2.572,921,2.641,948,2.887,1028,2.572,1032,2.339,1091,2.887,1092,3.376,1093,4.643,1095,2.896,1096,3.785,1097,3.376,1098,4.772,1099,3.376,1100,5.334,1101,3.479,1102,4.798,1103,3.859,1104,4.102,1105,4.244,1106,4.937,1107,4.479,1108,3.098,1109,3.376,1110,4.102,1111,3.376,1112,3.376,1113,2.508,1114,3.098,1115,3.227,1116,2.197,1117,3.098,1118,2.887,1119,3.227,1120,3.479,1121,2.887,1122,3.376,1123,2.986,1124,3.376,1125,3.098,1126,3.376,1127,2.797,1128,3.376,1129,3.376,1130,3.376,1131,3.376,1132,3.098,1133,3.376,1134,3.098,1135,3.376,1136,3.376,1137,4.798,1138,4.489,1139,3.376,1140,4.798,1141,3.376,1142,3.376,1143,2.986,1144,4.244,1145,4.798,4134,4.541]],["title/controllers/TeamNewsController.html",[964,2.167,3322,4.308]],["body/controllers/TeamNewsController.html",[3,0.093,4,0.078,5,0.057,8,0.245,12,0.808,13,0.186,14,0.005,15,0.243,19,1.029,22,0.083,31,0.141,38,4.134,71,1.859,74,2.399,77,2.073,78,0.824,112,2.886,114,0.469,128,1.456,129,1.722,145,1.679,149,1.078,172,0.003,173,0.003,182,1.43,187,0.462,189,0.814,190,0.484,199,1.078,328,1.437,329,2.37,330,2.721,349,1.34,654,2.015,656,2.828,767,2.489,964,2.448,966,2.623,968,3.495,971,4.898,972,5.776,974,5.811,975,3.984,976,3.844,977,3.715,978,3.844,985,3.844,1047,4.343,1096,4.757,1107,3.38,1157,3.984,1174,5.018,1260,5.043,1274,4.346,1721,3.495,1898,5.441,1952,4.577,1996,3.988,2517,4.153,3204,6.756,3206,6.386,3216,5.84,3218,4.153,3220,4.577,3221,5.255,3222,5.255,3228,4.867,3229,4.867,3230,5.255,3231,5.255,3232,5.255,3233,5.255,3234,5.255,3322,6.386,4135,7.668,4136,5.844,4137,8.559,4138,5.844,4139,7.668,4140,5.844,4141,8.559,4142,5.844,4143,5.844,4144,5.255,4145,5.844,4146,5.844]],["title/classes/TestBootstrapConsole.html",[31,0.125,4147,4.651]],["body/classes/TestBootstrapConsole.html",[3,0.113,4,0.094,5,0.069,8,0.295,12,0.665,14,0.004,15,0.209,22,0.122,31,0.17,33,1.805,43,3.22,44,3.28,45,2.951,46,3.106,47,3.28,48,3.798,74,1.975,77,2.524,78,1.217,128,1.469,129,2.076,172,0.004,173,0.004,175,1.597,182,1.61,187,0.557,199,1.299,273,3.106,846,4.89,856,3.409,1918,5.659,1963,3.891,1965,5.868,1966,6.335,1976,5.518,1979,5.239,2319,5.868,3328,4.808,3653,6.762,4147,7.764,4148,6.335,4149,9.336,4150,7.046,4151,7.764,4152,7.046,4153,5.868,4154,6.335,4155,6.335,4156,6.335,4157,6.335]],["title/injectables/TimeoutInterceptor.html",[18,0.976,2913,4.308]],["body/injectables/TimeoutInterceptor.html",[3,0.09,4,0.075,5,0.055,8,0.237,9,0.813,13,0.269,14,0.005,15,0.217,18,1.416,19,0.996,20,4.431,21,4.207,22,0.08,31,0.136,35,2.42,37,2.563,43,2.585,44,2.634,45,3.758,46,2.494,47,2.634,48,3.05,54,2.451,78,1.265,114,0.602,168,2.41,172,0.003,173,0.003,182,1.4,187,0.737,189,1.046,190,0.742,199,1.384,216,1.424,282,4.711,300,1.95,385,1.709,386,1.799,397,5.354,405,3.163,466,4.431,886,5.121,942,3.124,964,3.144,1776,5.581,1898,4.771,1964,5.878,1969,6.25,2030,4.711,2042,6.749,2043,6.749,2044,7.026,2045,8.066,2047,3.29,2048,7.574,2051,4.711,2174,4.365,2175,4.251,2362,4.207,2911,7.135,2913,6.25,3164,5.878,4158,5.657,4159,7.506,4160,5.878,4161,5.333,4162,6.25,4163,8.423,4164,8.423,4165,5.657,4166,5.657,4167,7.574,4168,5.657,4169,5.657,4170,5.657,4171,5.657,4172,5.657,4173,7.506,4174,7.506,4175,5.657,4176,7.506,4177,5.657,4178,5.657,4179,5.657,4180,5.657,4181,5.657,4182,7.506,4183,5.657,4184,5.657]],["title/classes/UpdateMatchParams.html",[31,0.125,2831,4.308]],["body/classes/UpdateMatchParams.html",[3,0.118,4,0.098,5,0.072,8,0.309,9,0.962,12,0.839,13,0.235,14,0.004,15,0.24,22,0.105,31,0.214,76,3.378,145,2.086,172,0.004,173,0.004,175,1.674,187,0.583,216,1.859,349,1.693,648,4.296,652,3.603,654,2.546,1116,4.3,1241,3.724,2816,5.843,2831,7.4,2867,6.607,2881,6.314,4185,8.885,4186,7.387,4187,7.99,4188,7.387,4189,7.387]],["title/classes/UpdateNewsParams.html",[31,0.125,3213,4.051]],["body/classes/UpdateNewsParams.html",[3,0.1,4,0.083,5,0.061,8,0.263,9,1.011,12,0.882,13,0.282,14,0.004,15,0.195,22,0.089,31,0.225,172,0.003,173,0.003,175,1.423,181,3.237,187,0.7,190,0.665,216,2.35,316,1.68,349,2.031,381,2.49,417,4.673,592,4.255,653,4.708,654,2.165,767,3.422,1101,4.776,1107,4.48,1216,5.231,1218,4.949,1220,5.648,1222,5.284,1223,5.108,1224,6.293,1225,5.975,1238,7.225,1239,6.636,1240,6.045,1241,3.167,1602,4.673,2518,5.71,3213,6.293,4190,9.339,4191,8.035,4192,8.035,4193,6.293,4194,7.225,4195,8.035,4196,6.282,4197,6.282,4198,6.282]],["title/entities/User.html",[145,1.132,316,0.88]],["body/entities/User.html",[0,0.6,3,0.092,4,0.077,5,0.056,8,0.393,9,0.823,12,0.954,13,0.308,14,0.005,15,0.219,22,0.108,31,0.139,33,1.205,114,0.682,121,5.404,145,1.663,149,1.401,172,0.003,173,0.003,187,0.742,190,0.748,205,1.858,316,1.293,323,1.81,349,2.153,354,3.028,355,1.4,356,1.636,360,2.732,385,1.741,386,1.833,502,2.337,503,2.165,510,2.231,518,3.445,520,1.882,747,2.693,888,3.748,900,3.664,901,3.831,904,3.831,912,5.951,915,2.906,921,3.352,940,2.337,947,3.664,948,3.664,2119,5.4,2525,4.577,2527,3.55,2528,3.752,2533,4.76,2534,4.76,2596,3.664,2597,3.791,2598,3.664,2599,3.791,2600,4.286,2601,4.286,2640,4.514,2644,4.514,2792,6.328,2793,5.183,2794,5.183,2795,5.183,2796,5.183,2797,5.183,3576,5.183,4199,5.764,4200,5.764,4201,5.764,4202,5.764,4203,5.764,4204,5.764,4205,5.764,4206,5.764]],["title/controllers/UserController.html",[964,2.167,4207,4.308]],["body/controllers/UserController.html",[3,0.105,4,0.087,5,0.064,8,0.274,13,0.209,14,0.005,15,0.246,19,1.154,22,0.093,31,0.158,35,1.882,71,2.625,74,2.533,77,2.231,78,0.924,114,0.526,123,2.084,128,1.537,129,1.93,145,1.978,172,0.003,173,0.003,182,1.539,187,0.517,189,0.913,190,0.542,199,1.208,267,5.117,279,3.451,312,3.703,328,1.61,329,2.656,349,1.502,368,5.131,654,2.258,964,2.744,966,2.94,968,3.918,971,5.112,974,5.565,976,4.308,977,4.165,978,4.308,985,4.308,1227,4.47,1638,4.655,2525,3.109,2843,5.891,3515,6.165,3537,7.075,3547,5.456,3861,5.891,4207,6.872,4208,6.551,4209,6.551,4210,8.252,4211,6.551,4212,6.551,4213,6.551,4214,6.551,4215,6.551,4216,6.551,4217,6.551]],["title/classes/UserInfoMapper.html",[31,0.125,3288,4.308]],["body/classes/UserInfoMapper.html",[3,0.116,4,0.097,5,0.071,8,0.305,10,1.521,13,0.232,14,0.004,15,0.213,22,0.103,31,0.175,78,1.026,114,0.584,128,1.238,145,2.205,149,1.341,172,0.004,173,0.004,175,1.648,182,1.642,187,0.575,189,1.013,190,0.602,199,1.341,328,1.788,405,3.555,696,5.423,767,3.75,1054,4.964,2533,3.832,2534,3.832,2773,4.625,3262,7.315,3288,7.332,3549,7.916,3552,6.541,3554,6.541,3619,6.058,3621,6.058,4218,8.804]],["title/classes/UserInfoResponse.html",[31,0.125,3262,3.846]],["body/classes/UserInfoResponse.html",[3,0.102,4,0.085,5,0.063,8,0.269,9,0.882,10,2.109,12,0.937,13,0.3,14,0.004,15,0.155,22,0.091,31,0.154,69,1.608,114,0.779,145,2.173,172,0.003,173,0.003,175,1.453,187,0.743,189,0.893,190,0.804,216,2.368,316,1.385,349,2.051,644,3.457,652,3.302,653,4.51,654,2.211,660,2.931,680,3.104,681,4.105,682,4.105,2533,5.116,2534,5.116,2596,4.077,2598,4.077,2903,6.781,3262,7.222,3379,5.023,3422,5.786,3626,5.341,3627,5.341,4219,9.713,4220,6.414,4221,6.414,4222,8.142,4223,6.414]],["title/classes/UserMatch.html",[31,0.125,2561,3.846]],["body/classes/UserMatch.html",[0,0.467,3,0.072,4,0.06,5,0.044,8,0.188,9,0.807,12,0.968,13,0.274,14,0.005,15,0.208,22,0.122,31,0.18,33,1.559,54,1.944,69,0.886,76,2.268,78,0.633,114,0.36,121,4.861,123,2.925,145,1.956,172,0.003,173,0.003,175,1.017,187,0.589,189,0.625,190,0.371,205,2.062,316,1.269,349,1.467,354,3.004,355,1.09,356,1.273,360,2.923,370,2.3,421,2.311,467,2.363,477,2.68,500,1.427,502,3.024,503,1.685,506,1.944,516,1.71,518,2.842,520,2.435,888,3.228,921,2.609,940,1.819,947,2.852,1095,3.857,1116,2.171,1364,2.418,1453,5.088,1455,4.365,1479,3.061,1832,3.533,1868,4.427,2525,2.129,2533,3.37,2534,3.37,2553,5.01,2554,6.367,2555,3.514,2556,4.757,2557,5.01,2558,5.328,2559,5.328,2560,4.757,2561,6.991,2562,5.84,2563,5.328,2564,5.01,2565,3.736,2566,2.609,2567,3.514,2568,3.514,2569,5.328,2570,3.736,2571,3.736,2572,3.736,2573,6.21,2574,5.328,2575,3.736,2576,5.84,2577,4.365,2578,3.188,2579,4.593,2580,3.623,2581,3.941,2582,3.736,2583,3.514,2584,3.514,2585,6.731,2586,4.546,2587,5.328,2588,3.514,2589,3.736,2590,3.736,2591,3.736,2592,3.736,2593,3.736,2594,3.736,2595,3.736,2596,2.852,2597,2.95,2598,2.852,2599,2.95,2600,3.336,2601,3.336,2602,3.736,2603,3.736,2604,3.736,2605,3.736,2606,3.736,2607,3.736,2608,4.757,2609,3.336,2610,5.328,2611,3.736,2807,4.034,3719,4.034,4224,4.486,4225,4.486,4226,4.486]],["title/classes/UserMatchResponse.html",[31,0.125,2840,3.846]],["body/classes/UserMatchResponse.html",[3,0.089,4,0.074,5,0.055,8,0.234,9,0.806,10,1.556,12,0.936,13,0.316,14,0.004,15,0.203,22,0.079,31,0.179,54,3.223,69,1.102,76,2.966,114,0.671,145,2.219,172,0.003,173,0.003,175,1.265,187,0.755,189,0.778,190,0.462,216,2.339,349,2.13,467,2.94,520,2.429,648,5.189,652,3.876,654,1.924,1095,3.338,1241,2.814,1397,4.372,1398,4.372,1722,4.326,1832,5.133,1835,4.582,2533,4.896,2534,4.896,2577,5.076,2578,5.286,2579,4.582,2583,4.372,2584,4.372,2585,6.553,2596,3.549,2597,3.671,2598,3.549,2599,3.671,2816,6.417,2840,6.911,2847,6.553,2867,5.531,2872,4.649,2873,4.649,2878,5.531,2881,7.043,4227,9.757,4228,5.582,4229,5.582,4230,5.582,4231,5.582,4232,5.582,4233,8.357,4234,7.439,4235,5.582,4236,5.582,4237,5.582,4238,5.582]],["title/modules/UserModule.html",[257,1.382,264,3.402]],["body/modules/UserModule.html",[3,0.116,4,0.097,5,0.071,14,0.004,15,0.238,19,1.281,22,0.103,31,0.175,172,0.004,173,0.004,257,2.351,259,2.815,260,3.881,264,6.874,267,5.799,268,4.347,269,3.387,270,3.098,272,3.688,279,3.832,328,1.788,964,3.047,966,3.95,3515,6.986,4207,7.884,4239,7.275,4240,7.275,4241,7.275]],["title/injectables/UserRepo.html",[18,0.976,267,2.93]],["body/injectables/UserRepo.html",[3,0.102,4,0.085,5,0.063,8,0.268,10,1.7,13,0.285,14,0.004,15,0.217,18,1.534,19,1.127,22,0.091,31,0.154,35,2.568,69,1.264,71,2.036,74,2.781,77,2.542,78,0.903,114,0.717,128,1.089,129,2.633,145,1.957,172,0.003,173,0.003,182,1.517,187,0.706,189,1.245,190,0.74,199,1.5,267,4.606,300,2.207,308,3.071,328,1.573,329,2.596,355,1.555,357,2.872,385,1.934,386,2.036,477,2.681,516,3.1,543,3.828,544,4.954,546,4.016,1632,5.756,2525,3.859,2528,4.643,3585,7.313,3588,7.313,4242,6.401,4243,9.921,4244,6.401,4245,6.401,4246,8.132,4247,6.401,4248,6.401,4249,6.401]],["title/classes/ValidationError.html",[31,0.125,186,3.846]],["body/classes/ValidationError.html",[3,0.099,4,0.083,5,0.061,8,0.261,9,0.865,12,0.93,13,0.327,14,0.004,15,0.194,19,1.096,22,0.088,30,6.118,31,0.15,33,1.67,34,2.897,37,1.662,69,1.229,71,3.285,84,5.451,114,0.499,172,0.003,173,0.003,175,1.41,178,7.049,179,3.79,180,6.261,181,2.959,182,1.49,183,7.346,184,7.346,186,5.939,187,0.801,189,0.867,190,0.515,192,5.159,193,5.596,194,5.596,195,5.596,196,5.596,197,5.596,198,5.596,199,1.473,200,5.596,201,3.956,202,4.874,203,5.596,204,5.183,205,2.006,208,3.619,209,4.628,212,5.596,438,2.651,4250,6.223,4251,6.223,4252,6.223,4253,6.223]],["title/classes/ValidationErrorDetailResponse.html",[31,0.125,222,4.308]],["body/classes/ValidationErrorDetailResponse.html",[3,0.123,4,0.102,5,0.075,12,0.98,13,0.246,14,0.004,22,0.109,31,0.186,34,4.243,69,1.522,71,2.452,114,0.618,172,0.004,173,0.004,175,1.747,187,0.609,189,1.074,190,0.638,204,6.42,219,5.643,222,7.59,4254,9.114,4255,7.709,4256,7.709,4257,7.709,4258,8.196]],["title/modules/ValidationModule.html",[257,1.382,868,3.846]],["body/modules/ValidationModule.html",[3,0.123,4,0.103,5,0.076,14,0.004,15,0.235,19,1.361,22,0.11,31,0.186,172,0.004,173,0.004,257,2.438,259,2.99,272,3.236,868,6.786,882,8.207,1967,5.081,1977,3.98,2112,6.051,2455,7.601,4259,7.726,4260,7.726,4261,7.726]],["title/dependencies.html",[260,2.743,4262,3.881]],["body/dependencies.html",[4,0.057,5,0.06,10,0.891,13,0.136,14,0.005,19,0.75,24,2.707,31,0.148,43,2.816,74,1.728,77,2.146,121,2.547,127,2.707,172,0.003,173,0.003,207,2.147,260,1.877,275,3.335,277,3.829,298,4.102,323,1.337,355,1.759,356,1.209,357,1.911,462,2.801,654,1.468,806,3.335,816,4.942,846,2.412,856,2.061,859,2.296,870,3.026,872,2.906,928,2.906,1104,2.707,1108,4.205,1241,3.651,1300,2.906,1518,3.167,1679,3.829,1866,3.335,1925,2.906,1967,2.801,2051,3.547,2077,2.801,2078,3.918,2079,3.335,2175,3.49,2194,5.416,2195,3.547,2228,3.829,2281,2.801,2302,3.829,2881,4.379,2930,3.026,2960,6.512,2961,3.026,2989,3.829,3067,3.167,3068,2.801,3103,3.167,3163,2.906,3421,3.829,3653,3.335,3702,6.714,3766,3.829,4263,6.163,4264,9.055,4265,4.259,4266,4.259,4267,4.259,4268,4.259,4269,4.259,4270,6.163,4271,4.259,4272,7.937,4273,4.259,4274,4.259,4275,4.259,4276,4.259,4277,4.259,4278,4.259,4279,4.259,4280,4.259,4281,4.259,4282,4.259,4283,3.547,4284,6.163,4285,4.259,4286,6.163,4287,4.259,4288,6.163,4289,4.259,4290,4.259,4291,4.259,4292,4.259,4293,4.259,4294,4.259,4295,6.163,4296,4.259,4297,6.163,4298,4.259,4299,4.259,4300,4.259,4301,4.259,4302,4.259,4303,4.259,4304,4.259,4305,4.259,4306,3.829,4307,4.259,4308,4.259,4309,4.259,4310,4.259,4311,6.163,4312,4.259,4313,4.259,4314,4.259,4315,7.242,4316,7.937,4317,4.259,4318,4.259,4319,4.259,4320,6.163,4321,4.259,4322,6.163,4323,6.163,4324,4.259,4325,4.827,4326,4.259,4327,4.259,4328,3.167,4329,4.259,4330,3.167,4331,4.259,4332,4.259,4333,5.542,4334,4.259,4335,4.259,4336,4.259,4337,4.259,4338,6.163,4339,4.259,4340,4.259,4341,4.259,4342,4.259,4343,4.259,4344,4.259,4345,4.259,4346,4.259,4347,4.259,4348,4.259,4349,4.259,4350,4.259,4351,4.259,4352,4.259,4353,4.259,4354,4.259,4355,4.259,4356,6.163,4357,5.542,4358,4.259,4359,4.259,4360,4.259,4361,4.259,4362,3.829,4363,4.259,4364,4.259,4365,6.163,4366,4.259,4367,4.259,4368,4.259,4369,4.259,4370,4.259,4371,4.259,4372,4.259,4373,4.259,4374,4.259,4375,4.259,4376,4.259,4377,4.259,4378,4.259,4379,6.163,4380,4.259,4381,4.259,4382,4.259,4383,4.259,4384,4.259,4385,4.259,4386,4.259,4387,4.259,4388,6.163,4389,3.829,4390,4.259,4391,4.259,4392,4.259,4393,4.259,4394,4.259,4395,4.259,4396,4.259,4397,4.259,4398,4.259,4399,3.829,4400,4.259,4401,4.259,4402,4.259,4403,4.259,4404,4.259,4405,4.259,4406,4.259,4407,4.259,4408,3.547,4409,4.259,4410,4.259,4411,4.259,4412,4.259,4413,4.259,4414,4.259,4415,4.259,4416,4.259,4417,4.259,4418,4.259,4419,4.259,4420,4.259,4421,4.259,4422,4.259,4423,4.259]],["title/miscellaneous/enumerations.html",[4424,2.839,4425,5.596]],["body/miscellaneous/enumerations.html",[8,0.26,14,0.004,145,1.746,172,0.003,173,0.003,310,4.11,386,3.416,581,2.803,888,2.333,919,6.248,941,3.518,1096,3.132,1211,5.247,1950,5.932,2281,4.085,2293,4.619,2511,4.865,2516,4.414,2517,4.414,2541,4.865,2542,6.248,2545,6.644,2554,4.865,2555,6.902,2562,6.248,2576,6.248,2577,6.717,2578,6.263,2579,6.166,2580,5.267,2581,5.728,2816,5.796,2845,4.865,2846,6.248,2854,7.174,2861,7.174,2868,6.644,3799,5.586,3809,6.644,3818,6.644,3822,5.586,3823,5.586,3824,5.586,3825,5.586,4233,7.174,4424,4.085,4425,5.586,4426,5.586,4427,8.813,4428,6.212,4429,7.978,4430,5.586,4431,6.212,4432,7.978,4433,5.586,4434,7.978,4435,5.586,4436,6.212,4437,6.212]],["title/miscellaneous/functions.html",[4424,2.839,4438,4.627]],["body/miscellaneous/functions.html",[8,0.232,12,0.84,13,0.284,14,0.004,34,3.879,38,2.984,114,0.714,123,1.761,139,5.132,143,4.794,172,0.003,173,0.003,178,5.048,189,1.239,190,0.736,199,1.709,201,4.703,207,2.791,316,0.942,323,2.616,364,3.778,372,2.281,376,3.934,386,2.353,425,3.934,438,2.358,477,2.319,500,1.761,504,4.845,516,2.11,655,5.685,767,2.358,852,6.324,1108,6.644,1118,3.519,1255,5.318,1363,2.984,1680,5.501,1974,3.73,2013,4.61,2088,4.61,2164,5.501,2173,4.302,2198,3.778,2222,4.978,2226,4.978,2231,4.978,2250,6.652,2265,3.934,2270,4.978,2285,4.978,2376,4.61,2377,6.965,2410,4.61,2413,4.978,2417,4.61,2432,6.161,2466,5.257,2765,3.311,2909,3.519,3045,4.61,3244,4.117,3253,7.492,3650,6.196,4153,7.941,4330,4.117,4424,3.641,4438,4.117,4439,5.536,4440,5.536,4441,7.398,4442,7.492,4443,7.398,4444,7.398,4445,5.536,4446,5.536,4447,7.398,4448,5.536,4449,7.398,4450,5.536,4451,5.536,4452,5.536,4453,7.406,4454,4.978,4455,7.398,4456,4.978,4457,5.536,4458,5.536,4459,4.978,4460,4.61,4461,7.398,4462,7.398,4463,7.398,4464,4.978,4465,5.536,4466,4.978,4467,7.492,4468,4.978,4469,5.536,4470,5.536,4471,4.61,4472,4.978,4473,4.978,4474,5.536,4475,5.536,4476,7.398,4477,5.536,4478,5.536]],["title/index.html",[8,0.181,4479,3.595,4480,3.21]],["body/index.html",[10,0.968,14,0.004,34,3.045,37,2.026,54,2.005,84,2.621,114,0.525,149,0.853,172,0.003,173,0.003,179,3.599,180,2.942,181,1.552,207,3.298,211,3.045,216,1.165,218,3.044,260,2.04,298,4.926,326,3.044,358,3.625,364,5.625,365,3.804,368,5.123,369,2.942,371,2.621,372,1.907,376,3.289,385,1.398,394,3.526,404,3.289,420,2.851,539,2.438,817,4.648,818,5.181,856,4.209,876,2.942,878,3.289,933,3.442,968,4.536,1077,2.942,1103,2.768,1107,2.883,1115,3.289,1138,3.911,1175,2.621,1218,2.851,1223,2.942,1343,3.158,1694,2.942,1718,5.25,1730,2.942,1832,2.556,1846,6.13,1861,6.233,1868,2.384,1918,4.411,1923,3.289,1934,4.463,1945,3.704,1962,3.442,1963,2.556,1974,3.298,2047,2.692,2076,3.289,2077,3.044,2078,4.158,2124,5.641,2173,2.692,2175,3.704,2185,2.621,2194,5.625,2196,3.854,2205,4.463,2281,3.044,2427,4.463,2433,3.625,2472,3.289,2566,3.804,2782,2.768,2894,3.289,2914,2.942,2926,4.162,3149,3.854,3244,3.442,3361,4.864,3362,2.851,3422,3.289,3488,4.162,3972,3.289,4330,3.442,4481,3.625,4482,7.518,4483,5.881,4484,4.628,4485,4.864,4486,3.625,4487,3.289,4488,3.854,4489,3.625,4490,4.162,4491,3.854,4492,3.625,4493,5.447,4494,4.463,4495,4.162,4496,4.628,4497,5.881,4498,6.13,4499,4.162,4500,3.854,4501,5.881,4502,5.447,4503,4.628,4504,4.628,4505,4.628,4506,3.625,4507,5.39,4508,3.854,4509,3.854,4510,6.541,4511,4.162,4512,3.854,4513,6.541,4514,4.162,4515,4.162,4516,3.442,4517,3.854,4518,7.586,4519,5.39,4520,4.162,4521,4.628,4522,4.162,4523,6.821,4524,5.123,4525,4.628,4526,3.854,4527,3.625,4528,4.162,4529,4.628,4530,4.628,4531,3.854,4532,5.123,4533,4.628,4534,5.176,4535,4.628,4536,4.162,4537,3.442,4538,3.625,4539,4.628,4540,4.162,4541,6.541,4542,6.541,4543,3.442,4544,9.28,4545,6.821,4546,8.697,4547,8.244,4548,4.628,4549,4.628,4550,4.628,4551,4.628,4552,6.541,4553,5.447,4554,4.162,4555,4.628,4556,3.854,4557,4.628,4558,6.541,4559,4.628,4560,4.162,4561,4.162,4562,6.541,4563,6.541,4564,3.442,4565,3.442,4566,3.854,4567,4.628,4568,5.447,4569,4.628,4570,3.625,4571,4.628,4572,3.625,4573,4.628,4574,4.162,4575,4.162,4576,4.162,4577,3.854,4578,5.123,4579,5.881,4580,4.628,4581,4.162,4582,4.628,4583,4.162,4584,4.628,4585,3.854,4586,3.442]],["title/license.html",[4479,3.595,4480,3.21,4587,3.881]],["body/license.html",[0,0.475,2,0.734,4,0.124,5,0.018,14,0.001,15,0.024,31,0.024,35,0.289,37,0.493,40,1.532,45,0.421,46,0.443,56,1.445,60,2.792,72,0.408,73,5.138,78,0.142,82,0.468,112,2.991,118,0.661,127,0.639,145,1.459,149,0.909,168,0.428,172,0.001,173,0.001,179,4.18,180,0.639,182,0.188,187,0.079,211,1.474,218,1.213,246,0.661,252,0.569,253,2.734,270,0.428,312,2.49,314,2.012,316,0.314,320,0.93,325,2.298,326,4.128,354,0.316,359,3.803,372,3.103,377,5.866,381,0.312,394,2.241,417,0.585,420,1.95,421,3.879,437,1.563,443,0.661,445,0.686,452,2.209,463,1.659,464,1.536,487,7.142,511,1.596,539,0.972,590,0.837,592,0.443,640,0.95,672,1.816,795,0.714,813,0.639,815,1.103,818,0.518,831,0.714,859,0.994,872,0.686,877,0.787,888,0.378,923,0.639,926,2.001,931,0.837,993,0.93,1017,0.837,1065,1.07,1077,0.639,1078,0.661,1110,0.639,1113,3.065,1114,0.686,1118,2.349,1157,0.468,1175,1.045,1218,1.574,1223,2.012,1225,0.748,1227,2.16,1235,0.639,1343,1.744,1358,2.837,1363,1.992,1378,2.625,1389,0.661,1594,1.372,1693,5.703,1694,0.639,1720,1.893,1722,1.073,1835,1.136,1865,0.837,1868,1.903,1895,3.582,1898,1.624,1899,3.983,1906,2.486,1928,0.837,1934,1.744,1945,1.447,1974,2.932,1977,2.142,1989,0.904,1991,1.659,2014,2.298,2036,2.249,2047,0.585,2086,3.862,2121,2.16,2122,3.413,2124,3.666,2172,1.744,2185,1.045,2194,1.259,2212,0.714,2245,0.787,2271,0.714,2290,3.862,2399,1.259,2463,0.714,2473,2.249,2475,1.372,2527,3.582,2756,0.714,2765,1.893,2782,3.319,2783,1.706,2784,0.748,2814,1.173,2881,1.311,2892,1.536,2927,0.837,2930,1.816,2987,4.503,3043,0.748,3046,0.686,3048,0.748,3115,0.787,3143,0.714,3144,3.396,3146,0.837,3147,3.092,3150,2.128,3163,2.16,3235,0.837,3244,4.503,3328,0.686,3361,1.372,3362,2.561,3422,0.714,3430,0.787,3480,2.128,3525,2.298,3634,0.904,3650,1.372,3655,0.904,3707,2.16,3897,1.816,3972,3.504,4117,1.536,4118,3.322,4130,2.298,4144,1.659,4161,2.249,4187,0.904,4194,4.726,4330,0.748,4456,2.846,4459,0.904,4464,0.904,4466,0.904,4467,0.904,4472,0.904,4482,0.837,4491,0.837,4498,4.126,4499,0.904,4502,7.552,4507,3.245,4516,5.414,4517,7.004,4519,0.714,4520,2.298,4526,3.803,4527,0.787,4534,2.837,4537,1.9,4553,0.837,4561,0.904,4564,1.9,4568,2.636,4570,1.445,4578,2.001,4581,1.659,4587,9.137,4588,6.996,4589,6.837,4590,6.069,4591,7.781,4592,3.803,4593,1.005,4594,1.005,4595,2.555,4596,8.27,4597,5.694,4598,6.147,4599,3.694,4600,1.005,4601,1.005,4602,1.845,4603,3.694,4604,2.555,4605,2.555,4606,6.056,4607,0.904,4608,1.9,4609,1.005,4610,1.005,4611,1.659,4612,3.694,4613,3.803,4614,1.845,4615,1.845,4616,5.826,4617,4.931,4618,1.005,4619,1.005,4620,4.158,4621,1.659,4622,2.479,4623,0.904,4624,0.904,4625,5.229,4626,9.029,4627,2.298,4628,1.005,4629,1.005,4630,3.165,4631,5.256,4632,1.005,4633,5.256,4634,1.445,4635,1.005,4636,3.694,4637,0.748,4638,1.005,4639,3.165,4640,0.837,4641,5.993,4642,0.837,4643,0.904,4644,0.904,4645,5.55,4646,5.815,4647,3.694,4648,6.056,4649,1.005,4650,1.845,4651,1.005,4652,1.005,4653,2.298,4654,1.005,4655,1.005,4656,1.005,4657,1.659,4658,1.005,4659,1.005,4660,3.165,4661,1.005,4662,0.904,4663,2.555,4664,6.996,4665,1.005,4666,1.005,4667,1.005,4668,2.128,4669,2.555,4670,1.659,4671,1.005,4672,1.005,4673,2.298,4674,0.787,4675,1.845,4676,1.845,4677,2.555,4678,1.005,4679,5.227,4680,3.694,4681,3.694,4682,4.158,4683,2.128,4684,2.555,4685,1.845,4686,1.005,4687,1.005,4688,1.005,4689,2.555,4690,1.005,4691,1.005,4692,1.845,4693,1.005,4694,1.845,4695,1.005,4696,1.005,4697,3.165,4698,0.904,4699,1.845,4700,8.988,4701,2.555,4702,5.256,4703,2.846,4704,1.445,4705,1.005,4706,1.845,4707,2.555,4708,5.256,4709,5.55,4710,2.846,4711,1.005,4712,3.165,4713,1.845,4714,3.165,4715,2.846,4716,1.005,4717,2.555,4718,0.787,4719,8.031,4720,1.659,4721,1.005,4722,4.931,4723,1.005,4724,2.298,4725,2.954,4726,1.005,4727,6.665,4728,2.298,4729,1.845,4730,5.815,4731,4.158,4732,1.005,4733,1.845,4734,4.567,4735,1.005,4736,6.277,4737,1.845,4738,1.005,4739,0.837,4740,1.005,4741,2.555,4742,1.005,4743,1.005,4744,1.005,4745,0.837,4746,5.229,4747,2.555,4748,2.846,4749,1.005,4750,1.005,4751,1.005,4752,1.659,4753,5.55,4754,0.904,4755,1.659,4756,0.837,4757,0.837,4758,2.298,4759,2.555,4760,2.555,4761,0.837,4762,1.005,4763,3.322,4764,3.077,4765,0.904,4766,2.298,4767,1.005,4768,0.904,4769,1.005,4770,1.005,4771,1.659,4772,1.005,4773,7.297,4774,2.298,4775,0.748,4776,3.739,4777,4.843,4778,1.845,4779,1.845,4780,3.077,4781,1.005,4782,0.748,4783,1.005,4784,1.005,4785,1.845,4786,3.077,4787,1.005,4788,1.536,4789,1.005,4790,0.787,4791,3.077,4792,1.005,4793,0.837,4794,4.567,4795,2.636,4796,1.005,4797,3.322,4798,1.005,4799,1.005,4800,1.005,4801,1.005,4802,1.005,4803,1.005,4804,2.555,4805,1.005,4806,1.005,4807,1.659,4808,1.845,4809,1.845,4810,1.005,4811,6.277,4812,1.659,4813,1.005,4814,1.005,4815,0.904,4816,1.005,4817,1.005,4818,2.555,4819,0.904,4820,1.005,4821,5.993,4822,0.787,4823,1.005,4824,1.005,4825,1.005,4826,3.694,4827,3.739,4828,1.005,4829,1.005,4830,2.555,4831,1.005,4832,1.005,4833,3.165,4834,1.005,4835,1.659,4836,1.005,4837,1.005,4838,1.005,4839,1.005,4840,1.005,4841,1.005,4842,1.845,4843,1.005,4844,1.005,4845,1.005,4846,1.845,4847,1.005,4848,1.005,4849,1.005,4850,1.005,4851,1.005,4852,1.845,4853,1.845,4854,1.372,4855,4.726,4856,1.005,4857,4.158,4858,1.005,4859,1.005,4860,1.659,4861,2.555,4862,3.165,4863,3.165,4864,3.165,4865,1.005,4866,3.322,4867,3.322,4868,1.005,4869,2.555,4870,1.005,4871,1.845,4872,1.005,4873,1.659,4874,3.694,4875,1.845,4876,3.165,4877,3.165,4878,1.005,4879,2.555,4880,3.322,4881,1.005,4882,1.005,4883,2.128,4884,3.803,4885,2.555,4886,1.845,4887,0.748,4888,1.005,4889,0.904,4890,1.005,4891,1.005,4892,1.005,4893,2.298,4894,1.005,4895,1.005,4896,1.659,4897,1.005,4898,1.005,4899,1.845,4900,1.005,4901,2.555,4902,0.904,4903,1.005,4904,0.904,4905,2.128,4906,1.845,4907,4.158,4908,6.771,4909,2.555,4910,1.845,4911,1.845,4912,1.845,4913,1.845,4914,3.165,4915,1.659,4916,0.904,4917,1.005,4918,1.005,4919,1.005,4920,3.739,4921,1.845,4922,1.005,4923,1.005,4924,1.005,4925,1.005,4926,1.845,4927,1.005,4928,1.845,4929,1.005,4930,1.005,4931,3.666,4932,1.005,4933,5.229,4934,0.904,4935,1.005,4936,1.005,4937,1.005,4938,1.845,4939,1.005,4940,2.747,4941,3.165,4942,1.845,4943,0.904,4944,1.005,4945,1.005,4946,1.005,4947,1.005,4948,1.845,4949,1.005,4950,1.005,4951,0.837,4952,2.846,4953,1.005,4954,1.845,4955,1.845,4956,1.005,4957,1.005,4958,2.298,4959,1.005,4960,1.005,4961,1.005,4962,1.005,4963,3.165,4964,1.005,4965,1.005,4966,1.005,4967,0.904,4968,0.904,4969,2.128,4970,1.005,4971,0.904,4972,1.005,4973,1.005,4974,1.005,4975,3.694,4976,1.005,4977,1.005,4978,0.904,4979,3.165,4980,1.005,4981,0.837,4982,1.005,4983,1.005,4984,1.005,4985,1.005,4986,1.005,4987,0.904,4988,3.803,4989,2.555,4990,1.005,4991,3.165,4992,1.005,4993,1.005,4994,2.555,4995,1.005,4996,0.837,4997,2.555,4998,1.005,4999,1.845,5000,1.005,5001,1.005,5002,1.005,5003,1.005,5004,1.005,5005,1.005,5006,0.787,5007,0.904,5008,1.005,5009,1.659,5010,1.005,5011,0.748,5012,1.845,5013,0.904,5014,1.005,5015,3.165,5016,1.005,5017,1.005,5018,1.845,5019,2.555,5020,2.555,5021,0.837,5022,1.845,5023,1.005,5024,2.555,5025,4.567,5026,1.005,5027,1.845,5028,1.659,5029,1.005,5030,1.845,5031,1.005,5032,1.005,5033,1.005,5034,1.845,5035,1.005,5036,3.165,5037,2.555,5038,1.005,5039,3.694,5040,1.005,5041,1.005,5042,1.005,5043,1.005,5044,1.005,5045,1.845,5046,1.845,5047,1.659,5048,2.555,5049,0.904,5050,1.845,5051,1.005,5052,2.555,5053,1.005,5054,1.536,5055,1.005,5056,1.845,5057,1.005,5058,1.005,5059,1.845,5060,7.749,5061,2.555,5062,1.005,5063,3.694,5064,5.55,5065,2.555,5066,1.005,5067,1.005,5068,1.005,5069,3.165,5070,0.837,5071,1.005,5072,1.005,5073,1.005,5074,1.005,5075,1.005,5076,1.005,5077,1.005,5078,1.005,5079,1.005,5080,3.165,5081,1.845,5082,1.005,5083,1.005,5084,2.555,5085,1.005,5086,1.845,5087,2.555,5088,0.904,5089,1.845,5090,1.005,5091,1.005,5092,1.005,5093,1.005,5094,1.845,5095,2.555,5096,0.904,5097,1.005,5098,1.005,5099,1.845,5100,1.005,5101,0.904,5102,1.005,5103,1.005,5104,1.005,5105,2.555,5106,1.845,5107,0.904,5108,1.005,5109,1.005,5110,3.165,5111,1.005,5112,2.555,5113,1.005,5114,1.005,5115,1.845,5116,1.005,5117,1.005,5118,1.005,5119,2.555,5120,1.845,5121,1.845,5122,1.005,5123,1.845,5124,4.567,5125,1.659,5126,2.555,5127,3.165,5128,0.904,5129,1.005,5130,1.845,5131,1.005,5132,2.555,5133,1.005,5134,1.659,5135,1.005,5136,1.005,5137,1.005,5138,1.005,5139,1.005,5140,2.555,5141,1.845,5142,1.005,5143,0.904,5144,1.005,5145,1.005,5146,1.845,5147,1.845,5148,1.005,5149,1.659,5150,1.005,5151,1.005,5152,0.837,5153,1.005,5154,2.555,5155,1.005,5156,1.005,5157,1.005,5158,1.005,5159,1.845,5160,2.555,5161,1.005,5162,1.005,5163,1.005,5164,1.005,5165,1.845,5166,1.005,5167,1.005,5168,1.005,5169,1.005,5170,1.005,5171,1.005,5172,1.005,5173,1.005,5174,0.787,5175,1.005,5176,1.005,5177,1.005,5178,1.005,5179,1.005,5180,3.165,5181,1.005,5182,1.005,5183,1.845,5184,1.005,5185,1.005,5186,1.005,5187,1.005,5188,1.005,5189,1.005,5190,1.005,5191,0.837,5192,1.005,5193,1.005,5194,1.005,5195,0.904,5196,1.845,5197,1.005,5198,1.005,5199,1.005,5200,1.005,5201,0.904,5202,1.845,5203,1.005,5204,0.837,5205,1.005,5206,0.904,5207,0.904,5208,0.837,5209,0.714,5210,1.005,5211,1.845,5212,1.845,5213,1.005,5214,1.659,5215,1.005,5216,0.904,5217,1.005,5218,1.005,5219,2.555,5220,1.536,5221,1.005,5222,1.659,5223,1.845,5224,1.845,5225,1.005,5226,0.837,5227,1.005,5228,0.904,5229,1.005,5230,0.904,5231,1.536,5232,1.005,5233,1.005,5234,1.005,5235,1.845,5236,1.005,5237,1.005,5238,2.555,5239,1.005,5240,1.005,5241,1.005,5242,1.005,5243,1.005,5244,1.005,5245,1.005,5246,1.005,5247,1.005,5248,0.904,5249,1.005,5250,0.837,5251,1.005,5252,1.005,5253,0.904,5254,1.005,5255,1.005,5256,1.005,5257,1.005,5258,1.005,5259,1.005,5260,1.005,5261,1.005,5262,1.005,5263,0.787,5264,0.904,5265,1.845,5266,1.659,5267,1.005,5268,1.005,5269,0.837,5270,1.005,5271,1.005,5272,1.005,5273,1.005,5274,1.005,5275,1.005,5276,1.005,5277,0.904,5278,0.787,5279,1.005,5280,0.837,5281,1.005,5282,1.005,5283,1.005,5284,1.005,5285,1.005,5286,1.005]],["title/modules.html",[259,2.735]],["body/modules.html",[14,0.003,172,0.003,173,0.003,258,4.436,259,2.515,264,4.275,286,4.436,291,4.619,838,4.834,862,4.436,865,4.834,866,4.834,867,4.004,868,4.834,1760,4.834,1895,6.23,2095,5.091,2321,4.834,2327,4.275,2882,4.436,2930,7.618,2999,4.436,3062,4.619,3097,4.834,3122,4.436,3315,4.436,3569,4.834,3658,4.834,3670,4.619,3673,4.436,3712,4.834,5287,10.721,5288,10.721,5289,9.745,5290,10.114]],["title/overview.html",[5291,5.534]],["body/overview.html",[2,1.09,14,0.005,172,0.002,173,0.002,175,0.859,258,6.548,259,1.468,260,2.495,261,3.41,262,3.41,263,3.41,264,6.031,265,5.302,266,5.034,267,4.771,268,2.794,269,1.765,270,1.615,286,6.466,287,3.41,288,3.41,289,3.41,290,3.41,291,5.986,292,5.74,293,4.811,300,1.307,323,1.191,585,4.489,586,4.937,587,4.937,593,4.811,694,5.034,787,4.811,838,6.264,839,3.41,840,3.41,841,3.41,842,5.9,862,6.548,863,3.41,864,3.41,865,5.034,866,5.034,867,5.649,868,5.034,885,4.943,966,1.702,979,5.034,1261,5.034,1543,4.811,1701,4.453,1760,6.264,1761,3.41,1762,3.41,1763,3.41,1764,6.122,1828,6.203,1985,5.034,2008,5.034,2133,5.956,2168,3.41,2169,3.41,2170,3.41,2221,5.034,2321,6.264,2322,3.41,2323,3.41,2324,3.41,2327,6.492,2328,3.41,2329,3.41,2331,5.302,2882,6.122,2883,3.41,2999,6.99,3000,3.41,3001,3.41,3057,3.41,3058,3.41,3059,3.41,3097,7.34,3098,3.41,3100,3.41,3122,4.62,3216,5.956,3315,6.619,3316,3.41,3318,3.41,3319,3.41,3320,4.811,3515,5.123,3658,6.671,3659,3.41,3670,7.151,3671,3.41,3672,3.41,3673,6.866,3712,7.556,3713,3.41,3714,3.41,3798,5.034,3873,5.034,3930,3.41,3931,3.41,4835,3.41,5291,2.97,5292,3.792,5293,3.792,5294,3.792,5295,3.792,5296,3.792]],["title/todo.html",[370,1.552,4479,3.595,4480,3.21]],["body/todo.html",[2,1.27,5,0.043,9,0.479,10,1.324,12,0.417,13,0.202,14,0.004,17,2.504,31,0.106,34,2.947,40,2.139,44,2.947,69,0.873,72,2.999,74,2.074,77,1.195,112,2.183,114,0.508,144,3.463,145,1.386,172,0.003,173,0.003,179,2.098,207,3.729,208,2.571,210,3.463,211,3.979,219,2.571,257,2.283,270,2.697,273,1.949,295,2.183,298,3.586,316,1.594,323,1.388,328,1.087,361,6.16,364,4.32,365,5.447,370,1.59,371,4.189,372,3.328,385,2.44,401,2.723,417,2.571,421,2.278,437,2.183,495,2.058,511,4.309,515,2.908,539,5.158,546,3.126,640,2.278,767,2.697,796,4.499,801,2.723,812,4.32,870,4.499,876,4.025,880,2.723,881,3.288,884,3.463,885,2.504,932,5.5,964,1.852,968,2.644,1077,2.811,1107,1.949,1138,2.644,1218,3.9,1518,3.288,1706,2.139,1718,2.571,1720,2.644,1721,2.644,1722,2.571,1777,5.047,1835,2.723,1861,4.864,1899,2.908,1906,2.644,1926,2.644,1934,4.32,1963,5.057,1974,2.229,1996,3.017,2047,3.682,2060,3.976,2076,3.142,2078,4.025,2086,3.463,2108,2.811,2123,3.9,2173,4.301,2175,3.586,2185,4.189,2206,5.273,2316,3.682,2375,3.288,2377,3.463,2398,3.017,2426,5.832,2427,4.32,2458,6.694,2463,3.142,2479,3.463,2620,4.499,2893,3.976,2895,3.682,2911,3.288,2928,3.682,2930,3.142,2959,3.682,2961,3.142,3043,3.288,3053,3.017,3131,6.651,3143,3.142,3144,3.288,3158,3.142,3163,3.017,3271,3.463,3327,3.142,3328,3.017,3362,2.723,3675,3.463,3702,5.256,4262,3.976,4357,3.976,4389,3.976,4486,4.959,4487,3.142,4508,3.682,4509,3.682,4512,3.682,4556,3.682,4565,3.288,4572,3.463,4585,3.682,4622,3.463,4634,3.463,4637,3.288,4710,3.976,4757,3.682,4768,3.976,4775,3.288,4782,5.5,4815,3.976,4860,3.976,4951,3.682,5070,3.682,5216,5.693,5263,4.959,5297,3.682,5298,4.421,5299,3.976,5300,3.976,5301,3.463,5302,3.682,5303,4.421,5304,4.421,5305,3.976,5306,5.693,5307,4.708,5308,6.005,5309,3.976,5310,4.421,5311,7.685,5312,4.421,5313,4.421,5314,3.463,5315,4.421,5316,4.421,5317,4.421,5318,3.288,5319,4.421,5320,3.682,5321,4.421,5322,3.976,5323,4.421,5324,4.421,5325,4.421,5326,4.421,5327,4.421,5328,4.421,5329,4.421,5330,4.421,5331,4.421,5332,4.421,5333,4.421,5334,4.421,5335,4.421,5336,4.421,5337,3.976,5338,4.421,5339,4.421,5340,3.976,5341,4.421,5342,4.421,5343,4.421,5344,4.421,5345,4.421,5346,4.421,5347,3.288,5348,3.976,5349,3.976,5350,4.421,5351,4.421,5352,3.976,5353,3.976,5354,3.976,5355,4.421,5356,3.976,5357,3.682,5358,4.421,5359,4.421,5360,4.421,5361,4.421,5362,4.421,5363,3.682,5364,4.421,5365,6.651,5366,4.421,5367,4.421,5368,4.421,5369,4.421,5370,4.421,5371,4.421,5372,3.682,5373,3.682,5374,4.421,5375,6.331,5376,3.976,5377,4.421]],["title/miscellaneous/typealiases.html",[4424,2.839,5378,6.223]],["body/miscellaneous/typealiases.html",[0,0.587,6,4.193,7,5.865,8,0.236,10,1.179,12,0.532,13,0.331,14,0.004,29,5.865,30,5.345,37,1.506,72,3.037,112,2.784,118,3.708,145,1.234,172,0.003,173,0.003,257,2,308,2.445,316,0.959,411,5.421,426,4.89,430,4.478,576,4.696,580,6.236,581,1.793,888,2.117,918,4.925,987,3.114,1046,5.028,1079,4.696,1096,2.843,1098,4.761,1107,3.301,1113,4.136,1194,5.322,1203,5.322,1280,4.193,1297,5.865,1311,5.568,1317,4.761,1320,5.568,1346,5.865,1777,3.847,2063,4.193,2183,4.696,2184,6.585,2189,6.236,2197,6.236,2511,4.416,2518,4.007,2519,5.568,2523,4.416,2528,3.698,2532,4.007,2535,5.865,2541,4.416,2542,5.865,2543,6.236,2639,3.708,2699,4.193,2704,5.568,3063,4.416,3073,5.865,3074,6.236,3116,4.007,3123,4.696,3124,5.322,3127,5.865,3163,5.11,3256,4.416,3264,6.236,3405,5.07,3437,4.696,3438,4.696,3538,5.07,3631,5.07,4424,3.708,4426,5.07,4430,6.734,4433,5.07,4435,5.07,4943,5.07,5379,5.638,5380,5.638,5381,7.489,5382,7.489,5383,5.638,5384,8.385,5385,7.489,5386,5.638,5387,7.489,5388,7.489,5389,5.638,5390,5.638,5391,5.638,5392,5.07,5393,5.638,5394,5.07,5395,6.734,5396,5.07,5397,5.638,5398,7.489,5399,5.638,5400,7.489,5401,5.638,5402,5.07,5403,5.638,5404,5.07,5405,5.638,5406,5.638,5407,4.007,5408,5.07,5409,5.638,5410,5.07,5411,5.638,5412,5.638,5413,5.638]],["title/miscellaneous/variables.html",[4424,2.839,5414,4.874]],["body/miscellaneous/variables.html",[5,0.027,8,0.065,9,0.168,12,0.694,13,0.268,14,0.005,15,0.038,17,0.878,22,0.052,24,2.312,25,1.101,26,1.101,27,1.101,28,1.101,34,4.462,35,1.045,37,0.971,38,2.358,43,1.662,44,1.693,45,1.524,46,1.603,47,1.693,48,0.835,54,0.671,69,0.306,72,1.475,74,1.538,76,1.289,77,1.346,78,1.341,114,0.504,121,0.927,123,1.391,128,1.48,129,1.851,138,1.789,139,1.676,140,1.789,143,0.835,145,1.609,148,1.159,149,1.392,168,1.159,172,0.001,173,0.001,174,1.933,178,1.857,179,1.291,181,1.84,182,0.289,199,0.286,201,2.312,207,1.372,208,0.901,209,1.152,216,0.915,217,1.857,219,1.582,257,0.414,258,1.057,264,1.019,270,0.66,272,1.14,281,2.705,298,2.06,308,0.506,314,0.985,323,0.854,327,1.214,347,1.101,349,0.355,354,0.486,365,1.582,369,0.985,370,0.978,372,0.639,377,0.901,381,1.127,385,3.09,386,3.228,401,2.24,406,1.402,408,6.566,411,0.835,418,0.985,421,1.874,432,1.101,437,0.765,477,0.649,493,1.057,495,2.318,504,2.544,508,1.933,509,3.108,511,0.781,515,1.789,516,1.667,544,0.816,546,0.765,581,2.189,582,1.549,584,1.291,588,1.214,592,2.418,640,0.798,652,0.628,665,0.878,683,1.402,747,0.549,796,1.101,801,3.067,807,3.398,813,1.73,815,0.927,818,0.798,819,3.029,820,1.214,846,2.06,856,1.317,862,1.057,880,0.954,881,1.152,885,2.477,886,1.857,887,1.29,888,2.761,901,0.781,928,1.057,936,1.057,937,1.29,964,0.649,966,0.695,971,1.961,974,2.24,975,1.267,977,1.73,995,2.131,996,1.393,1012,2.447,1015,2.447,1016,1.393,1017,2.266,1018,1.393,1019,1.214,1021,1.393,1022,1.393,1023,1.393,1024,4.932,1025,1.393,1026,1.019,1074,0.878,1091,0.985,1093,1.76,1096,1.372,1101,1.961,1103,0.927,1104,0.985,1107,2.607,1143,1.019,1144,1.019,1215,1.393,1216,2.266,1218,1.676,1233,4.078,1242,2.585,1245,1.433,1280,1.152,1317,0.985,1342,2.131,1343,1.057,1378,1.101,1449,1.057,1467,0.985,1592,1.101,1594,1.152,1602,0.901,1635,1.29,1647,2.266,1648,2.266,1649,1.29,1650,1.29,1680,1.152,1694,2.312,1706,0.75,1717,1.057,1718,0.901,1720,0.927,1722,0.901,1744,1.152,1841,2.705,1846,1.152,1861,1.789,1868,0.798,1899,1.019,1911,1.214,1918,2.115,1945,0.878,1957,1.29,1958,1.393,1959,3.271,1962,1.152,1963,2.75,1964,1.214,1968,2.447,1969,2.266,1970,1.393,1971,1.393,1974,1.834,1975,2.447,1976,1.214,1977,1.874,1978,1.019,1979,1.152,2026,1.933,2029,1.152,2044,1.214,2047,1.582,2077,1.019,2078,1.73,2087,1.057,2101,0.985,2108,2.781,2123,0.954,2164,2.023,2173,0.901,2174,0.901,2175,1.541,2185,0.878,2204,1.29,2211,1.29,2212,1.101,2239,2.131,2241,1.214,2247,1.29,2248,1.29,2249,2.447,2262,1.152,2299,1.393,2316,1.29,2319,1.29,2327,1.019,2362,4.078,2367,1.29,2368,1.393,2372,1.393,2374,3.271,2375,1.152,2376,1.29,2377,4.921,2379,2.447,2380,2.585,2392,2.447,2393,1.393,2394,2.447,2395,1.393,2396,1.214,2397,2.447,2398,2.482,2399,1.057,2400,2.447,2401,1.393,2402,2.447,2403,1.393,2404,1.29,2405,1.393,2406,1.393,2407,1.393,2408,1.393,2409,1.393,2410,1.29,2417,1.29,2423,2.447,2424,1.214,2425,1.29,2426,1.057,2427,2.482,2428,2.447,2429,1.29,2430,2.447,2431,1.393,2432,2.266,2433,2.131,2434,1.393,2435,1.393,2436,2.447,2437,1.393,2438,1.393,2439,1.393,2440,1.393,2441,1.393,2442,1.393,2443,4.477,2444,2.447,2445,4.477,2446,1.393,2447,1.393,2448,1.393,2460,2.266,2466,1.101,2524,1.019,2525,1.291,2528,1.343,2530,1.152,2533,0.816,2534,0.816,2561,1.152,2580,0.878,2586,1.101,2649,1.29,2662,2.131,2672,1.676,2765,0.927,2773,0.985,2783,2.358,2813,1.214,2846,2.131,2882,1.057,2894,3.898,2920,1.393,2921,1.393,2922,2.266,2923,1.393,2940,1.393,2946,1.393,2947,1.393,2959,1.29,2961,3.538,2977,1.393,2978,2.447,2990,1.393,2999,1.057,3013,2.266,3014,1.393,3016,1.393,3017,2.447,3018,3.271,3046,1.057,3053,1.857,3063,1.214,3066,2.266,3071,1.057,3072,1.057,3073,1.214,3075,2.266,3076,1.29,3077,1.29,3078,1.29,3079,1.214,3080,1.29,3102,2.023,3104,1.214,3105,1.214,3106,2.705,3116,1.933,3117,1.214,3118,2.131,3119,1.214,3120,2.131,3123,1.29,3124,2.585,3125,1.393,3126,2.447,3132,1.393,3134,3.933,3136,2.447,3137,1.393,3138,2.447,3139,1.393,3140,1.393,3141,1.393,3142,1.29,3143,1.101,3144,1.152,3145,1.214,3146,1.29,3147,1.152,3148,1.393,3149,1.29,3150,1.29,3151,1.393,3152,1.393,3153,1.393,3154,1.393,3155,1.393,3156,1.393,3158,1.933,3242,1.393,3256,1.214,3263,2.266,3315,1.057,3327,1.101,3328,2.482,3393,2.266,3480,1.29,3653,2.131,3658,1.152,3673,1.057,3674,1.29,3687,4.398,3690,2.266,3691,1.29,3692,1.29,3693,1.29,3694,1.29,3695,1.29,3696,1.29,3697,1.29,3698,1.29,3699,1.29,3700,1.29,3701,2.266,3733,2.266,3734,1.393,3736,2.131,3738,2.447,3740,1.393,3741,1.393,3742,4.932,3889,1.393,3894,3.271,3895,1.393,3896,1.393,3897,1.101,3905,1.73,4148,1.393,4151,2.447,4153,3.029,4154,1.393,4155,1.393,4156,1.393,4157,1.393,4160,1.214,4167,2.447,4193,1.214,4306,1.393,4328,2.705,4424,1.019,4438,2.023,4442,5.318,4453,1.29,4481,2.131,4488,1.29,4490,1.393,4507,2.585,4512,2.266,4523,1.393,4524,1.214,4543,1.152,4570,1.214,4576,1.393,4739,1.29,4775,1.152,4782,1.152,4786,1.29,5204,1.29,5222,1.393,5302,1.29,5314,3.426,5320,3.029,5347,1.152,5352,2.447,5365,1.393,5384,1.393,5392,1.393,5394,2.447,5395,3.933,5396,3.271,5404,1.393,5410,1.393,5414,1.214,5415,1.55,5416,4.374,5417,1.55,5418,2.721,5419,1.55,5420,2.721,5421,3.933,5422,2.721,5423,2.721,5424,2.721,5425,1.55,5426,2.721,5427,3.637,5428,1.55,5429,3.637,5430,1.55,5431,2.721,5432,2.721,5433,2.721,5434,1.55,5435,2.721,5436,2.721,5437,1.55,5438,2.721,5439,1.55,5440,4.374,5441,1.55,5442,2.721,5443,1.55,5444,2.721,5445,2.721,5446,3.637,5447,4.374,5448,2.721,5449,1.55,5450,1.55,5451,2.721,5452,3.637,5453,2.721,5454,1.55,5455,2.721,5456,1.55,5457,1.55,5458,1.55,5459,2.721,5460,2.721,5461,1.55,5462,2.721,5463,2.721,5464,1.55,5465,1.55,5466,1.55,5467,1.55,5468,1.55,5469,1.55,5470,2.721,5471,1.55,5472,1.55,5473,1.55,5474,2.721,5475,1.152,5476,1.393,5477,1.55,5478,1.55,5479,1.55,5480,1.393,5481,1.55,5482,1.55,5483,1.393,5484,1.55,5485,1.55,5486,1.55,5487,1.55,5488,1.55,5489,1.55,5490,1.55,5491,1.55,5492,1.55,5493,1.55,5494,2.266,5495,1.393,5496,2.721,5497,1.393,5498,1.393,5499,1.55,5500,1.55,5501,1.393,5502,1.55,5503,2.447,5504,1.55,5505,1.55,5506,1.55,5507,1.55,5508,1.55,5509,1.393,5510,1.55,5511,2.721,5512,3.271,5513,1.55,5514,1.393,5515,1.55,5516,1.55,5517,1.55,5518,1.55,5519,1.55,5520,1.55,5521,1.55,5522,1.55,5523,1.55,5524,1.55,5525,1.55,5526,1.55,5527,1.55,5528,1.55,5529,1.55,5530,1.55,5531,1.55,5532,1.55,5533,1.152,5534,1.55,5535,1.55,5536,1.55,5537,1.55,5538,1.55,5539,1.55,5540,1.55,5541,1.55,5542,1.55,5543,1.55,5544,1.55,5545,1.55,5546,1.55,5547,1.55,5548,1.55,5549,1.55,5550,1.55,5551,1.55,5552,1.55,5553,1.55,5554,1.55,5555,1.55,5556,2.721,5557,1.55,5558,1.55,5559,1.55,5560,1.55,5561,1.55,5562,1.55,5563,1.393,5564,1.55,5565,1.55,5566,1.55,5567,1.55,5568,1.55,5569,1.55,5570,1.55,5571,1.55,5572,1.55,5573,1.55,5574,1.55,5575,1.55,5576,1.55,5577,1.55,5578,1.55,5579,1.55,5580,1.55,5581,1.55,5582,1.55,5583,1.55,5584,1.55,5585,1.55,5586,1.55]],["title/additional-documentation/nestjs-application.html",[818,1.908,856,1.792,2122,1.951,3482,2.154]],["body/additional-documentation/nestjs-application.html",[2,1.091,14,0.004,33,0.794,40,1.837,43,3.432,47,2.637,112,1.875,114,0.305,172,0.002,173,0.002,179,3.999,180,3.601,211,3.497,257,1.513,259,1.469,269,1.767,298,3.208,314,3.601,326,2.497,365,5.695,371,3.208,372,3.698,385,1.147,394,2.047,401,4.627,405,2.544,406,1.956,437,2.797,462,3.725,511,1.914,539,2,592,1.674,796,4.025,814,2.823,815,2.27,816,2.591,818,4.883,846,4.551,856,4.439,859,2.047,873,2.973,926,2.973,928,2.591,1065,2.838,1077,4.775,1078,3.725,1183,2.698,1227,3.865,1230,2.414,1602,4.368,1694,3.601,1711,4.212,1713,4.025,1718,2.208,1720,2.27,1722,3.294,1726,4.717,1730,4.775,1777,2.591,1832,2.097,1891,3.162,1895,2.339,1899,4.456,1926,2.27,1945,2.15,1963,4.654,1974,3.787,1979,2.823,2026,2.698,2036,4.025,2077,2.497,2078,2.414,2122,2,2123,2.339,2124,4.212,2173,3.294,2175,2.15,2185,3.208,2194,2.591,2212,2.698,2271,2.698,2315,2.973,2426,5.125,2433,2.973,2472,4.025,2577,2.591,2579,2.339,2619,2.823,2782,2.27,2814,2.414,2878,2.823,2907,3.162,2914,3.601,3044,3.162,3046,2.591,3068,4.94,3085,3.414,3145,2.973,3160,3.414,3271,2.973,3327,5.71,3328,5.125,3332,2.823,3482,3.294,3675,4.436,3704,3.162,3705,4.436,3905,2.414,3972,4.025,4161,4.025,4328,2.823,4333,3.414,4399,3.414,4408,3.162,4468,3.414,4480,4.212,4481,2.973,4482,3.162,4485,2.823,4486,7.598,4488,4.717,4489,2.973,4492,2.973,4495,3.414,4506,5.306,4507,7.111,4524,2.973,4537,2.823,4545,3.414,4556,3.162,4565,2.823,4570,6.293,4586,2.823,4591,3.414,4597,3.162,4607,3.414,4739,3.162,4765,5.093,4774,3.414,4775,5.038,4821,3.414,4854,2.823,4931,2.823,4940,4.212,4978,6.092,5011,2.823,5054,3.162,5101,3.414,5107,3.414,5226,4.717,5250,3.162,5278,2.973,5289,3.414,5291,2.973,5311,3.414,5314,7.029,5347,5.585,5348,5.093,5353,6.092,5354,6.092,5407,4.025,5421,3.414,5494,4.717,5495,5.093,5497,3.414,5498,3.414,5501,5.093,5512,3.414,5587,3.797,5588,3.162,5589,3.797,5590,5.483,5591,3.797,5592,3.797,5593,3.797,5594,3.797,5595,3.797,5596,3.797,5597,3.797,5598,3.797,5599,5.664,5600,3.797,5601,3.797,5602,3.797,5603,5.093,5604,5.664,5605,7.511,5606,3.797,5607,3.797,5608,3.797,5609,3.162,5610,3.797,5611,7.511,5612,3.797,5613,3.414,5614,3.797,5615,3.797,5616,3.797,5617,8.428,5618,3.797,5619,3.797,5620,3.797,5621,3.797,5622,3.797,5623,5.664,5624,3.797,5625,3.797,5626,3.797,5627,3.797,5628,5.664,5629,3.797,5630,3.797,5631,5.093,5632,4.717,5633,5.664,5634,3.797,5635,3.797,5636,3.797,5637,3.797,5638,5.664,5639,3.797,5640,3.797,5641,3.797,5642,3.797,5643,4.717,5644,3.797,5645,3.797,5646,3.797,5647,3.797,5648,3.414,5649,3.797,5650,3.797,5651,5.093,5652,6.775,5653,3.797,5654,3.797,5655,6.775,5656,5.093,5657,3.797,5658,3.797,5659,3.797,5660,3.797,5661,3.797,5662,3.797,5663,3.797,5664,5.664,5665,3.797,5666,5.664,5667,4.717,5668,3.414,5669,3.797,5670,6.775,5671,5.664,5672,3.797,5673,3.797,5674,3.797,5675,3.414,5676,3.797,5677,3.414,5678,3.797,5679,3.797,5680,3.797,5681,3.797,5682,3.797,5683,3.797,5684,3.797,5685,3.797]],["title/additional-documentation/nestjs-application/software-architecture.html",[2122,1.951,3482,2.154,4494,2.527,4598,2.901]],["body/additional-documentation/nestjs-application/software-architecture.html",[0,0.682,2,0.711,4,0.033,5,0.033,10,1.165,14,0.002,34,3.17,37,0.372,38,1.334,39,1.759,40,4.249,46,0.614,54,1.755,60,4.734,73,0.858,78,0.196,84,0.788,112,2.934,114,0.199,123,0.443,142,1.09,145,1.663,148,0.593,149,0.616,171,1.939,172,0.001,173,0.001,175,0.757,179,3.746,180,2.124,187,0.406,189,0.466,205,0.798,207,3.98,208,2.699,210,1.09,211,1.556,217,1.689,219,2.356,260,2.046,270,1.054,273,0.614,295,0.687,312,1.111,314,2.124,316,0.569,317,1.035,323,0.437,326,2.664,334,1.159,364,5.887,365,0.81,367,0.717,370,0.501,371,1.402,372,3.356,376,0.989,377,1.943,385,0.421,386,1.063,394,2.502,418,0.885,420,2.058,421,0.717,424,3.554,437,2,445,0.95,462,0.916,465,0.885,513,0.733,539,0.733,581,0.443,592,1.091,603,1.998,634,0.769,640,0.717,679,1.035,680,0.674,740,1.09,813,6.245,814,1.035,815,2.422,816,4.942,818,4.133,831,0.989,846,0.788,859,4.506,872,4.055,873,1.939,876,3.541,877,1.09,878,4.658,880,0.858,890,1.628,920,0.788,941,1.893,975,1.886,992,0.751,1065,3.851,1093,1.198,1096,0.702,1103,1.998,1113,1.367,1116,0.674,1138,1.48,1157,0.648,1164,0.885,1174,0.769,1175,0.788,1183,0.989,1217,1.159,1223,1.574,1230,3.269,1235,1.574,1300,2.28,1358,2.28,1389,0.916,1678,1.252,1693,1.939,1706,3.033,1718,1.439,1720,1.48,1722,1.439,1729,1.159,1730,0.885,1777,3.167,1845,2.783,1868,3.914,1895,1.525,1906,0.833,1918,2.356,1923,2.879,1926,2.422,1945,0.788,1963,1.846,1977,3.229,1988,4.174,2036,3.959,2041,5.133,2047,4.666,2076,0.989,2077,2.198,2078,2.124,2086,2.617,2087,0.95,2108,0.885,2121,3.801,2122,1.76,2124,4.874,2173,1.943,2174,3.24,2175,5.149,2177,1.841,2187,2.28,2198,2.28,2262,1.035,2265,2.879,2271,0.989,2281,0.916,2293,1.035,2315,1.09,2398,4.647,2399,0.95,2404,1.159,2424,1.09,2427,0.95,2466,0.989,2479,4.654,2516,0.989,2525,1.175,2527,3.431,2528,0.687,2530,1.035,2566,5.018,2568,1.09,2579,0.858,2580,0.788,2581,1.525,2620,2.375,2626,4.282,2756,0.989,2757,0.989,2765,3.331,2782,2.776,2783,1.334,2814,2.124,2892,1.159,2894,0.989,2908,1.035,2909,2.575,2911,1.035,2912,5.636,2914,0.885,2922,1.159,2927,1.159,2929,4.027,2937,1.09,2986,1.159,2987,3.452,3043,2.485,3046,1.689,3048,3.012,3051,1.841,3079,1.09,3096,1.159,3142,1.159,3143,0.989,3144,3.452,3147,2.485,3164,1.09,3210,2.226,3332,1.035,3361,4.66,3362,3.167,3394,1.035,3430,1.09,3482,0.81,3524,2.061,3650,1.035,3707,3.167,3897,3.654,3905,3.269,3972,1.759,4117,1.159,4160,1.09,4161,0.989,4162,1.159,4193,1.939,4325,1.09,4408,2.061,4454,2.226,4460,2.061,4473,1.252,4481,2.617,4483,1.252,4485,1.841,4486,1.939,4487,1.759,4494,5.992,4498,3.824,4506,1.09,4509,4.639,4511,2.226,4516,3.012,4519,0.989,4526,2.061,4527,2.617,4528,1.252,4532,3.635,4534,2.764,4538,7.274,4543,1.841,4564,1.035,4565,1.035,4572,1.09,4574,1.252,4575,2.226,4578,1.939,4579,1.252,4586,1.841,4590,4.027,4597,2.061,4598,1.09,4608,3.012,4611,2.226,4613,1.159,4616,1.252,4621,1.252,4622,2.617,4625,1.252,4627,1.252,4637,1.035,4641,1.252,4642,2.783,4653,1.252,4657,2.226,4668,4.282,4670,1.252,4673,2.226,4674,1.939,4683,1.159,4698,1.252,4703,1.252,4704,5.133,4718,3.173,4725,0.989,4728,1.252,4745,1.159,4746,2.226,4748,3.005,4752,1.252,4754,1.252,4755,1.252,4761,2.061,4763,1.252,4764,8.122,4773,1.252,4776,1.252,4777,2.061,4780,6.032,4782,1.035,4788,1.159,4790,3.635,4791,1.159,4793,2.061,4795,1.159,4797,1.252,4822,3.173,4827,1.252,4854,1.035,4855,1.252,4873,1.252,4883,1.159,4884,1.159,4887,1.035,4905,1.159,4908,1.252,4916,1.252,4920,2.226,4931,1.035,4933,1.252,4934,1.252,4940,2.485,4952,1.252,4967,2.226,4968,4.174,4969,2.061,4981,2.783,4988,3.374,4996,1.159,5006,3.173,5007,3.643,5009,1.252,5011,1.035,5013,1.252,5021,1.159,5028,1.252,5047,1.252,5049,1.252,5054,1.159,5096,4.624,5125,1.252,5134,1.252,5143,1.252,5152,4.639,5174,5.512,5191,1.159,5206,1.252,5207,1.252,5208,2.061,5209,4.658,5220,1.159,5231,3.374,5253,2.226,5264,1.252,5280,1.159,5291,1.09,5297,2.061,5300,1.252,5301,4.027,5306,1.252,5307,1.035,5309,1.252,5318,1.035,5349,1.252,5356,2.226,5376,1.252,5408,2.226,5414,1.09,5533,1.035,5590,0.95,5603,1.252,5609,1.159,5632,1.159,5643,1.159,5686,1.392,5687,1.392,5688,7.618,5689,6.123,5690,6.268,5691,2.475,5692,3.342,5693,3.005,5694,4.949,5695,2.475,5696,3.005,5697,5.571,5698,1.392,5699,1.392,5700,3.173,5701,3.643,5702,1.392,5703,1.392,5704,1.392,5705,1.392,5706,2.475,5707,2.475,5708,1.392,5709,4.642,5710,1.392,5711,2.475,5712,1.392,5713,3.342,5714,2.475,5715,1.392,5716,1.392,5717,1.392,5718,1.392,5719,1.392,5720,1.392,5721,1.392,5722,1.252,5723,2.475,5724,2.475,5725,5.142,5726,1.392,5727,1.392,5728,2.475,5729,2.475,5730,4.051,5731,3.342,5732,4.051,5733,1.392,5734,3.643,5735,3.643,5736,1.392,5737,2.226,5738,1.392,5739,1.392,5740,1.392,5741,1.392,5742,1.392,5743,1.159,5744,2.783,5745,1.392,5746,1.252,5747,1.392,5748,1.392,5749,7.894,5750,2.475,5751,1.392,5752,7.881,5753,1.392,5754,2.226,5755,1.392,5756,1.392,5757,2.475,5758,1.159,5759,4.66,5760,6.268,5761,6.554,5762,1.392,5763,3.005,5764,2.226,5765,2.475,5766,1.392,5767,1.392,5768,4.174,5769,1.392,5770,1.392,5771,1.392,5772,3.005,5773,3.374,5774,2.475,5775,1.392,5776,1.09,5777,4.642,5778,1.392,5779,1.392,5780,3.342,5781,1.392,5782,1.252,5783,1.392,5784,2.783,5785,1.392,5786,1.392,5787,1.392,5788,1.252,5789,3.005,5790,1.392,5791,1.392,5792,1.392,5793,1.252,5794,2.475,5795,1.392,5796,3.342,5797,1.392,5798,1.392,5799,1.252,5800,3.005,5801,1.392,5802,3.173,5803,2.475,5804,1.392,5805,2.475,5806,3.342,5807,1.392,5808,1.392,5809,1.392,5810,2.061,5811,2.475,5812,3.342,5813,1.392,5814,1.392,5815,1.392,5816,1.392,5817,1.392,5818,1.392,5819,1.392,5820,1.392,5821,1.252,5822,1.392,5823,2.475,5824,1.392,5825,6.268,5826,1.392,5827,2.475,5828,1.252,5829,1.159,5830,1.392,5831,1.392,5832,1.392,5833,1.392,5834,1.392,5835,1.392,5836,1.392,5837,1.392,5838,1.392,5839,1.392,5840,3.342,5841,1.392,5842,2.475,5843,3.342,5844,1.392,5845,1.392,5846,1.392,5847,1.392,5848,2.475,5849,1.392,5850,1.392,5851,1.392,5852,1.392,5853,1.252,5854,1.392,5855,1.392,5856,2.475,5857,1.392,5858,1.252,5859,1.392,5860,1.392,5861,2.475,5862,1.392,5863,1.392,5864,1.252,5865,2.226,5866,1.392,5867,1.392,5868,1.252,5869,1.392,5870,1.392,5871,2.475,5872,1.392,5873,1.392,5874,1.392,5875,1.392,5876,1.392,5877,1.392,5878,1.252,5879,1.392,5880,1.392,5881,4.051,5882,1.392,5883,1.392,5884,1.252,5885,1.252,5886,3.342,5887,1.392,5888,1.392,5889,1.392,5890,1.392,5891,1.392,5892,1.392,5893,2.475,5894,1.392,5895,3.342,5896,1.392,5897,1.392,5898,1.392,5899,2.475,5900,1.392,5901,1.252,5902,1.392,5903,3.342,5904,2.475,5905,1.392,5906,1.392,5907,1.392,5908,1.392,5909,1.392,5910,1.392,5911,1.392,5912,1.392,5913,1.252,5914,2.475,5915,1.392,5916,1.392,5917,1.392,5918,1.252,5919,1.392,5920,1.392,5921,1.392,5922,1.392,5923,1.392,5924,8.544,5925,1.392,5926,1.392,5927,1.392,5928,1.252,5929,1.392,5930,1.392,5931,2.475,5932,1.392,5933,3.342,5934,1.392,5935,1.392,5936,1.392,5937,1.392,5938,1.392,5939,1.392,5940,1.392,5941,1.252,5942,1.252,5943,1.392,5944,1.392,5945,1.392,5946,1.392,5947,1.252,5948,1.392,5949,1.392,5950,1.392,5951,1.392,5952,2.475,5953,4.642,5954,1.392,5955,1.159,5956,1.392,5957,2.617,5958,1.392,5959,2.226,5960,1.392,5961,1.159,5962,1.392,5963,1.392,5964,1.392,5965,4.642,5966,1.392,5967,1.392,5968,1.392,5969,1.392,5970,1.392,5971,1.392,5972,1.392,5973,1.392,5974,1.392,5975,1.392,5976,1.392,5977,1.392,5978,1.392,5979,1.392,5980,2.475,5981,1.392,5982,1.392,5983,1.392,5984,2.475,5985,1.392,5986,1.392,5987,1.392,5988,2.475,5989,1.392,5990,1.392,5991,1.392,5992,1.392,5993,1.252,5994,2.475,5995,1.392,5996,2.475,5997,1.392,5998,1.392,5999,1.392,6000,1.252,6001,2.475]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[179,1.539,2122,1.708,3482,1.886,4494,2.213,5759,2.411]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.264,2,1.188,3,0.041,4,0.034,5,0.083,9,0.566,10,0.531,13,0.132,14,0.004,15,0.1,17,2.341,18,0.479,22,0.101,31,0.205,38,1.368,40,2.919,47,1.181,60,4.252,69,0.501,74,1.159,77,1.117,78,0.738,112,3.516,114,0.628,127,1.613,128,1.026,129,1.218,145,1.454,146,3.717,149,0.762,172,0.002,173,0.002,175,0.575,179,1.962,187,0.618,207,3.59,208,3.042,211,1.924,218,3.966,219,1.476,257,2.526,259,3.297,260,1.119,267,1.437,272,1.732,273,1.822,286,1.732,291,3.717,292,2.719,293,4.286,295,3.516,298,3.761,314,1.613,316,1.277,317,1.887,323,2.541,329,1.029,349,1.522,354,0.797,365,3.042,367,3.668,369,3.834,372,3.954,378,1.987,379,2.113,385,0.767,401,1.563,406,1.307,421,2.13,430,1.517,437,2.978,511,2.637,513,2.178,535,1.613,567,2.113,582,1.081,588,1.987,592,1.822,634,2.283,640,2.695,740,3.238,767,3.198,795,2.938,798,1.732,799,2.282,812,1.732,813,3.834,815,3.128,817,2.938,818,1.307,852,1.732,856,3.213,859,4.685,870,3.717,880,2.546,886,1.732,888,1.964,920,2.963,933,3.074,964,3.279,966,2.98,971,2.229,972,1.613,974,2.546,975,1.181,1065,3.391,1077,1.613,1078,2.719,1103,2.472,1107,2.306,1138,1.517,1214,1.887,1218,1.563,1227,3.569,1230,2.628,1235,1.613,1241,2.637,1260,1.669,1274,1.887,1300,2.821,1364,1.368,1389,1.669,1638,4.719,1706,1.228,1720,1.517,1722,2.404,1730,3.834,1752,1.887,1832,1.401,1834,2.113,1835,4.09,1836,4.356,1862,2.113,1868,1.307,1895,1.563,1898,1.613,1906,2.472,1918,3.507,1926,1.517,1945,2.963,1963,2.283,1974,1.279,1996,1.732,2041,4.097,2061,2.282,2108,1.613,2121,4.531,2122,2.755,2123,1.563,2126,2.282,2131,2.282,2133,4.859,2172,1.732,2173,3.862,2174,4.141,2176,3.717,2177,1.887,2178,1.803,2179,1.803,2184,1.987,2185,1.437,2187,1.732,2198,1.732,2207,1.732,2294,1.803,2389,2.282,2398,1.732,2427,3.569,2458,3.238,2466,1.803,2472,1.803,2475,1.887,2479,4.097,2566,1.476,2588,3.238,2765,1.517,2782,3.971,2783,1.368,2814,1.613,2878,1.887,2894,2.938,2908,1.887,2909,2.628,2915,2.113,2929,1.987,2937,1.987,2961,1.803,2986,2.113,3051,3.074,3053,1.732,3115,4.097,3143,2.938,3224,2.282,3225,2.282,3226,2.282,3227,2.282,3228,2.113,3235,2.113,3270,2.113,3327,1.803,3361,3.074,3362,1.563,3394,1.887,3422,1.803,3505,2.282,3687,1.887,3702,1.803,3707,1.732,3905,1.613,3943,2.282,3972,2.938,4328,4.938,4453,2.113,4460,2.113,4487,5.752,4491,2.113,4494,3.569,4498,1.887,4506,1.987,4508,2.113,4516,1.887,4519,1.803,4531,2.113,4534,2.821,4536,2.282,4537,1.887,4538,4.097,4554,2.282,4564,1.887,4566,2.113,4568,2.113,4577,2.113,4578,4.724,4583,2.282,4585,2.113,4608,1.887,4624,2.282,4640,2.113,4643,2.282,4674,1.987,4704,1.987,4720,2.282,4725,1.803,4745,2.113,4756,2.113,4758,2.282,4782,5.295,4786,2.113,4788,2.113,4790,4.097,4795,2.113,4822,1.987,4854,3.074,4866,2.282,4883,2.113,4887,1.887,4931,1.887,4988,2.113,4996,2.113,5006,3.238,5011,1.887,5128,4.704,5174,3.238,5201,2.282,5209,1.803,5230,2.282,5280,2.113,5301,4.724,5302,4.356,5307,1.887,5308,6.019,5318,3.074,5320,4.356,5357,2.113,5372,4.356,5373,4.356,5407,3.717,5414,1.987,5475,3.074,5480,2.282,5503,2.282,5509,2.282,5533,1.887,5590,2.821,5609,2.113,5613,2.282,5667,3.443,5688,6.13,5689,2.282,5700,1.987,5735,2.282,5752,7.687,5754,2.282,5758,3.443,5759,4.938,5772,2.282,5776,1.987,5782,2.282,5784,2.113,5793,2.282,5799,2.282,5802,1.987,5810,2.113,5821,3.717,5828,4.704,5865,4.704,5868,3.717,5885,4.704,5941,3.717,5947,2.282,5955,2.113,5957,1.987,5959,5.423,6002,2.113,6003,2.282,6004,2.538,6005,5.231,6006,2.538,6007,6.751,6008,3.443,6009,2.538,6010,2.538,6011,4.134,6012,6.031,6013,2.538,6014,2.538,6015,2.538,6016,2.538,6017,2.538,6018,2.538,6019,2.538,6020,4.134,6021,2.538,6022,2.538,6023,2.538,6024,2.538,6025,2.282,6026,4.134,6027,2.538,6028,2.538,6029,2.538,6030,2.538,6031,2.282,6032,2.538,6033,2.538,6034,2.282,6035,4.134,6036,2.538,6037,2.538,6038,2.538,6039,2.538,6040,2.113,6041,2.538,6042,2.538,6043,2.538,6044,2.538,6045,2.538,6046,2.538,6047,2.538,6048,2.538,6049,4.134,6050,2.538,6051,2.282,6052,3.443,6053,3.717,6054,2.538,6055,2.538,6056,2.538,6057,2.538,6058,2.538,6059,2.538,6060,2.538,6061,2.538,6062,2.538,6063,2.538,6064,2.538,6065,2.538,6066,2.538,6067,2.538,6068,2.538,6069,2.538,6070,2.538,6071,2.538,6072,2.538,6073,2.538,6074,2.538,6075,2.538,6076,2.538,6077,2.538,6078,2.538,6079,2.538,6080,2.113,6081,2.538,6082,2.538,6083,2.538,6084,2.538,6085,2.538,6086,2.538,6087,2.538,6088,2.538,6089,2.282,6090,2.538,6091,2.538,6092,2.282,6093,2.538,6094,2.282,6095,2.538,6096,2.538,6097,2.538,6098,2.282,6099,2.538,6100,2.538,6101,2.538,6102,2.538,6103,2.538,6104,2.282,6105,2.282]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[2122,1.708,3482,1.886,5308,2.411,5700,2.54,6106,2.916]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[0,0.423,12,0.384,14,0.004,34,1.894,54,1.762,60,2.304,74,1.14,77,1.1,78,0.84,112,3.483,121,3.564,128,1.014,129,2.436,145,2.078,148,1.733,149,1.432,172,0.002,173,0.002,179,2.828,180,3.789,187,0.321,206,3.388,211,3.284,218,2.675,270,1.733,308,1.946,316,1.014,323,2.713,334,4.964,349,0.932,367,3.07,370,1.462,371,3.376,372,3.966,419,2.304,420,3.671,424,2.433,437,2.943,465,4.485,467,2.143,477,1.704,495,1.894,535,2.586,567,4.964,582,1.733,603,2.433,798,2.776,813,5.675,814,5.246,815,2.433,816,2.776,817,2.891,818,4.451,856,2.884,859,2.193,870,2.891,873,4.668,876,2.586,877,3.186,878,2.891,888,2.649,901,3.005,933,4.432,975,2.775,1065,3.464,1113,2.246,1121,3.789,1164,2.586,1166,2.433,1183,2.891,1217,5.875,1235,4.938,1389,3.92,1602,2.366,1713,2.891,1752,3.025,1899,2.675,1918,3.466,1923,2.891,1926,3.564,1934,2.776,1945,3.376,2026,2.891,2047,2.366,2087,2.776,2108,2.586,2121,6.247,2174,5.432,2178,2.891,2179,2.891,2207,2.776,2262,3.025,2398,2.776,2472,2.891,2475,3.025,2729,2.891,2765,2.433,2773,2.586,2782,3.564,2814,3.789,3158,2.891,3332,3.025,3430,3.186,3440,3.658,3468,3.658,3702,2.891,3707,2.776,3828,3.186,3897,6.14,4283,3.388,4325,3.186,4330,3.025,4438,3.025,4487,2.891,4489,3.186,4494,5.3,4507,2.891,4516,3.025,4517,4.964,4519,2.891,4532,3.186,4534,2.776,4586,3.025,4590,3.186,4592,3.388,4608,3.025,4634,3.186,4640,4.964,4674,3.186,4679,3.388,4683,3.388,4718,4.668,4725,2.891,4761,3.388,4777,3.388,4887,3.025,4931,4.432,4940,4.432,4987,3.658,5006,5.525,5011,3.025,5152,3.388,5174,3.186,5195,3.658,5209,2.891,5231,3.388,5250,3.388,5263,3.186,5277,5.36,5278,3.186,5297,3.388,5307,4.432,5308,7.427,5318,4.432,5363,3.388,5407,2.891,5475,3.025,5588,3.388,5667,3.388,5688,3.186,5696,3.658,5700,4.668,5701,3.658,5743,3.388,5752,6.476,5776,6.476,5802,3.186,5853,3.658,5858,3.658,5884,3.658,5913,3.658,5928,3.658,5942,3.658,5961,3.388,6002,3.388,6007,5.36,6025,5.36,6052,3.388,6089,3.658,6092,3.658,6106,3.658,6107,4.068,6108,4.068,6109,4.068,6110,4.068,6111,4.068,6112,4.068,6113,4.068,6114,4.068,6115,5.961,6116,4.068,6117,4.068,6118,4.068,6119,4.068,6120,4.068,6121,4.068,6122,4.068,6123,4.068,6124,4.068,6125,4.068,6126,4.068,6127,4.068,6128,4.068,6129,4.068,6130,3.658,6131,4.068,6132,4.068,6133,3.658,6134,4.068,6135,3.658,6136,4.068,6137,4.068,6138,4.068,6139,4.068,6140,4.068,6141,4.068,6142,4.068,6143,5.36,6144,4.068,6145,4.068,6146,4.068,6147,4.068,6148,4.068,6149,3.658,6150,4.068,6151,4.068,6152,4.068,6153,4.068,6154,4.068,6155,4.068,6156,4.068,6157,4.068,6158,4.068,6159,4.068,6160,4.068,6161,4.068,6162,4.068,6163,4.068,6164,4.068,6165,4.068,6166,4.068,6167,4.068,6168,4.068,6169,4.068,6170,4.068,6171,4.068,6172,4.068,6173,5.961,6174,4.068,6175,3.388,6176,4.068,6177,7.055,6178,3.658,6179,4.068,6180,4.068,6181,4.068,6182,4.068,6183,3.388]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[872,2.213,2122,1.708,3482,1.886,5209,2.304,5694,2.701]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.711,12,0.923,13,0.27,14,0.004,15,0.19,18,0.93,22,0.07,31,0.165,34,4.143,35,1.416,37,1.825,38,2.656,54,2.961,69,0.973,74,1.381,84,2.79,112,3.374,114,0.395,172,0.003,173,0.003,179,3.723,180,3.132,181,1.653,186,5.081,206,4.103,207,3.445,208,4.563,217,3.362,219,5.176,257,2.377,273,3.012,314,3.132,326,5.16,362,4.103,365,2.865,367,4.042,369,3.132,372,3.491,385,2.689,393,3.501,409,3.362,513,2.595,795,3.501,798,3.362,813,5.658,814,3.664,815,4.087,816,3.362,818,2.538,856,3.307,859,3.684,867,4.209,870,3.501,872,4.663,876,3.132,878,6.021,884,3.859,885,5.453,923,4.344,1065,2.064,1077,3.132,1118,3.132,1223,4.344,1706,2.384,1721,2.946,1722,3.974,1855,4.103,1906,2.946,1974,2.484,1995,4.494,2004,3.035,2034,5.691,2047,5.685,2107,4.43,2108,4.344,2109,3.859,2117,4.43,2121,3.362,2122,3.6,2123,4.833,2175,2.79,2176,3.501,2207,3.362,2398,5.354,2399,6.57,2426,4.663,2429,4.103,2620,4.856,2625,4.43,2626,4.103,2628,4.43,2632,4.43,2634,4.43,2635,4.43,2766,4.856,2783,2.656,2909,3.132,2929,3.859,3043,3.664,3046,3.362,3051,5.081,3053,4.663,3448,4.43,3650,3.664,4258,4.43,4485,3.664,4531,4.103,4534,3.362,4543,3.664,4553,4.103,4771,4.43,4904,4.43,5209,3.501,5533,3.664,5590,3.362,5656,4.43,5694,5.691,5829,4.103,5878,4.43,5955,4.103,6008,4.103,6034,4.43,6040,4.103,6104,4.43,6183,4.103,6184,4.927,6185,8.473,6186,4.927,6187,4.927,6188,8.473,6189,4.43,6190,4.927,6191,4.927,6192,7.846,6193,4.927,6194,4.927,6195,4.927,6196,6.834,6197,4.927,6198,4.927,6199,4.927,6200,4.43,6201,4.927,6202,6.834,6203,4.927,6204,4.927,6205,4.927,6206,4.927,6207,4.927,6208,4.927,6209,4.927,6210,4.927,6211,4.927,6212,4.927,6213,4.927]],["title/additional-documentation/nestjs-application/testing.html",[2122,2.274,2914,2.744,3482,2.51]],["body/additional-documentation/nestjs-application/testing.html",[13,0.158,14,0.004,15,0.077,31,0.077,34,3.825,38,3.006,40,0.9,45,0.779,46,0.82,52,1.456,54,2.147,60,3.158,74,2.415,76,0.659,77,1.644,78,0.786,82,0.866,112,2.753,114,0.336,119,1.456,122,1.456,123,0.591,128,1.37,129,2.57,145,0.916,148,1.781,149,0.588,172,0.002,173,0.001,175,0.421,179,3.087,187,0.392,189,0.259,199,0.343,207,0.937,217,2.854,219,1.081,257,2.047,259,1.233,260,1.844,270,0.792,272,1.752,273,1.844,292,2.096,302,1.672,303,1.672,309,0.937,312,0.834,314,4.725,316,0.316,317,2.37,321,1.672,323,1.313,355,0.452,365,5.711,367,1.642,369,1.182,371,2.369,372,3.637,376,2.265,378,1.456,385,1.497,386,1.576,419,4.736,420,3.434,421,0.958,424,2.964,437,3.212,443,1.223,462,1.223,464,1.548,465,1.182,516,0.709,544,1.679,546,2.065,581,0.591,640,2.872,680,0.9,767,0.792,798,3.805,812,1.269,813,2.659,815,1.906,817,2.265,818,2.872,856,0.9,859,2.672,867,1.145,874,1.456,876,2.026,901,0.937,923,1.182,928,2.175,932,1.382,964,2.076,966,0.834,987,1.027,1065,3.211,1078,4,1091,1.182,1107,2.681,1118,1.182,1119,1.321,1138,2.501,1157,1.484,1166,1.112,1174,1.76,1175,1.053,1183,4.876,1343,2.175,1363,3.006,1364,1.002,1378,3.522,1389,1.223,1464,1.321,1518,1.382,1638,1.321,1680,2.37,1693,1.456,1694,2.659,1706,3.709,1717,2.854,1718,1.081,1752,2.37,1835,1.145,1861,1.223,1868,1.642,1895,1.963,1898,1.182,1906,1.112,1918,3.537,1921,1.548,1923,1.321,1924,1.548,1925,1.269,1926,3.334,1963,5.424,1965,5.065,1974,0.937,1976,4.367,1977,2.872,1978,3.26,1979,4.146,1996,1.269,2022,1.672,2029,2.37,2034,1.548,2041,1.456,2044,1.456,2047,1.853,2063,2.37,2087,2.854,2108,2.659,2119,2.265,2120,2.866,2121,4.439,2123,1.145,2155,1.382,2172,1.269,2174,1.081,2175,2.369,2187,2.175,2198,1.269,2205,2.175,2207,4.682,2232,1.672,2271,1.321,2281,1.223,2290,2.496,2293,1.382,2298,4.457,2375,1.382,2396,1.456,2399,1.269,2424,1.456,2426,4.15,2427,3.382,2459,1.672,2463,1.321,2475,1.382,2478,1.672,2524,1.223,2525,0.882,2526,1.269,2566,1.081,2580,1.053,2619,1.382,2620,1.321,2782,1.112,2783,1.002,2814,3.151,2820,2.265,2894,2.265,2895,1.548,2907,1.548,2909,2.026,2911,2.37,2914,5.724,2928,1.548,3044,1.548,3045,1.548,3046,1.269,3047,1.672,3048,3.686,3051,1.382,3053,2.854,3113,1.456,3122,2.175,3124,2.265,3133,1.672,3145,1.456,3147,1.382,3158,4.322,3162,2.866,3164,1.456,3165,1.672,3177,1.548,3203,1.672,3206,1.548,3216,1.269,3218,1.321,3245,1.672,3272,1.548,3320,2.972,3327,3.962,3328,2.854,3332,4.146,3362,1.145,3394,3.686,3422,1.321,3437,1.548,3438,1.548,3670,2.265,3705,1.456,3711,1.548,3828,1.456,3897,2.972,3905,2.026,3971,2.866,4160,4.764,4161,1.321,4162,1.548,4283,1.548,4325,1.456,4362,1.672,4438,4.837,4471,1.548,4480,1.382,4487,3.522,4489,4.367,4497,1.672,4498,4.523,4500,1.548,4501,1.672,4502,2.654,4507,1.321,4515,1.672,4519,1.321,4522,1.672,4527,3.276,4532,2.496,4534,1.269,4537,2.37,4538,1.456,4543,2.37,4560,1.672,4564,2.37,4565,2.37,4572,5.614,4577,1.548,4590,1.456,4592,3.483,4598,1.456,4608,1.382,4613,1.548,4622,1.456,4623,1.672,4634,2.496,4637,1.382,4642,1.548,4644,1.672,4662,1.672,4668,1.548,4679,3.483,4704,1.456,4715,1.672,4718,2.496,4724,1.672,4725,1.321,4756,1.548,4764,1.548,4766,1.672,4780,2.654,4790,3.882,4791,1.548,4793,1.548,4812,1.672,4819,1.672,4822,1.456,4854,1.382,4867,1.672,4880,1.672,4884,1.548,4887,1.382,4893,1.672,4896,1.672,4902,1.672,4915,1.672,4940,2.37,4951,1.548,4958,1.672,4969,2.654,4971,6.684,4981,1.548,5021,1.548,5070,1.548,5149,1.672,5214,1.672,5220,1.548,5226,1.548,5228,1.672,5248,4.457,5263,1.456,5269,3.483,5301,3.276,5305,1.672,5307,1.382,5308,1.382,5318,3.686,5337,3.761,5340,1.672,5347,2.37,5357,1.548,5363,1.548,5372,6.842,5373,1.548,5402,1.672,5407,1.321,5475,2.37,5483,1.672,5514,1.672,5533,4.523,5563,2.866,5588,1.548,5590,5.606,5631,1.672,5643,1.548,5648,1.672,5668,1.672,5688,5.614,5693,1.672,5722,1.672,5734,1.672,5744,2.654,5746,1.672,5752,5.822,5758,1.548,5759,4.146,5763,1.672,5764,1.672,5768,1.672,5773,1.548,5776,2.496,5784,1.548,5788,4.457,5789,1.672,5802,1.456,5810,1.548,5829,1.548,5901,1.672,5918,1.672,5957,1.456,5961,3.483,6000,2.866,6002,4.128,6003,1.672,6008,1.548,6031,1.672,6040,1.548,6051,1.672,6052,1.548,6053,1.672,6094,1.672,6098,1.672,6130,1.672,6133,2.866,6135,1.672,6143,1.672,6178,1.672,6183,2.654,6189,1.672,6200,1.672,6214,3.187,6215,1.859,6216,1.859,6217,5.849,6218,1.859,6219,1.859,6220,6.505,6221,1.859,6222,1.859,6223,4.182,6224,1.859,6225,1.859,6226,2.866,6227,1.859,6228,1.859,6229,1.859,6230,1.859,6231,1.859,6232,1.859,6233,1.672,6234,3.187,6235,1.859,6236,1.859,6237,1.859,6238,1.859,6239,1.859,6240,1.859,6241,1.859,6242,1.859,6243,1.859,6244,1.859,6245,1.859,6246,1.859,6247,1.859,6248,1.859,6249,1.859,6250,1.859,6251,1.859,6252,1.859,6253,1.859,6254,1.859,6255,1.859,6256,1.859,6257,1.859,6258,1.859,6259,1.859,6260,1.859,6261,1.859,6262,4.182,6263,1.859,6264,4.182,6265,3.187,6266,5.576,6267,3.187,6268,4.182,6269,1.859,6270,1.859,6271,1.859,6272,3.187,6273,1.859,6274,1.859,6275,1.859,6276,1.859,6277,1.859,6278,1.859,6279,1.859,6280,1.859,6281,1.859,6282,6.083,6283,1.859,6284,1.859,6285,1.859,6286,1.859,6287,1.859,6288,1.859,6289,1.859,6290,1.859,6291,1.859,6292,1.859,6293,1.859,6294,1.859,6295,1.859,6296,5.576,6297,3.187,6298,1.859,6299,3.187,6300,1.859,6301,1.859,6302,1.859,6303,3.187,6304,1.859,6305,1.859,6306,4.182,6307,3.187,6308,3.187,6309,1.859,6310,1.859,6311,4.957,6312,1.859,6313,1.859,6314,1.859,6315,1.859,6316,1.859,6317,1.859,6318,1.859,6319,1.859,6320,1.859,6321,3.187,6322,3.187,6323,1.859,6324,3.187,6325,1.859,6326,1.859,6327,1.859,6328,1.859,6329,3.187,6330,3.187,6331,1.859,6332,3.187,6333,1.859,6334,1.859,6335,1.859,6336,1.859,6337,1.859,6338,3.187,6339,1.859,6340,1.859,6341,1.859,6342,1.859,6343,1.859,6344,1.859,6345,3.187,6346,4.957,6347,1.859,6348,1.859,6349,1.859,6350,1.859,6351,1.859,6352,1.859,6353,3.187,6354,1.859,6355,1.859,6356,1.859,6357,1.859,6358,1.859,6359,1.859,6360,1.859,6361,1.859,6362,1.859,6363,1.672,6364,1.859,6365,3.187,6366,1.859,6367,1.859,6368,1.859,6369,1.859,6370,1.859,6371,1.859,6372,1.859,6373,1.859,6374,1.859,6375,1.859,6376,1.859,6377,1.859,6378,1.859,6379,1.859,6380,1.859,6381,1.859,6382,1.859,6383,1.859,6384,1.859,6385,1.859,6386,1.859,6387,1.859,6388,1.859,6389,1.859,6390,1.859,6391,1.859,6392,1.859,6393,1.859,6394,1.859,6395,1.859,6396,1.859,6397,1.859,6398,1.859]],["title/additional-documentation/nestjs-application/decisions.html",[2122,2.274,3482,2.51,6175,3.595]],["body/additional-documentation/nestjs-application/decisions.html",[9,0.971,10,1.569,14,0.004,31,0.136,47,3.494,112,2.793,172,0.003,173,0.003,175,1.909,179,2.684,187,0.593,207,2.852,272,2.37,316,1.433,323,2.816,347,4.02,349,1.721,354,2.356,355,1.374,364,3.86,372,4.034,377,3.29,385,1.709,394,3.05,417,3.29,443,3.721,462,5.539,510,2.189,801,3.485,816,3.86,818,3.866,856,2.738,966,2.539,1065,3.144,1157,2.634,1241,2.852,1300,3.86,1364,3.05,1706,2.738,1720,3.383,1832,3.124,1906,3.383,1945,5.081,1973,4.711,1974,2.852,1977,2.914,2013,4.711,2036,4.02,2063,4.207,2173,3.29,2175,4.251,2178,5.333,2179,4.02,2205,3.86,2271,4.02,2284,5.087,2399,3.86,2458,5.878,2460,4.711,2473,4.02,2564,4.431,2909,3.596,2914,3.596,2930,5.985,3052,5.087,3158,4.02,3359,6.25,3362,4.623,3394,5.581,3522,5.087,3707,3.86,3905,5.354,4328,4.207,4471,4.711,4485,4.207,4494,3.86,4500,6.25,4524,5.878,4566,4.711,4586,4.207,4637,4.207,4725,4.02,4807,5.087,4905,4.711,5191,4.711,5204,4.711,5269,4.711,5278,4.431,5476,5.087,5590,3.86,5632,7.014,5651,5.087,5737,5.087,5743,6.25,5744,4.711,5759,4.207,5773,4.711,5800,6.749,5864,5.087,5957,4.431,5993,5.087,6080,6.25,6105,5.087,6149,5.087,6175,6.25,6217,5.087,6226,5.087,6233,5.087,6363,5.087,6399,5.657,6400,8.423,6401,7.506,6402,5.657,6403,5.657,6404,9.335,6405,5.657,6406,5.657,6407,5.657,6408,5.657,6409,5.657,6410,5.657,6411,5.657,6412,5.657,6413,5.657,6414,5.657,6415,7.506,6416,5.657,6417,5.657,6418,5.657,6419,5.657,6420,5.657,6421,5.657,6422,5.657,6423,5.657,6424,5.657,6425,5.657,6426,5.657,6427,5.657,6428,5.657,6429,5.657,6430,5.657]],["title/additional-documentation/nestjs-application/vscode.html",[2122,2.274,3482,2.51,4492,3.381]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.087,14,0.004,112,3.623,172,0.004,173,0.004,211,4.12,365,5.147,511,4.462,817,5.215,818,4.559,831,5.215,856,4.283,872,5.007,1077,4.665,1952,5.747,1963,4.053,2036,5.215,2185,5.012,3115,5.747,3828,5.747,3905,4.665,4161,5.215,4193,5.747,4492,6.931,4540,7.958,4775,5.457,4889,6.598,5088,6.598,5208,6.111,5266,8.545,5299,6.598,5314,5.747,5347,6.581,5407,5.215,5475,5.457,5494,6.111,5590,5.007,5675,6.598,5677,6.598,6080,7.37,6431,7.338,6432,7.338,6433,7.338,6434,7.338,6435,7.338,6436,7.338,6437,7.338,6438,7.338,6439,7.338]],["title/additional-documentation/nestjs-application/git.html",[2122,2.274,3482,2.51,4493,3.595]],["body/additional-documentation/nestjs-application/git.html",[14,0.004,46,3.562,54,3.5,172,0.004,173,0.004,880,4.977,2783,4.356,2909,5.136,3524,6.728,3687,6.008,4493,8.24,4514,7.265,4757,6.728,5322,8.424,6440,8.08,6441,8.08,6442,8.08,6443,8.08]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":477,"title":{},"body":{"classes/BaseFactory.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/PermissionService.html":{},"classes/Scope.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4350,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4390,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4401,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4303,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":4293,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4302,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4378,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4414,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4405,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4370,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4355,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4361,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4404,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4286,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4364,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4353,"title":{},"body":{"dependencies.html":{}}}],["0000d224816abba584714c9c",{"_index":6372,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6374,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1",{"_index":1363,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4379,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4393,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4337,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4319,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4374,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6321,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4334,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4423,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4391,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4298,"title":{},"body":{"dependencies.html":{}}}],["1.18.1",{"_index":4268,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6322,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4295,"title":{},"body":{"dependencies.html":{}}}],["1.28.1",{"_index":4340,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4269,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4309,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3480,"title":{},"body":{"classes/PaginationQuery.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1018,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":4835,"title":{},"body":{"license.html":{},"overview.html":{}}}],["13",{"_index":5281,"title":{},"body":{"license.html":{}}}],["13.1.0",{"_index":4381,"title":{},"body":{"dependencies.html":{}}}],["14.14",{"_index":2317,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["15",{"_index":5027,"title":{},"body":{"license.html":{}}}],["15672:15672",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["16",{"_index":5028,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4335,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":4593,"title":{},"body":{"license.html":{}}}],["1996",{"_index":4841,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6423,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6422,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1378,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4398,"title":{},"body":{"dependencies.html":{}}}],["2.1041.0",{"_index":4291,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4352,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4375,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4338,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4313,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4839,"title":{},"body":{"license.html":{}}}],["2007",{"_index":4595,"title":{},"body":{"license.html":{}}}],["23",{"_index":5293,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1016,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":5292,"title":{},"body":{"overview.html":{}}}],["28",{"_index":5176,"title":{},"body":{"license.html":{}}}],["2auth",{"_index":5342,"title":{},"body":{"todo.html":{}}}],["3",{"_index":4592,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4388,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4394,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6365,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4384,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4372,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4421,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4284,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4395,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":5076,"title":{},"body":{"license.html":{}}}],["3030/docs",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4",{"_index":1343,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4316,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4409,"title":{},"body":{"dependencies.html":{}}}],["4.13.2",{"_index":4329,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4327,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4347,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":3135,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":4326,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4305,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":4271,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4264,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4270,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":4299,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["404",{"_index":5356,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["409/bad",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":2429,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["41",{"_index":5294,"title":{},"body":{"overview.html":{}}}],["5",{"_index":4902,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4288,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4289,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4331,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4277,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4377,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4354,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":5296,"title":{},"body":{"overview.html":{}}}],["500",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5672",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6373,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":6379,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4311,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4279,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":4332,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4386,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1017,"title":{},"body":{"classes/CourseFactory.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["60000",{"_index":3592,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["699615164",{"_index":5332,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4927,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4946,"title":{},"body":{"license.html":{}}}],["7",{"_index":4130,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["7.0.0",{"_index":4315,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4324,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4396,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":5295,"title":{},"body":{"overview.html":{}}}],["8",{"_index":2283,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["8.0.0",{"_index":4273,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":4275,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4307,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":4272,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4418,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4342,"title":{},"body":{"dependencies.html":{}}}],["8.8.2",{"_index":4281,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5512,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8080",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["86400000",{"_index":3895,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["9229",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":3485,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4552,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":682,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":2389,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1881,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":2407,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":2419,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":2408,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":2421,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_email",{"_index":2571,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["_id",{"_index":347,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/FeathersAuthProvider.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["_id.$oid",{"_index":1948,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":1188,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":1189,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":4163,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.getmetadata().title",{"_index":1360,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["a.m",{"_index":4582,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4996,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4578,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4865,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1865,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":513,"title":{},"body":{"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/CourseNews.html":{},"injectables/DashboardRepo.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/PaginationResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":4149,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":936,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5081,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5080,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5317,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":425,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":60,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["access,@typescript",{"_index":51,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["accessable",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":1115,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":4670,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accesskeyid",{"_index":2239,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1776,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4909,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5261,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4672,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4864,"title":{},"body":{"license.html":{}}}],["according",{"_index":5253,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":2526,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":2524,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["achieve",{"_index":5264,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4802,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5130,"title":{},"body":{"license.html":{}}}],["act",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2211,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":5088,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["active",{"_index":2976,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activecourses",{"_index":943,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["activecourses'})@property",{"_index":913,"title":{},"body":{"entities/Course.html":{}}}],["activities",{"_index":4717,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5170,"title":{},"body":{"license.html":{}}}],["actors",{"_index":6115,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5152,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4968,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4695,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2783,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1945,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["addgroupmoderator(groupname",{"_index":101,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adding",{"_index":418,"title":{},"body":{"classes/BaseFactory.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":2122,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4531,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1193,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":1202,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":2483,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":1351,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["address",{"_index":5207,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addressed",{"_index":4691,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addroom",{"_index":1282,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["addroom(room",{"_index":1304,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["adds",{"_index":1845,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addserver('/api/v3",{"_index":5532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addstatustotasks",{"_index":3605,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["addstatustotasks(isteacher",{"_index":628,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["addtokentowhitelist",{"_index":2993,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":2998,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":2979,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":2981,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adhere",{"_index":6140,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["admin",{"_index":2579,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adminid",{"_index":27,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adminidandtoken",{"_index":1,"title":{"interfaces/AdminIdAndToken.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.id",{"_index":133,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.token",{"_index":132,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminpassword",{"_index":26,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["admintoken",{"_index":28,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adminuser",{"_index":25,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adopted",{"_index":4838,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":5003,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5249,"title":{},"body":{"license.html":{}}}],["affects",{"_index":5004,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4589,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5111,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4799,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6328,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6332,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterbuild",{"_index":399,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuild(afterbuildfn",{"_index":414,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterbuildfn",{"_index":423,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["afterduedateornone",{"_index":3993,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":4045,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6381,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4468,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4854,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4893,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregates",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agile",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["ago",{"_index":1992,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["agpl",{"_index":5285,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5189,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5237,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":6112,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5140,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4280,"title":{},"body":{"dependencies.html":{}}}],["ald",{"_index":5534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":2944,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["alias",{"_index":3773,"title":{},"body":{"entities/System.html":{}}}],["aliases",{"_index":5379,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["all('seed",{"_index":1750,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["all_entities",{"_index":3106,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["allcollections",{"_index":5485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollections.map(async",{"_index":5487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1893,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1903,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1909,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5118,"title":{},"body":{"license.html":{}}}],["allforcreator",{"_index":3983,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(allforfinishedcoursesandlessonsforcreator.query",{"_index":3986,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closeddraftsforcreator.query",{"_index":3985,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closedwithoutparentforcreator.query",{"_index":3984,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons",{"_index":3968,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.addquery(parentsfinished.query",{"_index":3969,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.bydraft(false",{"_index":3970,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator",{"_index":3980,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.addquery(parentsfinished.query",{"_index":3981,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.bycreatorid(parentids.creatorid",{"_index":3982,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allow",{"_index":3828,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":4608,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":4193,"title":{},"body":{"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allrooms",{"_index":1283,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["alone",{"_index":6248,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4867,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":831,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4654,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4923,"title":{},"body":{"license.html":{}}}],["always",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":5408,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":4282,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":3087,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4285,"title":{},"body":{"dependencies.html":{}}}],["analysis",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4413,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5082,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4647,"title":{},"body":{"license.html":{}}}],["ang",{"_index":6405,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["annotations",{"_index":6014,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6355,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":2497,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["anti",{"_index":4825,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4877,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4703,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":6067,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":207,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4503,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4504,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4513,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":206,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":652,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":691,"title":{},"body":{"classes/BoardLessonResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":648,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{}}}],["apiproperty({enum",{"_index":3381,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":3379,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({type",{"_index":746,"title":{},"body":{"classes/BoardResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{}}}],["apipropertyoptional",{"_index":653,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":686,"title":{},"body":{"classes/BoardLessonResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskResponse.html":{}}}],["apipropertyoptional()@isoptional()@isboolean",{"_index":2850,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional()@isoptional()@isstring()@isnotempty",{"_index":2848,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional({description",{"_index":2903,"title":{},"body":{"classes/ImportUserResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({enum",{"_index":2855,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional({type",{"_index":3375,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":976,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('courses",{"_index":984,"title":{},"body":{"controllers/CourseController.html":{}}}],["apitags('dashboard",{"_index":1265,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apitags('news",{"_index":3222,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('rooms",{"_index":3601,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apitags('task",{"_index":3878,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2843,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":174,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":2482,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":229,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":213,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["apivalidationerrorresponse(error",{"_index":2411,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":2427,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6383,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6377,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":884,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":883,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":881,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":882,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["append",{"_index":5377,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":235,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["applicable",{"_index":4708,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":818,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4485,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1834,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5213,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1899,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6386,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4526,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4859,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5257,"title":{},"body":{"license.html":{}}}],["apps",{"_index":5520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5396,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../cleanup",{"_index":5419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../coursegroup.factory.ts",{"_index":5425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5384,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":5439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4446,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5386,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.factory.ts",{"_index":5433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../filestorage.adapter.ts",{"_index":4445,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../find",{"_index":4433,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4442,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../import",{"_index":4427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../jwt",{"_index":5464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../learnroom.types.ts",{"_index":4426,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../lesson.factory.ts",{"_index":5441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5392,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4440,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../map",{"_index":5443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../match",{"_index":4428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../mongo",{"_index":5428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.factory.ts",{"_index":5427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5394,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4430,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5391,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../rocket",{"_index":5389,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role",{"_index":4431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../role.factory.ts",{"_index":5449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../rooms.uc.ts",{"_index":5380,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":5450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5385,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":5431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storageprovider.factory.ts",{"_index":5456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../submission.factory.ts",{"_index":5457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../swagger.ts",{"_index":5422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":5397,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.factory.ts",{"_index":5459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../team.factory.ts",{"_index":5461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../types.ts",{"_index":5382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":5390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5399,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2368,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":3661,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":5481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":3647,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":3651,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":3654,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":3649,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":4148,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":4150,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":869,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":214,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":2113,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":2115,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":4254,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":2106,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":2376,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":2539,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":2165,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["apps/server/src/core/error/server",{"_index":5564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":2906,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":2618,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":2629,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":2627,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":2633,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":2624,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":2631,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":3060,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":3039,"title":{},"body":{"injectables/Logger.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":2456,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":4259,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":2920,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":5410,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":2916,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":2949,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":2977,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":2952,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":2954,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":2956,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":294,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:16",{"_index":319,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:32",{"_index":313,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:52",{"_index":322,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:6",{"_index":306,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":2125,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["apps/server/src/modules/files/files.module.ts",{"_index":2332,"title":{},"body":{"modules/FilesModule.html":{}}}],["apps/server/src/modules/files/job/delete",{"_index":1981,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["apps/server/src/modules/files/uc/delete",{"_index":2005,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts",{"_index":967,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts:17",{"_index":973,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":1244,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17",{"_index":1248,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24",{"_index":1252,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40",{"_index":1258,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts",{"_index":1063,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:26",{"_index":1086,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:31",{"_index":1089,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:36",{"_index":1087,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:41",{"_index":1085,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:46",{"_index":1088,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:5",{"_index":1084,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:51",{"_index":1090,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:54",{"_index":1067,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":1486,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:108",{"_index":1664,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:114",{"_index":1663,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:15",{"_index":1508,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:20",{"_index":1510,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:25",{"_index":1509,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:3",{"_index":1506,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:30",{"_index":1507,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33",{"_index":1490,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:58",{"_index":1496,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:63",{"_index":1498,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:68",{"_index":1497,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:73",{"_index":1491,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:78",{"_index":1499,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:83",{"_index":1500,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:89",{"_index":1495,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:95",{"_index":1494,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:98",{"_index":1662,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":3168,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:12",{"_index":3181,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:17",{"_index":3182,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:23",{"_index":3179,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:29",{"_index":3171,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:33",{"_index":3172,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts",{"_index":3512,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts:12",{"_index":3514,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse",{"_index":769,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts",{"_index":643,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:108",{"_index":749,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:113",{"_index":750,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:118",{"_index":745,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:124",{"_index":748,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:15",{"_index":758,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:19",{"_index":759,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:22",{"_index":752,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:25",{"_index":757,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:29",{"_index":753,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:33",{"_index":755,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:36",{"_index":756,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:39",{"_index":754,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:42",{"_index":761,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:45",{"_index":760,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:48",{"_index":685,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:5",{"_index":751,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:58",{"_index":690,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:62",{"_index":692,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:66",{"_index":687,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:69",{"_index":688,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:72",{"_index":693,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:75",{"_index":689,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:78",{"_index":645,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:87",{"_index":651,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:92",{"_index":649,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:96",{"_index":744,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/rooms.controller.ts",{"_index":3595,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apps/server/src/modules/learnroom/controller/rooms.controller.ts:17",{"_index":3599,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":3002,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/board",{"_index":762,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/board.mapper.ts",{"_index":695,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/board.mapper.ts:14",{"_index":698,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts",{"_index":1049,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts:5",{"_index":1052,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":1511,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:15",{"_index":1515,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:35",{"_index":1517,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":1520,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts",{"_index":1205,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:10",{"_index":1210,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:7",{"_index":1208,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1665,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13",{"_index":1671,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25",{"_index":1673,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40",{"_index":1675,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56",{"_index":1677,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7",{"_index":1670,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts",{"_index":576,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:20",{"_index":3609,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:28",{"_index":3613,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:44",{"_index":3616,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:56",{"_index":3611,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:67",{"_index":3614,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:74",{"_index":3610,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:90",{"_index":3615,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:98",{"_index":3612,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1696,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1735,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":788,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":804,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":792,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":3101,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1816,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":1215,"title":{},"body":{"classes/CreateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":3242,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":3256,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:101",{"_index":3374,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:106",{"_index":3370,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:111",{"_index":3385,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:116",{"_index":3369,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:12",{"_index":3367,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:121",{"_index":3384,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:126",{"_index":3373,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:129",{"_index":3257,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:51",{"_index":3372,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":3383,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":3368,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":3371,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:73",{"_index":3376,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:78",{"_index":3377,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":3382,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":3380,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:96",{"_index":3378,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":3625,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":3787,"title":{},"body":{"classes/TargetInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":4190,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":4219,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":3196,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":3199,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":3205,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":3209,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":3215,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":3202,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":4135,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":3273,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:37",{"_index":3280,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:51",{"_index":3278,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:64",{"_index":3284,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":3282,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":3618,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":3782,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":4218,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":3321,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":3405,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:119",{"_index":3435,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:143",{"_index":3416,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:154",{"_index":3427,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:174",{"_index":3433,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:192",{"_index":3426,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:202",{"_index":3429,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:21",{"_index":3412,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:34",{"_index":3414,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:64",{"_index":3418,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:95",{"_index":3424,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/rocketchat/rocket",{"_index":6,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":4080,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":3898,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:19",{"_index":4030,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":4031,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":4024,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":4029,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:33",{"_index":4025,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:37",{"_index":4027,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:40",{"_index":4028,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:43",{"_index":4026,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:46",{"_index":4033,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:49",{"_index":4032,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:52",{"_index":3900,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":4023,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":3867,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":3869,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:33",{"_index":3872,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task",{"_index":4075,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":3907,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":3909,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":3932,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":3799,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:16",{"_index":3806,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:25",{"_index":3810,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:37",{"_index":3812,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:56",{"_index":3816,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:62",{"_index":3814,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:69",{"_index":3821,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:84",{"_index":3819,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":4090,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:111",{"_index":4102,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:139",{"_index":4103,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:16",{"_index":4098,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:63",{"_index":4096,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:82",{"_index":4100,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":4094,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user",{"_index":2816,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":3538,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":3542,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":3541,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":3539,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":3546,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":3544,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":3543,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":3545,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":3540,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":4208,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:18",{"_index":4211,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":3548,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":3550,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":4241,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/server.controller.ts",{"_index":3668,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":3669,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":3674,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/server.module.ts:86",{"_index":3715,"title":{},"body":{"modules/ServerTestModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":176,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":811,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":822,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":825,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":824,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":823,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":821,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":826,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":827,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":4250,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":4252,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":5568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":2038,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1958,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":4158,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":4168,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":4166,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":4165,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":4170,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":4172,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":3479,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":3486,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":3489,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":3494,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:11",{"_index":3497,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:14",{"_index":3500,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:17",{"_index":3499,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:20",{"_index":3498,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":3496,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":3504,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":5530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":5467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":346,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":353,"title":{},"body":{"entities/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":384,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":388,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":387,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":390,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":351,"title":{},"body":{"entities/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":887,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":899,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:39",{"_index":897,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:42",{"_index":902,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:45",{"_index":907,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":911,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:51",{"_index":909,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:55",{"_index":895,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:58",{"_index":903,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:62",{"_index":914,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":1027,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":1031,"title":{},"body":{"entities/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":1030,"title":{},"body":{"entities/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":1280,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:107",{"_index":2496,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:116",{"_index":2502,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:137",{"_index":2506,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:14",{"_index":2549,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:141",{"_index":2509,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:16",{"_index":2551,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:160",{"_index":1302,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:162",{"_index":1299,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:164",{"_index":1301,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:166",{"_index":1303,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:168",{"_index":1324,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:175",{"_index":1331,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:179",{"_index":1298,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:18",{"_index":2550,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:192",{"_index":1318,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:196",{"_index":1322,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":2547,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:200",{"_index":1316,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:212",{"_index":1312,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":2546,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:220",{"_index":1329,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:230",{"_index":1338,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:239",{"_index":1335,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":2552,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:254",{"_index":1308,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:265",{"_index":1306,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:275",{"_index":1305,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:281",{"_index":1315,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:289",{"_index":1321,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:301",{"_index":1333,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:310",{"_index":1327,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:37",{"_index":2492,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:39",{"_index":2495,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:41",{"_index":2494,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:51",{"_index":2491,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:59",{"_index":2500,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:63",{"_index":2499,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:67",{"_index":2501,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:71",{"_index":2498,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:75",{"_index":2493,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:77",{"_index":2505,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:8",{"_index":2548,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:81",{"_index":2503,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:85",{"_index":2504,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:89",{"_index":2508,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:99",{"_index":2507,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts",{"_index":1450,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:41",{"_index":1460,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:44",{"_index":1461,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:47",{"_index":1462,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:50",{"_index":1459,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53",{"_index":1456,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:73",{"_index":1541,"title":{},"body":{"entities/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:77",{"_index":1542,"title":{},"body":{"entities/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":494,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:17",{"_index":499,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:20",{"_index":501,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:23",{"_index":498,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:32",{"_index":2219,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:35",{"_index":2218,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:38",{"_index":2220,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/import",{"_index":2554,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":2615,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":3012,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:18",{"_index":3011,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:21",{"_index":3009,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":1092,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:104",{"_index":1094,"title":{},"body":{"entities/CourseNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:110",{"_index":4134,"title":{},"body":{"entities/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":3193,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":3183,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":3185,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":3186,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":3189,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":3190,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":3191,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":3192,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":3188,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":3184,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":3194,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":3187,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:98",{"_index":3630,"title":{},"body":{"entities/SchoolNews.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":2637,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":3578,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":3579,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":3581,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2646,"title":{},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:10",{"_index":3617,"title":{},"body":{"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts",{"_index":2648,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:15",{"_index":3717,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:18",{"_index":3716,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:21",{"_index":3720,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:24",{"_index":3718,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":2661,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":3731,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":3729,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":3725,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:35",{"_index":3732,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":3724,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:42",{"_index":3730,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":3726,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":3727,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:52",{"_index":3728,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts",{"_index":3772,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:15",{"_index":3775,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:18",{"_index":3776,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:21",{"_index":3774,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":2699,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:32",{"_index":4132,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:34",{"_index":4131,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:48",{"_index":3795,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:51",{"_index":3788,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:54",{"_index":3791,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:57",{"_index":3796,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:60",{"_index":3790,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:63",{"_index":3789,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:66",{"_index":3794,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:69",{"_index":3797,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:74",{"_index":3793,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2791,"title":{},"body":{"interfaces/ITeamProperties.html":{},"entities/Team.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:10",{"_index":4133,"title":{},"body":{"entities/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":2793,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":4200,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":4201,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":4202,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":4204,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":4206,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":2541,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/learnroom.ts",{"_index":2612,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":2523,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts",{"_index":3516,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:14",{"_index":3520,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:23",{"_index":3527,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5405,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/learnroom.types.ts",{"_index":4435,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":2511,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":843,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1765,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{}}}],["apps/server/src/shared/infra/database/mongo",{"_index":3123,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts",{"_index":2096,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts:10",{"_index":2100,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts",{"_index":3758,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:13",{"_index":3762,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:6",{"_index":3760,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:9",{"_index":3764,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/feathers/feathers",{"_index":2183,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/feathers/feathers.module.ts",{"_index":2171,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/shared/infra/file",{"_index":2247,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts",{"_index":2222,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21",{"_index":2225,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["apps/server/src/shared/infra/mail/mail.interface.ts",{"_index":236,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts",{"_index":3063,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts:28",{"_index":3065,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts",{"_index":3084,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:12",{"_index":3089,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:18",{"_index":3091,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":533,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":555,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":551,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":553,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":557,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":563,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":559,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":561,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":547,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":545,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":549,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts",{"_index":1146,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:21",{"_index":1201,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:32",{"_index":1198,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:42",{"_index":1200,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:49",{"_index":1148,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:52",{"_index":1151,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:77",{"_index":1153,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:86",{"_index":1155,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:9",{"_index":1199,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts",{"_index":1040,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10",{"_index":1044,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7",{"_index":1042,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts",{"_index":1544,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:116",{"_index":1567,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:132",{"_index":1562,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16",{"_index":1555,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19",{"_index":1573,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24",{"_index":1569,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34",{"_index":1564,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46",{"_index":1575,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55",{"_index":1571,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:68",{"_index":1560,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:79",{"_index":1577,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:99",{"_index":1557,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts",{"_index":1635,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14",{"_index":2537,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15",{"_index":2536,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16",{"_index":2538,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20",{"_index":1639,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24",{"_index":1644,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30",{"_index":1645,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36",{"_index":1641,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42",{"_index":1643,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts",{"_index":2336,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:13",{"_index":2354,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:15",{"_index":2343,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:23",{"_index":2341,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:8",{"_index":2340,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":3029,"title":{},"body":{"classes/LessonScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":3019,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:12",{"_index":3022,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":3020,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/news/news",{"_index":3386,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts",{"_index":3333,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:11",{"_index":3345,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:19",{"_index":3338,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:32",{"_index":3344,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:39",{"_index":3340,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":5558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts",{"_index":3583,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:11",{"_index":3591,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:16",{"_index":3589,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:7",{"_index":3587,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":3631,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":3633,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":3638,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":3636,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":3635,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts",{"_index":3721,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7",{"_index":3722,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts",{"_index":3744,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:10",{"_index":3747,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:13",{"_index":3751,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:21",{"_index":3753,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:26",{"_index":3749,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/task/task",{"_index":4034,"title":{},"body":{"classes/TaskScope.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts",{"_index":3935,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:10",{"_index":3940,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:13",{"_index":3947,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:149",{"_index":3949,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:175",{"_index":3951,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:91",{"_index":3942,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts",{"_index":2059,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:10",{"_index":2068,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:21",{"_index":2073,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:36",{"_index":2075,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts",{"_index":4242,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:20",{"_index":4247,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:6",{"_index":4244,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:9",{"_index":4245,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/testing/cleanup",{"_index":5484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts",{"_index":392,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:111",{"_index":455,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:123",{"_index":460,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:133",{"_index":456,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:137",{"_index":446,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:149",{"_index":458,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:15",{"_index":412,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:32",{"_index":450,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:47",{"_index":436,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:60",{"_index":442,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:73",{"_index":440,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:87",{"_index":416,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:99",{"_index":431,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts",{"_index":996,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:11",{"_index":999,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:18",{"_index":1000,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/coursegroup.factory.ts",{"_index":5547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/file.factory.ts",{"_index":5554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/lesson.factory.ts",{"_index":3014,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/news.factory.ts",{"_index":5549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/role.factory.ts",{"_index":5570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/school.factory.ts",{"_index":5572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/storageprovider.factory.ts",{"_index":5577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts",{"_index":3734,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts:8",{"_index":3735,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts",{"_index":3889,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:11",{"_index":3890,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:16",{"_index":3892,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/team.factory.ts",{"_index":5580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/user.factory.ts",{"_index":5582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/map",{"_index":5559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/setup",{"_index":5574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appthis",{"_index":4505,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":4494,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":6078,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5279,"title":{},"body":{"license.html":{}}}],["archived",{"_index":1080,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["archivegroup(groupname",{"_index":95,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["archives",{"_index":6129,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6142,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4287,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":3653,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":52,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":2385,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5241,"title":{},"body":{"license.html":{}}}],["around",{"_index":5297,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5160,"title":{},"body":{"license.html":{}}}],["array",{"_index":684,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["array.from(modelentity.gridelements).foreach((el",{"_index":1626,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":1593,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1900,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":232,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(permission",{"_index":3862,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["array.isarray(props.classnames",{"_index":2605,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["array.isarray(props.rolenames",{"_index":2602,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["array.isarray(user.permissions",{"_index":2148,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["article",{"_index":4834,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1950,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4644,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6354,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5101,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assignemnt",{"_index":2880,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["assigning",{"_index":6051,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":63,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["assignment,@typescript",{"_index":59,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["associated",{"_index":4781,"title":{},"body":{"license.html":{}}}],["associations",{"_index":400,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["associations(associations",{"_index":429,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["assume",{"_index":5230,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":6091,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5260,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5047,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":74,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5266,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":244,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":247,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5058,"title":{},"body":{"license.html":{}}}],["attends",{"_index":2879,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["attention",{"_index":2751,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["attributions",{"_index":5031,"title":{},"body":{"license.html":{}}}],["aud",{"_index":2934,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":2942,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audit",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":144,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"todo.html":{}}}],["auth.guard.ts",{"_index":2917,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.provider",{"_index":299,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":2126,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:13",{"_index":2134,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:16",{"_index":2142,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:26",{"_index":2144,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:38",{"_index":2138,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:55",{"_index":2136,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:60",{"_index":2140,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":2925,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":2947,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":2946,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":977,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":985,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":2530,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2894,"title":{},"body":{"modules/ImportUserModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":2918,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":2919,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":258,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":5030,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":4981,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":297,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":286,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":292,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":5021,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5125,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5164,"title":{},"body":{"license.html":{}}}],["authors",{"_index":5037,"title":{},"body":{"license.html":{}}}],["authtoken",{"_index":80,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["auto",{"_index":2577,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":5092,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":4568,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["availability",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1895,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":665,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["availableon",{"_index":3994,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["avoid",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["avoiding",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":129,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4619,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2228,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"dependencies.html":{}}}],["axios",{"_index":4292,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1358,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.getmetadata().title",{"_index":1362,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["back",{"_index":457,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["background",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1931,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1850,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup/setup/news.json",{"_index":3331,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6152,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badrequestexception",{"_index":1340,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":1388,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["badrequestexception('invalid",{"_index":3511,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('this",{"_index":1373,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["base",{"_index":812,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":503,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["base.factory",{"_index":1014,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["base.repo",{"_index":2355,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["base64",{"_index":4416,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":239,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":394,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["basedir",{"_index":1826,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":345,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITeamProperties.html":{},"entities/School.html":{},"entities/Team.html":{}}}],["baseentitywithtimestamps",{"_index":360,"title":{"entities/BaseEntityWithTimestamps.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["basefactory",{"_index":391,"title":{"classes/BaseFactory.html":{}},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory.define",{"_index":5578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursegroup",{"_index":5548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursenews",{"_index":5550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(directory",{"_index":5555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(file",{"_index":5557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(role",{"_index":5571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(school",{"_index":5573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(schoolnews",{"_index":5551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(team",{"_index":5581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(teamnews",{"_index":5552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(user",{"_index":5583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory:111",{"_index":1008,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:123",{"_index":1011,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:133",{"_index":1009,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:137",{"_index":1006,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:149",{"_index":1010,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:15",{"_index":998,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:32",{"_index":1007,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:47",{"_index":1003,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:60",{"_index":1005,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:73",{"_index":1004,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:87",{"_index":1001,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefactory:99",{"_index":1002,"title":{},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["basefile",{"_index":493,"title":{"entities/BaseFile.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["basepath",{"_index":1818,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":532,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:14",{"_index":2349,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:19",{"_index":2347,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:27",{"_index":2348,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:36",{"_index":2350,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:40",{"_index":2353,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:44",{"_index":2351,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:48",{"_index":2352,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:53",{"_index":2345,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:9",{"_index":2346,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["basic",{"_index":4793,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":4294,"title":{},"body":{"dependencies.html":{}}}],["bcc",{"_index":255,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4296,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":590,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"license.html":{}}}],["becomes",{"_index":4667,"title":{},"body":{"license.html":{}}}],["before",{"_index":1138,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/PermissionService.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6320,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6306,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4554,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4813,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":6362,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":874,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":4162,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":464,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5158,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":679,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4819,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4650,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5407,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5263,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":3143,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["between",{"_index":4790,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4895,"title":{},"body":{"license.html":{}}}],["bit",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["board",{"_index":575,"title":{"interfaces/Board.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{}}}],["board.displaycolor",{"_index":743,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.elements.foreach((element",{"_index":703,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.roomid",{"_index":741,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.title",{"_index":742,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardelement",{"_index":580,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/typealiases.html":{}}}],["boardelementresponse",{"_index":642,"title":{"classes/BoardElementResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardelements",{"_index":610,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["boardlesson",{"_index":729,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.course",{"_index":737,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.createdat",{"_index":734,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.hidden",{"_index":733,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.id",{"_index":731,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.name",{"_index":732,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.updatedat",{"_index":735,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlessonresponse",{"_index":647,"title":{"classes/BoardLessonResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardlessons",{"_index":638,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["boardmapper",{"_index":694,"title":{"injectables/BoardMapper.html":{}},"body":{"injectables/BoardMapper.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{},"overview.html":{}}}],["boardresponse",{"_index":673,"title":{"classes/BoardResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{}}}],["boardtask",{"_index":705,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.availabledate",{"_index":721,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.course",{"_index":717,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.createdat",{"_index":714,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.duedate",{"_index":723,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.getdescriptions",{"_index":708,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.id",{"_index":712,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.name",{"_index":713,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.updatedat",{"_index":715,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc",{"_index":707,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc.color",{"_index":725,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc.description",{"_index":727,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskresponse",{"_index":646,"title":{"classes/BoardTaskResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardtasks",{"_index":637,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["boardtaskstatus",{"_index":709,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskstatusmapper",{"_index":701,"title":{"classes/BoardTaskStatusMapper.html":{}},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["boardtaskstatusmapper.maptoresponse(status",{"_index":710,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskstatusresponse",{"_index":657,"title":{"classes/BoardTaskStatusResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{}}}],["boardtaskstatusresponse(status",{"_index":768,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["bob",{"_index":6128,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":127,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4407,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":500,"title":{},"body":{"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoomsUc.html":{},"entities/Submission.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolish",{"_index":4478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":4153,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":4157,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":4151,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6304,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":4472,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6298,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":4544,"title":{},"body":{"index.html":{}}}],["branches",{"_index":5511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["breathing",{"_index":6123,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["browse",{"_index":5289,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5287,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":806,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":810,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":808,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":802,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":787,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bsondocuments",{"_index":800,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":379,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":509,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["bufferencoding",{"_index":2295,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["build",{"_index":401,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["build(params",{"_index":433,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildboard",{"_index":3606,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["buildboard(room",{"_index":619,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["buildboardelements",{"_index":3607,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["buildboardelements(tasks",{"_index":636,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["buildlist",{"_index":402,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildlist(number",{"_index":439,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildoptions",{"_index":435,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["builds",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["buildwithid",{"_index":403,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["buildwithid(params",{"_index":441,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["built",{"_index":422,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["bulk",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundesland=x",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5303,"title":{},"body":{"todo.html":{}}}],["business",{"_index":813,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":203,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":178,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":193,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":197,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":196,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":195,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":194,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":198,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":200,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["byavailable",{"_index":4035,"title":{},"body":{"classes/TaskScope.html":{}}}],["byavailable(availabledate",{"_index":4047,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycourseids",{"_index":3031,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":3033,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycreatorid",{"_index":4036,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycreatorid(creatorid",{"_index":4050,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft",{"_index":4037,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":4052,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished",{"_index":4038,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished(userid",{"_index":4054,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":3032,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":3035,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":4039,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":4056,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid",{"_index":4040,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid(teacherid",{"_index":4058,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1802,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":3387,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":3389,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":3388,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":3391,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":3745,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":3748,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":452,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"classes/LessonFactory.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"classes/SubmissionFactory.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"license.html":{}}}],["c.id",{"_index":3843,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["c.isfinished",{"_index":4122,"title":{},"body":{"injectables/TaskUC.html":{}}}],["c.isfinished()).map((c",{"_index":4110,"title":{},"body":{"injectables/TaskUC.html":{}}}],["cache",{"_index":3584,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":6417,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["calendar",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":424,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":3165,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":420,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":2045,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":2425,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/PermissionService.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":4532,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":6050,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6368,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["capabilities",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capture",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":5475,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6178,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4871,"title":{},"body":{"license.html":{}}}],["case",{"_index":2121,"title":{},"body":{"classes/ErrorResponse.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3897,"title":{},"body":{"classes/TaskFactory.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":2029,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":2383,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":20,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":147,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["catcherror((err",{"_index":4179,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":4899,"title":{},"body":{"license.html":{}}}],["caution",{"_index":3049,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":254,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5062,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":2512,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["certain",{"_index":5018,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5072,"title":{},"body":{"license.html":{}}}],["chains",{"_index":5337,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4300,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":4622,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":2315,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changes",{"_index":4586,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":4607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characteristics",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4993,"title":{},"body":{"license.html":{}}}],["characters",{"_index":2270,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":4631,"title":{},"body":{"license.html":{}}}],["chat",{"_index":171,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chat.module.ts",{"_index":3570,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.module.ts:6",{"_index":3571,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service",{"_index":3574,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service.ts",{"_index":7,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["chat.service.ts:16",{"_index":3568,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:18",{"_index":3567,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:21",{"_index":3566,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chatadapter",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":371,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskUC.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":307,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":2459,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4567,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4576,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkshorttitle",{"_index":1376,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["checkusernotexistbyemail(email",{"_index":6168,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4518,"title":{},"body":{"index.html":{}}}],["choose",{"_index":5214,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5218,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4387,"title":{},"body":{"dependencies.html":{}}}],["circumstances",{"_index":4817,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4826,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5259,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5115,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5127,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classes",{"_index":175,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":2167,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classnames",{"_index":2556,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["classserializerinterceptor",{"_index":2910,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":932,"title":{},"body":{"entities/Course.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/ICourseProperties.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanupcollections",{"_index":5418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanupthreshold",{"_index":2344,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["clear",{"_index":1928,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1769,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1779,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6183,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["client",{"_index":816,"title":{},"body":{"classes/BusinessError.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":3116,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":404,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"index.html":{}}}],["clone(this",{"_index":444,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["clone>(this",{"_index":486,"title":{},"body":{"classes/BaseFactory.html":{}}}],["close",{"_index":3162,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":3971,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closeddraftsforcreator",{"_index":3976,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.addquery(parentsopen.query",{"_index":3977,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.bycreatorid(parentids.creatorid",{"_index":3979,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.byfinished(parentids.creatorid",{"_index":3978,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons",{"_index":3964,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.addquery(parentsopen.query",{"_index":3965,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.bydraft(false",{"_index":3966,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.byfinished(parentids.creatorid",{"_index":3967,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator",{"_index":3973,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator.byfinished(parentids.creatorid",{"_index":3974,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator.byonlycreatorid(parentids.creatorid",{"_index":3975,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closely",{"_index":5256,"title":{},"body":{"license.html":{}}}],["closing",{"_index":6331,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4481,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":5360,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":4550,"title":{},"body":{"index.html":{}}}],["cloud/commons",{"_index":2079,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4359,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4345,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5330,"title":{},"body":{"todo.html":{}}}],["cluster_authmodule",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":287,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":290,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":289,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":288,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":839,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":840,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":841,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":863,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":864,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1761,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1762,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1763,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":2168,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":2169,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":2170,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2328,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2330,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2329,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":2322,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":2323,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":2324,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_importusermodule",{"_index":2883,"title":{},"body":{"modules/ImportUserModule.html":{},"overview.html":{}}}],["cluster_importusermodule_imports",{"_index":2884,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["cluster_learnroommodule",{"_index":3000,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":3001,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3057,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":3058,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3059,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3098,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3099,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":3100,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":3316,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":3318,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":3317,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":3319,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":3659,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":3660,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":3671,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":3672,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servertestmodule",{"_index":3713,"title":{},"body":{"modules/ServerTestModule.html":{},"overview.html":{}}}],["cluster_servertestmodule_imports",{"_index":3714,"title":{},"body":{"modules/ServerTestModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":3930,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":3931,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":4239,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":4240,"title":{},"body":{"modules/UserModule.html":{}}}],["cluttered",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["codacy",{"_index":4484,"title":{},"body":{"index.html":{}}}],["code",{"_index":179,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["codes",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":2468,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collect",{"_index":5191,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":510,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":904,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{}}}],["collection.deletemany",{"_index":1805,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1803,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1800,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1811,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1770,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1781,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1744,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["collectionnamefilter",{"_index":1852,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1901,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1904,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1809,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1886,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1707,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{}}}],["collections.includes(collectionname",{"_index":1813,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1810,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1884,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections.ts",{"_index":5420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionstoexport",{"_index":1939,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1941,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1913,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1916,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1883,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":683,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["columns",{"_index":1281,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["colums",{"_index":1385,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["combine",{"_index":5201,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":672,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{}}}],["come",{"_index":4459,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":4878,"title":{},"body":{"license.html":{}}}],["command",{"_index":1713,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1705,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":4306,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":4156,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4739,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":2662,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["commercial",{"_index":4973,"title":{},"body":{"license.html":{}}}],["commit",{"_index":4579,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5141,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4573,"title":{},"body":{"index.html":{}}}],["common",{"_index":4330,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["communicate",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4788,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4615,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":6054,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":2395,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6418,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4886,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4894,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5173,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1979,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4770,"title":{},"body":{"license.html":{}}}],["complete",{"_index":4566,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["completely",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":3051,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5097,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4810,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":4764,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4538,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compression",{"_index":4308,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":4712,"title":{},"body":{"license.html":{}}}],["concept",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5209,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":6075,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":4310,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5167,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4679,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":3687,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":2076,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":3693,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":3694,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":3692,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('request_timeout",{"_index":5569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_id",{"_index":3697,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_password",{"_index":3700,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_token",{"_index":3698,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_user",{"_index":3699,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_uri",{"_index":3696,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configures",{"_index":871,"title":{},"body":{"modules/CoreModule.html":{}}}],["conflicts",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4539,"title":{},"body":{"index.html":{}}}],["connection",{"_index":3163,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector/framework",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consequence",{"_index":5084,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5240,"title":{},"body":{"license.html":{}}}],["considered",{"_index":5049,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6174,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistent",{"_index":5134,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":6097,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":846,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":3111,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":3040,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":3662,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1703,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":838,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":842,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"overview.html":{}}}],["conspicuously",{"_index":4858,"title":{},"body":{"license.html":{}}}],["const",{"_index":128,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4801,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":230,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":69,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('symmetric_cipher_key",{"_index":3767,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(@inject(request",{"_index":2200,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":3086,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":220,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1700,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":1207,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["constructor(customkey",{"_index":2067,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["constructor(dashboardrepo",{"_index":1669,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":1066,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["constructor(deletefilesuc",{"_index":1984,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["constructor(e",{"_index":42,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["constructor(em",{"_index":543,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(entityclass",{"_index":410,"title":{},"body":{"classes/BaseFactory.html":{}}}],["constructor(feathersauthprovider",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":2132,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":4256,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesrepo",{"_index":2007,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["constructor(filestorageadapter",{"_index":2339,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["constructor(filesystemadapter",{"_index":1827,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":1083,"title":{},"body":{"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["constructor(key",{"_index":3759,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(message",{"_index":4251,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":3411,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":3632,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":329,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":520,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["constructor(protected",{"_index":564,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":204,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":2215,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(task",{"_index":2703,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":4093,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(total",{"_index":3495,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(type",{"_index":2114,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":644,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UserInfoResponse.html":{}}}],["constructor(userrepo",{"_index":2953,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(validationerrors",{"_index":185,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["constructor(value",{"_index":2575,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["constructors",{"_index":6404,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["construed",{"_index":5178,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4952,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":5274,"title":{},"body":{"license.html":{}}}],["contain",{"_index":5174,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4454,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["containing",{"_index":4561,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3361,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":592,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":238,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":243,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5138,"title":{},"body":{"license.html":{}}}],["context",{"_index":2047,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6370,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":4999,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4983,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5046,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5185,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4623,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5124,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5126,"title":{},"body":{"license.html":{}}}],["control",{"_index":4776,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5129,"title":{},"body":{"license.html":{}}}],["controller",{"_index":964,"title":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('courses",{"_index":986,"title":{},"body":{"controllers/CourseController.html":{}}}],["controller('dashboard",{"_index":1266,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1753,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":3223,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('rooms",{"_index":3602,"title":{},"body":{"controllers/RoomsController.html":{}}}],["controller('tasks",{"_index":3879,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":4142,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":4213,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('user/import",{"_index":2844,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["controller.ts",{"_index":6020,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/course.controller",{"_index":3005,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dashboard.controller",{"_index":3004,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":3109,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":1054,"title":{},"body":{"classes/CourseMapper.html":{},"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/roomboardresponse",{"_index":699,"title":{},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["controller/dto/target",{"_index":3784,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/dto/task",{"_index":4078,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["controller/import",{"_index":2888,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["controller/news.controller",{"_index":3323,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/rooms.controller",{"_index":3006,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/task.controller",{"_index":3933,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":3324,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":966,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["convenient",{"_index":4732,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1951,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converter/bson.converter",{"_index":1870,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["converttodatabasevalue",{"_index":2065,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttodatabasevalue(value",{"_index":2071,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue",{"_index":2066,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue(value",{"_index":2074,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["convey",{"_index":4719,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5162,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4994,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4727,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5045,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4614,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4606,"title":{},"body":{"license.html":{}}}],["copy",{"_index":487,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["copying",{"_index":4680,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4610,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4596,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4688,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4816,"title":{},"body":{"license.html":{}}}],["core",{"_index":870,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6443,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/error",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":862,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["correct",{"_index":5533,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5234,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["corresponding",{"_index":4773,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":4312,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":4921,"title":{},"body":{"license.html":{}}}],["count",{"_index":1047,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":1046,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":3351,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":4014,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5116,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["countries",{"_index":4716,"title":{},"body":{"license.html":{}}}],["country",{"_index":5154,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1079,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":581,"title":{"entities/Course.html":{}},"body":{"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":1032,"title":{},"body":{"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["course.factory",{"_index":3015,"title":{},"body":{"classes/LessonFactory.html":{}}}],["course.getmetadata",{"_index":1056,"title":{},"body":{"classes/CourseMapper.html":{}}}],["course.id",{"_index":605,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["course.students.contains(user",{"_index":3855,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["course.substitutionteachers.contains(user",{"_index":627,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["course.teachers.contains(user",{"_index":626,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["coursecontroller",{"_index":965,"title":{"controllers/CourseController.html":{}},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["coursefactory",{"_index":995,"title":{"classes/CourseFactory.html":{}},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.build",{"_index":3018,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.define(course",{"_index":1021,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":1026,"title":{"entities/CourseGroup.html":{}},"body":{"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":2668,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["coursegroupfactory",{"_index":5424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroupid",{"_index":2677,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["coursegrouprepo",{"_index":1039,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursegroups",{"_index":1034,"title":{},"body":{"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["coursegroupsofuser",{"_index":3756,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":1029,"title":{},"body":{"entities/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["courseids",{"_index":1045,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursemapper",{"_index":982,"title":{"classes/CourseMapper.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{}}}],["coursemapper.maptometadataresponse(course",{"_index":991,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadata",{"_index":1055,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.displaycolor",{"_index":1060,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.id",{"_index":1057,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.shorttitle",{"_index":1059,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.startdate",{"_index":1061,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.title",{"_index":1058,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.untildate",{"_index":1062,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadatalistresponse",{"_index":981,"title":{"classes/CourseMetadataListResponse.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursemetadatalistresponse(courseresponses",{"_index":994,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadataresponse",{"_index":1053,"title":{"classes/CourseMetadataResponse.html":{}},"body":{"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursename",{"_index":667,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["coursenews",{"_index":1091,"title":{"entities/CourseNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":1139,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["coursenewsfactory",{"_index":5426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courserepo",{"_index":585,"title":{"injectables/CourseRepo.html":{}},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courseresponses",{"_index":989,"title":{},"body":{"controllers/CourseController.html":{}}}],["courses",{"_index":941,"title":{},"body":{"entities/Course.html":{},"controllers/CourseController.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courses.filter((c",{"_index":3837,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["courses.map((course",{"_index":990,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursescope",{"_index":1158,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["courseuc",{"_index":979,"title":{"injectables/CourseUc.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["court",{"_index":5184,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5255,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5144,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6133,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":4570,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4700,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6360,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["create",{"_index":1918,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":3224,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":3198,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":3413,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1771,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1783,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["created",{"_index":465,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":380,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["createdat.$date",{"_index":1949,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":2251,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":2260,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdmodel",{"_index":1606,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["createerrorresponse",{"_index":2379,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":2387,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4441,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":2410,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4443,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":2417,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":2400,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":2431,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":2416,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":2432,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":2413,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{}}}],["creategridelement",{"_index":1545,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["creategridelement(elementwithposition",{"_index":1556,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["creategroup(name",{"_index":109,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createinstance(targetmodel",{"_index":1136,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["createmikroormmodule",{"_index":3136,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6366,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":6084,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":1214,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":3075,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":3081,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":2994,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":2997,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":2262,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":854,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createstorageproviderclient",{"_index":4444,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstorageproviderclient(storageprovider",{"_index":2231,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["createstudentstatusforuser(user",{"_index":2776,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createteacherstatusforuser(user",{"_index":2760,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createtestmodule",{"_index":1975,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":2252,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":2263,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createuser(email",{"_index":117,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createusertoken(userid",{"_index":85,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["creating",{"_index":1217,"title":{},"body":{"classes/CreateNewsParams.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creation",{"_index":2464,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["creator",{"_index":495,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creator.response",{"_index":4238,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["creator.response.ts",{"_index":4429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["creatorid",{"_index":1121,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["credentials",{"_index":2238,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["criteria",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4744,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cross",{"_index":872,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":6076,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6145,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3766,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":3765,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":3770,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":3768,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["csv",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ctx",{"_index":2448,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":2450,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":363,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5075,"title":{},"body":{"license.html":{}}}],["current",{"_index":1841,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1878,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":3145,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentrooms",{"_index":1415,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["currentrooms.foreach((room",{"_index":1417,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["currentuser",{"_index":974,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":3226,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1274,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":2123,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4912,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5198,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4918,"title":{},"body":{"license.html":{}}}],["customizations",{"_index":3709,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["customizing",{"_index":875,"title":{},"body":{"modules/CoreModule.html":{}}}],["customkey",{"_index":2069,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["customproviderclass.name",{"_index":3055,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5694,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":926,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5238,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4557,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1245,"title":{},"body":{"controllers/DashboardController.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getelement(position",{"_index":1690,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.getid",{"_index":1521,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.getuserid",{"_index":1692,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.model.mapper",{"_index":1646,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1689,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.setlearnrooms(courses",{"_index":1685,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":3008,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":1243,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["dashboardelement",{"_index":1468,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardentity",{"_index":1279,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{}}}],["dashboardentity(modelentity.id",{"_index":1596,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardentity(new",{"_index":1649,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel",{"_index":1449,"title":{"entities/DashboardGridElementModel.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodelproperties",{"_index":1466,"title":{"interfaces/DashboardGridElementModelProperties.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardgridelementresponse",{"_index":1485,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse",{"_index":1492,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse(metadata",{"_index":1540,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardid",{"_index":1253,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":1263,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{}}}],["dashboardmapper.mapgridelement(elementwithposition",{"_index":1523,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardmapper.maplearnroom(groupmetadata",{"_index":1539,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":1269,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1657,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":1467,"title":{"entities/DashboardModelEntity.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelmapper",{"_index":1543,"title":{"injectables/DashboardModelMapper.html":{}},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["dashboardprops",{"_index":1297,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":1634,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{}}}],["dashboardresponse",{"_index":671,"title":{"classes/DashboardResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboarduc",{"_index":1261,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["data",{"_index":1065,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.gridelement.getcontent",{"_index":1525,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.pos",{"_index":1526,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1706,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/Options.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":3703,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["database.module.ts",{"_index":3126,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":3128,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":3130,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":3125,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/types",{"_index":3684,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["database/types.ts",{"_index":5401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1695,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["databasemanagementcontroller",{"_index":1734,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{}}}],["databasemanagementmodule",{"_index":1760,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1764,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1701,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["databases",{"_index":6419,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":381,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1019,"title":{},"body":{"classes/CourseFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":2054,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1991,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["db",{"_index":1777,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":2369,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["db_url",{"_index":2370,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["db_username",{"_index":2371,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["dbname",{"_index":5404,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ddd",{"_index":6107,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["debug",{"_index":2619,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":2623,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":2634,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4540,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":3705,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4840,"title":{},"body":{"license.html":{}}}],["decide",{"_index":5216,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6175,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declared",{"_index":832,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":5038,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":655,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":2474,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4453,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":349,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"entities/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"entities/File.html":{},"classes/GlobalValidationPipe.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"entities/Role.html":{},"controllers/RoomsController.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decrypt",{"_index":2092,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["decrypt(data",{"_index":3761,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["decryptedstring",{"_index":2093,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["dedicated",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4828,"title":{},"body":{"license.html":{}}}],["deeppartial",{"_index":434,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["default",{"_index":385,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["default...what",{"_index":929,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":894,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":896,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":898,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":1342,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":209,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultmikroormoptions",{"_index":3701,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":3161,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaults",{"_index":1226,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{}}}],["defaulttimeout",{"_index":4164,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5229,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4651,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5181,"title":{},"body":{"license.html":{}}}],["define",{"_index":367,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["define(this",{"_index":447,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["defined",{"_index":187,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["defines",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":378,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":218,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3115,"title":{},"body":{"modules/ManagementModule.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1968,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1972,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1957,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1925,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":3201,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(':id/match",{"_index":2827,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["delete(id",{"_index":3415,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":3200,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2022,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedat",{"_index":496,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{}}}],["deletedcount",{"_index":1804,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":3240,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletefile",{"_index":2223,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefile(file",{"_index":2224,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefilesconsole",{"_index":1980,"title":{"classes/DeleteFilesConsole.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{}}}],["deletefilesuc",{"_index":1985,"title":{"injectables/DeleteFilesUc.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"overview.html":{}}}],["deletegroup(groupname",{"_index":115,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleteobjectcommand",{"_index":2227,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["deletes",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleteuser(username",{"_index":124,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleting",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1990,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["deletioncommand",{"_index":2244,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["delivered",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":5000,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5142,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6143,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependencies",{"_index":260,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["depending",{"_index":2284,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["depends",{"_index":2272,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deprecated",{"_index":2196,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{}}}],["deprive",{"_index":5150,"title":{},"body":{"license.html":{}}}],["desc",{"_index":2545,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6388,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":216,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":2786,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["descriptive",{"_index":2568,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":789,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":791,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":793,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":5700,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4929,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4613,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5206,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":226,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":4255,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detail.response.ts:1",{"_index":4257,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4535,"title":{},"body":{"index.html":{}}}],["details",{"_index":180,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1911,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detectleaks",{"_index":5518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determinenewroomsin",{"_index":1284,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["determinenewroomsin(rooms",{"_index":1307,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["determining",{"_index":4962,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6431,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4482,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["developers",{"_index":4639,"title":{},"body":{"license.html":{}}}],["development",{"_index":4565,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dfsdfsf",{"_index":4584,"title":{},"body":{"index.html":{}}}],["di",{"_index":6032,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":3104,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["die",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4356,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5367,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5205,"title":{},"body":{"license.html":{}}}],["different",{"_index":3362,"title":{},"body":{"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":5026,"title":{},"body":{"license.html":{}}}],["dir",{"_index":1838,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":3079,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4814,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4935,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4704,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":515,"title":{"entities/Directory.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IFileProperties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["directoryfactory",{"_index":5432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirnameprefix",{"_index":2267,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":2310,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":44,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":4850,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5219,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5023,"title":{},"body":{"license.html":{}}}],["discover",{"_index":6110,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":6118,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":361,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":512,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["discriminatorvalue",{"_index":514,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["discriminatory",{"_index":5165,"title":{},"body":{"license.html":{}}}],["display",{"_index":4885,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":1101,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["displaycolor",{"_index":577,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/RoomsUc.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":1225,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4729,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4317,"title":{},"body":{"dependencies.html":{}}}],["dist",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5210,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4604,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5272,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5168,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4681,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["docker",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5352,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":1218,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":4486,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":5008,"title":{},"body":{"license.html":{}}}],["documents",{"_index":794,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{}}}],["doe",{"_index":5585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":3149,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6397,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":5308,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domainentity",{"_index":1580,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["domains",{"_index":4318,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":376,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4572,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4964,"title":{},"body":{"license.html":{}}}],["down",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5094,"title":{},"body":{"license.html":{}}}],["draft",{"_index":614,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{}}}],["driven",{"_index":6106,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5403,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1922,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1772,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1785,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dry",{"_index":6135,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":767,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":3922,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":3555,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.description",{"_index":3928,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.displaycolor",{"_index":3926,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":3924,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":3551,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.groupelements",{"_index":1537,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.groupid",{"_index":1536,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":1533,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.lastname",{"_index":3553,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.permissions",{"_index":3565,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":3561,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.schoolid",{"_index":3559,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.target",{"_index":3307,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":3309,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":3557,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.updater",{"_index":3304,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":2391,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":2390,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/import",{"_index":2834,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dto/resolveduser.dto",{"_index":4212,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/roomboardresponse",{"_index":3600,"title":{},"body":{"controllers/RoomsController.html":{}}}],["dto/update",{"_index":2838,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dto/user",{"_index":2841,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dtolist",{"_index":3232,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":2458,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["dtos/entities",{"_index":5543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":6402,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["duedate",{"_index":666,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["dummy",{"_index":5576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicate",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["duplication",{"_index":375,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["durable",{"_index":4911,"title":{},"body":{"license.html":{}}}],["duration",{"_index":2040,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":2037,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["during",{"_index":5309,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4961,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4783,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":2101,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1594,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"classes/RocketChatError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":364,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":2439,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.response.data",{"_index":65,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.data.errortype",{"_index":67,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.statuscode",{"_index":62,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.value",{"_index":2440,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":3327,"title":{},"body":{"modules/NewsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":4498,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4699,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":2186,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":1112,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["effect",{"_index":5252,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4847,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4829,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5268,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5109,"title":{},"body":{"license.html":{}}}],["el.getreferences",{"_index":1429,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["electronic",{"_index":5275,"title":{},"body":{"license.html":{}}}],["element",{"_index":1075,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{}}}],["element.content",{"_index":706,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["element.getreferences",{"_index":1416,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.getreferences().length",{"_index":1420,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.gridelement",{"_index":1396,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereference(room",{"_index":1419,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereferencebyindex(position.groupindex",{"_index":1444,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.type",{"_index":704,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["elementdata",{"_index":1524,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.displaycolor",{"_index":1529,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.group",{"_index":1534,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.group.map((groupmetadata",{"_index":1538,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.groupid",{"_index":1535,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.referencedid",{"_index":1532,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.shorttitle",{"_index":1528,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.title",{"_index":1527,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":1578,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":1621,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.references.set(references",{"_index":1620,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.title",{"_index":1616,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":1611,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":1613,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elements",{"_index":578,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"injectables/RoomsUc.html":{}}}],["elements.push(boardelementresponse",{"_index":728,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["elementtomove",{"_index":1404,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.getreferences",{"_index":1440,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.isgroup",{"_index":1439,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtype",{"_index":650,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["elementwithposition",{"_index":1558,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.x",{"_index":1612,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":1614,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["em",{"_index":546,"title":{},"body":{"injectables/BaseRepo.html":{},"entities/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":6414,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.getconnection('write').listcollections",{"_index":5486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.getconnection().deletemany(collectionname",{"_index":5488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.nativedelete(news",{"_index":6382,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":121,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email(value",{"_index":2572,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["emailvo",{"_index":2570,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["embed",{"_index":6119,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embeddable",{"_index":2563,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["embedded",{"_index":2564,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["embedded({entity",{"_index":2805,"title":{},"body":{"entities/ImportUser.html":{}}}],["embodied",{"_index":4906,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5282,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2087,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":3393,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":1203,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6136,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":2463,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":2460,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["enableimplicitconversion",{"_index":2470,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":5436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":4721,"title":{},"body":{"license.html":{}}}],["encapsulate",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":2285,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":2250,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":4659,"title":{},"body":{"license.html":{}}}],["encrypt",{"_index":2062,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["encrypt(data",{"_index":3763,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["encryptedstring",{"_index":2090,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["encryptedstringtype",{"_index":2058,"title":{"classes/EncryptedStringType.html":{}},"body":{"classes/EncryptedStringType.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["encryption.service",{"_index":2102,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionmodule",{"_index":2095,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules.html":{}}}],["encryptionmoduleoptions",{"_index":2099,"title":{"interfaces/EncryptionModuleOptions.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionservice",{"_index":2064,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["end",{"_index":1078,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6436,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6442,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2232,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpointurl",{"_index":2649,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["enforce",{"_index":4144,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":6108,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4853,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enrichment",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":314,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4506,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":2992,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5175,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4876,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5193,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":323,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":574,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":568,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4447,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":5416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":342,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":316,"title":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getgrid().map((elementwithposition",{"_index":1624,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getid",{"_index":1631,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getuserid",{"_index":1633,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":2513,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":2531,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/PermissionService.html":{}}}],["entity/school.entity",{"_index":2514,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/team.entity",{"_index":2515,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/user.entity",{"_index":3529,"title":{},"body":{"injectables/PermissionService.html":{}}}],["entityclass",{"_index":413,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["entityid",{"_index":308,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/Board.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":544,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":3118,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["entitypermissions",{"_index":336,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":340,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":373,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["entitywithid",{"_index":474,"title":{},"body":{"classes/BaseFactory.html":{}}}],["entries",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":2972,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":1095,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/System.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["enum({fieldname",{"_index":2807,"title":{},"body":{"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["enumerations",{"_index":4425,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":1234,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":4314,"title":{},"body":{"dependencies.html":{}}}],["env/config",{"_index":5321,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["eol",{"_index":2258,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":3038,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equivalent",{"_index":4804,"title":{},"body":{"license.html":{}}}],["err",{"_index":2030,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":34,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error('rocket",{"_index":170,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["error('roles",{"_index":3531,"title":{},"body":{"injectables/PermissionService.html":{}}}],["error('submissions",{"_index":2728,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["error(message",{"_index":2625,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":2111,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":2377,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":2382,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":2386,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":2388,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":2412,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":2166,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["error.response",{"_index":225,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":215,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:23",{"_index":223,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":221,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":2443,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":2438,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":865,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":2437,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":201,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":2422,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":837,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":2409,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":219,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errortype",{"_index":41,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["es6",{"_index":4320,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":4465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":43,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/dot",{"_index":490,"title":{},"body":{"classes/BaseFactory.html":{}}}],["eslint/no",{"_index":48,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"entities/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":138,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["essential",{"_index":4766,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["etc",{"_index":4509,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4581,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":5236,"title":{},"body":{"license.html":{}}}],["events",{"_index":6177,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["everyone",{"_index":4602,"title":{},"body":{"license.html":{}}}],["everything",{"_index":6094,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4698,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exactly",{"_index":4234,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["example",{"_index":4780,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":1381,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["examples",{"_index":4469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["except",{"_index":4710,"title":{},"body":{"license.html":{},"todo.html":{}}}],["exception",{"_index":2108,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":2406,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":2401,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":2403,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":2434,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":2481,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":2378,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":2405,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2399,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["exchange",{"_index":3071,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["exchangeable",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":3077,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4950,"title":{},"body":{"license.html":{}}}],["excludedraftsofothers",{"_index":4041,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludedraftsofothers(creatorid",{"_index":4060,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludeunavailableofothers",{"_index":4042,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludeunavailableofothers(creatorid",{"_index":4062,"title":{},"body":{"classes/TaskScope.html":{}}}],["excluding",{"_index":5179,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":5270,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":5135,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4808,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5186,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4759,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3328,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":3332,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4711,"title":{},"body":{"license.html":{}}}],["execution",{"_index":4160,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":2044,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5110,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4848,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2294,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1602,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingrooms",{"_index":1422,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existingrooms.includes(room",{"_index":1425,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existinguser",{"_index":6169,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1166,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"entities/System.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":2300,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":2308,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exp",{"_index":2933,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6392,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6351,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6356,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6391,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4971,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6350,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":4970,"title":{},"body":{"license.html":{}}}],["experts",{"_index":6111,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":2951,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{}}}],["expiresin",{"_index":2945,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":466,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":56,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1738,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1758,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1741,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1698,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1704,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1819,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1830,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1836,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1940,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1956,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":6087,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":295,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":5306,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":2194,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5221,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":140,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5057,"title":{},"body":{"license.html":{}}}],["extend",{"_index":417,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":795,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":33,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersError.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4889,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4731,"title":{},"body":{"license.html":{}}}],["external",{"_index":2566,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/UserMatch.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":2923,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":1102,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["externaluseridentifier",{"_index":2795,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":4199,"title":{},"body":{"entities/User.html":{}}}],["extract",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":2478,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":2958,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2966,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f",{"_index":445,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":681,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5199,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4809,"title":{},"body":{"license.html":{}}}],["factory",{"_index":393,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["factory.define",{"_index":453,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["factory.define(generator",{"_index":469,"title":{},"body":{"classes/BaseFactory.html":{}}}],["fail",{"_index":4662,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":210,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6437,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["failingfileids",{"_index":2023,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.length",{"_index":2033,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.push(file.id",{"_index":2031,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["fails",{"_index":5070,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5247,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4803,"title":{},"body":{"license.html":{}}}],["false",{"_index":516,"title":{},"body":{"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DatabaseManagementConsole.html":{},"entities/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"interfaces/Options.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4956,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4559,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4696,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6130,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4400,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4966,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":298,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathersapp",{"_index":2202,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":2213,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":293,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":2164,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":2393,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":2209,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4263,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4265,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":1679,"title":{},"body":{"injectables/DashboardUc.html":{},"dependencies.html":{}}}],["feathersjs/express",{"_index":2195,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4266,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4267,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":291,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":2182,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersserviceparams",{"_index":2189,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":2133,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":2197,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":4553,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4558,"title":{},"body":{"index.html":{}}}],["features",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fee",{"_index":4869,"title":{},"body":{"license.html":{}}}],["feel",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6144,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ffffff",{"_index":1025,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":4258,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":518,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["fields",{"_index":5305,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"entities/File.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1910,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":2669,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["filefactory",{"_index":5438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileids",{"_index":2680,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["filename",{"_index":1891,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1892,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1887,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames.map((filename",{"_index":1889,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1872,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":511,"title":{},"body":{"entities/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["files.console",{"_index":2335,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.console.ts",{"_index":1982,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:17",{"_index":1993,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:7",{"_index":1986,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.filter((file",{"_index":2361,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["files.uc.ts",{"_index":2006,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:15",{"_index":2011,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:6",{"_index":2009,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesforcleanupquery",{"_index":2357,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["filesfordeletion",{"_index":2017,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesfordeletion.length",{"_index":2020,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesmodule",{"_index":2327,"title":{"modules/FilesModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["filesrepo",{"_index":2008,"title":{"injectables/FilesRepo.html":{}},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filestorageadapter",{"_index":2221,"title":{"injectables/FileStorageAdapter.html":{}},"body":{"injectables/FileStorageAdapter.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filesystem",{"_index":1708,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1828,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":2321,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1721,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/Options.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TeamNewsController.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2743,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["filter.query",{"_index":2835,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["filter.query.ts",{"_index":2846,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:15",{"_index":2849,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:17",{"_index":3248,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:21",{"_index":2852,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":3246,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:27",{"_index":2853,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:32",{"_index":2857,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":3251,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:37",{"_index":2851,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.ts",{"_index":3404,"title":{},"body":{"interfaces/NewsTargetFilter.html":{}}}],["filter/global",{"_index":2110,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1856,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1902,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1905,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":1196,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":616,"title":{},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{}}}],["filters.availableon",{"_index":4012,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters.draft",{"_index":617,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters.finished.value",{"_index":4005,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters.hidden",{"_index":635,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters.nofutureavailabledate",{"_index":618,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters?.afterduedateornone",{"_index":4008,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.availableon",{"_index":4010,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":4017,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.finished",{"_index":4003,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":3025,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["filters?.nofutureavailabledate",{"_index":4019,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.onlyactivecourses",{"_index":1172,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["final",{"_index":6176,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5067,"title":{},"body":{"license.html":{}}}],["find",{"_index":2185,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":2188,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2820,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2823,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":3336,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findall(userid",{"_index":4095,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallbycourseids",{"_index":2616,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{}}}],["findallbycourseids'})@property",{"_index":3010,"title":{},"body":{"entities/Lesson.html":{}}}],["findallbycourseids(courseids",{"_index":3021,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":3936,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":3941,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids_findallforstudent",{"_index":2706,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher",{"_index":2712,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher'})@manytomany('user",{"_index":3792,"title":{},"body":{"entities/Task.html":{}}}],["findallbytaskids",{"_index":3746,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":3750,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuser",{"_index":1206,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuser(userid",{"_index":1209,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuserid",{"_index":939,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":1149,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallfilesforcleanup",{"_index":2338,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfilesforcleanup(cleanupthreshold",{"_index":2342,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfinished",{"_index":3868,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallfinished(currentuser",{"_index":3870,"title":{},"body":{"controllers/TaskController.html":{}}}],["findallfinished(userid",{"_index":4097,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallfinishedbyparentids",{"_index":3937,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallfinishedbyparentids(parentids",{"_index":3946,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":4091,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforstudent(user",{"_index":4099,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":938,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(user",{"_index":4101,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":1152,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["findallforteam",{"_index":4137,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":4138,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":3406,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":3417,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":6347,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":1041,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":1043,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":3585,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":3588,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":3586,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":3590,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbysingleparent",{"_index":3938,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findbysingleparent(creatorid",{"_index":3948,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finddocumentsofcollection",{"_index":1773,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1787,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findexistinggridelement",{"_index":1546,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["findexistinggridelement(elementwithposition",{"_index":1559,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["findforuser",{"_index":969,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["findforuser(@currentuser",{"_index":1267,"title":{},"body":{"controllers/DashboardController.html":{}}}],["findforuser(currentuser",{"_index":970,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["finding",{"_index":2520,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":3334,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":3339,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1147,"title":{},"body":{"injectables/CourseRepo.html":{},"controllers/NewsController.html":{}}}],["findone(courseid",{"_index":1154,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["findone(newsid",{"_index":3207,"title":{},"body":{"controllers/NewsController.html":{}}}],["findonebyid",{"_index":3335,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyid(id",{"_index":3343,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyidforuser",{"_index":3407,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":3423,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":3117,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["findtasksandcount",{"_index":3939,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":3950,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":2004,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["finished(user",{"_index":3891,"title":{},"body":{"classes/TaskFactory.html":{}}}],["finishedcourseids",{"_index":3955,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["first",{"_index":3422,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":2533,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ResolvedUser.html":{},"entities/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["fishery",{"_index":461,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["fit",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5224,"title":{},"body":{"license.html":{}}}],["fix",{"_index":5311,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":4910,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":5334,"title":{},"body":{"todo.html":{}}}],["fixtures",{"_index":6316,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":3250,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["flagged",{"_index":2557,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/UserMatch.html":{}}}],["flags",{"_index":1719,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flat",{"_index":1430,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["flow",{"_index":4789,"title":{},"body":{"license.html":{}}}],["flush",{"_index":534,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["focus",{"_index":6149,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["focuses",{"_index":6359,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1730,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1873,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4683,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":2036,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["foractivecourses",{"_index":1163,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forallgrouptypes",{"_index":1190,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":1159,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4846,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":6089,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":2476,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["forbidunknownvalues",{"_index":2480,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":4805,"title":{},"body":{"license.html":{}}}],["forcepathstyle",{"_index":2234,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["forceserverobjectid",{"_index":1801,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["forcourseid",{"_index":1191,"title":{},"body":{"classes/CourseScope.html":{}}}],["forcourseid(courseid",{"_index":1169,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["foreign",{"_index":6425,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":6353,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4746,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":923,"title":{},"body":{"entities/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formatting",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4900,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":2097,"title":{},"body":{"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerTestModule.html":{}}}],["forroot(options",{"_index":2098,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["forteacher",{"_index":1192,"title":{},"body":{"classes/CourseScope.html":{}}}],["forteacher(userid",{"_index":1162,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["found",{"_index":1694,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4599,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4597,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4620,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4336,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":6100,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":6099,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromgroup",{"_index":2484,"title":{},"body":{"classes/GridElement.html":{}}}],["fromgroup(title",{"_index":1371,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedgroup",{"_index":2485,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedgroup(id",{"_index":1369,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedreference",{"_index":2486,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedreference(id",{"_index":1368,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fromsinglereference",{"_index":2487,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(reference",{"_index":1370,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fs",{"_index":2301,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":2314,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":2299,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4832,"title":{},"body":{"license.html":{}}}],["full",{"_index":2271,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fullblown",{"_index":591,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["function",{"_index":419,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/IRoleProperties.html":{},"classes/LessonFactory.html":{},"entities/Role.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":873,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4984,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4438,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4931,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":1114,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gates",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":4590,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generally",{"_index":4464,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":443,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generated",{"_index":4524,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generateemptydashboard",{"_index":1647,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["generateemptydashboard(userid",{"_index":1660,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["generating",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generator",{"_index":448,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generatorfn",{"_index":449,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["generic",{"_index":4460,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["genericdata",{"_index":29,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["get(':id",{"_index":3208,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':id/board",{"_index":3598,"title":{},"body":{"controllers/RoomsController.html":{}}}],["get(':teamid/news",{"_index":4139,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('finished",{"_index":3871,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":4210,"title":{},"body":{"controllers/UserController.html":{}}}],["get(`${this.options.uri}${path",{"_index":141,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["get(id",{"_index":2191,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(path",{"_index":136,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getadminidandtoken",{"_index":155,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getasadmin(path",{"_index":134,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getbasedir",{"_index":1863,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getboard",{"_index":3608,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["getboard(roomid",{"_index":594,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["getbydraftforcreatorquery",{"_index":4043,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftforcreatorquery(creatorid",{"_index":4064,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftquery",{"_index":4044,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftquery(isdraft",{"_index":4066,"title":{},"body":{"classes/TaskScope.html":{}}}],["getcollectionnames",{"_index":1774,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":1345,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getdashboardbyid",{"_index":1636,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":1640,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1775,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1790,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1793,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":4092,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":2785,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getdetails",{"_index":183,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getelement",{"_index":1285,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getelement(position",{"_index":1310,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getentitypermissions",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":318,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":2296,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getfirstopenindex",{"_index":1286,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgradeduserids",{"_index":2740,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getgrid",{"_index":1287,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgroupmembers(groupname",{"_index":107,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getgroupmoderators(groupname",{"_index":105,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gethello",{"_index":1960,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":1288,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getinout",{"_index":3648,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":3652,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getmaxsubmissions",{"_index":2754,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getmetadata",{"_index":2613,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["getnewspermissions",{"_index":3408,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":3425,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofgradedusers",{"_index":2748,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getnumberofstudents",{"_index":961,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getnumberofsubmittedusers",{"_index":2737,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getorconstructdashboardmodelentity",{"_index":1547,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["getorconstructdashboardmodelentity(entity",{"_index":1561,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["getparent",{"_index":2768,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparentid",{"_index":1037,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":3800,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(user",{"_index":3807,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":321,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedlessonids",{"_index":3830,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons",{"_index":3801,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons(user",{"_index":3811,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedschools",{"_index":2127,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":2135,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":2128,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":2137,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":3637,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":1350,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getreferencesfromposition",{"_index":1289,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getreferencesfromposition(position",{"_index":1319,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getrequiredpermissions",{"_index":3409,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":3428,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":184,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getroomboard",{"_index":3596,"title":{},"body":{"controllers/RoomsController.html":{}}}],["getroomboard(roomid",{"_index":3597,"title":{},"body":{"controllers/RoomsController.html":{}}}],["gets",{"_index":427,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["getseedfolder",{"_index":1820,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":2214,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":2201,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getstudentid",{"_index":2696,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["getsubmissionitems",{"_index":2726,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubmitteduserids",{"_index":2731,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gettargetfilters",{"_index":3410,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":3431,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1821,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1839,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":927,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":4169,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":4479,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":2129,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":2139,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserid",{"_index":1290,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getuserlist(querystring",{"_index":89,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getuserschoolpermissions",{"_index":2130,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":2141,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":1637,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusersdashboard(userid",{"_index":1642,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":2131,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":2143,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":4493,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":4344,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":4367,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":4358,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":4488,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4866,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1898,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":2172,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4872,"title":{},"body":{"license.html":{}}}],["global",{"_index":880,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":2367,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":2109,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":2452,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":2907,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":2372,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalvalidationpipe",{"_index":2455,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{}}}],["gnu",{"_index":4588,"title":{},"body":{"license.html":{}}}],["go",{"_index":4574,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5363,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":6126,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":3067,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4471,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":5015,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4675,"title":{},"body":{"license.html":{}}}],["grade",{"_index":2663,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["gradecomment",{"_index":2664,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["graded",{"_index":771,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids",{"_index":2741,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids.length",{"_index":2750,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradefileids",{"_index":2681,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["gradefiles",{"_index":2665,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["grant",{"_index":5039,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4794,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5087,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5290,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4930,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5262,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1074,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"classes/PatchGroupParams.html":{},"miscellaneous/variables.html":{}}}],["gridarray",{"_index":1648,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":1356,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.frompersistedgroup(modelentity.id",{"_index":1588,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.fromsinglereference(referenceforindex",{"_index":1443,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.fromsinglereference(room",{"_index":1433,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.getcontent().title",{"_index":1617,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.getid",{"_index":1610,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.hasid",{"_index":1608,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.isgroup",{"_index":1615,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.setgroupname(params",{"_index":1691,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["gridelementcontent",{"_index":1346,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":1477,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["gridelementwithposition",{"_index":1317,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":1291,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":1323,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridposition",{"_index":1311,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridpositionwithgroupindex",{"_index":1320,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":1354,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{}}}],["group.name",{"_index":111,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["groupdata",{"_index":1382,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupelements",{"_index":1487,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["groupid",{"_index":1355,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupindex",{"_index":1384,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["groupmetadata",{"_index":1379,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupname",{"_index":94,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gt",{"_index":3403,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1168,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/TaskScope.html":{}}}],["guarantee",{"_index":3235,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5480,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":6035,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6393,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hack",{"_index":2755,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["halper",{"_index":4192,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":814,"title":{},"body":{"classes/BusinessError.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":5349,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":2424,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":876,"title":{},"body":{"modules/CoreModule.html":{},"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":6074,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6340,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hascoursepermission",{"_index":3858,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission",{"_index":3802,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission(user",{"_index":3813,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission",{"_index":3803,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission(user",{"_index":3815,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasid",{"_index":1344,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["hasoneoftaskdashboardpermissions",{"_index":3804,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasoneoftaskdashboardpermissions(user",{"_index":3817,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["haspermission",{"_index":3854,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["haspermissions",{"_index":338,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskpermission",{"_index":3805,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hastaskpermission(user",{"_index":3820,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["having",{"_index":4807,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["header",{"_index":2940,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":142,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4658,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":930,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6303,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helper",{"_index":2396,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":6037,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":369,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5131,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":634,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6150,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["high",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":6092,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1921,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4357,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4360,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5064,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5022,"title":{},"body":{"license.html":{}}}],["homework",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2674,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["homeworks",{"_index":2705,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["homogeneitysolve",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hookfn",{"_index":415,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["hooks",{"_index":4325,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":931,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":2384,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":2449,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4937,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5353,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["household",{"_index":4957,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2077,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":1108,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":249,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":251,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["http",{"_index":217,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4601,"title":{},"body":{"license.html":{}}}],["http://localhost",{"_index":5579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.gnu.org/licenses",{"_index":5286,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":819,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["httpmodule",{"_index":3572,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["https://docs.nestjs.com/first",{"_index":6039,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6395,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5329,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6138,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://github.com/thoughtbot/fishery",{"_index":396,"title":{},"body":{"classes/BaseFactory.html":{}}}],["https://hpi",{"_index":5359,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6147,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":6077,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5312,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpservice",{"_index":16,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["httpstatus",{"_index":202,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":212,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":833,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["human",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i...properties",{"_index":935,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":2932,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1871,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["icons",{"_index":6439,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":1033,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["icourseproperties",{"_index":922,"title":{"interfaces/ICourseProperties.html":{}},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{}}}],["icreatenews",{"_index":2510,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["icurrentuser",{"_index":971,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"controllers/ImportUserController.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":3505,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":3507,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":5387,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardmodelproperties",{"_index":1476,"title":{"interfaces/IDashboardModelProperties.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["idashboardrepo",{"_index":1651,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["idea",{"_index":3846,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["identical",{"_index":2988,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5156,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":1453,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["identifier",{"_index":2117,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":2567,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/JwtValidationAdapter.html":{},"classes/UserMatch.html":{}}}],["identify",{"_index":3177,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6415,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ids",{"_index":324,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["ierrortype",{"_index":820,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6161,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6171,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6164,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":507,"title":{"interfaces/IFileProperties.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["ifindoptions",{"_index":1150,"title":{"interfaces/IFindOptions.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["ignore",{"_index":2813,"title":{},"body":{"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"entities/System.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":2967,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igridelement",{"_index":1314,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["iimportuserproperties",{"_index":2553,"title":{"interfaces/IImportUserProperties.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ilearnroom",{"_index":916,"title":{"interfaces/ILearnroom.html":{}},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{}}}],["ilessonproperties",{"_index":2614,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{}}}],["ilogger",{"_index":2380,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["imateapotexception",{"_index":2193,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ImportUserController.html":{}}}],["imateapotexception('this",{"_index":2210,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":2180,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["impact",{"_index":4511,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":3043,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":2814,"title":{},"body":{"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"entities/System.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":6040,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2929,"title":{},"body":{"interfaces/JwtConstants.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":942,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":6090,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6413,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5180,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["import.module",{"_index":3689,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["import.module.ts",{"_index":2886,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["import/controller/dto/import",{"_index":2845,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["import/controller/dto/match",{"_index":4436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/role",{"_index":4437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/update",{"_index":4185,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["import/controller/dto/user",{"_index":4227,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["import/controller/import",{"_index":2817,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["import/user",{"_index":2885,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["important",{"_index":2198,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/PermissionService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1739,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1755,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1747,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1740,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1935,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1932,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importing",{"_index":5122,"title":{},"body":{"license.html":{}}}],["imports",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FilesModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importuser",{"_index":2586,"title":{"entities/ImportUser.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"classes/UserMatch.html":{},"miscellaneous/variables.html":{}}}],["importusercontroller",{"_index":2815,"title":{"controllers/ImportUserController.html":{}},"body":{"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{}}}],["importuserfilterquery",{"_index":2824,"title":{"classes/ImportUserFilterQuery.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{}}}],["importuserid",{"_index":2829,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["importuserlistresponse",{"_index":2836,"title":{"classes/ImportUserListResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["importusermodule",{"_index":2882,"title":{"modules/ImportUserModule.html":{}},"body":{"modules/ImportUserModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["importuserresponse",{"_index":2864,"title":{"classes/ImportUserResponse.html":{}},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["impose",{"_index":5048,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5183,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":3400,"title":{},"body":{"classes/NewsScope.html":{}}}],["improvements",{"_index":4652,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5242,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5244,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4600,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5239,"title":{},"body":{"license.html":{}}}],["include",{"_index":359,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"license.html":{}}}],["included",{"_index":4760,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4715,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2290,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4898,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2465,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incorporate",{"_index":4656,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5200,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4960,"title":{},"body":{"license.html":{}}}],["increase",{"_index":4569,"title":{},"body":{"index.html":{}}}],["increases",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5044,"title":{},"body":{"license.html":{}}}],["independend",{"_index":6180,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4887,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":912,"title":{},"body":{"entities/Course.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["index.ts",{"_index":5302,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexes",{"_index":5339,"title":{},"body":{"todo.html":{}}}],["indicate",{"_index":5091,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5055,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4896,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4693,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4974,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":1100,"title":{"interfaces/INewsProperties.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["inewsscope",{"_index":2521,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["inewuserprops",{"_index":6155,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":850,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":3286,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":3619,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.mapper.ts:5",{"_index":3621,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":3260,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":3626,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:13",{"_index":3628,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:14",{"_index":4221,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3629,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:19",{"_index":4220,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:24",{"_index":4223,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:3",{"_index":3627,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4943,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":2124,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infra",{"_index":3121,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infra/encryption",{"_index":2080,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["infrastructure",{"_index":6025,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infrastucture",{"_index":3708,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["infringe",{"_index":5089,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5119,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4707,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":362,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritances",{"_index":3360,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":192,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseScope.html":{},"injectables/FilesRepo.html":{},"classes/ImportUserListResponse.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskScope.html":{},"classes/ValidationError.html":{}}}],["initialization",{"_index":6401,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["initialize",{"_index":6189,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":3047,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5113,"title":{},"body":{"license.html":{}}}],["inject",{"_index":17,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('dashboard_repo",{"_index":1681,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["inject('mail_service_options",{"_index":3093,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject('rocket_chat_options",{"_index":70,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["inject(mikroorm",{"_index":3157,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":3159,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":18,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"overview.html":{}}}],["injected",{"_index":2176,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":3044,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["inline",{"_index":242,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":241,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inner",{"_index":4515,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":2909,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":3528,"title":{},"body":{"injectables/PermissionService.html":{}}}],["insertedcount",{"_index":1799,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":817,"title":{},"body":{"classes/BusinessError.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6394,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4774,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4979,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4997,"title":{},"body":{"license.html":{}}}],["instance",{"_index":2205,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":2362,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4500,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instant",{"_index":934,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["instead",{"_index":1926,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4536,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4861,"title":{},"body":{"license.html":{}}}],["integration",{"_index":6296,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":4624,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4851,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5277,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5195,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4724,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4728,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":2042,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":2043,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":886,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptormodule",{"_index":866,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4913,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5106,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/Board.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"entities/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"entities/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":2963,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/Board.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4986,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1103,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6153,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":860,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1579,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception('unknown",{"_index":1600,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["internalservererrorexception(error",{"_index":2415,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["interpretation",{"_index":5251,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4772,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4787,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":6124,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":2177,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5298,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1908,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["invalidate",{"_index":4882,"title":{},"body":{"license.html":{}}}],["inviteusertogroup(groupname",{"_index":99,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["invocation",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":6125,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":2544,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{}}}],["ipermissionsandroles",{"_index":2535,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":3105,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["iresolveduser",{"_index":2529,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{}}}],["irole",{"_index":2532,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":2636,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["irrevocable",{"_index":4796,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2858,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":2394,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":2428,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ischoolproperties",{"_index":2645,"title":{"interfaces/ISchoolProperties.html":{}},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["iscreator",{"_index":3856,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["isdate",{"_index":1238,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":1221,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdirectory",{"_index":497,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["isdraft",{"_index":772,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["isenum",{"_index":2859,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isenum(matchfilterquery",{"_index":2862,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isfeatherserror",{"_index":2392,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":2423,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfinished",{"_index":963,"title":{},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["isfinishedforuser(user",{"_index":2723,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgraded",{"_index":2692,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgradedforuser(user",{"_index":2774,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgroup",{"_index":1347,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ishidden",{"_index":3037,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":3252,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":3255,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":3490,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":3487,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":3481,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2867,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{}}}],["ismongoid()@apiproperty({description",{"_index":4236,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["ismongoid()@apiproperty({pattern",{"_index":2899,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["isnotempty",{"_index":2860,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isnumber",{"_index":3174,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@apiproperty",{"_index":3180,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@isoptional()@apipropertyoptional({description",{"_index":3178,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isopen",{"_index":997,"title":{},"body":{"classes/CourseFactory.html":{}}}],["isoptional",{"_index":1239,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":3249,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":4196,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":3243,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":4195,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":3247,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":3460,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":2936,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":1240,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/PatchGroupParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":1219,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserResponse.html":{},"classes/PatchGroupParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":1232,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":1229,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":1160,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubmitted",{"_index":2777,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubmittedforuser(user",{"_index":2770,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubstitutionteacher",{"_index":773,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["issuer",{"_index":2943,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istanbul",{"_index":2812,"title":{},"body":{"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"entities/System.html":{}}}],["isteacher",{"_index":597,"title":{},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/RoomsUc.html":{}}}],["isteacher(user",{"_index":625,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["istechnicalerror",{"_index":2397,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":2430,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":3056,"title":{},"body":{"injectables/Logger.html":{}}}],["istorageproviderproperties",{"_index":2647,"title":{"interfaces/IStorageProviderProperties.html":{}},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["isubmissionproperties",{"_index":2660,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["iswhitelisted",{"_index":2980,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":2983,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6346,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":2698,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{}}}],["itaskstatus",{"_index":765,"title":{"interfaces/ITaskStatus.html":{}},"body":{"classes/BoardTaskStatusMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iteamproperties",{"_index":2790,"title":{"interfaces/ITeamProperties.html":{}},"body":{"interfaces/ITeamProperties.html":{},"entities/Team.html":{}}}],["item",{"_index":4742,"title":{},"body":{"license.html":{}}}],["items",{"_index":2639,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":5001,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":2519,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":2792,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["javascript",{"_index":797,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":5347,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":5421,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6348,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4548,"title":{},"body":{"index.html":{}}}],["job",{"_index":1988,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["job/delete",{"_index":2334,"title":{},"body":{"modules/FilesModule.html":{}}}],["jobs",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":6430,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":2253,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":2274,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":4339,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":928,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":796,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1919,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1907,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1727,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":2441,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1953,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":809,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1798,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":4341,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":2938,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6364,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":2961,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":2915,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":281,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":2970,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":2969,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":2965,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":2921,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":2948,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":265,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":266,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":2990,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1934,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4767,"title":{},"body":{"license.html":{}}}],["key",{"_index":2245,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/NewsUc.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{}}}],["keyof",{"_index":5413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":2927,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kickuserfromgroup(groupname",{"_index":97,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["kind",{"_index":4720,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4611,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["know",{"_index":4637,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["knowingly",{"_index":5146,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5153,"title":{},"body":{"license.html":{}}}],["known",{"_index":6052,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kurse",{"_index":937,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["l.course.isfinished()).map((l",{"_index":4112,"title":{},"body":{"injectables/TaskUC.html":{}}}],["l.id",{"_index":4113,"title":{},"body":{"injectables/TaskUC.html":{}}}],["label",{"_index":4563,"title":{},"body":{"index.html":{}}}],["language",{"_index":4755,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4890,"title":{},"body":{"license.html":{}}}],["last",{"_index":4222,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["lastname",{"_index":2534,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ResolvedUser.html":{},"entities/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":1118,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":3421,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5328,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4709,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4685,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5117,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5301,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["lazily",{"_index":3523,"title":{},"body":{"injectables/PermissionService.html":{}}}],["lazy",{"_index":2587,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ldap",{"_index":2893,"title":{},"body":{"modules/ImportUserModule.html":{},"todo.html":{}}}],["ldapdn",{"_index":2558,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ldapid",{"_index":2559,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["ldapjs",{"_index":4343,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4346,"title":{},"body":{"dependencies.html":{}}}],["lead",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4466,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":4362,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":1601,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["learnroommetadata",{"_index":918,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"miscellaneous/typealiases.html":{}}}],["learnroommodule",{"_index":2999,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["learnroomtypes",{"_index":919,"title":{},"body":{"entities/Course.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/enumerations.html":{}}}],["learnroomtypes.course",{"_index":1599,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["leave",{"_index":5374,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":4159,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":2173,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/System.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["legacy/feathers",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5364,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4646,"title":{},"body":{"license.html":{}}}],["less",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":584,"title":{"entities/Lesson.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":2701,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessoncourse",{"_index":736,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["lessoncourse.name",{"_index":739,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["lessonfactory",{"_index":3013,"title":{"classes/LessonFactory.html":{}},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonfactory.define(lesson",{"_index":3016,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonfilter",{"_index":601,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["lessonfilter(isteacher",{"_index":633,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["lessonid",{"_index":2709,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonids",{"_index":3992,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonidsoffinishedcourses",{"_index":3956,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonidsofopencourses",{"_index":3954,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":586,"title":{"injectables/LessonRepo.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lessons",{"_index":608,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessons.filter((l",{"_index":4111,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessons.map((l",{"_index":4127,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessons.map((lesson",{"_index":639,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["lessonscope",{"_index":3023,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{}}}],["letter",{"_index":6049,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4665,"title":{},"body":{"license.html":{}}}],["level",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":5025,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4706,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4758,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4951,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4587,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4689,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4690,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4692,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4617,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5093,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5036,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":5085,"title":{},"body":{"license.html":{}}}],["limit",{"_index":993,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"license.html":{}}}],["limitation",{"_index":5235,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5222,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":5024,"title":{},"body":{"license.html":{}}}],["line",{"_index":46,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2892,"title":{},"body":{"modules/ImportUserModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4784,"title":{},"body":{"license.html":{}}}],["linter",{"_index":5348,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":320,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["lists",{"_index":2278,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":411,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/CourseRepo.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5114,"title":{},"body":{"license.html":{}}}],["living",{"_index":6122,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1894,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/TaskUC.html":{}}}],["load/perf",{"_index":5319,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":6021,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1822,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1842,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1823,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1848,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1824,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1851,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":2729,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/PermissionService.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":6295,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loads",{"_index":1844,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":2881,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3704,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":6086,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1862,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lodash",{"_index":1866,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":2620,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":2628,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5350,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4533,"title":{},"body":{"index.html":{}}}],["logger",{"_index":885,"title":{"injectables/Logger.html":{}},"body":{"modules/CoreModule.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":2381,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(deletefilesconsole.name",{"_index":1998,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":2049,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":3439,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":2445,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":2442,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":2435,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":3041,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":3061,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":867,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":878,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":2039,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:11",{"_index":2050,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":2046,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2878,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginname",{"_index":2847,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["loginuseruc",{"_index":6058,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logoutuser(authtoken",{"_index":87,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["logs",{"_index":5300,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4564,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["look",{"_index":2926,"title":{},"body":{"interfaces/JwtConstants.html":{},"index.html":{}}}],["loop",{"_index":2027,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["loss",{"_index":5243,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5245,"title":{},"body":{"license.html":{}}}],["low",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":2588,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2358,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["luckily",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6424,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4903,"title":{},"body":{"license.html":{}}}],["made",{"_index":4653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":252,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{}}}],["mail.interface",{"_index":3092,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":3070,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":3082,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":237,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailcontent",{"_index":245,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailmodule",{"_index":3062,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{}}}],["mailmodule.forroot",{"_index":3691,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["mailmoduleoptions",{"_index":3064,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailservice",{"_index":3069,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mailserviceoptions",{"_index":3088,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["main",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":2206,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4934,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4763,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2987,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/PermissionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4822,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":4194,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6341,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":3112,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1697,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["management.console.ts:11",{"_index":1702,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1712,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1709,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":3110,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1736,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:14",{"_index":1749,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:19",{"_index":1746,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:24",{"_index":1743,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1751,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1766,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1767,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1768,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:13",{"_index":1791,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1792,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1788,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1780,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1789,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1782,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1784,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1778,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1786,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1794,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1716,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1817,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["management.uc.ts:134",{"_index":1858,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1831,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1829,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1864,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1837,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1840,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1843,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1849,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1853,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1737,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":3097,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":4283,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5304,"title":{},"body":{"todo.html":{}}}],["manner",{"_index":5132,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2578,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["manually",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":4657,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":915,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{}}}],["manytomany('course",{"_index":1457,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytomany('file",{"_index":2679,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytomany('role",{"_index":2640,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany('user",{"_index":905,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytomany({entity",{"_index":3580,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":502,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["manytoone('course",{"_index":1028,"title":{},"body":{"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":2676,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytoone('dashboardmodelentity",{"_index":1454,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytoone('lesson",{"_index":2708,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone('school",{"_index":900,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["manytoone('storageprovider",{"_index":517,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["manytoone('task",{"_index":2673,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytoone('team",{"_index":1145,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["manytoone('user",{"_index":1120,"title":{},"body":{"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["manytoone(undefined",{"_index":2809,"title":{},"body":{"entities/ImportUser.html":{}}}],["map",{"_index":1300,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((el",{"_index":1428,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["map((elementwithposition",{"_index":1522,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["map((submission",{"_index":2745,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["mapcreatenewstodomain",{"_index":3274,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":3277,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdashboardtoentity",{"_index":1548,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtoentity(modelentity",{"_index":1563,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel",{"_index":1549,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel(entity",{"_index":1566,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdomaintoresponse",{"_index":6028,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":1550,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":1568,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":6029,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelement",{"_index":1512,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapgridelement(data",{"_index":1514,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapgridelementtomodel",{"_index":1551,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":1570,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maplearnroom",{"_index":1513,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maplearnroom(metadata",{"_index":1516,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapnewsscopetodomain",{"_index":3275,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":3279,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":740,"title":{},"body":{"injectables/BoardMapper.html":{},"controllers/RoomsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":1623,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedelements.includes(el",{"_index":1627,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedlesson",{"_index":730,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedlesson.coursename",{"_index":738,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask",{"_index":711,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.availabledate",{"_index":720,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.coursename",{"_index":718,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.description",{"_index":726,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.displaycolor",{"_index":724,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.duedate",{"_index":722,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mapper",{"_index":1638,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"controllers/RoomsController.html":{},"controllers/UserController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":6027,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/board.mapper",{"_index":3007,"title":{},"body":{"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["mapper/course.mapper",{"_index":983,"title":{},"body":{"controllers/CourseController.html":{}}}],["mapper/dashboard.mapper",{"_index":1264,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":3221,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":3877,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":6363,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapping",{"_index":5759,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":1552,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":1572,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":1553,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":1574,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maps",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptometadataresponse",{"_index":1050,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptometadataresponse(course",{"_index":1051,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptoresponse",{"_index":696,"title":{},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(board",{"_index":697,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["maptoresponse(dashboard",{"_index":1519,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":3281,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":3620,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(status",{"_index":764,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["maptoresponse(target",{"_index":3783,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":3908,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":3549,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":3276,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":3283,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapusertocurrentuser",{"_index":5442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["march",{"_index":5177,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1989,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["marks",{"_index":5043,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4687,"title":{},"body":{"license.html":{}}}],["master",{"_index":4483,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1832,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["match.params",{"_index":2839,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["match.params.ts",{"_index":4186,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["match.params.ts:7",{"_index":4189,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["match.response",{"_index":2842,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["match.response.ts",{"_index":4228,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:17",{"_index":4237,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:20",{"_index":4232,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:23",{"_index":4230,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:26",{"_index":4231,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:32",{"_index":4235,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:6",{"_index":4229,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["matchcreator",{"_index":2576,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["matchcreatorresponse",{"_index":4233,"title":{},"body":{"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["matched",{"_index":830,"title":{},"body":{"classes/BusinessError.html":{}}}],["matchedby",{"_index":2585,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["matches",{"_index":6337,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matchfilterquery",{"_index":2854,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"miscellaneous/enumerations.html":{}}}],["matchfilterquery})@isoptional()@isenum(matchfilterquery",{"_index":2856,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["matching",{"_index":173,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4811,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5002,"title":{},"body":{"license.html":{}}}],["math.floor(index",{"_index":1391,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["matrix",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":3491,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["max(100",{"_index":3493,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":3484,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":774,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":3142,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5355,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":4214,"title":{},"body":{"controllers/UserController.html":{}}}],["me(authtoken",{"_index":75,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["me(currentuser",{"_index":4209,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5051,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4580,"title":{},"body":{"index.html":{}}}],["means",{"_index":4516,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4831,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4520,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanisms",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4857,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4870,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4743,"title":{},"body":{"license.html":{}}}],["member",{"_index":50,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/FeathersAuthProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["members",{"_index":110,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["memory",{"_index":3124,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4740,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5223,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4723,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4585,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mergeelementintoposition",{"_index":1292,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["mergeelementintoposition(element",{"_index":1326,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["merging",{"_index":5103,"title":{},"body":{"license.html":{}}}],["message",{"_index":84,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["met",{"_index":4798,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6408,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":1518,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.type",{"_index":1598,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["method",{"_index":2187,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/PermissionService.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":182,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metrics",{"_index":4383,"title":{},"body":{"dependencies.html":{}}}],["microservice",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4508,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4348,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2891,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/NewsModule.html":{}}}],["migrations/scheduled",{"_index":3330,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":355,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":3131,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":5575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5345,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":3153,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":3155,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":3156,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":3102,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forfeature",{"_index":2890,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["mikroormmodule.forroot",{"_index":3113,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":3137,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":3151,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":3152,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":3154,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":3132,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":3148,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":4173,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":240,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":3175,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":3176,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":3492,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":3483,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minus",{"_index":6056,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6428,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4424,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":5032,"title":{},"body":{"license.html":{}}}],["missed",{"_index":2781,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["missing",{"_index":2204,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":3399,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4349,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":2304,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":2309,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":2305,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":2313,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mocha",{"_index":5501,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6311,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6299,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6301,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":4978,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":1235,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":1565,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements.init",{"_index":1591,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.isinitialized",{"_index":1590,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.remove(el",{"_index":1628,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.references.loaditems",{"_index":1583,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":1589,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.user.id",{"_index":1597,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":1586,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":1587,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["models",{"_index":3468,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4682,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4747,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4664,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4875,"title":{},"body":{"license.html":{}}}],["modify",{"_index":4648,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4713,"title":{},"body":{"license.html":{}}}],["modularization",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["modularize",{"_index":2081,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["module",{"_index":257,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6376,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6380,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6378,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6344,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6343,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5509,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6294,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":6064,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":6059,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":3133,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6310,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6309,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":259,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":3685,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":6071,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":6069,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":6070,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/files/files.module",{"_index":3665,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/management/management.module",{"_index":3664,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/user",{"_index":3688,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["moment",{"_index":4351,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":801,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":3140,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":3141,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":3160,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":3127,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":462,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1833,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1859,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":3122,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":3711,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":3134,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":3139,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":3702,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4369,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":4534,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5073,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":4510,"title":{},"body":{"index.html":{}}}],["mounted",{"_index":4501,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5323,"title":{},"body":{"todo.html":{}}}],["move",{"_index":588,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moveelement",{"_index":1246,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":1249,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":1328,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["moveelementondashboard",{"_index":1666,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1672,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":1250,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["moveelementposition",{"_index":3169,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["ms",{"_index":1969,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":2402,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":2479,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":570,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["name",{"_index":114,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["name.response",{"_index":2869,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["name.response.ts",{"_index":4432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["named",{"_index":4577,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1807,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1835,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"controllers/NewsController.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5373,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4371,"title":{},"body":{"dependencies.html":{}}}],["native",{"_index":4392,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4888,"title":{},"body":{"license.html":{}}}],["ne",{"_index":4069,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":5231,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2765,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4117,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neededpermission",{"_index":3808,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["needs",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":2426,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5362,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5495,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5498,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5497,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3522,"title":{},"body":{"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":2208,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1964,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":856,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1967,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4274,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4276,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":654,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"controllers/RoomsController.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1966,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6300,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["net",{"_index":4530,"title":{},"body":{"index.html":{}}}],["network",{"_index":4616,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":317,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":149,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Submission.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"entities/User.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newelement",{"_index":1432,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newfactory",{"_index":480,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newgroupname",{"_index":1383,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newly",{"_index":6117,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newpropsfactory",{"_index":478,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newrooms",{"_index":1410,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newrooms.foreach((room",{"_index":1412,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["news",{"_index":1107,"title":{"entities/News.html":{}},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":3294,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":3325,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":4136,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.controller.ts:22",{"_index":4140,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":3300,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":3445,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":3295,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":3292,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":1216,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":4198,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":1237,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":1220,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":4197,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":1228,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":1236,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":1231,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":3302,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":3296,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":3297,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":3298,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":3299,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":3293,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":3301,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":3303,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news[key",{"_index":3465,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":6083,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":6088,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":3329,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":3443,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":3438,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":3263,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":3265,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["news_view",{"_index":3437,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":3195,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscount",{"_index":3453,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":3356,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":3363,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":3353,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":3204,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsid",{"_index":3203,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":3229,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":3458,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":3233,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":3455,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslistresponse",{"_index":3218,"title":{"classes/NewsListResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslistresponse(dtolist",{"_index":3234,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper",{"_index":3220,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":3227,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":3231,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":3228,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":3239,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":3315,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["newsrepo",{"_index":3320,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":3219,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{}}}],["newsscope",{"_index":3348,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["newstarget",{"_index":1098,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"entities/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":3337,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["newstargetmodel",{"_index":310,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":1137,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":331,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":1140,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newsuc",{"_index":3216,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":3462,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":3450,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newvar",{"_index":160,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["next",{"_index":45,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":4177,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":2055,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["node",{"_index":2316,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4495,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env=test",{"_index":3710,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["nodejs",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4366,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4368,"title":{},"body":{"dependencies.html":{}}}],["nofutureavailabledate",{"_index":615,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["non",{"_index":2086,"title":{},"body":{"classes/EncryptedStringType.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4925,"title":{},"body":{"license.html":{}}}],["none",{"_index":2861,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"miscellaneous/enumerations.html":{}}}],["nonemptytargets",{"_index":3473,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":4761,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4955,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":5445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notation",{"_index":491,"title":{},"body":{"classes/BaseFactory.html":{}}}],["note",{"_index":358,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfinished",{"_index":4124,"title":{},"body":{"injectables/TaskUC.html":{}}}],["notfound",{"_index":1678,"title":{},"body":{"injectables/DashboardUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":1339,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["notfoundexception('no",{"_index":1403,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["notfoundexception(`the",{"_index":3119,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":5086,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4734,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4730,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5074,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5071,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":5019,"title":{},"body":{"license.html":{}}}],["nountildate",{"_index":1165,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["november",{"_index":4594,"title":{},"body":{"license.html":{}}}],["now",{"_index":1164,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1879,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1880,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":2057,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":5314,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":2163,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/NewsUc.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["nullish",{"_index":2085,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["number",{"_index":37,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5212,"title":{},"body":{"license.html":{}}}],["numberoffiles",{"_index":2019,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["numberofstudents",{"_index":2758,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["numbers",{"_index":5406,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nuxt",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1729,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":4373,"title":{},"body":{"dependencies.html":{}}}],["oauth2",{"_index":4304,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":421,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserMatch.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(entity",{"_index":475,"title":{},"body":{"classes/BaseFactory.html":{}}}],["object.assign(this",{"_index":1127,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{}}}],["object.entries(params",{"_index":3464,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.setprototypeof(this",{"_index":57,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["object.values(constraint",{"_index":234,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":1242,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":348,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["objectid().tohexstring",{"_index":5563,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":1650,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid(id",{"_index":476,"title":{},"body":{"classes/BaseFactory.html":{}}}],["objectid.createfromhexstring(id",{"_index":1470,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.createfromhexstring(props.id",{"_index":1478,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.isvalid(value",{"_index":3510,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":798,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5190,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4939,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4833,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2048,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obviously",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4924,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":2404,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5083,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4987,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":3419,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4645,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4945,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4928,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4749,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1177,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["ok/err",{"_index":6146,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":4528,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4671,"title":{},"body":{"license.html":{}}}],["omit",{"_index":3074,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5695,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1906,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["oneday",{"_index":1015,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["ones",{"_index":6055,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1463,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":1483,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["onetomany('submission",{"_index":2710,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["oneweekago",{"_index":4128,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":4129,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onlyactivecourses",{"_index":1170,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{}}}],["onlyreadcourses",{"_index":3848,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onlywritecoursesids",{"_index":3847,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onmoduledestroy",{"_index":3129,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":382,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":6335,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":4328,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opencourseids",{"_index":3953,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["opencourses",{"_index":4121,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opencourses.map((c",{"_index":4126,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opened",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5248,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4932,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4769,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4852,"title":{},"body":{"license.html":{}}}],["operations",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3634,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5197,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6410,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":5346,"title":{},"body":{"todo.html":{}}}],["optimization",{"_index":6096,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6416,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":3150,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":190,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1855,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":72,"title":{"interfaces/Options.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DatabaseManagementConsole.html":{},"modules/EncryptionModule.html":{},"classes/LessonFactory.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1724,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":3078,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":3452,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":3083,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.symmetriccipherkey",{"_index":2105,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["options.ts",{"_index":2542,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":3080,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1723,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1732,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":857,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":853,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["order",{"_index":1175,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1180,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1947,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["organization",{"_index":5099,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4694,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":5033,"title":{},"body":{"license.html":{}}}],["original",{"_index":5034,"title":{},"body":{"license.html":{}}}],["orm",{"_index":3158,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6384,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":356,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":3347,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6317,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6139,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":357,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":3103,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{}}}],["os",{"_index":2273,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":2307,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":2475,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":3147,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":6046,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DeleteFilesUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5326,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":3650,"title":{},"body":{"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outside",{"_index":1389,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6361,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1717,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6367,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6375,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":2107,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":879,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5402,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":5291,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":6305,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5128,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":3270,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":3943,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":4262,"title":{"dependencies.html":{}},"body":{"todo.html":{}}}],["packaged",{"_index":4881,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5315,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4762,"title":{},"body":{"license.html":{}}}],["page",{"_index":3482,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":3488,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":2158,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1174,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":6017,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":1179,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":1178,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":6085,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":972,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1064,"title":{"classes/PaginationResponse.html":{}},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["paginationresponse:136",{"_index":3258,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["paginationresponse:14",{"_index":1071,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:17",{"_index":1070,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:20",{"_index":1069,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:59",{"_index":3901,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["paginationresponse:61",{"_index":1068,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["paginationresponse:65",{"_index":2866,"title":{},"body":{"classes/ImportUserListResponse.html":{}}}],["papaparse",{"_index":4376,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5276,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5061,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5139,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":6314,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param",{"_index":330,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"controllers/RoomsController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["param('id",{"_index":1270,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{}}}],["param('teamid",{"_index":4143,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":6016,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":3444,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2766,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/NewsController.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":189,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":406,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/ImportUserController.html":{},"classes/LessonFactory.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params(params",{"_index":454,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["params.content",{"_index":3311,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.course",{"_index":3017,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["params.displayat",{"_index":3312,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":1272,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.school",{"_index":1023,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["params.target",{"_index":3441,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":3314,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":3313,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1278,"title":{},"body":{"controllers/DashboardController.html":{},"classes/NewsMapper.html":{}}}],["params.to",{"_index":1273,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params?.school",{"_index":1022,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["param|query].ts",{"_index":6015,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2752,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["parentids",{"_index":3944,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":3998,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.creatorid",{"_index":3996,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":4000,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":3995,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":3999,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":4001,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byonlycreatorid(parentids.creatorid",{"_index":3997,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2757,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parentsfinished",{"_index":3961,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bycourseids(parentids.finishedcourseids",{"_index":3962,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bylessonids(parentids.lessonidsoffinishedcourses",{"_index":3963,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen",{"_index":3958,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bycourseids(parentids.opencourseids",{"_index":3959,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bylessonids(parentids.lessonidsofopencourses",{"_index":3960,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parse",{"_index":6065,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":6082,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1260,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/RoomsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4297,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2782,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":430,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":4191,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4753,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4722,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4791,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4933,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5104,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":6047,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":2472,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":432,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":2960,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2962,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2964,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":118,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["past",{"_index":1109,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["patch",{"_index":1259,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{}}}],["patch(':id",{"_index":3214,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/element",{"_index":1257,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/match",{"_index":2832,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["patch(':id/moveelement",{"_index":1251,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup",{"_index":1247,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup(dashboardid",{"_index":1254,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroupparams",{"_index":1256,"title":{"classes/PatchGroupParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/PatchGroupParams.html":{}}}],["patching",{"_index":3513,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["patent",{"_index":5060,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5123,"title":{},"body":{"license.html":{}}}],["path",{"_index":1861,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":2320,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1846,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":680,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":2957,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":2950,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["payment",{"_index":5169,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4941,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4944,"title":{},"body":{"license.html":{}}}],["per",{"_index":6031,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":5227,"title":{},"body":{"license.html":{}}}],["performing",{"_index":4779,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5069,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1113,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":3478,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permission.some((p",{"_index":3863,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions",{"_index":312,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"controllers/UserController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":339,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":3477,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.includes(p",{"_index":3864,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions.includes(permission",{"_index":3865,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissionservice",{"_index":3515,"title":{"injectables/PermissionService.html":{}},"body":{"injectables/PermissionService.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["permissive",{"_index":4863,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4897,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4663,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4603,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":3831,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedlessons",{"_index":3853,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":4992,"title":{},"body":{"license.html":{}}}],["persist",{"_index":535,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":548,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persist/make",{"_index":6102,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":536,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistall(entities",{"_index":550,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush",{"_index":537,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush(entities",{"_index":552,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush",{"_index":538,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush(entity",{"_index":554,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persisted",{"_index":567,"title":{},"body":{"injectables/BaseRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":6105,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["persistent",{"_index":3096,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":4954,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":5188,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":6116,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4907,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4922,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":4635,"title":{},"body":{"license.html":{}}}],["pin",{"_index":6162,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pipe",{"_index":146,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":4260,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipes",{"_index":6034,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":3508,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["place",{"_index":4118,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["plain",{"_index":799,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plaintextcontent",{"_index":250,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":248,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["platform",{"_index":2072,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["please",{"_index":3524,"title":{},"body":{"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4322,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5108,"title":{},"body":{"license.html":{}}}],["point",{"_index":1222,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5271,"title":{},"body":{"license.html":{}}}],["policy",{"_index":6093,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":4411,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":3359,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1117,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["populateroles",{"_index":4243,"title":{},"body":{"injectables/UserRepo.html":{}}}],["populateroles(roles",{"_index":4246,"title":{},"body":{"injectables/UserRepo.html":{}}}],["port",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4948,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1325,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.x",{"_index":1386,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.y",{"_index":1390,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position",{"_index":1313,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["position.groupindex",{"_index":1438,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position.x",{"_index":1530,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position.y",{"_index":1531,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["positionfromgridindex",{"_index":1293,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":1330,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["possesses",{"_index":4919,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4879,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":4527,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1752,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1745,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1742,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1748,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post(`${this.options.uri}${path",{"_index":154,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(`${this.options.uri}/api/v1/login",{"_index":161,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(path",{"_index":153,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["postasadmin(path",{"_index":126,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["povider",{"_index":5338,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4845,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4546,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4618,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5143,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6396,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5344,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4609,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4678,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4489,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5105,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4745,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":968,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"index.html":{},"todo.html":{}}}],["preloaded",{"_index":6427,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6426,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prepare",{"_index":3050,"title":{},"body":{"injectables/Logger.html":{}}}],["prepended",{"_index":4525,"title":{},"body":{"index.html":{}}}],["present",{"_index":5204,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["presentation",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4738,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5029,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":374,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["prevented",{"_index":4985,"title":{},"body":{"license.html":{}}}],["previous",{"_index":5107,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4630,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5171,"title":{},"body":{"license.html":{}}}],["primarykey",{"_index":350,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["primaryrolesearchoperation",{"_index":2638,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":3577,"title":{},"body":{"entities/Role.html":{}}}],["principle",{"_index":6313,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6148,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["prior",{"_index":2014,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{}}}],["prisma",{"_index":6412,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["private",{"_index":35,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/Board.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":2995,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4560,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":5208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4980,"title":{},"body":{"license.html":{}}}],["process",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5161,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4771,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4908,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":3675,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5172,"title":{},"body":{"license.html":{}}}],["program",{"_index":4626,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4856,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5283,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4754,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4636,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4815,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4842,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5166,"title":{},"body":{"license.html":{}}}],["project",{"_index":4575,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4380,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":4382,"title":{},"body":{"dependencies.html":{}}}],["prominent",{"_index":4741,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4733,"title":{},"body":{"license.html":{}}}],["promise",{"_index":77,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1970,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1592,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(gridelement.getreferences().map((ref",{"_index":1618,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.all(referencemodels.map((ref",{"_index":1584,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.resolve",{"_index":2319,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promises",{"_index":2298,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4321,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4702,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5090,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4714,"title":{},"body":{"license.html":{}}}],["properly",{"_index":4475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["properties)mongodb",{"_index":6409,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":2337,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["property",{"_index":354,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["property()@index({name",{"_index":3576,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["property({fieldname",{"_index":3719,"title":{},"body":{"entities/StorageProvider.html":{},"classes/UserMatch.html":{}}}],["property({onupdate",{"_index":389,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["propertydecorator",{"_index":4476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":467,"title":{},"body":{"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.accesskeyid",{"_index":2655,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.alias",{"_index":3780,"title":{},"body":{"entities/System.html":{}}}],["props.availabledate",{"_index":2714,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.bucket",{"_index":527,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.classnames",{"_index":2877,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.classnames.length",{"_index":2606,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.color",{"_index":955,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":1392,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.comment",{"_index":2685,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.content",{"_index":1124,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.course",{"_index":1036,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.creator",{"_index":531,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["props.deletedat",{"_index":523,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.description",{"_index":945,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":1126,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.duedate",{"_index":2716,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.email",{"_index":2601,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["props.endpointurl",{"_index":2653,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.externalid",{"_index":1131,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.firstname",{"_index":2597,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["props.flagged",{"_index":2610,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.grade",{"_index":2689,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.gradecomment",{"_index":2691,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.grid.foreach((element",{"_index":1394,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.gridelements",{"_index":1481,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["props.hidden",{"_index":2617,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["props.id",{"_index":1365,"title":{},"body":{"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{}}}],["props.importuserid",{"_index":2871,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.lastname",{"_index":2599,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["props.ldapdn",{"_index":2593,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.ldapid",{"_index":2595,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.lesson",{"_index":2720,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.loginname",{"_index":2873,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.match",{"_index":2608,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["props.matchedby",{"_index":2584,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["props.name",{"_index":944,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{}}}],["props.permissions",{"_index":2641,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["props.private",{"_index":2717,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.references.sort(this.sortreferences",{"_index":1367,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.region",{"_index":2659,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.rolenames",{"_index":2875,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.rolenames.length",{"_index":2603,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.roles",{"_index":2643,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["props.school",{"_index":948,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["props.secretaccesskey",{"_index":2657,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.source",{"_index":1133,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.sourcedescription",{"_index":1135,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.startdate",{"_index":959,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.storagefilename",{"_index":525,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.storageprovider",{"_index":529,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.student",{"_index":2683,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.students",{"_index":949,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":953,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":1129,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.task",{"_index":2687,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.teachers",{"_index":951,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":1123,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.type",{"_index":3777,"title":{},"body":{"entities/System.html":{}}}],["props.untildate",{"_index":957,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.updater",{"_index":1128,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.url",{"_index":3778,"title":{},"body":{"entities/System.html":{}}}],["props.user",{"_index":2582,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["props.userid",{"_index":1398,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/UserMatchResponse.html":{}}}],["propsfactory",{"_index":398,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["protect",{"_index":4640,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":397,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4824,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4868,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":5007,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prototype",{"_index":55,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["prove",{"_index":5228,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1977,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ValidationModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":326,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":3053,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provides",{"_index":3048,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":877,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":5020,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5066,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5215,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5217,"title":{},"body":{"license.html":{}}}],["public",{"_index":73,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":5035,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4669,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4860,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1227,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"controllers/UserController.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":4545,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4456,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":4958,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5159,"title":{},"body":{"license.html":{}}}],["put",{"_index":5307,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":6104,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qs",{"_index":4385,"title":{},"body":{"dependencies.html":{}}}],["qualify",{"_index":5079,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5226,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":3394,"title":{},"body":{"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":3398,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":975,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/ImportUserController.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query('x",{"_index":1275,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query('y",{"_index":1276,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query.targetid",{"_index":3308,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":3306,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":3310,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":6081,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":3639,"title":{},"body":{"classes/Scope.html":{}}}],["queryoptions",{"_index":1176,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["queryordermap",{"_index":1156,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":3706,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["r.id",{"_index":5561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq",{"_index":3068,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":3066,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":3076,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":3073,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":2269,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["react",{"_index":4323,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":2281,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4904,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readcourseids",{"_index":3844,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses",{"_index":3839,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses.map((c",{"_index":3845,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readdir",{"_index":2254,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":2276,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":2255,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":2279,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5148,"title":{},"body":{"license.html":{}}}],["reading",{"_index":5011,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readlessons",{"_index":3850,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readonly",{"_index":71,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BusinessError.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["ready",{"_index":6132,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6312,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":924,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["reason",{"_index":5157,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4920,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5077,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4633,"title":{},"body":{"license.html":{}}}],["received",{"_index":4884,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5095,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5163,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4991,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5155,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":253,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4750,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6441,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6435,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6433,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["record",{"_index":30,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recursively",{"_index":2289,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/PermissionService.html":{}}}],["red",{"_index":5336,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":2989,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":2996,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5265,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4473,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1652,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["refactoring",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refer",{"_index":6114,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":1116,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.create(props.school",{"_index":2589,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["reference.create(props.system",{"_index":2591,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["reference.getmetadata",{"_index":1375,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenced",{"_index":1119,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":1353,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceforindex",{"_index":1441,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceids",{"_index":1458,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["referencemodels",{"_index":1582,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["references",{"_index":1364,"title":{},"body":{"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"classes/UserMatch.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["references[position.groupindex",{"_index":1442,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referring",{"_index":4629,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4684,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4389,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":6121,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5192,"title":{},"body":{"license.html":{}}}],["regard",{"_index":5016,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4521,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4880,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regenerate",{"_index":4792,"title":{},"body":{"license.html":{}}}],["regex",{"_index":5496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["region",{"_index":2235,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["registernewuser(creatorid",{"_index":6154,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["regularfiles",{"_index":2360,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["reimplement",{"_index":6342,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5065,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6352,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["related",{"_index":1230,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6137,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6421,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":2784,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{}}}],["relative",{"_index":1860,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":6329,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4676,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4666,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4873,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4677,"title":{},"body":{"license.html":{}}}],["relies",{"_index":6095,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5354,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5147,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4938,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4627,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5194,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5196,"title":{},"body":{"license.html":{}}}],["removal",{"_index":5017,"title":{},"body":{"license.html":{}}}],["remove",{"_index":539,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DeleteFilesConsole.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/StorageProviderRepo.html":{},"entities/System.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":556,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall",{"_index":540,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall(entities",{"_index":558,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush",{"_index":541,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush(entities",{"_index":560,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush",{"_index":542,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush(entity",{"_index":562,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removed",{"_index":2013,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["removedeletedfilesdata",{"_index":1983,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsince",{"_index":2010,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsincedays",{"_index":1987,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedirrecursive",{"_index":2256,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":2286,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedsince",{"_index":2000,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedsince.setdate(removedsince.getdate",{"_index":2001,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedsincedays",{"_index":1994,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removefromposition",{"_index":1294,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removefromposition(position",{"_index":1332,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removegroupmoderator(groupname",{"_index":103,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["removematch",{"_index":2821,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["removematch(importuserid",{"_index":2826,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["removereference",{"_index":2488,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereference(reference",{"_index":1349,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereferencebyindex",{"_index":2489,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereferencebyindex(index",{"_index":1348,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removeroomsnotinlist",{"_index":1295,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removeroomsnotinlist(roomlist",{"_index":1334,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removes",{"_index":2288,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rename",{"_index":2711,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["renamegroupondashboard",{"_index":1667,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["renamegroupondashboard(dashboardid",{"_index":1674,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["rendered",{"_index":4467,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":5233,"title":{},"body":{"license.html":{}}}],["repeats",{"_index":3114,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":5357,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replacing",{"_index":6187,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5341,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":256,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":5372,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec",{"_index":1184,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["repo.integration.spec.js",{"_index":6319,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":6024,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reponse",{"_index":6403,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["report",{"_index":1726,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6334,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":5318,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4487,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4976,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6369,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6371,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request",{"_index":2175,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6398,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6389,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user.user",{"_index":5325,"title":{},"body":{"todo.html":{}}}],["request/response",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":4167,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":3120,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":2912,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":4174,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":4786,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":2991,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":2924,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":2373,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":2303,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":5527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1720,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["requiredpermissions",{"_index":3461,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4874,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4940,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":2212,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4697,"title":{},"body":{"license.html":{}}}],["reset",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3521,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolved",{"_index":4965,"title":{},"body":{"license.html":{}}}],["resolveduser",{"_index":3537,"title":{"classes/ResolvedUser.html":{}},"body":{"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{}}}],["resolvedusermapper",{"_index":3547,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":4216,"title":{},"body":{"controllers/UserController.html":{}}}],["resolvepermissions",{"_index":3517,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissions(user",{"_index":3519,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissionsbyroles",{"_index":3518,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":3526,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolves",{"_index":3341,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":6330,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4849,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5368,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":3206,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":38,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6390,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":2454,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":6019,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response?.data",{"_index":152,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["response].ts",{"_index":6018,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsejson",{"_index":164,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.authtoken",{"_index":166,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.userid",{"_index":165,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responses",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":6079,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5096,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":6101,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":5566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ressources",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5369,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":2041,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restricted",{"_index":2024,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["restricting",{"_index":4843,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5052,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":5050,"title":{},"body":{"license.html":{}}}],["result",{"_index":640,"title":{},"body":{"interfaces/Board.html":{},"controllers/CourseController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementService.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/NewsScope.html":{},"injectables/RoomsUc.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.push(room",{"_index":1426,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["result.query",{"_index":3640,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":5435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.sort",{"_index":641,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["resultelement",{"_index":1406,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["resulting",{"_index":4660,"title":{},"body":{"license.html":{}}}],["results",{"_index":172,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4995,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":3210,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":78,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":428,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["returning",{"_index":3904,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["returns",{"_index":199,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":6033,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":4457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reverted",{"_index":4474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reviewers",{"_index":4571,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5254,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5202,"title":{},"body":{"license.html":{}}}],["rewindsequence",{"_index":407,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["rich",{"_index":6120,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":4989,"title":{},"body":{"license.html":{}}}],["rights",{"_index":4641,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2302,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":2318,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5225,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3573,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocket_chat_options",{"_index":3575,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocketchat",{"_index":39,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchaterror",{"_index":32,"title":{"classes/RocketChatError.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror(e",{"_index":150,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror.prototype",{"_index":58,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatmodule",{"_index":3569,"title":{"modules/RocketChatModule.html":{}},"body":{"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{}}}],["rocketchatmodule.forroot",{"_index":3695,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["rocketchatoptions",{"_index":23,"title":{"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatservice",{"_index":68,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["role",{"_index":2528,"title":{"entities/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":2794,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["role.id",{"_index":3564,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.name",{"_index":3563,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role/permissions",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolefactory",{"_index":5448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roleidbasedsearches",{"_index":2796,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":4203,"title":{},"body":{"entities/User.html":{}}}],["rolename",{"_index":2562,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["rolenameresponse",{"_index":2868,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"miscellaneous/enumerations.html":{}}}],["rolenames",{"_index":2560,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["rolerepo",{"_index":3582,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{}}}],["roles",{"_index":2525,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/TaskUC.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserMatch.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.map((role",{"_index":3562,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["rolesandpermissions",{"_index":3532,"title":{},"body":{"injectables/PermissionService.html":{}}}],["rom",{"_index":4998,"title":{},"body":{"license.html":{}}}],["room",{"_index":678,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/DashboardEntity.html":{},"injectables/RoomsUc.html":{}}}],["room.getmetadata",{"_index":621,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roomboardresponse",{"_index":658,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["roomid",{"_index":579,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{}}}],["roomlist",{"_index":1336,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["roomlist.includes(room",{"_index":1418,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["roommetadata",{"_index":620,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.displaycolor",{"_index":623,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.id",{"_index":622,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.title",{"_index":624,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roomname",{"_index":93,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rooms",{"_index":1309,"title":{},"body":{"classes/DashboardEntity.html":{},"controllers/RoomsController.html":{}}}],["rooms.foreach((room",{"_index":1424,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["roomscontroller",{"_index":3003,"title":{"controllers/RoomsController.html":{}},"body":{"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["roomsuc",{"_index":593,"title":{"injectables/RoomsUc.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"overview.html":{}}}],["root",{"_index":368,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"controllers/UserController.html":{},"index.html":{}}}],["rootdir",{"_index":5491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roots",{"_index":5519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roughly",{"_index":6339,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1962,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":4512,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routingkey",{"_index":3072,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["royalty",{"_index":5112,"title":{},"body":{"license.html":{}}}],["rss",{"_index":1104,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6141,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":5006,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":4507,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":4161,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":4499,"title":{},"body":{"index.html":{},"license.html":{}}}],["runtime",{"_index":6302,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":2051,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":21,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2230,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["s3client",{"_index":2226,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["safest",{"_index":5267,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4529,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5121,"title":{},"body":{"license.html":{}}}],["same",{"_index":3707,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":2146,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":2207,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6307,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":6053,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6308,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6191,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":4461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitize",{"_index":4397,"title":{},"body":{"dependencies.html":{}}}],["sanitizer",{"_index":5310,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":335,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":325,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4936,"title":{},"body":{"license.html":{}}}],["sc",{"_index":4551,"title":{},"body":{"index.html":{}}}],["scans",{"_index":1854,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schedules",{"_index":2012,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["schema",{"_index":933,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":6022,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":6023,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":888,"title":{"entities/School.html":{}},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school.entity",{"_index":921,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["school.factory",{"_index":1013,"title":{},"body":{"classes/CourseFactory.html":{}}}],["schoolfactory",{"_index":1012,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":1024,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolid",{"_index":901,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolinfo",{"_index":3622,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":3623,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":3624,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":3285,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":3290,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":3259,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{}}}],["schoolnews",{"_index":1143,"title":{"entities/SchoolNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":1142,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["schoolnewsfactory",{"_index":5451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schools",{"_index":2516,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"entities/School.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schould",{"_index":1224,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2078,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1973,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope",{"_index":1157,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ImportUserController.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(allforcreator.query",{"_index":3989,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(allforfinishedcoursesandlessons.query",{"_index":3988,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(closedforopencoursesandlessons.query",{"_index":3987,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(parentidscope.query",{"_index":4002,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":4009,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byavailable(filters?.availableon",{"_index":4013,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids([courseid",{"_index":4016,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":3024,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(false",{"_index":4007,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byfinished(filters.finished.userid",{"_index":4004,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":3026,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":3349,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":3350,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.excludedraftsofothers(creatorid",{"_index":4018,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.excludedraftsofothers(parentids.creatorid",{"_index":4006,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.excludeunavailableofothers(parentids.creatorid",{"_index":4011,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.foractivecourses",{"_index":1173,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forallgrouptypes(userid",{"_index":1171,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forcourseid(courseid",{"_index":1186,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forteacher(userid",{"_index":1185,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.nofutureavailabledate",{"_index":4020,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.query",{"_index":1182,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{}}}],["scope.request",{"_index":2199,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":3470,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":4145,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":4146,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":3042,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":3030,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:10",{"_index":3036,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:16",{"_index":4059,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:23",{"_index":3392,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:24",{"_index":4051,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:30",{"_index":4049,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:38",{"_index":4057,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:44",{"_index":4053,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":3034,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:51",{"_index":4061,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:59",{"_index":4048,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:6",{"_index":4055,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:65",{"_index":4068,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:72",{"_index":4063,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:8",{"_index":3390,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:82",{"_index":4046,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:88",{"_index":4067,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:94",{"_index":4065,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope:11",{"_index":1195,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":1204,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":1197,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":3467,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":3449,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scoped",{"_index":3829,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopeid",{"_index":2153,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":1194,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopepermission",{"_index":3827,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopepermissions",{"_index":3826,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopes",{"_index":3211,"title":{},"body":{"controllers/NewsController.html":{}}}],["scripts",{"_index":4775,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4290,"title":{},"body":{"dependencies.html":{}}}],["sdk/client",{"_index":2229,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["search",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchuserforschool",{"_index":2797,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":4205,"title":{},"body":{"entities/User.html":{}}}],["second",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4705,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4649,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2922,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretaccesskey",{"_index":2241,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":2968,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":4821,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4901,"title":{},"body":{"license.html":{}}}],["security",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":211,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"classes/LessonFactory.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TaskFactory.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1711,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1699,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1710,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1825,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1857,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1915,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1936,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seems",{"_index":5358,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5333,"title":{},"body":{"todo.html":{}}}],["self",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5137,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5120,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4686,"title":{},"body":{"license.html":{}}}],["send",{"_index":3085,"title":{},"body":{"injectables/MailService.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":3090,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sends",{"_index":6163,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":2120,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":5313,"title":{},"body":{"todo.html":{}}}],["sentry/node",{"_index":4278,"title":{},"body":{"dependencies.html":{}}}],["separable",{"_index":4947,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3046,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4556,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":4883,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6179,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4497,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4496,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":408,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["sequence}@example.com",{"_index":5586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serialization",{"_index":2060,"title":{},"body":{"classes/EncryptedStringType.html":{},"todo.html":{}}}],["serialize",{"_index":790,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":803,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":6429,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":352,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["serializes",{"_index":805,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4399,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1974,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":3666,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":3686,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["server/overview.html",{"_index":5361,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5331,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":3646,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["serverconsolemodule",{"_index":3658,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":3667,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["servererrortypes",{"_index":5452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6185,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":3670,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servermodules",{"_index":3690,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["servers",{"_index":4661,"title":{},"body":{"license.html":{}}}],["servertestmodule",{"_index":3712,"title":{"modules/ServerTestModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{}}}],["serves",{"_index":4765,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":859,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":2156,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6349,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":6073,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":2152,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":2181,"title":{},"body":{"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":2184,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:13",{"_index":2192,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:19",{"_index":2190,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:33",{"_index":2216,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:36",{"_index":2217,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":6026,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":2174,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5232,"title":{},"body":{"license.html":{}}}],["set",{"_index":54,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradeduserids",{"_index":2747,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["set(permissions",{"_index":3536,"title":{},"body":{"injectables/PermissionService.html":{}}}],["set(submitteduserids",{"_index":2736,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["setcontext",{"_index":3054,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupname",{"_index":2490,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setgroupname(newgroupname",{"_index":1352,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setlearnrooms",{"_index":1296,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["setlearnrooms(rooms",{"_index":1337,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["sets",{"_index":6315,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":4171,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1971,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5476,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["settings",{"_index":6080,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1718,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":5453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1912,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setuserstatus(authtoken",{"_index":81,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["setversion('3.0",{"_index":5538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4827,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4621,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":4782,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":224,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":656,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":3254,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":6041,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":328,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"todo.html":{}}}],["shared/domain/entity",{"_index":3893,"title":{},"body":{"classes/TaskFactory.html":{}}}],["shared/domain/entity/base.entity",{"_index":1465,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["shared/domain/interface",{"_index":917,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{}}}],["shared/domain/types",{"_index":1341,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"injectables/NewsUc.html":{}}}],["shared/infra/console",{"_index":3107,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1714,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1869,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/infra/database/mongo",{"_index":3683,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/infra/feathers",{"_index":296,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/FeathersAuthProvider.html":{}}}],["shared/infra/file",{"_index":1867,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/filestorage",{"_index":2333,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesRepo.html":{}}}],["shared/infra/mail",{"_index":3676,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/pipes",{"_index":6066,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/Board.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/JwtStrategy.html":{},"modules/LearnroomModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["shared/repo/base.repo",{"_index":3346,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/repo/types/encryptedstring.type",{"_index":2650,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["shared/utils",{"_index":6042,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":6062,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":6045,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shit",{"_index":925,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":1076,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4365,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":1072,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["show",{"_index":3420,"title":{},"body":{"injectables/NewsUc.html":{}}}],["shows",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5284,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4977,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4673,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5376,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4522,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6385,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5187,"title":{},"body":{"license.html":{}}}],["single",{"_index":1722,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":2268,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["sizetype",{"_index":1484,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["skip",{"_index":992,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":2477,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{}}}],["slash",{"_index":5366,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1924,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6438,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":2418,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4402,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["software",{"_index":4598,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4959,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4806,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4818,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6399,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5280,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["something",{"_index":6192,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["somewhere",{"_index":589,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["sort",{"_index":1944,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sortedbsondocuments",{"_index":1946,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":3945,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sorting.ts",{"_index":5327,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1211,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":1684,"title":{},"body":{"injectables/DashboardUc.html":{},"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":1213,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":2543,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sortreferences",{"_index":1357,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":6009,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":1105,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["sources",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":3264,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4917,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4628,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5494,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":5009,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":40,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4612,"title":{},"body":{"license.html":{}}}],["specification",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":6103,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5211,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3146,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":849,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5203,"title":{},"body":{"license.html":{}}}],["split",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":6345,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6336,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6420,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5503,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":3108,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core",{"_index":3679,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/core/error/dto/error.response",{"_index":828,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":829,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1995,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/FilesModule.html":{},"classes/GlobalErrorFilter.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["src/core/logger/logger.service",{"_index":2015,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":978,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization",{"_index":2887,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":3436,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6323,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/files",{"_index":3682,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/learnroom",{"_index":3678,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/news",{"_index":3681,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/rocketchat",{"_index":3677,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/task",{"_index":3680,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/user",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["stable",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":2433,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["standard",{"_index":4748,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4751,"title":{},"body":{"license.html":{}}}],["start",{"_index":1077,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["startdate",{"_index":889,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["started",{"_index":4480,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4490,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":2420,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":6186,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":5269,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stated",{"_index":4797,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5054,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":5514,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["static",{"_index":405,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/LessonFactory.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"entities/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4862,"title":{},"body":{"license.html":{}}}],["status",{"_index":82,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.mapper",{"_index":3912,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.mapper.ts",{"_index":4076,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.mapper.ts:5",{"_index":4077,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.response",{"_index":3903,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{}}}],["status.response.ts",{"_index":4081,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:14",{"_index":4088,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:17",{"_index":4087,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:20",{"_index":4083,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:23",{"_index":4084,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:26",{"_index":4086,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:29",{"_index":4085,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:3",{"_index":4082,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["statuscode",{"_index":36,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["statusdto",{"_index":3915,"title":{},"body":{"classes/TaskMapper.html":{}}}],["stay",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6173,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4643,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":6109,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":3164,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["storage",{"_index":4892,"title":{},"body":{"license.html":{}}}],["storagefilename",{"_index":508,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["storageprovider",{"_index":504,"title":{"entities/StorageProvider.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storageprovider.accesskeyid",{"_index":2240,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.endpointurl",{"_index":2233,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.entity",{"_index":505,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageprovider.region",{"_index":2236,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.secretaccesskey",{"_index":2242,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient",{"_index":2243,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient.send(deletioncommand",{"_index":2246,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderfactory",{"_index":5455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderfactory.build",{"_index":5556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderid",{"_index":519,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageproviderrepo",{"_index":2331,"title":{"injectables/StorageProviderRepo.html":{}},"body":{"modules/FilesModule.html":{},"injectables/StorageProviderRepo.html":{},"overview.html":{}}}],["storageproviders",{"_index":2651,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["store",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":6338,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":5395,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":2959,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["strict",{"_index":6400,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["strictly",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":2088,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/Logger.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":3253,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4406,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":2178,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6440,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":6003,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":3052,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5324,"title":{},"body":{"todo.html":{}}}],["student",{"_index":2580,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["studentdashboard",{"_index":3824,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":2666,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["studentid",{"_index":2675,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["students",{"_index":890,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["studio",{"_index":4542,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4583,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sub",{"_index":2937,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5102,"title":{},"body":{"license.html":{}}}],["subelements",{"_index":1493,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":246,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5133,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4820,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2672,"title":{"entities/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":2702,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.isgraded",{"_index":2744,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.student.id",{"_index":2734,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submissionfactory",{"_index":3733,"title":{"classes/SubmissionFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionfactory.define(submission",{"_index":3740,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionrepo",{"_index":3743,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{}}}],["submissions",{"_index":2671,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitted",{"_index":775,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids",{"_index":2732,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids.length",{"_index":2739,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["subpermissions",{"_index":3534,"title":{},"body":{"injectables/PermissionService.html":{}}}],["subprograms",{"_index":4785,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4926,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":4972,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5100,"title":{},"body":{"license.html":{}}}],["substitutionids",{"_index":908,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":891,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["succeed",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["successfully",{"_index":2034,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":1693,"title":{},"body":{"injectables/DashboardUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5145,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4982,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":315,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5375,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5299,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["super",{"_index":205,"title":{},"body":{"classes/ApiValidationError.html":{},"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"entities/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatch.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(e.response.statustext",{"_index":53,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["super(em",{"_index":2356,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["super(total",{"_index":1081,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["super(type",{"_index":227,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["supertest",{"_index":6297,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":5012,"title":{},"body":{"license.html":{}}}],["support",{"_index":2930,"title":{},"body":{"interfaces/JwtConstants.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":2939,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":463,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["supportuserid",{"_index":2931,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":3525,"title":{},"body":{"injectables/PermissionService.html":{},"license.html":{}}}],["surrender",{"_index":5182,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5053,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5246,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5288,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4333,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symetrickeyencryptionservice",{"_index":2070,"title":{"injectables/SymetricKeyEncryptionService.html":{}},"body":{"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["symetrickeyencryptionservice(configuration.get('s3_key",{"_index":2084,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symetrickeyencryptionservice(customkey",{"_index":2083,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symmetric_cipher_key",{"_index":2104,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["symmetriccipherkey",{"_index":2103,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["sync",{"_index":2895,"title":{},"body":{"modules/ImportUserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["syntax",{"_index":2025,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["system",{"_index":1868,"title":{"entities/System.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/ManagementModule.html":{},"entities/System.html":{},"classes/UserMatch.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":2326,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":2249,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":2259,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":2297,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":2261,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":2277,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":2292,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":2280,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":2264,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":2287,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":2275,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.entity",{"_index":2565,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["system.module.ts",{"_index":2325,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":2248,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["systems",{"_index":2265,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/System.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":426,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/CourseFactory.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LessonFactory.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1952,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["tablename",{"_index":940,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["take",{"_index":4519,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["takes",{"_index":6098,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":5474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":4953,"title":{},"body":{"license.html":{}}}],["tap",{"_index":2052,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":1093,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":2161,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":3785,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":3786,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":3397,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":3475,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":3395,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":3396,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":1233,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":1446,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetelement.addreferences(element.getreferences",{"_index":1447,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetfolder",{"_index":1847,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":311,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":2159,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":3287,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":3289,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":3261,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{}}}],["targetmodel",{"_index":309,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":3432,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":3471,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":2151,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":2155,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":3474,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":2160,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":582,"title":{"entities/Task.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/RoomsUc.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":4104,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":3923,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":3859,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.createdat",{"_index":3920,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createstudentstatusforuser(user",{"_index":632,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["task.createteacherstatusforuser(user",{"_index":630,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["task.creator",{"_index":3857,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.duedate",{"_index":3925,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2670,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["task.factory",{"_index":3737,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["task.getdescriptions",{"_index":3914,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":3917,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":3918,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":3921,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":3823,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":3825,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":3798,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskcontroller",{"_index":3866,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["taskcourse",{"_index":716,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskcourse.name",{"_index":719,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskdashboardpermission",{"_index":3818,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":4107,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":4106,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":3913,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":3927,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.description",{"_index":3929,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":3919,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":4021,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskfactory",{"_index":3736,"title":{"classes/TaskFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.build",{"_index":3741,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.define(task",{"_index":3896,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfilter",{"_index":599,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskfilter(isteacher",{"_index":613,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskids",{"_index":3752,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["tasklistresponse",{"_index":3875,"title":{"classes/TaskListResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["tasklistresponse(taskresponses",{"_index":3885,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper",{"_index":3876,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{}}}],["taskmapper.maptoresponse(task",{"_index":3888,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":3884,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":3673,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskparentdescriptions",{"_index":2704,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":3809,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":3834,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":3832,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":587,"title":{"injectables/TaskRepo.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskresponse",{"_index":3899,"title":{"classes/TaskResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["taskresponses",{"_index":3882,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":603,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/RoomsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":629,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["taskscope",{"_index":3952,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["taskscope('$or",{"_index":3957,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskstatus",{"_index":659,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.mapper",{"_index":702,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskstatus.mapper.ts",{"_index":763,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.mapper.ts:5",{"_index":766,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.ts",{"_index":770,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:13",{"_index":781,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:16",{"_index":780,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:19",{"_index":777,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:22",{"_index":778,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:25",{"_index":779,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:3",{"_index":776,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatusmapper",{"_index":3911,"title":{"classes/TaskStatusMapper.html":{}},"body":{"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["taskstatusmapper.maptoresponse(status",{"_index":3916,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskstatusresponse",{"_index":3902,"title":{"classes/TaskStatusResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{}}}],["taskstatusresponse(status",{"_index":4079,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["taskswithstatus",{"_index":3880,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((task",{"_index":3887,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":3883,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatusvos",{"_index":606,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskuc",{"_index":3873,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":3910,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":583,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["taskwithstatusvo(task",{"_index":631,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["taskwithstatusvos",{"_index":4115,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":2581,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Submission.html":{},"injectables/TaskRepo.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacherdashboard",{"_index":3822,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":2707,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["teacherids",{"_index":910,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":892,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["team",{"_index":1096,"title":{"entities/Team.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":1097,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["teamfactory",{"_index":5460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamfactory.build",{"_index":5553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamid",{"_index":4141,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":2667,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":1144,"title":{"entities/TeamNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":1141,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["teamnewscontroller",{"_index":3322,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{}}}],["teamnewsfactory",{"_index":5462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teams",{"_index":2517,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"entities/Team.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5340,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":2398,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4830,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4735,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2266,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":139,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":4795,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5059,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5078,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5068,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5056,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4517,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1963,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskFactory.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1976,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1959,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1961,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6131,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":4147,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{}}}],["testcase",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":1183,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":5516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":2914,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["testingmodule",{"_index":1965,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6324,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6333,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6327,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6326,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6325,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":365,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":852,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":6060,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":6043,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":6061,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":366,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["therefore",{"_index":4668,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":4638,"title":{},"body":{"license.html":{}}}],["think",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4855,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this(entityclass",{"_index":470,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this._email",{"_index":2573,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this._id",{"_index":1469,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this._operator",{"_index":3641,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":3643,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":3642,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":3645,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":3644,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":4182,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.accesskeyid",{"_index":2654,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.addquery",{"_index":1161,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":3401,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":3402,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":4071,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.addroom(room",{"_index":1413,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.addstatustotasks(isteacher",{"_index":607,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.adminidandtoken",{"_index":157,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.alias",{"_index":3781,"title":{},"body":{"entities/System.html":{}}}],["this.allrooms",{"_index":1423,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":3094,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":2935,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":3463,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6156,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":3442,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":3476,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(user",{"_index":4108,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":3472,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedlessons(user",{"_index":4109,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hasoneoftaskdashboardpermissions(user",{"_index":4105,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hastaskpermission(user",{"_index":4116,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.availabledate",{"_index":2713,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.basepath",{"_index":1875,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1920,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1943,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bucket",{"_index":526,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.build(params",{"_index":473,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.buildboard(course",{"_index":612,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.buildboardelements(taskswithstatusvos",{"_index":611,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.byuseridquery(userid",{"_index":3755,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":3594,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.classnames",{"_index":2876,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.classnames.push(...props.classnames",{"_index":2607,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.clone(newpropsfactory",{"_index":481,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.code",{"_index":834,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":956,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":1387,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.comment",{"_index":2684,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":3656,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":3657,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1728,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.constructor",{"_index":488,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.content",{"_index":670,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.course",{"_index":1035,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course._id",{"_index":1038,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":2789,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getnumberofstudents",{"_index":2759,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.name",{"_index":2787,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.substitutionteachers.contains(user",{"_index":2769,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course?.isfinished",{"_index":2725,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.coursename",{"_index":3906,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.courserepo.findallbyuserid",{"_index":1683,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.courserepo.findallbyuserid(user.id",{"_index":3835,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallbyuserid(userid",{"_index":1212,"title":{},"body":{"injectables/CourseUc.html":{}}}],["this.courserepo.findallforteacher(user.id",{"_index":3833,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findone(roomid",{"_index":596,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.courseuc.findallbyuser(currentuser.userid",{"_index":988,"title":{},"body":{"controllers/CourseController.html":{}}}],["this.createdat",{"_index":662,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.createerrorresponse(error",{"_index":2453,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creategridelement(elementwithposition",{"_index":1607,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.creator",{"_index":530,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.dashboard",{"_index":1474,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1687,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard(userid",{"_index":1682,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1686,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard(currentuser.userid",{"_index":1268,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard",{"_index":1271,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.renamegroupondashboard",{"_index":1277,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":1082,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1929,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1927,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1930,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1942,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1882,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1933,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1757,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1759,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1733,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1754,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1756,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1725,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1796,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1814,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1815,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1806,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.deletedat",{"_index":522,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.deletefilesuc.removedeletedfilesdata(removedsince",{"_index":2002,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.description",{"_index":946,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":836,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.determinenewroomsin(rooms",{"_index":1411,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.displayat",{"_index":1125,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.displaycolor",{"_index":676,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.duedate",{"_index":2715,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.elements",{"_index":677,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["this.em.find(basefile",{"_index":2359,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.find(coursegroup",{"_index":3757,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(course",{"_index":1181,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":1048,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(lesson",{"_index":3027,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(news",{"_index":3357,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":3754,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":3990,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardgridelementmodel",{"_index":1609,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1630,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(course",{"_index":1187,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1658,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":3354,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":3593,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(storageprovider",{"_index":3723,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":1632,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":571,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1795,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":565,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1654,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":569,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":566,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1656,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":3366,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(lessons",{"_index":3028,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.populate(newsentities",{"_index":3358,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":3355,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(regularfiles",{"_index":2363,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":3364,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":4022,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(tasks",{"_index":3991,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":3365,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(user",{"_index":4248,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.remove(el",{"_index":1629,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.remove(entity",{"_index":572,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":573,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":2600,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["this.encoding",{"_index":2306,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.encryptionservice",{"_index":2082,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.decrypt(value",{"_index":2094,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.encrypt(value",{"_index":2091,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.endpointurl",{"_index":2652,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.entityclass",{"_index":489,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.entityclass(props",{"_index":472,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.errortype",{"_index":66,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.externalid",{"_index":1130,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":343,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":344,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":332,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":333,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":2162,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":2150,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":2154,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":6072,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesrepo.deletefile(file",{"_index":2028,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filesrepo.findallfilesforcleanup(removedsince",{"_index":2018,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filestorageadapter.deletefile(file",{"_index":2365,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1938,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1955,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1874,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1890,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1885,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1876,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1888,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1917,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1954,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(user",{"_index":4119,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(user",{"_index":4120,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findexistinggridelement(elementwithposition",{"_index":1603,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.findnewsandcount(scope.query",{"_index":3352,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":4015,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.finished.set(props.finished",{"_index":2722,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.finished?.contains(user",{"_index":2724,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.firstname",{"_index":2596,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["this.flagged",{"_index":2611,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.get('/api/v1/me",{"_index":79,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.get(path",{"_index":135,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getadminidandtoken",{"_index":130,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.members?roomname=${groupname",{"_index":108,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.moderators?roomname=${groupname",{"_index":106,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/users.list?${querystring",{"_index":90,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getbydraftforcreatorquery(creatorid",{"_index":4072,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(false",{"_index":4073,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(isdraft",{"_index":4070,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(true",{"_index":4074,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getcollectionnames",{"_index":1812,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1797,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":4123,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getelement(position",{"_index":1436,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getentitypermissions(userid",{"_index":337,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstopenindex",{"_index":1431,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getgradeduserids",{"_index":2749,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getgradeduserids().some((uid",{"_index":2775,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getid",{"_index":1380,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getmaxsubmissions",{"_index":2763,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnewspermissions(userid",{"_index":3456,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getnumberofgradedusers",{"_index":2762,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnumberofsubmittedusers",{"_index":2761,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getorconstructdashboardmodelentity(entity",{"_index":1622,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.getparent",{"_index":2753,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getpermittedtargets(userid",{"_index":3451,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getreferencesfromposition(from",{"_index":1405,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getseedfolder",{"_index":1877,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getsubmissionitems",{"_index":2742,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmissionitems().map((submission",{"_index":2733,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids",{"_index":2738,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids().some((uid",{"_index":2771,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.gettargetfilters(userid",{"_index":3469,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1937,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":2145,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":2688,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradecomment",{"_index":2690,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradecomment.length",{"_index":2693,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.graded",{"_index":784,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.gradefiles",{"_index":2694,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradefiles.length",{"_index":2695,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.grid",{"_index":1393,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(key",{"_index":1421,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(this.gridindexfromposition(position",{"_index":1445,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(i",{"_index":1435,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(key",{"_index":1401,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(this.gridindexfromposition(position",{"_index":1402,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].foreach((key",{"_index":1414,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].map((key",{"_index":1399,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(index",{"_index":1434,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":1395,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(position",{"_index":1448,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.values",{"_index":1427,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.gridelements",{"_index":1505,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.gridelements.set(props.gridelements",{"_index":1482,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.groupelements",{"_index":1504,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.groupid",{"_index":1503,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.hascoursereadpermission(user",{"_index":3860,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hascoursewritepermission(user",{"_index":3838,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hidden",{"_index":668,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["this.httpservice",{"_index":137,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.id",{"_index":660,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{}}}],["this.importuserid",{"_index":2870,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.isdirectory",{"_index":521,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.isdraft",{"_index":785,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isfinished",{"_index":4089,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["this.isfinishedforuser(user",{"_index":2764,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgradedforuser(user",{"_index":2779,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgroup",{"_index":1372,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.issubmittedforuser(user",{"_index":2778,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.issubstitutionteacher",{"_index":786,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.issubstitutionteacher(userid",{"_index":2767,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isteacher(user",{"_index":598,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.joinpath(os.tmpdir",{"_index":2311,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":2973,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.key).tostring",{"_index":3769,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.key).tostring(cryptojs.enc.utf8",{"_index":3771,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.lastname",{"_index":2598,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["this.ldapdn",{"_index":2592,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.ldapid",{"_index":2594,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.lesson",{"_index":2719,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lesson.name",{"_index":2788,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lessonfilter(isteacher",{"_index":602,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.lessonrepo.findallbycourseids([course.id",{"_index":609,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.lessonrepo.findallbycourseids(readcourseids",{"_index":3852,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.lessonrepo.findallbycourseids(writecourseids",{"_index":3851,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.limit",{"_index":3503,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1897,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1896,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1914,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":1997,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/NewsUc.html":{}}}],["this.logger.error('the",{"_index":2035,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.error(err",{"_index":2032,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log('cleanup",{"_index":2003,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`${numberoffiles",{"_index":2021,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log(`cleanup",{"_index":1999,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`create",{"_index":3440,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6193,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":3447,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":3457,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":3448,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6166,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(deletefilesuc.name",{"_index":2016,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6190,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":2053,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":2056,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.loginname",{"_index":2872,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.mapelementtoentity(e",{"_index":1595,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapgridelementtomodel(elementwithposition",{"_index":1625,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapper.mapdashboardtoentity(dashboardmodel",{"_index":1659,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtoentity(modelentity",{"_index":1655,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtomodel(entity",{"_index":1653,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.maptoresponse(board",{"_index":3604,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.mapreferencetoentity(ref",{"_index":1585,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapreferencetomodel(ref",{"_index":1619,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.match",{"_index":2609,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatch.html":{}}}],["this.matchedby",{"_index":2583,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{}}}],["this.maxsubmissions",{"_index":783,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.mergeelementintoposition(elementtomove",{"_index":1407,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.message",{"_index":835,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":3167,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":661,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":3454,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":3459,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":3446,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":3466,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":3225,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":3241,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":3230,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":3237,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":3238,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.adminid",{"_index":158,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminpassword",{"_index":163,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.admintoken",{"_index":159,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminuser",{"_index":162,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.module",{"_index":4152,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":3095,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.options.uri",{"_index":169,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.orm.close",{"_index":3166,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.params(params",{"_index":1020,"title":{},"body":{"classes/CourseFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["this.permissions",{"_index":2642,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{}}}],["this.permissionservice.resolvepermissions(user",{"_index":3861,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"controllers/UserController.html":{}}}],["this.persistandflush(dashboard",{"_index":1661,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.populateroles(user.roles.getitems",{"_index":4249,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":1400,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.post('/api/v1/logout",{"_index":88,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post('/api/v1/users.setstatus",{"_index":83,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post(path",{"_index":131,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.addmoderator",{"_index":102,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.archive",{"_index":96,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.create",{"_index":113,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.delete",{"_index":116,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.invite",{"_index":100,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.kick",{"_index":98,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.removemoderator",{"_index":104,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.unarchive",{"_index":92,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.create",{"_index":120,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.createtoken",{"_index":86,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.delete",{"_index":125,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.private",{"_index":2718,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.propertiestopopulate",{"_index":2364,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["this.propsfactory",{"_index":468,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.afterbuild(afterbuildfn",{"_index":479,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.associations(associations",{"_index":482,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.build(params",{"_index":471,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.params(params",{"_index":483,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.rewindsequence",{"_index":485,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.transient(transient",{"_index":484,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory['sequence",{"_index":492,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.references",{"_index":1366,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.length",{"_index":1374,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.set(references",{"_index":1473,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.region",{"_index":2658,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.removeandflush(file",{"_index":2366,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.removefromposition(from",{"_index":1408,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.removeroomsnotinlist(rooms",{"_index":1409,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.request.app.get('feathersapp",{"_index":2203,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.resolvepermissionsbyroles(innerroles",{"_index":3535,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.resolvepermissionsbyroles(user.roles.getitems",{"_index":3533,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.response",{"_index":64,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.rolenames",{"_index":2874,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.rolenames.push(...props.rolenames",{"_index":2604,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.roles.set(props.roles",{"_index":2644,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["this.roomid",{"_index":674,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["this.roomsuc.getboard(roomid",{"_index":3603,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.school",{"_index":947,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/User.html":{},"classes/UserMatch.html":{}}}],["this.secretaccesskey",{"_index":2656,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.shorttitle",{"_index":1073,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.skip",{"_index":3502,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":1132,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.sourcedescription",{"_index":1134,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":861,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.startdate",{"_index":960,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.status",{"_index":664,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.statuscode",{"_index":61,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.storagefilename",{"_index":524,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.storageprovider",{"_index":528,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.student",{"_index":2682,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.student.id",{"_index":2697,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.students.length",{"_index":962,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":950,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.getitems",{"_index":2730,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.isinitialized(true",{"_index":2727,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.set(props.submissions",{"_index":2721,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submitted",{"_index":782,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":954,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.system",{"_index":2590,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.target",{"_index":3268,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetid",{"_index":3267,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetmodel",{"_index":3266,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.task",{"_index":2686,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskfilter(isteacher",{"_index":600,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":4125,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallfinishedbyparentids",{"_index":4114,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findbysingleparent(user.id",{"_index":604,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.taskuc.findall(currentuser.userid",{"_index":3881,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallfinished(currentuser.userid",{"_index":3886,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teachers.set(props.teachers",{"_index":952,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5335,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":675,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.title.substr(0",{"_index":1377,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.total",{"_index":3501,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":669,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"entities/System.html":{}}}],["this.untildate",{"_index":958,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.updatedat",{"_index":663,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.updateexistinggridelement(existing",{"_index":1605,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.updater",{"_index":3269,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.url",{"_index":3779,"title":{},"body":{"entities/System.html":{}}}],["this.user",{"_index":1479,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6165,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userid",{"_index":1397,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/UserMatchResponse.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6170,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":4215,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userrepo.findbyid(userid",{"_index":595,"title":{},"body":{"interfaces/Board.html":{},"injectables/JwtStrategy.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["this.userrepo.save(user",{"_index":6160,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6158,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validaterocketchatconfig",{"_index":156,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.validateusersmatch(dashboard",{"_index":1688,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.validationerrors",{"_index":228,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":1471,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.xposition",{"_index":1501,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.ypos",{"_index":1472,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.yposition",{"_index":1502,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["those",{"_index":4777,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":5014,"title":{},"body":{"license.html":{}}}],["thoughtbot/fishery",{"_index":395,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["three",{"_index":4915,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4725,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":148,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":4175,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":4181,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":4180,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":334,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thus",{"_index":4812,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4547,"title":{},"body":{"index.html":{}}}],["ticketsystem.hpi",{"_index":4549,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":1223,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":2911,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":4184,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":4178,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":4176,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":2913,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":4183,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":3272,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timouts",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4410,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":181,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/PatchGroupParams.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["titlea",{"_index":1359,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["titleb",{"_index":1361,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["tls",{"_index":2237,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["tmpdirpath",{"_index":2312,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1808,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":370,"title":{"todo.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"injectables/DashboardRepo.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserMatch.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":3245,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["token",{"_index":11,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["tooling",{"_index":6292,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4491,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topics",{"_index":6184,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["topromise",{"_index":151,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["toseedfolder",{"_index":1731,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":987,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":2626,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":5041,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5040,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5042,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4988,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4726,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4990,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5098,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6134,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":2466,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":3506,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":2469,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4301,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2467,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":409,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["transient(transient",{"_index":459,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["translate",{"_index":4514,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4942,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":2061,"title":{},"body":{"classes/EncryptedStringType.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treated",{"_index":5013,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4837,"title":{},"body":{"license.html":{}}}],["tries",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["true",{"_index":123,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"entities/News.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/UserController.html":{},"classes/UserMatch.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":2026,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5320,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["two",{"_index":4642,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":2941,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":2540,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["typealiases",{"_index":5378,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6407,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1437,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"entities/Submission.html":{}}}],["typeorm",{"_index":6411,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":920,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":5447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/entity",{"_index":2700,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["types/news.types",{"_index":1099,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["typesafety",{"_index":3236,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":47,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4967,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":2179,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":451,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{}}}],["uc",{"_index":1996,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":6030,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/course.uc",{"_index":980,"title":{},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["uc/dashboard.uc",{"_index":1262,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1715,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":3217,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/rooms.uc",{"_index":700,"title":{},"body":{"injectables/BoardMapper.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["uc/task.authorization.service",{"_index":3934,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":3874,"title":{},"body":{"controllers/TaskController.html":{}}}],["ui",{"_index":4408,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["uid",{"_index":2772,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["un",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":2116,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unarchivegroup(groupname",{"_index":91,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unauthorizedexception",{"_index":327,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":341,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unauthorizedexception('unauthorized",{"_index":2974,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["uncle",{"_index":6127,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":747,"title":{},"body":{"classes/BoardResponse.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"classes/ImportUserListResponse.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":4502,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":2447,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["uniform",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":2119,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uniquegradeduserids",{"_index":2746,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["uniquesubmitteduserids",{"_index":2735,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["unit",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4412,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":807,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":2414,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4975,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6358,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4800,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4701,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4823,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":5010,"title":{},"body":{"license.html":{}}}],["unpublished",{"_index":2522,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unsafe",{"_index":49,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/JwtValidationAdapter.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unskip",{"_index":3326,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":6181,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":2756,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["untildate",{"_index":893,"title":{},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["untildateinfuture",{"_index":1167,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["unused",{"_index":4154,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":4543,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":3197,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["update(id",{"_index":3434,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":3212,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":3271,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":383,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/CourseUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["updatedmodel",{"_index":1604,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateexistinggridelement",{"_index":1554,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateexistinggridelement(elementmodel",{"_index":1576,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updatematch",{"_index":2822,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["updatematch(importuserid",{"_index":2830,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["updatematchparams",{"_index":2831,"title":{"classes/UpdateMatchParams.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/UpdateMatchParams.html":{}}}],["updatenewsparams",{"_index":3213,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{}}}],["updater",{"_index":1106,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["updaterid",{"_index":1122,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["updates",{"_index":4187,"title":{},"body":{"classes/UpdateMatchParams.html":{},"license.html":{}}}],["updating",{"_index":2518,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":3342,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4403,"title":{},"body":{"dependencies.html":{}}}],["uploads",{"_index":2678,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["upon",{"_index":6113,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":6048,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":2118,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":24,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":2375,"title":{},"body":{"interfaces/GlobalConstants.html":{},"entities/System.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":4523,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["urlsafe",{"_index":4415,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":6068,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":372,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/CourseNews.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/Logger.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":2112,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":112,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"controllers/TeamNewsController.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":2374,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":3138,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":5273,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":5469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":145,"title":{"entities/User.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Submission.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateMatchParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user'})@ismongoid",{"_index":4188,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["user(props",{"_index":6159,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.controller",{"_index":2889,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["user.controller.ts",{"_index":2818,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:17",{"_index":2825,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:27",{"_index":2833,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:37",{"_index":2828,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.createdat",{"_index":3556,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":506,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UserMatch.html":{}}}],["user.entity.ts",{"_index":2555,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/enumerations.html":{}}}],["user.entity.ts:102",{"_index":2808,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:105",{"_index":2798,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:108",{"_index":2806,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:111",{"_index":2801,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:61",{"_index":4224,"title":{},"body":{"classes/UserMatch.html":{}}}],["user.entity.ts:69",{"_index":4226,"title":{},"body":{"classes/UserMatch.html":{}}}],["user.entity.ts:72",{"_index":4225,"title":{},"body":{"classes/UserMatch.html":{}}}],["user.entity.ts:78",{"_index":2810,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:81",{"_index":2811,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:84",{"_index":2803,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:87",{"_index":2804,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:90",{"_index":2800,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:93",{"_index":2802,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:99",{"_index":2799,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.factory",{"_index":3739,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["user.firstname",{"_index":3552,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":2773,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ResolvedUserMapper.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":3554,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.permissions",{"_index":2149,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":6063,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.response",{"_index":2837,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.response.ts",{"_index":2863,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["user.response.ts:25",{"_index":2900,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:31",{"_index":2902,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:37",{"_index":2898,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:43",{"_index":2901,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:49",{"_index":2905,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:52",{"_index":2897,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:55",{"_index":2904,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:58",{"_index":2865,"title":{},"body":{"classes/ImportUserListResponse.html":{}}}],["user.response.ts:8",{"_index":2896,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.roles.getitems",{"_index":4217,"title":{},"body":{"controllers/UserController.html":{}}}],["user.roles.getitems().map((r",{"_index":5560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.roles.isinitialized(true",{"_index":3530,"title":{},"body":{"injectables/PermissionService.html":{}}}],["user.school.id",{"_index":5562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.school.tostring",{"_index":3560,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":2147,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.ts",{"_index":5444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.uc.ts",{"_index":6057,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":3558,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":2975,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/import",{"_index":2819,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user_already_exists",{"_index":6151,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6157,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":6172,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":4207,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userfactory",{"_index":3738,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userfactory.build",{"_index":3742,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":76,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"entities/ImportUser.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatch.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6357,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":2157,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":906,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":3288,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":3291,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":3305,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":3262,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{}}}],["usermatch",{"_index":2561,"title":{"classes/UserMatch.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{},"miscellaneous/variables.html":{}}}],["usermatchresponse",{"_index":2840,"title":{"classes/UserMatchResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchResponse.html":{}}}],["usermodule",{"_index":264,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":119,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":267,"title":{"injectables/UserRepo.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/Board.html":{},"injectables/JwtStrategy.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":2527,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"modules/ImportUserModule.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"entities/User.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["userservice",{"_index":6167,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uses",{"_index":4969,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1978,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":437,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5763,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":2282,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":6036,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":6038,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4417,"title":{},"body":{"dependencies.html":{}}}],["v1",{"_index":5537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v3",{"_index":5365,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5370,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":2473,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{},"entities/System.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validate",{"_index":2908,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":2955,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":2986,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":3173,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":3170,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validaterocketchatconfig",{"_index":167,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["validateusersmatch",{"_index":1668,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validateusersmatch(dashboard",{"_index":1676,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validating",{"_index":2985,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":208,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":2978,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":2984,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":2982,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":177,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.error.ts:4",{"_index":188,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":4261,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":2457,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation.pipe.ts:12",{"_index":2462,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation_error",{"_index":4253,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":186,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":231,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":222,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":233,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":191,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":868,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2461,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":1241,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"entities/Role.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validators",{"_index":6044,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validity",{"_index":6406,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["validobjectid",{"_index":3509,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":386,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["value.tolowercase",{"_index":2574,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["value?.length",{"_index":2089,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["valueof",{"_index":5398,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":2063,"title":{},"body":{"classes/EncryptedStringType.html":{},"entities/System.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["variable",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":5414,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":4155,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":4605,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2621,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":2630,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":2635,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6387,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":122,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6318,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["version",{"_index":4591,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versions",{"_index":4625,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1923,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":3905,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":3430,"title":{},"body":{"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":1111,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["violates",{"_index":5005,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5063,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4363,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5343,"title":{},"body":{"todo.html":{}}}],["visibility",{"_index":2780,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["visible",{"_index":1110,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":4541,"title":{},"body":{"index.html":{}}}],["vo",{"_index":2569,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["void",{"_index":168,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4891,"title":{},"body":{"license.html":{}}}],["vs",{"_index":2928,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4492,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6434,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5371,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6432,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4463,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wait",{"_index":4419,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4844,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5258,"title":{},"body":{"license.html":{}}}],["want",{"_index":4634,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":2622,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":2632,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warranties",{"_index":4737,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4736,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5351,"title":{},"body":{"todo.html":{}}}],["way",{"_index":3144,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4905,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["web",{"_index":5278,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["well",{"_index":4718,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3655,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":3045,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4963,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":2471,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["whitelisted",{"_index":2971,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whole",{"_index":4537,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4949,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4756,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4655,"title":{},"body":{"license.html":{}}}],["window",{"_index":4768,"title":{},"body":{"license.html":{},"todo.html":{}}}],["windows",{"_index":5322,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":4420,"title":{},"body":{"dependencies.html":{}}}],["wip",{"_index":4562,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4836,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4632,"title":{},"body":{"license.html":{}}}],["within",{"_index":815,"title":{},"body":{"classes/BusinessError.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3972,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5316,"title":{},"body":{"todo.html":{}}}],["words",{"_index":4555,"title":{},"body":{"index.html":{}}}],["work",{"_index":377,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4778,"title":{},"body":{"license.html":{}}}],["workers",{"_index":5526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflows",{"_index":6182,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4757,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":3244,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5136,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":1464,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":1475,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wrap(modelentity).init",{"_index":1581,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrap(props.user).toreference",{"_index":1480,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wrapped",{"_index":5483,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":1455,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatch.html":{}}}],["wraps",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2293,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writecourseids",{"_index":3841,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses",{"_index":3836,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.includes(c",{"_index":3840,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.map((c",{"_index":3842,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writeerrorlog",{"_index":2444,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":2451,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":2257,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":2291,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writelessons",{"_index":3849,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writer",{"_index":858,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":3663,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":845,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":847,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":848,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:10",{"_index":855,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":851,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":844,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["writes",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":2436,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":2446,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5220,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4914,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1680,"title":{},"body":{"injectables/DashboardUc.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":143,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4422,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":1451,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["xposition",{"_index":1488,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["xunit",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":1255,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{}}}],["years",{"_index":4916,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":438,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/ImportUserListResponse.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yesterday",{"_index":3894,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["yourself",{"_index":5151,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6188,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":1452,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["yposition",{"_index":1489,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["zoom",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdminIdAndToken.html":{"url":"interfaces/AdminIdAndToken.html","title":"interface - AdminIdAndToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminIdAndToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nAuthModule -->\n\nUserRepo->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { UserRepo } from '@shared/repo';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter, UserRepo],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '@shared/infra/feathers';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:32\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:16\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:52\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, NewsTargetModel } from '@shared/domain';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntityWithTimestamps.html":{"url":"entities/BaseEntityWithTimestamps.html","title":"entity - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFactory.html":{"url":"classes/BaseFactory.html","title":"class - BaseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/base.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity factory based on thoughtbot/fishery\nhttps://github.com/thoughtbot/fishery\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EntityClass: literal type, propsFactory: Factory)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        EntityClass\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propsFactory\n                                                  \n                                                        \n                                                                    Factory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:87\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:99\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:47\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:73\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:60\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:137\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:111\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:133\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:149\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:123\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BuildOptions, DeepPartial, Factory, GeneratorFn, HookFn } from 'fishery';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Entity factory based on thoughtbot/fishery\n * https://github.com/thoughtbot/fishery\n *\n * @template T The entity to be built\n * @template U The properties interface of the entity\n * @template I The transient parameters that your factory supports\n * @template C The class of the factory object being created.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class BaseFactory {\n\tprotected readonly propsFactory: Factory;\n\n\tconstructor(private readonly EntityClass: { new (props: U): T }, propsFactory: Factory) {\n\t\tthis.propsFactory = propsFactory;\n\t}\n\n\t/**\n\t * Define a factory\n\t * @template T The entity to be built\n\t * @template U The properties interface of the entity\n\t * @template I The transient parameters that your factory supports\n\t * @template C The class of the factory object being created.\n\t * @param EntityClass The constructor of the entity to be built.\n\t * @param generator Your factory function - see `Factory.define()` in thoughtbot/fishery\n\t * @returns\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tstatic define>(\n\t\tthis: new (EntityClass: { new (props: U): T }, propsFactory: Factory) => F,\n\t\tEntityClass: { new (props: U): T },\n\t\tgenerator: GeneratorFn\n\t): F {\n\t\tconst propsFactory = Factory.define(generator);\n\t\tconst factory = new this(EntityClass, propsFactory);\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Build an entity using your factory\n\t * @param params\n\t * @returns an entity\n\t */\n\tbuild(params?: DeepPartial, options: BuildOptions = {}): T {\n\t\tconst props = this.propsFactory.build(params, options);\n\t\tconst entity = new this.EntityClass(props);\n\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Build an entity using your factory and generate a id for it.\n\t * @param params\n\t * @param id\n\t * @returns an entity\n\t */\n\tbuildWithId(params?: DeepPartial, id?: string): T {\n\t\tconst entity = this.build(params);\n\t\tconst entityWithId = Object.assign(entity, { _id: new ObjectId(id) });\n\n\t\treturn entityWithId;\n\t}\n\n\t/**\n\t * Build a list of entities using your factory\n\t * @param number\n\t * @param params\n\t * @returns a list of entities\n\t */\n\tbuildList(number: number, params?: DeepPartial, options: BuildOptions = {}): T[] {\n\t\tconst list: T[] = [];\n\t\tfor (let i = 0; i ): this {\n\t\tconst newPropsFactory = this.propsFactory.afterBuild(afterBuildFn);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\t * @param associations\n\t * @returns a new factory\n\t */\n\tassociations(associations: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.associations(associations);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\t * @param params\n\t * @returns a new factory\n\t */\n\tparams(params: DeepPartial): this {\n\t\tconst newPropsFactory = this.propsFactory.params(params);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\t * @param transient - transient params\n\t * @returns a new factory\n\t */\n\ttransient(transient: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.transient(transient);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Set sequence back to its default value\n\t */\n\trewindSequence(): void {\n\t\tthis.propsFactory.rewindSequence();\n\t}\n\n\tprotected clone>(this: F, propsFactory: Factory): F {\n\t\tconst copy = new (this.constructor as {\n\t\t\tnew (EntityClass: { new (props: U): T }, propsFactory: Factory): F;\n\t\t})(this.EntityClass, propsFactory);\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * Get the next sequence value\n\t * @returns the next sequence value\n\t */\n\tprotected sequence(): number {\n\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\treturn this.propsFactory['sequence']();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseFile.html":{"url":"entities/BaseFile.html","title":"entity - BaseFile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Board.html":{"url":"interfaces/Board.html","title":"interface - Board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/rooms.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayColor\n                                        \n                                \n                                \n                                        \n                                            elements\n                                        \n                                \n                                \n                                        \n                                            roomId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:         BoardElement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BoardElement[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Task, TaskWithStatusVo, User, Lesson } from '@shared/domain';\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\n// TODO: move this somewhere else\nexport interface Board {\n\troomId: string;\n\tdisplayColor: string;\n\ttitle: string;\n\telements: BoardElement[];\n}\n\nexport type BoardElement = {\n\t// TODO: should become fullblown class\n\ttype: string;\n\tcontent: TaskWithStatusVo | Lesson;\n};\n\n@Injectable()\nexport class RoomsUc {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync getBoard(roomId: EntityId, userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tconst course = await this.courseRepo.findOne(roomId, userId);\n\t\tconst isTeacher = this.isTeacher(user, course);\n\t\tconst taskFilter = this.taskFilter(isTeacher);\n\t\tconst lessonFilter = this.lessonFilter(isTeacher);\n\t\tconst [tasks] = await this.taskRepo.findBySingleParent(user.id, course.id, taskFilter);\n\t\tconst tasksWithStatusVos = this.addStatusToTasks(isTeacher, tasks, user);\n\t\tconst [lessons] = await this.lessonRepo.findAllByCourseIds([course.id], lessonFilter);\n\t\tconst boardElements = this.buildBoardElements(tasksWithStatusVos, lessons);\n\n\t\tconst board = this.buildBoard(course, boardElements);\n\t\treturn board;\n\t}\n\n\tprivate taskFilter(isTeacher: boolean): { draft?: boolean; noFutureAvailableDate?: boolean } {\n\t\tconst filters: { draft?: boolean; noFutureAvailableDate?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.draft = false;\n\t\t\tfilters.noFutureAvailableDate = true;\n\t\t\treturn filters;\n\t\t}\n\t\tfilters.draft = true;\n\t\treturn filters;\n\t}\n\n\t// TODO: move somewhere else\n\tprivate buildBoard(room: Course, boardElements: BoardElement[]): Board {\n\t\tconst roomMetadata = room.getMetadata();\n\t\tconst board = {\n\t\t\troomId: roomMetadata.id,\n\t\t\tdisplayColor: roomMetadata.displayColor,\n\t\t\ttitle: roomMetadata.title,\n\t\t\telements: boardElements,\n\t\t};\n\t\treturn board;\n\t}\n\n\tprivate isTeacher(user: User, course: Course): boolean {\n\t\tif (course.teachers.contains(user) || course.substitutionTeachers.contains(user)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User): TaskWithStatusVo[] {\n\t\tlet tasksWithStatusVos: TaskWithStatusVo[];\n\t\tif (isTeacher) {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t} else {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t}\n\t\treturn tasksWithStatusVos;\n\t}\n\n\tprivate lessonFilter(isTeacher: boolean): { hidden?: boolean } {\n\t\tconst filters: { hidden?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.hidden = false;\n\t\t}\n\t\treturn filters;\n\t}\n\n\tprivate buildBoardElements(tasks: TaskWithStatusVo[], lessons: Lesson[]): BoardElement[] {\n\t\tconst boardTasks = tasks.map((task) => ({ type: 'task', content: task }));\n\t\tconst boardLessons = lessons.map((lesson) => ({ type: 'lesson', content: lesson }));\n\t\tconst result = [...boardTasks, ...boardLessons];\n\t\tresult.sort();\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardElementResponse.html":{"url":"classes/BoardElementResponse.html","title":"class - BoardElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardTaskResponse | BoardLessonResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the Board, either: a task or a lesson specific for the board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ElementType. Can be any of: \"task\", \"lesson\".'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardLessonResponse.html":{"url":"classes/BoardLessonResponse.html","title":"class - BoardLessonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardLessonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardLessonResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardLessonResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardMapper.html":{"url":"injectables/BoardMapper.html","title":"injectable - BoardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BoardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/board.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \nmapToResponse(board: Board)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/board.mapper.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                                Board\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Course, Lesson, TaskWithStatusVo } from '@shared/domain';\nimport {\n\tBoardResponse,\n\tBoardElementResponse,\n\tBoardTaskResponse,\n\tBoardLessonResponse,\n} from '../controller/dto/roomBoardResponse';\nimport { Board } from '../uc/rooms.uc';\nimport { BoardTaskStatusMapper } from './board-taskStatus.mapper';\n\n@Injectable()\nexport class BoardMapper {\n\tmapToResponse(board: Board): BoardResponse {\n\t\tconst elements: BoardElementResponse[] = [];\n\t\tboard.elements.forEach((element) => {\n\t\t\tif (element.type === 'task') {\n\t\t\t\tconst { task: boardTask, status } = element.content as TaskWithStatusVo;\n\t\t\t\tconst boardTaskDesc = boardTask.getDescriptions();\n\t\t\t\tconst boardTaskStatus = BoardTaskStatusMapper.mapToResponse(status);\n\n\t\t\t\tconst mappedTask = new BoardTaskResponse({\n\t\t\t\t\tid: boardTask.id,\n\t\t\t\t\tname: boardTask.name,\n\t\t\t\t\tcreatedAt: boardTask.createdAt,\n\t\t\t\t\tupdatedAt: boardTask.updatedAt,\n\t\t\t\t\tstatus: boardTaskStatus,\n\t\t\t\t});\n\n\t\t\t\tconst taskCourse = boardTask.course as Course;\n\t\t\t\tmappedTask.courseName = taskCourse.name;\n\t\t\t\tmappedTask.availableDate = boardTask.availableDate;\n\t\t\t\tmappedTask.duedate = boardTask.dueDate;\n\t\t\t\tmappedTask.displayColor = boardTaskDesc.color;\n\t\t\t\tmappedTask.description = boardTaskDesc.description;\n\n\t\t\t\tconst boardElementResponse = new BoardElementResponse({ type: 'task', content: mappedTask });\n\t\t\t\telements.push(boardElementResponse);\n\t\t\t} else if (element.type === 'lesson') {\n\t\t\t\tconst boardLesson = element.content as Lesson;\n\n\t\t\t\tconst mappedLesson = new BoardLessonResponse({\n\t\t\t\t\tid: boardLesson.id,\n\t\t\t\t\tname: boardLesson.name,\n\t\t\t\t\thidden: boardLesson.hidden,\n\t\t\t\t\tcreatedAt: boardLesson.createdAt,\n\t\t\t\t\tupdatedAt: boardLesson.updatedAt,\n\t\t\t\t});\n\n\t\t\t\tconst lessonCourse = boardLesson.course;\n\t\t\t\tmappedLesson.courseName = lessonCourse.name;\n\n\t\t\t\tconst boardElementResponse = new BoardElementResponse({ type: 'lesson', content: mappedLesson });\n\t\t\t\telements.push(boardElementResponse);\n\t\t\t}\n\t\t});\n\t\tconst mapped = new BoardResponse({\n\t\t\troomId: board.roomId,\n\t\t\ttitle: board.title,\n\t\t\tdisplayColor: board.displayColor,\n\t\t\telements,\n\t\t});\n\t\treturn mapped;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardResponse.html":{"url":"classes/BoardResponse.html","title":"class - BoardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                elements\n                            \n                            \n                                roomId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Array of board specific tasks or lessons with matching type property'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the room this board belongs to', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskResponse.html":{"url":"classes/BoardTaskResponse.html","title":"class - BoardTaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardTaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardTaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardTaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskStatusMapper.html":{"url":"classes/BoardTaskStatusMapper.html","title":"class - BoardTaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/board-taskStatus.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/board-taskStatus.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardTaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { BoardTaskStatusResponse } from '../controller/dto/roomBoardResponse-taskStatus';\n\nexport class BoardTaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): BoardTaskStatusResponse {\n\t\tconst dto = new BoardTaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskStatusResponse.html":{"url":"classes/BoardTaskStatusResponse.html","title":"class - BoardTaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardTaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardTaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class BoardTaskStatusResponse {\n\tconstructor({ submitted, maxSubmissions, graded, isDraft, isSubstitutionTeacher }: BoardTaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error';\nimport { LoggerModule } from './logger';\nimport { ValidationModule } from './validation';\nimport { InterceptorModule } from './interceptor';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Course.html":{"url":"entities/Course.html","title":"entity - Course","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'activeCourses'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CourseController.html":{"url":"controllers/CourseController.html","title":"controller - CourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/course.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/course.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { PaginationQuery } from '@shared/controller/';\nimport { ICurrentUser } from '@shared/domain';\nimport { CourseUc } from '../uc/course.uc';\nimport { CourseMetadataListResponse } from './dto';\nimport { CourseMapper } from '../mapper/course.mapper';\n\n@ApiTags('Courses')\n@Authenticate('jwt')\n@Controller('courses')\nexport class CourseController {\n\tconstructor(private readonly courseUc: CourseUc) {}\n\n\t@Get()\n\tasync findForUser(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [courses, total] = await this.courseUc.findAllByUser(currentUser.userId, paginationQuery);\n\t\tconst courseResponses = courses.map((course) => CourseMapper.mapToMetadataResponse(course));\n\t\tconst { skip, limit } = paginationQuery;\n\n\t\tconst result = new CourseMetadataListResponse(courseResponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseFactory.html":{"url":"classes/CourseFactory.html","title":"class - CourseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/course.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFinished\n                            \n                            \n                                isOpen\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n            \n                \nisFinished()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n            \n                \nisOpen()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:18\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Course, School, ICourseProperties } from '@shared/domain';\n\nimport { schoolFactory } from './school.factory';\nimport { BaseFactory } from './base.factory';\n\nconst oneDay = 24 * 60 * 60 * 1000;\n\nclass CourseFactory extends BaseFactory {\n\tisFinished(): this {\n\t\tconst untilDate = new Date(Date.now() - oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n\n\tisOpen(): this {\n\t\tconst untilDate = new Date(Date.now() + oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n}\n\nexport const courseFactory = CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CourseGroup.html":{"url":"entities/CourseGroup.html","title":"entity - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMapper.html":{"url":"classes/CourseMapper.html","title":"class - CourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/course.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToMetadataResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToMetadataResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToMetadataResponse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/course.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseMetadataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from '@shared/domain';\nimport { CourseMetadataResponse } from '../controller/dto';\n\nexport class CourseMapper {\n\tstatic mapToMetadataResponse(course: Course): CourseMetadataResponse {\n\t\tconst courseMetadata = course.getMetadata();\n\t\tconst dto = new CourseMetadataResponse(\n\t\t\tcourseMetadata.id,\n\t\t\tcourseMetadata.title,\n\t\t\tcourseMetadata.shortTitle,\n\t\t\tcourseMetadata.displayColor,\n\t\t\tcourseMetadata.startDate,\n\t\t\tcourseMetadata.untilDate\n\t\t);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataListResponse.html":{"url":"classes/CourseMetadataListResponse.html","title":"class - CourseMetadataListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CourseMetadataResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseMetadataResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataResponse.html":{"url":"classes/CourseMetadataResponse.html","title":"class - CourseMetadataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, shortTitle: string, displayColor: string, startDate?: Date, untilDate?: Date)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shortTitle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        untilDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Start date of the course'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'End date of the course. After this the course counts as archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CourseNews.html":{"url":"entities/CourseNews.html","title":"entity - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:104\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/course/course.repo.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(courseId: EntityId, userId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n\n\tforCourseId(courseId: EntityId): CourseScope {\n\t\tthis.addQuery({ id: courseId });\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n\n\tasync findOne(courseId: EntityId, userId?: EntityId): Promise {\n\t\tconst scope = new CourseScope();\n\t\tscope.forCourseId(courseId);\n\t\tif (userId) scope.forAllGroupTypes(userId);\n\n\t\tconst course = await this.em.findOneOrFail(Course, scope.query);\n\n\t\treturn course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forActiveCourses\n                            \n                            \n                                forAllGroupTypes\n                            \n                            \n                                forCourseId\n                            \n                            \n                                forTeacher\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forActiveCourses\n                        \n                    \n                \n            \n            \n                \nforActiveCourses()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CourseScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forCourseId\n                        \n                    \n                \n            \n            \n                \nforCourseId(courseId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forTeacher\n                        \n                    \n                \n            \n            \n                \nforTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n\n\tforCourseId(courseId: EntityId): CourseScope {\n\t\tthis.addQuery({ id: courseId });\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n\n\tasync findOne(courseId: EntityId, userId?: EntityId): Promise {\n\t\tconst scope = new CourseScope();\n\t\tscope.forCourseId(courseId);\n\t\tif (userId) scope.forAllGroupTypes(userId);\n\n\t\tconst course = await this.em.findOneOrFail(Course, scope.query);\n\n\t\treturn course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseUc.html":{"url":"injectables/CourseUc.html","title":"injectable - CourseUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAllByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \nfindAllByUser(userId: EntityId, options?: PaginationQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Counted, SortOrder } from '@shared/domain';\nimport { CourseRepo } from '@shared/repo';\nimport { PaginationQuery } from '@shared/controller/';\n\n@Injectable()\nexport class CourseUc {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\tfindAllByUser(userId: EntityId, options?: PaginationQuery): Promise> {\n\t\treturn this.courseRepo.findAllByUserId(userId, {}, { pagination: options, order: { updatedAt: SortOrder.desc } });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                            \n                                    Async\n                                patchGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchGroup(dashboardId: string, x: number, y: number, params: PatchGroupParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/element')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PatchGroupParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser } from '@shared/domain';\nimport { DashboardUc } from '../uc/dashboard.uc';\nimport { DashboardResponse, MoveElementParams, PatchGroupParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@ApiTags('Dashboard')\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(currentUser.userId);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Body() params: MoveElementParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(\n\t\t\tdashboardId,\n\t\t\tparams.from,\n\t\t\tparams.to,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/element')\n\tasync patchGroup(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Query('x') x: number,\n\t\t@Query('y') y: number,\n\t\t@Body() params: PatchGroupParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.renameGroupOnDashboard(\n\t\t\tdashboardId,\n\t\t\t{ x, y },\n\t\t\tparams.title,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addRoom\n                            \n                            \n                                    Private\n                                allRooms\n                            \n                            \n                                    Private\n                                determineNewRoomsIn\n                            \n                            \n                                getElement\n                            \n                            \n                                    Private\n                                getFirstOpenIndex\n                            \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                getReferencesFromPosition\n                            \n                            \n                                getUserId\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                    Private\n                                mergeElementIntoPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                            \n                                    Private\n                                removeFromPosition\n                            \n                            \n                                    Private\n                                removeRoomsNotInList\n                            \n                            \n                                setLearnRooms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:179\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:166\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoom(room: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        allRooms\n                        \n                    \n                \n            \n            \n                \n                    \n                    allRooms()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        determineNewRoomsIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    determineNewRoomsIn(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILearnroom[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFirstOpenIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstOpenIndex()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getReferencesFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferencesFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mergeElementIntoPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeElementIntoPosition(element: IGridElement, position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeRoomsNotInList\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRoomsNotInList(roomList: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomList\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLearnRooms\n                        \n                    \n                \n            \n            \n                \nsetLearnRooms(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DashboardGridElementModel.html":{"url":"entities/DashboardGridElementModel.html","title":"entity - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Course', undefined, {fieldName: 'referenceIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardGridElementModelProperties.html":{"url":"interfaces/DashboardGridElementModelProperties.html","title":"interface - DashboardGridElementModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DashboardGridElementModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dashboard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            xPos\n                                        \n                                \n                                \n                                        \n                                            yPos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dashboard:         DashboardModelEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DashboardModelEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Course[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xPos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yPos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                    Optional\n                                groupElements\n                            \n                            \n                                    Optional\n                                groupId\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardGridElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardGridElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the group element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardGridSubElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardGridSubElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                mapGridElement\n                            \n                            \n                                    Private\n                                    Static\n                                mapLearnroom\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        mapGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElement(data: GridElementWithPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridElementResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        mapLearnroom\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLearnroom(metadata: LearnroomMetadata)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                LearnroomMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridSubElementResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity, GridElementWithPosition, LearnroomMetadata } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse, DashboardGridSubElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse({\n\t\t\tid: dashboard.getId(),\n\t\t\tgridElements: dashboard\n\t\t\t\t.getGrid()\n\t\t\t\t.map((elementWithPosition) => DashboardMapper.mapGridElement(elementWithPosition)),\n\t\t});\n\t\treturn dto;\n\t}\n\n\tprivate static mapGridElement(data: GridElementWithPosition): DashboardGridElementResponse {\n\t\tconst elementData = data.gridElement.getContent();\n\t\tconst position = data.pos;\n\t\tconst dto = new DashboardGridElementResponse({\n\t\t\ttitle: elementData.title,\n\t\t\tshortTitle: elementData.shortTitle,\n\t\t\tdisplayColor: elementData.displayColor,\n\t\t\txPosition: position.x,\n\t\t\tyPosition: position.y,\n\t\t});\n\t\tif (elementData.referencedId) {\n\t\t\tdto.id = elementData.referencedId;\n\t\t}\n\t\tif (elementData.group && elementData.groupId) {\n\t\t\tdto.groupId = elementData.groupId;\n\t\t\tdto.groupElements = elementData.group.map((groupMetadata) => DashboardMapper.mapLearnroom(groupMetadata));\n\t\t}\n\t\treturn dto;\n\t}\n\n\tprivate static mapLearnroom(metadata: LearnroomMetadata): DashboardGridSubElementResponse {\n\t\treturn new DashboardGridSubElementResponse(metadata);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DashboardModelEntity.html":{"url":"entities/DashboardModelEntity.html","title":"entity - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'userId', wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:77\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardModelMapper.html":{"url":"injectables/DashboardModelMapper.html","title":"injectable - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGridElement\n                            \n                            \n                                    Private\n                                    Async\n                                findExistingGridElement\n                            \n                            \n                                    Private\n                                    Async\n                                getOrConstructDashboardModelEntity\n                            \n                            \n                                    Async\n                                mapDashboardToEntity\n                            \n                            \n                                    Async\n                                mapDashboardToModel\n                            \n                            \n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Async\n                                mapReferenceToEntity\n                            \n                            \n                                mapReferenceToModel\n                            \n                            \n                                    Private\n                                    Async\n                                updateExistingGridElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGridElement(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findExistingGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    findExistingGridElement(elementWithPosition: GridElementWithPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOrConstructDashboardModelEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrConstructDashboardModelEntity(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToEntity(modelEntity: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \nmapReferenceToModel(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        updateExistingGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateExistingGridElement(elementModel: DashboardGridElementModel, elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementModel\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { wrap, EntityManager } from '@mikro-orm/core';\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tGridElementWithPosition,\n\tILearnroom,\n\tLearnroomTypes,\n\tDashboardGridElementModel,\n\tDashboardModelEntity,\n\tCourse,\n\tUser,\n} from '@shared/domain';\n\n@Injectable()\nexport class DashboardModelMapper {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tasync mapReferenceToEntity(modelEntity: Course): Promise {\n\t\tconst domainEntity = await wrap(modelEntity).init();\n\t\treturn domainEntity;\n\t}\n\n\tasync mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tconst referenceModels = await modelEntity.references.loadItems();\n\t\tconst references = await Promise.all(referenceModels.map((ref) => this.mapReferenceToEntity(ref)));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromPersistedGroup(modelEntity.id, modelEntity.title, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tasync mapDashboardToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tif (!modelEntity.gridElements.isInitialized()) {\n\t\t\tawait modelEntity.gridElements.init();\n\t\t}\n\t\tconst grid = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\treturn this.mapElementToEntity(e);\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid, userId: modelEntity.user.id });\n\t}\n\n\tmapReferenceToModel(reference: ILearnroom): Course {\n\t\tconst metadata = reference.getMetadata();\n\t\tif (metadata.type === LearnroomTypes.Course) {\n\t\t\tconst course = reference as Course;\n\t\t\treturn course;\n\t\t}\n\t\tthrow new InternalServerErrorException('unknown learnroom type');\n\t}\n\n\tasync mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst existing = await this.findExistingGridElement(elementWithPosition);\n\t\tif (existing) {\n\t\t\tconst updatedModel = this.updateExistingGridElement(existing, elementWithPosition, dashboard);\n\t\t\treturn updatedModel;\n\t\t}\n\t\tconst createdModel = await this.createGridElement(elementWithPosition, dashboard);\n\t\treturn createdModel;\n\t}\n\n\tprivate async findExistingGridElement(\n\t\telementWithPosition: GridElementWithPosition\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tif (gridElement.hasId()) {\n\t\t\tconst existing = await this.em.findOne(DashboardGridElementModel, gridElement.getId() as string);\n\t\t\tif (existing) return existing;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async updateExistingGridElement(\n\t\telementModel: DashboardGridElementModel,\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\t\tconst { gridElement } = elementWithPosition;\n\n\t\tif (gridElement.isGroup()) {\n\t\t\telementModel.title = gridElement.getContent().title;\n\t\t}\n\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\telementModel.references.set(references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tprivate async createGridElement(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\tconst elementModel = new DashboardGridElementModel({\n\t\t\tid: gridElement.getId(),\n\t\t\txPos: elementWithPosition.pos.x,\n\t\t\tyPos: elementWithPosition.pos.y,\n\t\t\treferences,\n\t\t\tdashboard,\n\t\t});\n\n\t\treturn elementModel;\n\t}\n\n\tasync mapDashboardToModel(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.getOrConstructDashboardModelEntity(entity);\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity.getGrid().map((elementWithPosition) => this.mapGridElementToModel(elementWithPosition, modelEntity))\n\t\t);\n\n\t\tArray.from(modelEntity.gridElements).forEach((el) => {\n\t\t\tif (!mappedElements.includes(el)) {\n\t\t\t\tmodelEntity.gridElements.remove(el);\n\t\t\t\tthis.em.remove(el);\n\t\t\t}\n\t\t});\n\n\t\treturn modelEntity;\n\t}\n\n\tprivate async getOrConstructDashboardModelEntity(entity: DashboardEntity): Promise {\n\t\tconst existing = await this.em.findOne(DashboardModelEntity, entity.getId());\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst user = await this.em.findOneOrFail(User, entity.getUserId());\n\t\treturn new DashboardModelEntity({ id: entity.getId(), user, gridElements: [] });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, mapper: DashboardModelMapper)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        DashboardModelMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:108\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                            \n                                    Async\n                                renameGroupOnDashboard\n                            \n                            \n                                    Private\n                                validateUsersMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo, courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renameGroupOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    renameGroupOnDashboard(dashboardId: EntityId, position: GridPosition, params: string, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateUsersMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUsersMatch(dashboard: DashboardEntity, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPositionWithGroupIndex, GridPosition, SortOrder } from '@shared/domain';\nimport { IDashboardRepo, CourseRepo } from '@shared/repo';\n// import { NotFound } from '@feathersjs/errors'; // wrong import? see NotFoundException\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(\n\t\t@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo,\n\t\tprivate readonly courseRepo: CourseRepo\n\t) {}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard(userId);\n\t\tconst [courses] = await this.courseRepo.findAllByUserId(\n\t\t\tuserId,\n\t\t\t{ onlyActiveCourses: true },\n\t\t\t{ order: { name: SortOrder.asc } }\n\t\t);\n\t\tdashboard.setLearnRooms(courses);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPositionWithGroupIndex,\n\t\tto: GridPositionWithGroupIndex,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tdashboard.moveElement(from, to);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync renameGroupOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tposition: GridPosition,\n\t\tparams: string,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tconst gridElement = dashboard.getElement(position);\n\t\tgridElement.setGroupName(params);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tprivate validateUsersMatch(dashboard: DashboardEntity, userId: EntityId) {\n\t\tif (dashboard.getUserId() !== userId) {\n\t\t\tthrow new NotFoundException('no such dashboard found');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @All('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post, All } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@All('seed')\n\tasync importCollections(): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem();\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFilesConsole.html":{"url":"classes/DeleteFilesConsole.html","title":"class - DeleteFilesConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFilesConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/job/delete-files.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteFilesUc: DeleteFilesUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteFilesUc\n                                                  \n                                                        \n                                                                        DeleteFilesUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSinceDays: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'cleanup-job ', description: 'cleanup job to remove files that were marked for deletion  days ago'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/files/job/delete-files.console.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSinceDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Console, Command } from 'nestjs-console';\nimport { Logger } from '@src/core/logger';\nimport { DeleteFilesUc } from '../uc';\n\n@Console({ command: 'files', description: 'file deletion console' })\nexport class DeleteFilesConsole {\n\tprivate logger: Logger;\n\n\tconstructor(private deleteFilesUc: DeleteFilesUc) {\n\t\tthis.logger = new Logger(DeleteFilesConsole.name);\n\t}\n\n\t@Command({\n\t\tcommand: 'cleanup-job ',\n\t\tdescription: 'cleanup job to remove files that were marked for deletion  days ago',\n\t})\n\tasync removeDeletedFilesData(removedSinceDays: number): Promise {\n\t\tthis.logger.log(`cleanup job will remove files that were marked for deletion ${removedSinceDays} days ago`);\n\t\tconst removedSince = new Date();\n\t\tremovedSince.setDate(removedSince.getDate() - removedSinceDays);\n\n\t\tawait this.deleteFilesUc.removeDeletedFilesData(removedSince);\n\t\tthis.logger.log('cleanup job finished');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteFilesUc.html":{"url":"injectables/DeleteFilesUc.html","title":"injectable - DeleteFilesUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteFilesUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/uc/delete-files.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesRepo: FilesRepo, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesRepo\n                                                  \n                                                        \n                                                                        FilesRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSince: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:15\n                \n            \n\n\n            \n                \n                    Schedules files that have been removed prior removedSince by a user to be removed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSince\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { FilesRepo } from '@shared/repo';\n\n@Injectable()\nexport class DeleteFilesUc {\n\tconstructor(private filesRepo: FilesRepo, private logger: Logger) {\n\t\tthis.logger.setContext(DeleteFilesUc.name);\n\t}\n\n\t/**\n\t * Schedules files that have been removed prior removedSince by a user to be removed.\n\t * @param removedSince\n\t */\n\tasync removeDeletedFilesData(removedSince: Date): Promise {\n\t\tconst filesForDeletion = await this.filesRepo.findAllFilesForCleanup(removedSince);\n\t\tconst numberOfFiles = filesForDeletion.length;\n\t\tthis.logger.log(`${numberOfFiles} files will be deleted`);\n\t\tconst failingFileIds: string[] = [];\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const file of filesForDeletion) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait this.filesRepo.deleteFile(file);\n\t\t\t} catch (err) {\n\t\t\t\tfailingFileIds.push(file.id);\n\t\t\t\tthis.logger.error(err);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(`${numberOfFiles - failingFileIds.length} out of ${numberOfFiles} files were successfully deleted`);\n\t\tif (failingFileIds.length > 0) {\n\t\t\tthis.logger.error('the following files could not be deleted:', failingFileIds);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Directory.html":{"url":"entities/Directory.html","title":"entity - Directory","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedStringType.html":{"url":"classes/EncryptedStringType.html","title":"class - EncryptedStringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedStringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/types/EncryptedString.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Serialization type to transparent encrypt string values in database.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encryptionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDatabaseValue\n                            \n                            \n                                convertToJSValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customKey?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SymetricKeyEncryptionService\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDatabaseValue\n                        \n                    \n                \n            \n            \n                \nconvertToDatabaseValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToJSValue\n                        \n                    \n                \n            \n            \n                \nconvertToJSValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '@hpi-schul-cloud/commons';\nimport { Type, Platform } from '@mikro-orm/core';\nimport { SymetricKeyEncryptionService } from '../../infra/encryption';\n\n/**\n * Serialization type to transparent encrypt string values in database.\n */\nexport class EncryptedStringType extends Type {\n\t// TODO modularize service?\n\tprivate encryptionService: SymetricKeyEncryptionService;\n\n\tconstructor(customKey?: string) {\n\t\tsuper();\n\t\tif (customKey) {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(customKey);\n\t\t} else {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(Configuration.get('S3_KEY') as string);\n\t\t}\n\t}\n\n\tconvertToDatabaseValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// encrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst encryptedString = this.encryptionService.encrypt(value);\n\n\t\treturn encryptedString;\n\t}\n\n\tconvertToJSValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// decrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// decrypt only non-empty strings\n\t\tconst decryptedString: string = this.encryptionService.decrypt(value);\n\n\t\treturn decryptedString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: EncryptionModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EncryptionModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncryptionModuleOptions.html":{"url":"interfaces/EncryptionModuleOptions.html","title":"interface - EncryptionModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncryptionModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            SymmetricCipherKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SymmetricCipherKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SymmetricCipherKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId, NewsTargetModel } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { FeathersServiceProvider } from '@shared/infra/feathers';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: string, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/File.html":{"url":"entities/File.html","title":"entity - File","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bucket\n                            \n                            \n                                storageFileName\n                            \n                            \n                                storageProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('StorageProvider', {fieldName: 'storageProviderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageAdapter.html":{"url":"injectables/FileStorageAdapter.html","title":"injectable - FileStorageAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { S3Client, DeleteObjectCommand } from '@aws-sdk/client-s3';\n\nimport { Injectable } from '@nestjs/common';\nimport { StorageProvider, File } from '@shared/domain';\n\nfunction createStorageProviderClient(storageProvider: StorageProvider): S3Client {\n\treturn new S3Client({\n\t\tendpoint: storageProvider.endpointUrl,\n\t\tforcePathStyle: true,\n\t\tregion: storageProvider.region,\n\t\ttls: true,\n\t\tcredentials: {\n\t\t\taccessKeyId: storageProvider.accessKeyId,\n\t\t\tsecretAccessKey: storageProvider.secretAccessKey,\n\t\t},\n\t});\n}\n\n@Injectable()\nexport class FileStorageAdapter {\n\tasync deleteFile(file: File): Promise {\n\t\tconst { storageProvider, bucket, storageFileName } = file;\n\t\tconst storageProviderClient = createStorageProviderClient(storageProvider);\n\t\tconst deletionCommand = new DeleteObjectCommand({ Bucket: bucket, Key: storageFileName });\n\t\tawait storageProviderClient.send(deletionCommand);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FilesModule_imports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeleteFilesUc\n                        \n                        \n                            FileStorageAdapter\n                        \n                        \n                            FilesRepo\n                        \n                        \n                            StorageProviderRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { FilesRepo, StorageProviderRepo } from '@shared/repo';\nimport { LoggerModule } from '@src/core/logger';\nimport { DeleteFilesConsole } from './job/delete-files.console';\nimport { DeleteFilesUc } from './uc';\n\n@Module({\n\timports: [LoggerModule],\n\tproviders: [DeleteFilesConsole, DeleteFilesUc, FilesRepo, StorageProviderRepo, FileStorageAdapter],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRepo.html":{"url":"injectables/FilesRepo.html","title":"injectable - FilesRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/files/files.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findAllFilesForCleanup\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileStorageAdapter: FileStorageAdapter, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileStorageAdapter\n                                                  \n                                                        \n                                                                        FileStorageAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: BaseFile)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BaseFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFilesForCleanup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFilesForCleanup(cleanupThreshold: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cleanupThreshold\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['storageProvider']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { BaseFile, File } from '@shared/domain';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class FilesRepo extends BaseRepo {\n\tconstructor(private fileStorageAdapter: FileStorageAdapter, protected readonly em: EntityManager) {\n\t\tsuper(em);\n\t}\n\n\tpropertiesToPopulate = ['storageProvider'];\n\n\tasync findAllFilesForCleanup(cleanupThreshold: Date): Promise {\n\t\tconst filesForCleanupQuery = { deletedAt: { $lte: cleanupThreshold } };\n\t\tconst files = await this.em.find(BaseFile, filesForCleanupQuery);\n\t\tconst regularFiles = files.filter((file) => file instanceof File);\n\t\tawait this.em.populate(regularFiles, this.propertiesToPopulate);\n\t\treturn files;\n\t}\n\n\tasync deleteFile(file: BaseFile): Promise {\n\t\tif (file instanceof File) await this.fileStorageAdapter.deleteFile(file);\n\t\tawait this.removeAndFlush(file);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create default response for all unknown errors\n\t\treturn createErrorResponseForUnknownError();\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\tforbidUnknownValues: true,\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                references\n                            \n                            \n                                    Private\n                                sortReferences\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromGroup\n                            \n                            \n                                    Static\n                                FromPersistedGroup\n                            \n                            \n                                    Static\n                                FromPersistedReference\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                hasId\n                            \n                            \n                                isGroup\n                            \n                            \n                                removeReference\n                            \n                            \n                                removeReferenceByIndex\n                            \n                            \n                                setGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILearnroom[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sortReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromGroup(title: string, references: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    references\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedReference(id: EntityId, reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReferenceByIndex\n                        \n                    \n                \n            \n            \n                \nremoveReferenceByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            untilDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        untilDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        untilDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardModelProperties.html":{"url":"interfaces/IDashboardModelProperties.html","title":"interface - IDashboardModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            gridElements\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gridElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gridElements:         DashboardGridElementModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DashboardGridElementModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deletedAt\n                                        \n                                \n                                \n                                        \n                                            storageFileName\n                                        \n                                \n                                \n                                        \n                                            storageProvider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageFileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageFileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageProvider:         StorageProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        hasId\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                                \n                                    \n                                        removeReference\n                                    \n                                \n                                \n                                    \n                                        removeReferenceByIndex\n                                    \n                                \n                                \n                                    \n                                        setGroupName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReferenceByIndex\n                        \n                    \n                \n            \n            \n                \nremoveReferenceByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IImportUserProperties.html":{"url":"interfaces/IImportUserProperties.html","title":"interface - IImportUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IImportUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            classNames\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flagged\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            ldapDn\n                                        \n                                \n                                \n                                        \n                                            ldapId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            match\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roleNames\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                        \n                                            system\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flagged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flagged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ldapDn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ldapDn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ldapId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ldapId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        match\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        match:         UserMatch\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMatch\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleNames:         RoleName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleName[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        system:         System\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         System\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEmbeddable,\n\tEmbedded,\n\tEntity,\n\tEnum,\n\tIdentifiedReference,\n\tManyToOne,\n\tProperty,\n\tReference,\n} from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport { System } from './system.entity';\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tmatch?: UserMatch;\n\tflagged?: boolean;\n}\n\n// class EMailVO {\n// \t_email: string;\n\n// \tset email(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n\n// \tget email(): string {\n// \t\treturn this._email;\n// \t}\n\n// \tconstructor(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n// }\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\n@Embeddable()\nexport class UserMatch extends BaseEntityWithTimestamps {\n\tconstructor(props: UserMatch) {\n\t\tsuper();\n\t\tthis.user = props.user;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@Property({ fieldName: 'userId' })\n\tuser: User;\n\n\t@Enum({ fieldName: 'matchedBy' })\n\tmatchedBy: MatchCreator;\n}\n\n@Entity({ tableName: 'importUser' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\t@ManyToOne(() => 'School', { wrappedReference: true, lazy: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true, lazy: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string // TODO VO\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t@Embedded({ entity: () => UserMatch, object: true })\n\tmatch?: UserMatch;\n\n\t@Property()\n\tflagged = false;\n\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = Reference.create(props.school);\n\t\tthis.system = Reference.create(props.system);\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.match) this.match = props.match;\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILearnroom.html":{"url":"interfaces/ILearnroom.html","title":"interface - ILearnroom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILearnroom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/learnroom.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LearnroomMetadata } from '@shared/domain/types';\n\nexport interface ILearnroom {\n\tgetMetadata: () => LearnroomMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany({ entity: 'Role' })\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchoolProperties.html":{"url":"interfaces/ISchoolProperties.html","title":"interface - ISchoolProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchoolProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorageProviderProperties.html":{"url":"interfaces/IStorageProviderProperties.html","title":"interface - IStorageProviderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStorageProviderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            endpointUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpointUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpointUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:         CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            finished\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        finished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finished:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            isFinished\n                                        \n                                \n                                \n                                        \n                                            isSubstitutionTeacher\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFinished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFinished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubstitutionTeacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubstitutionTeacher:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamProperties.html":{"url":"interfaces/ITeamProperties.html","title":"interface - ITeamProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImportUser.html":{"url":"entities/ImportUser.html","title":"entity - ImportUser","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImportUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classNames\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                flagged\n                            \n                            \n                                lastName\n                            \n                            \n                                ldapDn\n                            \n                            \n                                ldapId\n                            \n                            \n                                    Optional\n                                match\n                            \n                            \n                                roleNames\n                            \n                            \n                                school\n                            \n                            \n                                system\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ldapDn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ldapId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserMatch\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Embedded({entity: () => UserMatch, object: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleName[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum({fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {wrappedReference: true, lazy: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {wrappedReference: true, lazy: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:81\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */ // TODO remove when implementation exists\nimport {\n\tEmbeddable,\n\tEmbedded,\n\tEntity,\n\tEnum,\n\tIdentifiedReference,\n\tManyToOne,\n\tProperty,\n\tReference,\n} from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport { System } from './system.entity';\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tmatch?: UserMatch;\n\tflagged?: boolean;\n}\n\n// class EMailVO {\n// \t_email: string;\n\n// \tset email(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n\n// \tget email(): string {\n// \t\treturn this._email;\n// \t}\n\n// \tconstructor(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n// }\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\n@Embeddable()\nexport class UserMatch extends BaseEntityWithTimestamps {\n\tconstructor(props: UserMatch) {\n\t\tsuper();\n\t\tthis.user = props.user;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@Property({ fieldName: 'userId' })\n\tuser: User;\n\n\t@Enum({ fieldName: 'matchedBy' })\n\tmatchedBy: MatchCreator;\n}\n\n@Entity({ tableName: 'importUser' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\t@ManyToOne(() => 'School', { wrappedReference: true, lazy: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true, lazy: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string // TODO VO\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t@Embedded({ entity: () => UserMatch, object: true })\n\tmatch?: UserMatch;\n\n\t@Property()\n\tflagged = false;\n\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = Reference.create(props.school);\n\t\tthis.system = Reference.create(props.system);\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.match) this.match = props.match;\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImportUserController.html":{"url":"controllers/ImportUserController.html","title":"controller - ImportUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImportUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/import-user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/import\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                removeMatch\n                            \n                            \n                                updateMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(currentUser: ICurrentUser, scope: ImportUserFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                ImportUserFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMatch\n                        \n                    \n                \n            \n            \n                \nremoveMatch(importUserId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/match')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMatch\n                        \n                    \n                \n            \n            \n                \nupdateMatch(importUserId: string, currentUser: ICurrentUser, params: UpdateMatchParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/match')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateMatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* istanbul ignore file */ // TODO remove when implementation exists\nimport { Body, Controller, Delete, Get, ImATeapotException, Param, Patch, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser } from '@shared/domain';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ImportUserFilterQuery } from './dto/import-user-filter.query';\nimport { ImportUserListResponse } from './dto/import-user.response';\nimport { UpdateMatchParams } from './dto/update-match.params';\nimport { UserMatchResponse } from './dto/user-match.response';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user/import')\nexport class ImportUserController {\n\t@Get()\n\tfindAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: ImportUserFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// TODO\n\t\tthrow new ImATeapotException();\n\t}\n\n\t@Patch(':id/match')\n\tupdateMatch(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateMatchParams\n\t): Promise {\n\t\t// TODO\n\t\tthrow new ImATeapotException();\n\t}\n\n\t@Delete(':id/match')\n\tremoveMatch(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\t// TODO\n\t\tthrow new ImATeapotException();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserFilterQuery.html":{"url":"classes/ImportUserFilterQuery.html","title":"class - ImportUserFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                flagged\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                loginName\n                            \n                            \n                                    Optional\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchFilterQuery\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: MatchFilterQuery})@IsOptional()@IsEnum(MatchFilterQuery)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport enum MatchFilterQuery {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n\tNONE = 'none',\n}\n\nexport class ImportUserFilterQuery {\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tfirstName?: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tlastName?: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tloginName?: string;\n\n\t@ApiPropertyOptional({ enum: MatchFilterQuery })\n\t@IsOptional()\n\t@IsEnum(MatchFilterQuery)\n\tmatch?: MatchFilterQuery;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsBoolean()\n\tflagged?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserListResponse.html":{"url":"classes/ImportUserListResponse.html","title":"class - ImportUserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImportUserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImportUserResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId, IsString } from 'class-validator';\nimport { RoleNameResponse } from './role-name.response';\nimport { UserMatchResponse } from './user-match.response';\n\nexport class ImportUserResponse {\n\tconstructor(props: ImportUserResponse) {\n\t\tthis.importUserId = props.importUserId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tthis.classNames = props.classNames;\n\t\tif (props.match != null) this.match = props.match;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'id reference to a import user',\n\t})\n\t// no school, system\n\timportUserId: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'login name from external system',\n\t})\n\tloginName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user firstname',\n\t})\n\tfirstName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user lastname',\n\t})\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiProperty({ description: 'names of classes the user attends from external system' })\n\tclassNames: string[];\n\n\t@ApiPropertyOptional({ description: 'assignemnt to a local user account' })\n\tmatch?: UserMatchResponse;\n}\n\nexport class ImportUserListResponse extends PaginationResponse {\n\tconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [ImportUserResponse] })\n\tdata: ImportUserResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImportUserModule.html":{"url":"modules/ImportUserModule.html","title":"module - ImportUserModule","body":"\n                   \n\n\n\n\n    Modules\n    ImportUserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ImportUserModule\n\n\n\ncluster_ImportUserModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nImportUserModule\n\nImportUserModule\n\nImportUserModule -->\n\nAuthorizationModule->ImportUserModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nImportUserModule -->\n\nLoggerModule->ImportUserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user-import/user-import.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ImportUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { AuthorizationModule } from '@src/modules/authorization';\nimport { ImportUserController } from './controller/import-user.controller';\n\n@Module({\n\timports: [\n\t\tAuthorizationModule,\n\t\tLoggerModule,\n\t\t// MikroOrmModule.forFeature({ entities: [ImportUser, System] })\n\t],\n\tcontrollers: [ImportUserController],\n\tproviders: [],\n\texports: [],\n})\n/**\n * Module to provide user migration,\n * to link existing users with ldap references to enable\n * external authentication and sync.\n */\nexport class ImportUserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserResponse.html":{"url":"classes/ImportUserResponse.html","title":"class - ImportUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classNames\n                            \n                            \n                                firstName\n                            \n                            \n                                importUserId\n                            \n                            \n                                lastName\n                            \n                            \n                                loginName\n                            \n                            \n                                    Optional\n                                match\n                            \n                            \n                                roleNames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ImportUserResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ImportUserResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'names of classes the user attends from external system'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'external systems user firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'id reference to a import user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'external systems user lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'login name from external system'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserMatchResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'assignemnt to a local user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleNameResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'list of user roles from external system: student, teacher, admin', enum: RoleNameResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId, IsString } from 'class-validator';\nimport { RoleNameResponse } from './role-name.response';\nimport { UserMatchResponse } from './user-match.response';\n\nexport class ImportUserResponse {\n\tconstructor(props: ImportUserResponse) {\n\t\tthis.importUserId = props.importUserId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tthis.classNames = props.classNames;\n\t\tif (props.match != null) this.match = props.match;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'id reference to a import user',\n\t})\n\t// no school, system\n\timportUserId: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'login name from external system',\n\t})\n\tloginName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user firstname',\n\t})\n\tfirstName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user lastname',\n\t})\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiProperty({ description: 'names of classes the user attends from external system' })\n\tclassNames: string[];\n\n\t@ApiPropertyOptional({ description: 'assignemnt to a local user account' })\n\tmatch?: UserMatchResponse;\n}\n\nexport class ImportUserListResponse extends PaginationResponse {\n\tconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [ImportUserResponse] })\n\tdata: ImportUserResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserRepo } from '@shared/repo';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userRepo: UserRepo, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\ttry {\n\t\t\tawait this.userRepo.findById(userId);\n\t\t} catch (err) {\n\t\t\tthrow new UnauthorizedException('Unauthorized.');\n\t\t}\n\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nBoardMapper\n\nBoardMapper\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nBoardMapper->LearnroomModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nLearnroomModule -->\n\nLessonRepo->LearnroomModule\n\n\n\n\n\nRoomsUc\n\nRoomsUc\n\nLearnroomModule -->\n\nRoomsUc->LearnroomModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nLearnroomModule -->\n\nTaskRepo->LearnroomModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nLearnroomModule -->\n\nUserRepo->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BoardMapper\n                        \n                        \n                            CourseRepo\n                        \n                        \n                            CourseUc\n                        \n                        \n                            DashboardModelMapper\n                        \n                        \n                            DashboardUc\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            RoomsUc\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                        \n                            CourseController\n                        \n                        \n                            RoomsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo, DashboardModelMapper, CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { CourseController } from './controller/course.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\nimport { CourseUc } from './uc/course.uc';\nimport { RoomsController } from './controller/rooms.controller';\nimport { RoomsUc } from './uc/rooms.uc';\nimport { BoardMapper } from './mapper/board.mapper';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController, CourseController, RoomsController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t\tDashboardModelMapper,\n\t\tCourseUc,\n\t\tCourseRepo,\n\t\tLessonRepo,\n\t\tRoomsUc,\n\t\tTaskRepo,\n\t\tUserRepo,\n\t\tBoardMapper,\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Lesson.html":{"url":"entities/Lesson.html","title":"entity - Lesson","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByCourseIds'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonFactory.html":{"url":"classes/LessonFactory.html","title":"class - LessonFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/lesson.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson, ILessonProperties, Course } from '@shared/domain';\n\nimport { courseFactory } from './course.factory';\nimport { BaseFactory } from './base.factory';\n\nclass LessonFactory extends BaseFactory {}\n\nexport const lessonFactory = LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, Lesson, Counted } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise> {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst [lessons, count] = await this.em.findAndCount(Lesson, scope.query);\n\n\t\tawait this.em.populate(lessons, ['course']);\n\n\t\treturn [lessons, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_imports\n\n\n\ncluster_ManagementModule_providers\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating the position of a Dashboard Element.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating the position of a Dashboard Element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupIndex\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@IsOptional()@ApiPropertyOptional({description: 'used to identify a position within a group.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating the position of a Dashboard Element.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/News.html":{"url":"entities/News.html","title":"entity - News","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsListResponse, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsListResponse.html":{"url":"classes/NewsListResponse.html","title":"class - NewsListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        NewsResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News, ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst target = TargetInfoMapper.mapToResponse(news.target);\n\t\tconst school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tconst creator = UserInfoMapper.mapToResponse(news.creator);\n\n\t\tconst dto = new NewsResponse({\n\t\t\tid: news.id,\n\t\t\ttitle: news.title,\n\t\t\tcontent: news.content,\n\t\t\tdisplayAt: news.displayAt,\n\t\t\tsource: news.source,\n\t\t\tsourceDescription: news.sourceDescription,\n\t\t\ttargetId: news.target.id,\n\t\t\ttargetModel: news.targetModel,\n\t\t\ttarget,\n\t\t\tschool,\n\t\t\tcreator,\n\t\t\tcreatedAt: news.createdAt,\n\t\t\tupdatedAt: news.updatedAt,\n\t\t\tpermissions: news.permissions,\n\t\t});\n\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { AuthorizationModule } from '@src/modules/authorization';\nimport { NewsRepo } from '@shared/repo';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/news/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: NewsResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        NewsResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { News } from '@shared/domain';\nimport { EmptyResultQuery } from '../query';\nimport { Scope } from '../scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, NewsTargetModel } from '@shared/domain';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:64\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tEntityId,\n\tIFindOptions,\n\tNews,\n\tSortOrder,\n\tNewsTargetModel,\n\tICreateNews,\n\tINewsScope,\n\tIUpdateNews,\n} from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsRepo, NewsTargetFilter } from '@shared/repo';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class PaginationResponse {\n\tconstructor(total: number, skip?: number, limit?: number) {\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tabstract data: T;\n\n\t@ApiProperty({ type: 'number' })\n\ttotal: number;\n\n\t@ApiProperty({ type: 'number' })\n\tskip?: number;\n\n\t@ApiProperty({ type: 'number' })\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchGroupParams.html":{"url":"classes/PatchGroupParams.html","title":"class - PatchGroupParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchGroupParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Patching a the group name of a grid element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the Group grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n/**\n * DTO for Patching a the group name of a grid element.\n */\nexport class PatchGroupParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the Group grid element',\n\t})\n\ttitle!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/service/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolvePermissions\n                            \n                            \n                                    Private\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resolvePermissions\n                        \n                    \n                \n            \n            \n                \nresolvePermissions(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:14\n                \n            \n\n\n            \n                \n                    Recursively resolve all roles and permissions of a user.\nIMPORTANT: The role collections of the user and nested roles will not be loaded lazily.\nPlease make sure you populate them before calling this method.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Role } from '../entity/role.entity';\nimport { User } from '../entity/user.entity';\n\n@Injectable()\nexport class PermissionService {\n\t/**\n\t * Recursively resolve all roles and permissions of a user.\n\t * IMPORTANT: The role collections of the user and nested roles will not be loaded lazily.\n\t * Please make sure you populate them before calling this method.\n\t * @param user\n\t * @returns\n\t */\n\tresolvePermissions(user: User): string[] {\n\t\tif (!user.roles.isInitialized(true)) {\n\t\t\tthrow new Error('Roles items are not loaded.');\n\t\t}\n\t\tconst rolesAndPermissions = this.resolvePermissionsByRoles(user.roles.getItems());\n\n\t\treturn rolesAndPermissions;\n\t}\n\n\tprivate resolvePermissionsByRoles(inputRoles: Role[]): string[] {\n\t\tlet permissions: string[] = [];\n\n\t\tfor (let i = 0; i  0) {\n\t\t\t\tconst subPermissions = this.resolvePermissionsByRoles(innerRoles);\n\t\t\t\tpermissions = [...permissions, ...subPermissions];\n\t\t\t}\n\t\t}\n\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn permissions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName!: string;\n\n\t@ApiProperty()\n\tlastName!: string;\n\n\t@ApiProperty()\n\tid!: string;\n\n\t@ApiProperty()\n\tcreatedAt!: Date;\n\n\t@ApiProperty()\n\tupdatedAt!: Date;\n\n\t@ApiProperty()\n\troles!: Role[];\n\n\t@ApiProperty()\n\tpermissions!: string[];\n\n\t@ApiProperty()\n\tschoolId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RocketChatError.html":{"url":"classes/RocketChatError.html","title":"class - RocketChatError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RocketChatError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorType\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: any)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericData\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RocketChatModule.html":{"url":"modules/RocketChatModule.html","title":"module - RocketChatModule","body":"\n                   \n\n\n\n\n    Modules\n    RocketChatModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RocketChatOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/rocketchat/rocket-chat.module.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RocketChatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, HttpModule } from '@nestjs/common';\nimport { RocketChatOptions, RocketChatService } from './rocket-chat.service';\n\n@Module({})\nexport class RocketChatModule {\n\tstatic forRoot(options: RocketChatOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: RocketChatModule,\n\t\t\timports: [HttpModule],\n\t\t\tproviders: [\n\t\t\t\tRocketChatService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'ROCKET_CHAT_OPTIONS',\n\t\t\t\t\tuseValue: options,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [RocketChatService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RocketChatOptions.html":{"url":"interfaces/RocketChatOptions.html","title":"interface - RocketChatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RocketChatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({entity: 'Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany({ entity: 'Role' })\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/role/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache = 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\n\t\treturn role;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomsController.html":{"url":"controllers/RoomsController.html","title":"controller - RoomsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/rooms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rooms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRoomBoard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoomBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomBoard(roomId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/board')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/rooms.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '@shared/domain';\nimport { RoomsUc } from '../uc/rooms.uc';\nimport { BoardMapper } from '../mapper/board.mapper';\nimport { BoardResponse } from './dto/roomBoardResponse';\n\n@ApiTags('Rooms')\n@Authenticate('jwt')\n@Controller('rooms')\nexport class RoomsController {\n\tconstructor(private readonly roomsUc: RoomsUc, private readonly mapper: BoardMapper) {}\n\n\t@Get(':id/board')\n\tasync getRoomBoard(\n\t\t@Param('id', ParseObjectIdPipe) roomId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst board = await this.roomsUc.getBoard(roomId, currentUser.userId);\n\t\tconst mapped = this.mapper.mapToResponse(board);\n\t\treturn mapped;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsUc.html":{"url":"injectables/RoomsUc.html","title":"injectable - RoomsUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/rooms.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addStatusToTasks\n                            \n                            \n                                    Private\n                                buildBoard\n                            \n                            \n                                    Private\n                                buildBoardElements\n                            \n                            \n                                    Async\n                                getBoard\n                            \n                            \n                                    Private\n                                isTeacher\n                            \n                            \n                                    Private\n                                lessonFilter\n                            \n                            \n                                    Private\n                                taskFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, lessonRepo: LessonRepo, taskRepo: TaskRepo, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addStatusToTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildBoard(room: Course, boardElements: BoardElement[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boardElements\n                                    \n                                                BoardElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Board\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildBoardElements\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildBoardElements(tasks: TaskWithStatusVo[], lessons: Lesson[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                TaskWithStatusVo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lessons\n                                    \n                                                Lesson[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoard(roomId: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeacher(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        lessonFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    lessonFilter(isTeacher: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        taskFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    taskFilter(isTeacher: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Task, TaskWithStatusVo, User, Lesson } from '@shared/domain';\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\n// TODO: move this somewhere else\nexport interface Board {\n\troomId: string;\n\tdisplayColor: string;\n\ttitle: string;\n\telements: BoardElement[];\n}\n\nexport type BoardElement = {\n\t// TODO: should become fullblown class\n\ttype: string;\n\tcontent: TaskWithStatusVo | Lesson;\n};\n\n@Injectable()\nexport class RoomsUc {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync getBoard(roomId: EntityId, userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tconst course = await this.courseRepo.findOne(roomId, userId);\n\t\tconst isTeacher = this.isTeacher(user, course);\n\t\tconst taskFilter = this.taskFilter(isTeacher);\n\t\tconst lessonFilter = this.lessonFilter(isTeacher);\n\t\tconst [tasks] = await this.taskRepo.findBySingleParent(user.id, course.id, taskFilter);\n\t\tconst tasksWithStatusVos = this.addStatusToTasks(isTeacher, tasks, user);\n\t\tconst [lessons] = await this.lessonRepo.findAllByCourseIds([course.id], lessonFilter);\n\t\tconst boardElements = this.buildBoardElements(tasksWithStatusVos, lessons);\n\n\t\tconst board = this.buildBoard(course, boardElements);\n\t\treturn board;\n\t}\n\n\tprivate taskFilter(isTeacher: boolean): { draft?: boolean; noFutureAvailableDate?: boolean } {\n\t\tconst filters: { draft?: boolean; noFutureAvailableDate?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.draft = false;\n\t\t\tfilters.noFutureAvailableDate = true;\n\t\t\treturn filters;\n\t\t}\n\t\tfilters.draft = true;\n\t\treturn filters;\n\t}\n\n\t// TODO: move somewhere else\n\tprivate buildBoard(room: Course, boardElements: BoardElement[]): Board {\n\t\tconst roomMetadata = room.getMetadata();\n\t\tconst board = {\n\t\t\troomId: roomMetadata.id,\n\t\t\tdisplayColor: roomMetadata.displayColor,\n\t\t\ttitle: roomMetadata.title,\n\t\t\telements: boardElements,\n\t\t};\n\t\treturn board;\n\t}\n\n\tprivate isTeacher(user: User, course: Course): boolean {\n\t\tif (course.teachers.contains(user) || course.substitutionTeachers.contains(user)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User): TaskWithStatusVo[] {\n\t\tlet tasksWithStatusVos: TaskWithStatusVo[];\n\t\tif (isTeacher) {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t} else {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t}\n\t\treturn tasksWithStatusVos;\n\t}\n\n\tprivate lessonFilter(isTeacher: boolean): { hidden?: boolean } {\n\t\tconst filters: { hidden?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.hidden = false;\n\t\t}\n\t\treturn filters;\n\t}\n\n\tprivate buildBoardElements(tasks: TaskWithStatusVo[], lessons: Lesson[]): BoardElement[] {\n\t\tconst boardTasks = tasks.map((task) => ({ type: 'task', content: task }));\n\t\tconst boardLessons = lessons.map((lesson) => ({ type: 'lesson', content: lesson }));\n\t\tconst result = [...boardTasks, ...boardLessons];\n\t\tresult.sort();\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/School.html":{"url":"entities/School.html","title":"entity - School","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse({ id: schoolInfo.id, name: schoolInfo.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: SchoolInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        SchoolInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\tconstructor({ id, name }: SchoolInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SchoolNews.html":{"url":"entities/SchoolNews.html","title":"entity - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { FilesModule } from '../modules/files/files.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule, FilesModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nServerModule -->\n\nImportUserModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Server Module used for production\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ImportUserModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { MongoMemoryDatabaseModule } from '@shared/infra/database';\nimport { MongoDatabaseModuleOptions } from '@shared/infra/database/mongo-memory-database/types';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { ImportUserModule } from './modules/user-import/user-import.module';\n\nconst serverModules = [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n];\n\nconst defaultMikroOrmOptions = {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n};\n\n/**\n * Server Module used for production\n */\n@Module({\n\timports: [\n\t\t...serverModules,\n\t\tMikroOrmModule.forRoot({\n\t\t\t...defaultMikroOrmOptions,\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n/**\n * Server module used for testing.\n * Should have same modules than the @ServerModule while infrastucture Modules can be different.\n * Customizations:\n * - In Memory Database instead of external connection\n * // TODO add custom mail, rocketchat, and rabbitmq modules\n * // TODO use instead of ServerModule when NODE_ENV=test\n */\n@Module({\n\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions })],\n\tcontrollers: [ServerController],\n})\nexport class ServerTestModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: ServerTestModule,\n\t\t\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions, ...options })],\n\t\t\tcontrollers: [ServerController],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerTestModule.html":{"url":"modules/ServerTestModule.html","title":"module - ServerTestModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerTestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerTestModule\n\n\n\ncluster_ServerTestModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerTestModule\n\nServerTestModule\n\nServerTestModule -->\n\nAuthModule->ServerTestModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerTestModule -->\n\nCoreModule->ServerTestModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerTestModule -->\n\nFilesModule->ServerTestModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nServerTestModule -->\n\nImportUserModule->ServerTestModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerTestModule -->\n\nLearnroomModule->ServerTestModule\n\n\n\n\n\nMongoMemoryDatabaseModule\n\nMongoMemoryDatabaseModule\n\nServerTestModule -->\n\nMongoMemoryDatabaseModule->ServerTestModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerTestModule -->\n\nNewsModule->ServerTestModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerTestModule -->\n\nTaskModule->ServerTestModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerTestModule -->\n\nUserModule->ServerTestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Server module used for testing.\nShould have same modules than the @ServerModule while infrastucture Modules can be different.\nCustomizations:\n\nIn Memory Database instead of external connection\n// TODO add custom mail, rocketchat, and rabbitmq modules\n// TODO use instead of ServerModule when NODE_ENV=test\n\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ImportUserModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MongoMemoryDatabaseModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.module.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { MongoMemoryDatabaseModule } from '@shared/infra/database';\nimport { MongoDatabaseModuleOptions } from '@shared/infra/database/mongo-memory-database/types';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { ImportUserModule } from './modules/user-import/user-import.module';\n\nconst serverModules = [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n];\n\nconst defaultMikroOrmOptions = {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n};\n\n/**\n * Server Module used for production\n */\n@Module({\n\timports: [\n\t\t...serverModules,\n\t\tMikroOrmModule.forRoot({\n\t\t\t...defaultMikroOrmOptions,\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n/**\n * Server module used for testing.\n * Should have same modules than the @ServerModule while infrastucture Modules can be different.\n * Customizations:\n * - In Memory Database instead of external connection\n * // TODO add custom mail, rocketchat, and rabbitmq modules\n * // TODO use instead of ServerModule when NODE_ENV=test\n */\n@Module({\n\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions })],\n\tcontrollers: [ServerController],\n})\nexport class ServerTestModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: ServerTestModule,\n\t\t\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions, ...options })],\n\t\t\tcontrollers: [ServerController],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StorageProvider.html":{"url":"entities/StorageProvider.html","title":"entity - StorageProvider","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StorageProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessKeyId\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Optional\n                                region\n                            \n                            \n                                secretAccessKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessKeyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretAccessKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'secretAccessKey', type: EncryptedStringType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageProviderRepo.html":{"url":"injectables/StorageProviderRepo.html","title":"injectable - StorageProviderRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageProviderRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StorageProvider, EntityId } from '@shared/domain';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class StorageProviderRepo extends BaseRepo {\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst storageProvider = await this.em.findOneOrFail(StorageProvider, id);\n\t\treturn storageProvider;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Submission.html":{"url":"entities/Submission.html","title":"entity - Submission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmissionFactory.html":{"url":"classes/SubmissionFactory.html","title":"class - SubmissionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmissionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/submission.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n            \n                \ngraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/submission.factory.ts:8\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\nimport { Submission, ISubmissionProperties } from '@shared/domain';\nimport { BaseFactory } from './base.factory';\nimport { taskFactory } from './task.factory';\nimport { userFactory } from './user.factory';\n\nclass SubmissionFactory extends BaseFactory {\n\tgraded(): this {\n\t\tconst params: DeepPartial = { gradeComment: 'graded text' };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const submissionFactory = SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/submission/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/submission/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymetricKeyEncryptionService.html":{"url":"injectables/SymetricKeyEncryptionService.html","title":"injectable - SymetricKeyEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SymetricKeyEncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrypt\n                            \n                            \n                                    Public\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import CryptoJs from 'crypto-js';\n\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SymetricKeyEncryptionService {\n\tconstructor(@Inject('SYMMETRIC_CIPHER_KEY') private readonly key: string) {}\n\n\tpublic encrypt(data: string): string {\n\t\treturn CryptoJs.AES.encrypt(data, this.key).toString();\n\t}\n\n\tpublic decrypt(data: string): string {\n\t\treturn CryptoJs.AES.decrypt(data, this.key).toString(CryptoJs.enc.Utf8);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/System.html":{"url":"entities/System.html","title":"entity - System","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  System\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/system.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */ // TODO remove when implementation exists\nimport { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\n@Entity({ tableName: 'systems' })\nexport class System extends BaseEntityWithTimestamps {\n\tconstructor(props: System) {\n\t\tsuper();\n\t\tthis.type = props.type;\n\t\tif (props.url != null) this.url = props.url;\n\t\tif (props.alias != null) this.alias = props.alias;\n\t}\n\n\t@Property({})\n\ttype: string; // see legacy enum for valid values\n\n\t@Property()\n\turl?: string;\n\n\t@Property()\n\talias?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse({ id: target.id, name: target.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TargetInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TargetInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\tconstructor({ id, name }: TargetInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Task.html":{"url":"entities/Task.html","title":"entity - Task","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                finished\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByParentIds_findAllForTeacher'})@ManyToMany('User', undefined, {fieldName: 'archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                            \n                                    Async\n                                getPermittedLessons\n                            \n                            \n                                    Private\n                                hasCourseReadPermission\n                            \n                            \n                                    Private\n                                hasCourseWritePermission\n                            \n                            \n                                hasOneOfTaskDashboardPermissions\n                            \n                            \n                                hasTaskPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, lessonRepo: LessonRepo, permissionService: PermissionService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionService\n                                                  \n                                                        \n                                                                        PermissionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(user: User, neededPermission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    neededPermission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedLessons(user: User, courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseReadPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseReadPermission(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseWritePermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseWritePermission(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOneOfTaskDashboardPermissions\n                        \n                    \n                \n            \n            \n                \nhasOneOfTaskDashboardPermissions(user: User, permission: TaskDashBoardPermission | TaskDashBoardPermission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission | TaskDashBoardPermission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasTaskPermission\n                        \n                    \n                \n            \n            \n                \nhasTaskPermission(user: User, task: Task, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Course, Lesson, PermissionService, Task, User } from '@shared/domain';\nimport { CourseRepo, LessonRepo } from '@shared/repo';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly permissionService: PermissionService\n\t) {}\n\n\t// it should return also the scopePermissions for this user added to the entity .scopePermission: { userId, read: boolean, write: boolean }\n\t// then we can pass and allow only scoped courses to getPermittedLessonIds and validate read write of .scopePermission\n\tasync getPermittedCourses(user: User, neededPermission: TaskParentPermission): Promise {\n\t\tlet permittedCourses: Course[] = [];\n\n\t\tif (neededPermission === TaskParentPermission.write) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllForTeacher(user.id);\n\t\t} else if (neededPermission === TaskParentPermission.read) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllByUserId(user.id);\n\t\t}\n\n\t\treturn permittedCourses;\n\t}\n\n\tasync getPermittedLessons(user: User, courses: Course[]): Promise {\n\t\tconst writeCourses = courses.filter((c) => this.hasCourseWritePermission(user, c));\n\t\tconst readCourses = courses.filter((c) => !writeCourses.includes(c));\n\n\t\tconst writeCourseIds = writeCourses.map((c) => c.id);\n\t\tconst readCourseIds = readCourses.map((c) => c.id);\n\n\t\t// idea as combined query:\n\t\t// [{courseIds: onlyWriteCoursesIds}, { courseIds: onlyReadCourses, filter: { hidden: false }}]\n\t\tconst [[writeLessons], [readLessons]] = await Promise.all([\n\t\t\tthis.lessonRepo.findAllByCourseIds(writeCourseIds),\n\t\t\tthis.lessonRepo.findAllByCourseIds(readCourseIds, { hidden: false }),\n\t\t]);\n\n\t\tconst permittedLessons = [...writeLessons, ...readLessons];\n\n\t\treturn permittedLessons;\n\t}\n\n\tprivate hasCourseWritePermission(user: User, course: Course): boolean {\n\t\tconst hasPermission = course.substitutionTeachers.contains(user) || course.teachers.contains(user);\n\n\t\treturn hasPermission;\n\t}\n\n\tprivate hasCourseReadPermission(user: User, course: Course): boolean {\n\t\tconst hasPermission =\n\t\t\tcourse.students.contains(user) || course.substitutionTeachers.contains(user) || course.teachers.contains(user);\n\n\t\treturn hasPermission;\n\t}\n\n\thasTaskPermission(user: User, task: Task, permission: TaskParentPermission): boolean {\n\t\tconst isCreator = task.creator === user;\n\t\tlet hasCoursePermission = false;\n\n\t\tif (task.course && permission === TaskParentPermission.write) {\n\t\t\thasCoursePermission = this.hasCourseWritePermission(user, task.course);\n\t\t} else if (task.course && permission === TaskParentPermission.read) {\n\t\t\thasCoursePermission = this.hasCourseReadPermission(user, task.course);\n\t\t}\n\n\t\tconst hasPermission = isCreator || hasCoursePermission;\n\n\t\treturn hasPermission;\n\t}\n\n\thasOneOfTaskDashboardPermissions(\n\t\tuser: User,\n\t\tpermission: TaskDashBoardPermission | TaskDashBoardPermission[]\n\t): boolean {\n\t\tconst permissions = this.permissionService.resolvePermissions(user);\n\n\t\tconst hasPermission = Array.isArray(permission)\n\t\t\t? permission.some((p) => permissions.includes(p))\n\t\t\t: permissions.includes(permission);\n\n\t\treturn hasPermission;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('finished')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskListResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser.userId, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n\n\t@Get('finished')\n\tasync findAllFinished(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAllFinished(currentUser.userId, paginationQuery);\n\n\t\tconst taskresponses = tasksWithStatus.map((task) => {\n\t\t\treturn TaskMapper.mapToResponse(task);\n\t\t});\n\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFactory.html":{"url":"classes/TaskFactory.html","title":"class - TaskFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/task.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                finished\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draft\n                        \n                    \n                \n            \n            \n                \ndraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n            \n                \nfinished(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Task, ITaskProperties } from '@shared/domain';\nimport type { User } from '@shared/domain/entity';\n\nimport { BaseFactory } from './base.factory';\n\nconst yesterday = new Date(Date.now() - 86400000);\n\nclass TaskFactory extends BaseFactory {\n\tdraft(): this {\n\t\tconst params: DeepPartial = { private: true };\n\t\treturn this.params(params);\n\t}\n\n\tfinished(user: User): this {\n\t\tconst params: DeepPartial = { finished: [user] };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const taskFactory = TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false, availableDate: yesterday };\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListResponse.html":{"url":"classes/TaskListResponse.html","title":"class - TaskListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\nimport { TaskStatusMapper } from './task-status.mapper';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst taskDesc = task.getDescriptions();\n\t\tconst statusDto = TaskStatusMapper.mapToResponse(status);\n\n\t\tconst dto = new TaskResponse({\n\t\t\tid: task.id,\n\t\t\tname: task.name,\n\t\t\tcourseName: taskDesc.name,\n\t\t\tcreatedAt: task.createdAt,\n\t\t\tupdatedAt: task.updatedAt,\n\t\t\tstatus: statusDto,\n\t\t});\n\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\n\t\tdto.displayColor = taskDesc.color;\n\t\tdto.description = taskDesc.description;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nTaskModule -->\n\nPermissionService->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nTaskModule -->\n\nUserRepo->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            PermissionService\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from '@shared/domain';\n\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo, UserRepo, PermissionService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Async\n                                findAllFinishedByParentIds\n                            \n                            \n                                    Async\n                                findBySingleParent\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/task/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:91\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinishedByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinishedByParentIds(parentIds: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBySingleParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBySingleParent(creatorId: EntityId, courseId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, QueryOrderMap } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, IFindOptions, Task, Counted, SortOrder } from '@shared/domain';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllFinishedByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId: EntityId;\n\t\t\topenCourseIds: EntityId[];\n\t\t\tlessonIdsOfOpenCourses: EntityId[];\n\t\t\tfinishedCourseIds: EntityId[];\n\t\t\tlessonIdsOfFinishedCourses: EntityId[];\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst { pagination } = options || {};\n\n\t\tconst scope = new TaskScope('$or');\n\n\t\tconst parentsOpen = new TaskScope('$or');\n\t\tparentsOpen.byCourseIds(parentIds.openCourseIds);\n\t\tparentsOpen.byLessonIds(parentIds.lessonIdsOfOpenCourses);\n\n\t\tconst parentsFinished = new TaskScope('$or');\n\t\tparentsFinished.byCourseIds(parentIds.finishedCourseIds);\n\t\tparentsFinished.byLessonIds(parentIds.lessonIdsOfFinishedCourses);\n\n\t\tconst closedForOpenCoursesAndLessons = new TaskScope();\n\t\tclosedForOpenCoursesAndLessons.addQuery(parentsOpen.query);\n\t\tclosedForOpenCoursesAndLessons.byDraft(false);\n\t\tclosedForOpenCoursesAndLessons.byFinished(parentIds.creatorId, true);\n\n\t\tconst allForFinishedCoursesAndLessons = new TaskScope();\n\t\tallForFinishedCoursesAndLessons.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessons.byDraft(false);\n\n\t\t// must find also closed without course or lesson as parent\n\t\tconst closedWithoutParentForCreator = new TaskScope();\n\t\tclosedWithoutParentForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedWithoutParentForCreator.byOnlyCreatorId(parentIds.creatorId);\n\n\t\tconst closedDraftsForCreator = new TaskScope();\n\t\tclosedDraftsForCreator.addQuery(parentsOpen.query);\n\t\tclosedDraftsForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedDraftsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForFinishedCoursesAndLessonsForCreator = new TaskScope();\n\t\tallForFinishedCoursesAndLessonsForCreator.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessonsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForCreator = new TaskScope('$or');\n\t\tallForCreator.addQuery(closedWithoutParentForCreator.query);\n\t\tallForCreator.addQuery(closedDraftsForCreator.query);\n\t\tallForCreator.addQuery(allForFinishedCoursesAndLessonsForCreator.query);\n\n\t\tscope.addQuery(closedForOpenCoursesAndLessons.query);\n\t\tscope.addQuery(allForFinishedCoursesAndLessons.query);\n\t\tscope.addQuery(allForCreator.query);\n\n\t\tconst order = { dueDate: SortOrder.desc };\n\n\t\tconst [tasks, count] = await this.em.findAndCount(Task, scope.query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order,\n\t\t});\n\n\t\tawait this.em.populate(tasks, ['course', 'lesson', 'submissions']);\n\n\t\treturn [tasks, count];\n\t}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: {\n\t\t\tafterDueDateOrNone?: Date;\n\t\t\tfinished?: { userId: EntityId; value: boolean };\n\t\t\tavailableOn?: Date;\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.creatorId) {\n\t\t\tparentIdScope.byOnlyCreatorId(parentIds.creatorId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.finished) {\n\t\t\tscope.byFinished(filters.finished.userId, filters.finished.value);\n\t\t}\n\n\t\tif (parentIds.creatorId) {\n\t\t\tscope.excludeDraftsOfOthers(parentIds.creatorId);\n\t\t} else {\n\t\t\tscope.byDraft(false);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tif (filters?.availableOn !== undefined) {\n\t\t\tif (parentIds.creatorId) {\n\t\t\t\tscope.excludeUnavailableOfOthers(parentIds.creatorId, filters.availableOn);\n\t\t\t} else {\n\t\t\t\tscope.byAvailable(filters?.availableOn);\n\t\t\t}\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tasync findBySingleParent(\n\t\tcreatorId: EntityId,\n\t\tcourseId: EntityId,\n\t\tfilters?: { draft?: boolean; noFutureAvailableDate?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\t\tscope.byCourseIds([courseId]);\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tif (filters?.draft === true) {\n\t\t\t\tscope.excludeDraftsOfOthers(creatorId);\n\t\t\t} else {\n\t\t\t\tscope.byDraft(false);\n\t\t\t}\n\t\t}\n\n\t\tif (filters?.noFutureAvailableDate !== undefined) {\n\t\t\tscope.noFutureAvailableDate();\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '' as string\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byAvailable\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byCreatorId\n                            \n                            \n                                byDraft\n                            \n                            \n                                byFinished\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byOnlyCreatorId\n                            \n                            \n                                excludeDraftsOfOthers\n                            \n                            \n                                excludeUnavailableOfOthers\n                            \n                            \n                                    Private\n                                getByDraftForCreatorQuery\n                            \n                            \n                                    Private\n                                getByDraftQuery\n                            \n                            \n                                noFutureAvailableDate\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byAvailable\n                        \n                    \n                \n            \n            \n                \nbyAvailable(availableDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    availableDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCreatorId\n                        \n                    \n                \n            \n            \n                \nbyCreatorId(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byFinished\n                        \n                    \n                \n            \n            \n                \nbyFinished(userId: EntityId, value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byOnlyCreatorId\n                        \n                    \n                \n            \n            \n                \nbyOnlyCreatorId(teacherId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teacherId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        excludeDraftsOfOthers\n                        \n                    \n                \n            \n            \n                \nexcludeDraftsOfOthers(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        excludeUnavailableOfOthers\n                        \n                    \n                \n            \n            \n                \nexcludeUnavailableOfOthers(creatorId: EntityId, availableOn: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableOn\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getByDraftForCreatorQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByDraftForCreatorQuery(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getByDraftQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByDraftQuery(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noFutureAvailableDate\n                        \n                    \n                \n            \n            \n                \nnoFutureAvailableDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityId, Task } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class TaskScope extends Scope {\n\tbyFinished(userId: EntityId, value: boolean): TaskScope {\n\t\tif (value === true) {\n\t\t\tthis.addQuery({ finished: userId });\n\t\t} else if (value === false) {\n\t\t\tthis.addQuery({ finished: { $ne: userId } });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tbyOnlyCreatorId(teacherId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ creator: teacherId }, { course: null }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyCreatorId(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({ creator: creatorId });\n\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\tconst query = this.getByDraftQuery(isDraft);\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\texcludeDraftsOfOthers(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$or: [this.getByDraftForCreatorQuery(creatorId), this.getByDraftQuery(false)],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyAvailable(availableDate: Date): TaskScope {\n\t\tthis.addQuery({ availableDate: { $lte: availableDate } });\n\n\t\treturn this;\n\t}\n\n\tnoFutureAvailableDate(): TaskScope {\n\t\tconst query = { availableDate: { $lte: new Date(Date.now()) } };\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\texcludeUnavailableOfOthers(creatorId: EntityId, availableOn: Date): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$or: [\n\t\t\t\t{ creator: creatorId },\n\t\t\t\t{ $and: [{ creator: { $ne: creatorId } }, { availableDate: { $lte: availableOn } }] },\n\t\t\t],\n\t\t});\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\n\t\treturn this;\n\t}\n\n\tprivate getByDraftQuery(isDraft: boolean): FilterQuery {\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\n\t\treturn query;\n\t}\n\n\tprivate getByDraftForCreatorQuery(creatorId: EntityId): FilterQuery {\n\t\tconst query = { $and: [{ creator: creatorId }, this.getByDraftQuery(true)] };\n\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusMapper.html":{"url":"classes/TaskStatusMapper.html","title":"class - TaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task-status.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task-status.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { TaskStatusResponse } from '../controller/dto/task-status.response';\n\nexport class TaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): TaskStatusResponse {\n\t\tconst dto = new TaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusResponse.html":{"url":"classes/TaskStatusResponse.html","title":"class - TaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-status.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFinished\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskStatusResponse {\n\tconstructor({ submitted, maxSubmissions, graded, isDraft, isSubstitutionTeacher, isFinished }: TaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t\tthis.isFinished = isFinished;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n\n\t@ApiProperty()\n\tisFinished: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(userId: EntityId, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(user: User, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(user: User, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, SortOrder, TaskWithStatusVo, ITaskStatus, User } from '@shared/domain';\n\nimport { TaskRepo, UserRepo } from '@shared/repo';\n\nimport { TaskAuthorizationService, TaskParentPermission, TaskDashBoardPermission } from './task.authorization.service';\n\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync findAllFinished(userId: EntityId, pagination?: IPagination): Promise> {\n\t\t// load the user including all roles\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tif (\n\t\t\t!this.authorizationService.hasOneOfTaskDashboardPermissions(user, [\n\t\t\t\tTaskDashBoardPermission.teacherDashboard,\n\t\t\t\tTaskDashBoardPermission.studentDashboard,\n\t\t\t])\n\t\t) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.read);\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, courses);\n\n\t\tconst openCourseIds = courses.filter((c) => !c.isFinished()).map((c) => c.id);\n\t\tconst finishedCourseIds = courses.filter((c) => c.isFinished()).map((c) => c.id);\n\t\tconst lessonIdsOfOpenCourses = lessons.filter((l) => !l.course.isFinished()).map((l) => l.id);\n\t\tconst lessonIdsOfFinishedCourses = lessons.filter((l) => l.course.isFinished()).map((l) => l.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllFinishedByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: userId,\n\t\t\t\topenCourseIds,\n\t\t\t\tfinishedCourseIds,\n\t\t\t\tlessonIdsOfOpenCourses,\n\t\t\t\tlessonIdsOfFinishedCourses,\n\t\t\t},\n\t\t\t{ pagination }\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tlet status: ITaskStatus;\n\t\t\tif (this.authorizationService.hasTaskPermission(user, task, TaskParentPermission.write)) {\n\t\t\t\tstatus = task.createTeacherStatusForUser(user);\n\t\t\t} else {\n\t\t\t\t// TaskParentPermission.read check is not needed on this place\n\t\t\t\tstatus = task.createStudentStatusForUser(user);\n\t\t\t}\n\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tasync findAll(userId: EntityId, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\t// load the user including all roles\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tif (this.authorizationService.hasOneOfTaskDashboardPermissions(user, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(user, pagination);\n\t\t} else if (\n\t\t\tthis.authorizationService.hasOneOfTaskDashboardPermissions(user, TaskDashBoardPermission.teacherDashboard)\n\t\t) {\n\t\t\tresponse = await this.findAllForTeacher(user, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(user: User, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.read);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, openCourses);\n\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\t\tconst notFinished = { userId: user.id, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: user.id,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ afterDueDateOrNone: dueDate, finished: notFinished, availableOn: new Date() },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate async findAllForTeacher(user: User, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.write);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, openCourses);\n\n\t\tconst notFinished = { userId: user.id, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: user.id,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ finished: notFinished, availableOn: new Date() },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Team.html":{"url":"entities/Team.html","title":"entity - Team","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TeamNews.html":{"url":"entities/TeamNews.html","title":"entity - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:110\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsListResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMatchParams.html":{"url":"classes/UpdateMatchParams.html","title":"class - UpdateMatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/update-match.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'updates local user reference for an import user'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/update-match.params.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateMatchParams {\n\t@ApiProperty({ description: 'updates local user reference for an import user' })\n\t@IsMongoId()\n\tuserId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser, PermissionService } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserRepo } from '@shared/repo';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\nimport { ResolvedUserMapper } from '../mapper';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userRepo: UserRepo, private readonly permissionService: PermissionService) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst user = await this.userRepo.findById(currentUser.userId, true);\n\t\tconst permissions = this.permissionService.resolvePermissions(user);\n\n\t\t// only the root roles of the user get published\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, user.roles.getItems());\n\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse({\n\t\t\tid: user.id,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t});\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: UserInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        UserInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\tconstructor({ id, firstName, lastName }: UserInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatch.html":{"url":"classes/UserMatch.html","title":"class - UserMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                matchedBy\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: UserMatch)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        UserMatch\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        matchedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchCreator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum({fieldName: 'matchedBy'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n\tEmbeddable,\n\tEmbedded,\n\tEntity,\n\tEnum,\n\tIdentifiedReference,\n\tManyToOne,\n\tProperty,\n\tReference,\n} from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport { System } from './system.entity';\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tmatch?: UserMatch;\n\tflagged?: boolean;\n}\n\n// class EMailVO {\n// \t_email: string;\n\n// \tset email(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n\n// \tget email(): string {\n// \t\treturn this._email;\n// \t}\n\n// \tconstructor(value: string) {\n// \t\tthis._email = value.toLowerCase();\n// \t}\n// }\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\n@Embeddable()\nexport class UserMatch extends BaseEntityWithTimestamps {\n\tconstructor(props: UserMatch) {\n\t\tsuper();\n\t\tthis.user = props.user;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@Property({ fieldName: 'userId' })\n\tuser: User;\n\n\t@Enum({ fieldName: 'matchedBy' })\n\tmatchedBy: MatchCreator;\n}\n\n@Entity({ tableName: 'importUser' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\t@ManyToOne(() => 'School', { wrappedReference: true, lazy: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true, lazy: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string // TODO VO\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t@Embedded({ entity: () => UserMatch, object: true })\n\tmatch?: UserMatch;\n\n\t@Property()\n\tflagged = false;\n\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = Reference.create(props.school);\n\t\tthis.system = Reference.create(props.system);\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.match) this.match = props.match;\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatchResponse.html":{"url":"classes/UserMatchResponse.html","title":"class - UserMatchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/user-match.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                loginName\n                            \n                            \n                                matchedBy\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: UserMatchResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        UserMatchResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'firstname of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'lastname of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'login name of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchCreatorResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'match type: admin (manual) or auto (set, when names match exactly for a single user', enum: MatchCreatorResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({description: 'local user id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\nimport { MatchCreatorResponse } from './match-creator.response';\n\nexport class UserMatchResponse {\n\tconstructor(props: UserMatchResponse) {\n\t\tthis.userId = props.userId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.matchedBy = props.matchedBy;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({ description: 'local user id' })\n\tuserId: string;\n\n\t@ApiProperty({ description: 'login name of local user' })\n\tloginName: string;\n\n\t@ApiProperty({ description: 'firstname of local user' })\n\tfirstName: string;\n\n\t@ApiProperty({ description: 'lastname of local user' })\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'match type: admin (manual) or auto (set, when names match exactly for a single user',\n\t\tenum: MatchCreatorResponse,\n\t})\n\tmatchedBy: MatchCreatorResponse;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPermissionService\n\nPermissionService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPermissionService->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from '@shared/domain';\nimport { UserRepo } from '@shared/repo';\nimport { UserController } from './controller';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [UserRepo, PermissionService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/user/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Private\n                                    Async\n                                populateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/user/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId, populateRoles)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    populateRoles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        populateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRoles(roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId, populateRoles = false): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\n\t\tif (populateRoles) {\n\t\t\tawait this.em.populate(user, ['roles']);\n\t\t\tawait this.populateRoles(user.roles.getItems());\n\t\t}\n\n\t\treturn user;\n\t}\n\n\tprivate async populateRoles(roles: Role[]): Promise {\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.18.1\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.1\n        \n            @nestjs/common : ^8.2.3\n        \n            @nestjs/core : ^8.2.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.2.3\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.3\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.8.2\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^3.2.2\n        \n            aws-sdk : ^2.1041.0\n        \n            axios : ^0.24.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.6.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.13.2\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^13.1.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.5.1\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LearnroomTypes   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MatchCreator   (apps/.../import-user.entity.ts)\n                        \n                        \n                            MatchCreatorResponse   (apps/.../match-creator.response.ts)\n                        \n                        \n                            MatchFilterQuery   (apps/.../import-user-filter.query.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            RoleName   (apps/.../import-user.entity.ts)\n                        \n                        \n                            RoleNameResponse   (apps/.../role-name.response.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.authorization.service.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n        \n            \n                \n                    \n                        \n                        LearnroomTypes\n                    \n                \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : course\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/entity/import-user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreator\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleName\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/match-creator.response.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreatorResponse\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchFilterQuery\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/role-name.response.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleNameResponse\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createStorageProviderClient   (apps/.../filestorage.adapter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createStorageProviderClient\n                        \n                    \n                \n            \n            \n                \ncreateStorageProviderClient(storageProvider: StorageProvider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageProvider\n                                    \n                                                StorageProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     S3Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImportUserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RocketChatModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerTestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_ImportUserModule\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerTestModule\n\n\n\ncluster_ServerTestModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nServerTestModule\n\nServerTestModule\n\nServerTestModule -->\n\nUserModule->ServerTestModule\n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\nServerTestModule -->\n\nAuthModule->ServerTestModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\nAuthModule -->\n\nUserRepo->AuthModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nUserRepo->LearnroomModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nUserRepo->TaskModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nImportUserModule -->\n\nAuthorizationModule->ImportUserModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\nImportUserModule -->\n\nLoggerModule->ImportUserModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\nServerTestModule -->\n\nCoreModule->ServerTestModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\nServerTestModule -->\n\nFilesModule->ServerTestModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\nServerModule -->\n\nImportUserModule->ServerModule\n\n\n\nServerTestModule -->\n\nImportUserModule->ServerTestModule\n\n\n\n\n\nBoardMapper\n\nBoardMapper\n\nLearnroomModule -->\n\nBoardMapper->LearnroomModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nLearnroomModule -->\n\nLessonRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nRoomsUc\n\nRoomsUc\n\nLearnroomModule -->\n\nRoomsUc->LearnroomModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nLearnroomModule -->\n\nTaskRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\nServerTestModule -->\n\nLearnroomModule->ServerTestModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\nServerTestModule -->\n\nNewsModule->ServerTestModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\nServerTestModule -->\n\nTaskModule->ServerTestModule\n\n\n\n\n\nMongoMemoryDatabaseModule\n\nMongoMemoryDatabaseModule\n\nServerTestModule -->\n\nMongoMemoryDatabaseModule->ServerTestModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nUserModule -->\n\nPermissionService->UserModule\n\n\n\nTaskModule -->\n\nPermissionService->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        25 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    23 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    41 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    72 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    50 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BoardElement   (apps/.../rooms.uc.ts)\n                        \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GenericData   (apps/.../rocket-chat.service.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPositionWithGroupIndex   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            LearnroomMetadata   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/learnroom/uc/rooms.uc.ts\n    \n    \n        \n            \n                \n                    \n                    BoardElement\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPositionWithGroupIndex\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/rocketchat/rocket-chat.service.ts\n    \n    \n        \n            \n                \n                    \n                    GenericData\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                            School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n    \n        \n            \n                \n                    \n                    LearnroomMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            cleanupCollections   (apps/.../cleanup-collections.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            courseGroupFactory   (apps/.../coursegroup.factory.ts)\n                        \n                        \n                            courseNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultMikroOrmOptions   (apps/.../server.module.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            directoryFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            fileFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            generateEmptyDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            lessonFactory   (apps/.../lesson.factory.ts)\n                        \n                        \n                            mapUserToCurrentUser   (apps/.../map-user-to-current-user.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            oneDay   (apps/.../course.factory.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            roleFactory   (apps/.../role.factory.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            schoolNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            serverModules   (apps/.../server.module.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            storageProviderFactory   (apps/.../storageprovider.factory.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            submissionFactory   (apps/.../submission.factory.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskFactory   (apps/.../task.factory.ts)\n                        \n                        \n                            teamFactory   (apps/.../team.factory.ts)\n                        \n                        \n                            teamNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                            yesterday   (apps/.../task.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tBaseFile,\n\tFile,\n\tDirectory,\n\tStorageProvider,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n\tSystem,\n\t// TODO move import user entities?\n\tImportUser,\n\tUserMatch,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/testing/cleanup-collections.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanupCollections\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (em: EntityManager): Promise => {\n\tconst allCollections = await em.getConnection('write').listCollections();\n\tawait Promise.all(\n\t\tallCollections.map(async (collectionName) => {\n\t\t\tawait em.getConnection().deleteMany(collectionName, {});\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.addServer('/api/v3/') // add default path as server to have correct urls ald let 'try out' work\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oneDay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 24 * 60 * 60 * 1000\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/coursegroup.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseGroupFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseGroup, () => {\n\treturn {\n\t\tcourse: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/news.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(SchoolNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(TeamNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: teamFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create default response for all unknown errors\n\t\treturn createErrorResponseForUnknownError();\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultMikroOrmOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/file.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        directoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Directory, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `directory-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(File, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `file-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateEmptyDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/lesson.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lessonFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/map-user-to-current-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapUserToCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (user: User): ICurrentUser =>\n\t({\n\t\tuserId: user.id,\n\t\troles: user.roles.getItems().map((r) => r.id),\n\t\tschoolId: user.school.id,\n\t\taccountId: new ObjectId().toHexString(),\n\t} as ICurrentUser)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/role.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Role, ({ sequence }) => {\n\treturn {\n\t\tname: `role #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(School, ({ sequence }) => {\n\treturn { name: `school #${sequence}` };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/storageprovider.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageProviderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(\n\tStorageProvider,\n\t() => {\n\t\treturn {\n\t\t\tendpointUrl: 'http://localhost',\n\t\t\taccessKeyId: 'accessKeyId',\n\t\t\tsecretAccessKey: 'secret',\n\t\t};\n\t}\n)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/submission.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        submissionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/task.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        taskFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false, availableDate: yesterday };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yesterday\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(Date.now() - 86400000)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/team.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Team, ({ sequence }) => {\n\treturn {\n\t\tname: `team #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(User, ({ sequence }) => {\n\treturn {\n\t\tfirstName: 'John',\n\t\tlastName: `Doe ${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troles: [],\n\t\tschool: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '@src/core/logger';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '@src/core/logger';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                                  (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                                    (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                                     (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as NewsListResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nStrict settings: Property Initialization\nDue to different ways of how instances are generated while we focus on having strict settings enabled by default, we have the following exceptions for strict property initialization defined:\n\nreponse dtos (generated in controllers by mappers based on entities) will get constructors added for setting all or at least all required properties via constructors\nrequest dtos will use ! on properties ang do not get constructors added. The validity must be defined by and match with class validator decorators on properties. The application then will generate valid instances on input data. \nfor entity id and _id the developer must know if the values are present or not depending on persistence state of an entity\nall other classes should use complete constructors, and avoid use of ! on properties, especially all providers, and entities for application use and testing\nlegacy code might have got some ! added which should be removed and get constructors added correctly.\n\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
