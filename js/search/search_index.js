var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Account.html",[0,0.148,1,2.85]],["body/classes/Account.html",[0,0.161,1,4.111,2,1.008,3,0.126,4,0.106,5,0.086,6,4.815,7,1.572,8,3.172,9,0.249,10,0.818,11,8.003,12,2.404,13,6.592,14,2.763,15,2.816,16,1.417,17,2.871,18,1.205,19,7.137,20,5.609,21,0.938,22,5.388,23,0.777,24,0.006,25,0.45,26,0.378,27,0.516,28,2.694,29,2.452,30,2.779,31,5.388,32,2.145,33,2.472,34,1.547,35,3.575,36,4.437,37,4.746,38,5.388,39,0.944,40,5.388,41,1.691,42,2.21,43,3.121,44,2.57,45,2.57,46,2.21,47,2.57,48,2.511,49,2.085,50,2.57,51,0.326,52,1.148,53,4.395,54,2.351,55,1.17,56,1.489,57,0.949,58,5.388,59,2.047,60,4.815,61,0.12,62,1.611,63,1.973,64,2.568,65,2.511,66,3.442,67,5.388,68,3.442,69,2.698,70,2.047,71,3.93,72,4.815,73,3.93,74,3.318,75,2.57,76,2.167,77,5.388,78,5.388,79,4.156,80,0.004,81,0.004]],["title/classes/ApiValidationError.html",[0,0.148,82,3.291]],["body/classes/ApiValidationError.html",[0,0.175,2,1.092,3,0.137,4,0.115,5,0.093,7,1.657,9,0.27,10,0.862,18,1.306,21,0.954,23,0.843,24,0.006,25,0.488,26,0.395,27,0.559,39,0.922,43,3.47,51,0.306,61,0.13,62,1.747,65,2.722,80,0.004,81,0.004,82,5.003,83,6.723,84,5.219,85,6.247,86,3.456,87,3.353,88,4.951,89,4.333,90,3.048,91,1.407,92,6.855,93,6.855,94,5.84,95,6.107,96,5.84,97,7.437,98,1.775,99,5.219,100,5.003,101,5.219,102,5.219,103,5.219,104,5.219,105,5.219,106,1.386,107,5.219,108,3.474,109,4.504,110,1.287,111,5.219,112,4.81,113,4.81,114,3.676,115,4.082,116,2.722,117,4.26,118,4.26,119,5.219]],["title/classes/ApiValidationErrorResponse.html",[0,0.148,120,3.817]],["body/classes/ApiValidationErrorResponse.html",[0,0.182,2,1.135,3,0.142,4,0.119,5,0.097,7,1.698,9,0.281,10,0.884,18,1.357,21,0.766,23,0.875,24,0.006,25,0.507,26,0.345,27,0.581,34,1.399,51,0.345,61,0.135,80,0.004,81,0.004,82,6.254,87,3.436,89,4.44,90,2.823,97,7.572,108,5.041,114,3.766,115,5.185,116,2.827,118,4.426,120,5.945,121,7.572,122,5.421,123,2.036,124,5.126,125,4.44,126,4.925,127,4.837,128,7.708,129,6.066,130,6.535,131,6.066,132,4.679,133,5.421,134,6.066,135,1.759,136,6.066,137,6.066,138,6.066,139,7.708,140,7.708,141,6.066,142,1.298,143,7.708,144,6.066]],["title/interfaces/AppendedAttachment.html",[145,0.456,146,3.047]],["body/interfaces/AppendedAttachment.html",[3,0.153,4,0.128,5,0.104,7,2.07,9,0.301,10,0.924,24,0.006,25,0.544,39,1.12,61,0.144,80,0.005,81,0.005,145,0.895,146,5.387,147,1.799,148,4.158,149,5.63,150,6.248,151,4.327,152,4.327,153,4.96,154,4.327,155,4.327,156,4.327,157,5.387,158,4.158,159,4.327,160,4.96,161,5.357,162,5.357,163,4.96,164,4.371,165,4.158,166,4.327,167,4.327,168,4.327]],["title/modules/AuthModule.html",[169,1.48,170,3.61]],["body/modules/AuthModule.html",[0,0.195,3,0.153,4,0.128,5,0.104,12,1.721,24,0.006,51,0.395,61,0.145,80,0.005,81,0.005,110,1.437,169,2.412,170,7.26,171,2.73,172,3.759,173,5.828,174,5.828,175,5.828,176,6.654,177,6.988,178,6.654,179,4.506,180,3.442,181,2.971,182,6.521,183,3.675,184,3.941,185,8.066,186,5.03,187,6.521,188,5.828,189,6.521,190,4.531,191,5.371,192,6.521,193,5.828,194,6.521]],["title/modules/AuthorizationModule.html",[169,1.48,195,3.438]],["body/modules/AuthorizationModule.html",[0,0.198,3,0.155,4,0.13,5,0.105,24,0.006,51,0.374,61,0.146,80,0.005,81,0.005,110,1.455,169,2.431,171,2.764,172,3.789,179,4.541,180,3.485,181,3.009,183,3.704,184,3.972,195,6.963,196,5.901,197,5.901,198,5.901,199,5.901,200,6.675,201,6.198,202,6.389,203,6.604,204,4.541,205,6.604,206,6.604,207,3.485,208,5.901]],["title/injectables/AuthorizationService.html",[201,3.047,209,1.09]],["body/injectables/AuthorizationService.html",[0,0.131,3,0.102,4,0.086,5,0.07,9,0.202,12,2.442,18,0.976,21,0.775,23,1.125,24,0.006,25,0.652,26,0.317,27,0.747,34,0.793,39,0.946,51,0.317,52,1.375,57,0.769,61,0.097,69,3.906,80,0.004,81,0.004,91,1.156,106,1.517,110,0.962,135,1.619,142,1.04,201,3.805,202,5.682,207,2.304,208,3.902,209,1.361,210,1.659,211,3.902,212,2.866,213,6.409,214,5.522,215,7.172,216,4.366,217,4.366,218,4.366,219,2.562,220,4.766,221,4.635,222,5.764,223,4.166,224,4.366,225,3.676,226,6.179,227,4.637,228,3.916,229,2.639,230,4.293,231,6.179,232,4.366,233,4.983,234,3.902,235,4.366,236,4.109,237,5.522,238,3.948,239,5.089,240,3.902,241,1.865,242,5.17,243,4.293,244,2.762,245,4.366,246,4.366,247,3.596,248,4.366,249,4.366,250,4.366,251,6.179,252,4.366,253,4.366,254,2.515,255,4.366,256,6.179,257,4.366,258,4.366]],["title/classes/BaseEntity.html",[0,0.148,259,2.543]],["body/classes/BaseEntity.html",[0,0.256,2,1.157,3,0.145,4,0.122,5,0.099,8,2.664,9,0.286,10,0.98,14,3.475,15,2.441,16,1.783,17,2.488,21,0.776,24,0.006,26,0.318,28,2.598,29,2.256,30,2.557,34,1.552,39,0.947,41,2.819,42,3.683,46,3.683,51,0.318,52,1.444,55,1.694,56,1.71,61,0.173,63,2.266,64,2.225,80,0.004,81,0.004,87,2.757,259,4.393,260,5.095,261,6.186,262,6.186,263,2.441,264,4.771,265,4.513,266,5.095,267,5.095,268,5.528,269,4.114,270,3.357,271,5.528,272,3.456,273,4.771,274,3.809,275,3.563,276,5.528,277,5.095,278,5.528,279,4.298,280,3.952,281,4.771,282,5.095,283,5.528]],["title/classes/BaseEntityWithTimestamps.html",[0,0.148,8,1.689]],["body/classes/BaseEntityWithTimestamps.html",[0,0.25,2,1.103,3,0.138,4,0.116,5,0.094,8,2.854,9,0.273,10,0.958,14,3.414,15,3.298,16,1.751,17,3.362,21,0.877,24,0.006,26,0.308,28,2.772,29,2.408,30,2.638,32,2.028,33,2.338,34,1.656,39,0.926,41,2.769,42,3.619,46,3.619,48,2.747,49,2.282,51,0.308,52,1.419,55,1.643,56,1.629,61,0.168,63,2.159,64,2.121,80,0.004,81,0.004,87,2.628,259,3.889,260,4.855,263,2.326,264,4.547,265,4.301,266,4.855,267,4.855,268,5.268,269,3.92,270,3.199,271,5.268,272,3.293,273,4.547,274,3.63,275,3.395,276,5.268,277,4.855,278,5.268,279,4.096,280,3.766,281,4.547,282,4.855,283,5.268,284,5.895,285,5.895,286,5.895,287,5.895]],["title/injectables/BaseRepo.html",[209,1.09,288,3.438]],["body/injectables/BaseRepo.html",[0,0.138,3,0.108,4,0.091,5,0.073,9,0.213,18,1.029,21,0.93,23,1.333,24,0.006,25,0.772,26,0.376,27,0.885,51,0.3,52,1.398,55,0.999,57,0.811,61,0.102,69,3.998,80,0.004,81,0.004,86,1.627,91,1.2,106,1.703,110,1.014,135,1.331,142,1.463,209,1.413,210,1.749,212,3.054,229,2.89,244,2.817,259,2.366,263,1.816,288,4.456,289,4.114,290,7.134,291,4.456,292,5.731,293,5.731,294,5.731,295,3.48,296,5.731,297,5.731,298,5.731,299,2.941,300,4.598,301,4.603,302,3.385,303,4.603,304,4.947,305,6.717,306,4.603,307,5.731,308,4.603,309,5.731,310,4.603,311,5.731,312,4.603,313,5.731,314,4.603,315,4.102,316,5.731,317,4.603,318,5.731,319,4.603,320,5.731,321,4.603,322,3.791,323,4.603,324,4.603,325,6.157,326,6.413,327,6.413,328,6.413,329,7.381,330,7.381,331,4.603,332,6.413]],["title/classes/BusinessError.html",[0,0.148,85,3.162]],["body/classes/BusinessError.html",[0,0.233,2,0.952,3,0.119,4,0.1,5,0.081,7,1.514,9,0.236,10,0.788,18,1.536,21,0.926,23,0.734,24,0.006,25,0.425,26,0.397,27,0.488,34,0.924,39,0.992,51,0.317,61,0.113,62,1.522,74,4.231,75,3.278,80,0.004,81,0.004,85,4.39,86,3.485,87,4.208,88,5.45,89,4.797,90,3.282,91,1.285,92,6.859,93,6.859,98,2.088,100,6.091,106,1.266,108,4.627,109,6.423,110,1.121,115,2.762,117,5.674,123,1.708,127,4.519,142,1.157,333,4.549,334,4.345,335,5.012,336,4.088,337,4.774,338,4.088,339,4.39,340,6.859,341,5.09,342,6.075,343,6.871,344,2.686,345,5.09,346,5.09,347,5.09,348,5.09,349,5.09,350,5.09,351,5.09,352,5.09,353,5.09,354,3.536,355,5.09,356,4.549,357,6.871,358,5.09,359,3.958,360,6.871,361,6.871,362,5.09]],["title/injectables/ConsoleWriter.html",[209,1.09,363,3.438]],["body/injectables/ConsoleWriter.html",[0,0.2,3,0.208,4,0.132,5,0.107,9,0.31,10,0.939,21,0.815,23,0.965,24,0.006,25,0.559,26,0.272,27,0.641,32,1.793,33,2.066,39,0.981,51,0.333,61,0.148,80,0.005,81,0.005,91,1.533,106,1.233,110,1.474,209,1.805,210,2.541,315,4.21,363,5.692,364,7.914,365,6.831,366,5.977,367,9.23,368,8.192,369,6.688,370,5.509,371,8.856,372,6.688,373,3.268,374,5.234,375,6.688,376,3.35,377,3.437,378,6.688,379,6.688,380,6.688]],["title/modules/CoreModule.html",[169,1.48,381,3.61]],["body/modules/CoreModule.html",[0,0.183,3,0.143,4,0.12,5,0.097,24,0.006,51,0.375,61,0.135,75,3.691,80,0.004,81,0.004,110,1.344,116,3.606,123,2.048,169,2.672,171,2.554,172,3.606,179,4.322,180,3.22,181,2.78,184,3.78,381,7.267,382,5.453,383,5.453,384,6.872,385,6.872,386,6.018,387,6.872,388,6.102,389,5.145,390,7.737,391,5.145,392,5.967,393,6.372,394,7.737,395,4.603,396,5.967,397,5.145,398,7.737,399,4.603,400,5.644,401,6.914,402,7.737,403,5.967,404,6.102,405,6.102,406,6.102,407,6.102]],["title/classes/Course.html",[0,0.148,408,1.78]],["body/classes/Course.html",[0,0.115,2,0.719,3,0.09,4,0.076,5,0.061,7,1.242,8,2.887,9,0.379,10,0.647,14,2.183,15,2.225,16,1.46,17,2.268,18,1.261,21,0.934,23,0.555,24,0.006,25,0.725,26,0.371,27,0.368,28,1.714,29,2.407,30,2.647,32,2.518,33,2.679,34,1.024,37,3.75,39,1.04,41,2.95,42,1.578,43,2.694,44,1.835,45,1.835,46,1.578,47,1.835,48,1.792,49,2.847,50,1.835,51,0.299,52,0.907,55,1.224,56,1.063,57,0.678,59,1.461,61,0.085,62,1.15,63,2.446,70,1.461,76,2.268,80,0.003,81,0.003,91,1.055,98,1.714,106,1.039,123,2.838,135,0.798,142,0.95,145,0.355,219,1.488,263,1.517,295,2.087,302,2.03,395,2.288,408,2.029,409,2.966,410,4.67,411,3.078,412,4.699,413,5.11,414,5.11,415,4.699,416,4.699,417,1.993,418,5.673,419,5.639,420,1.489,421,6.572,422,6.677,423,6.572,424,3.846,425,6.572,426,3.846,427,5.639,428,3.846,429,5.639,430,3.846,431,5.04,432,3.846,433,3.846,434,3.846,435,2.03,436,3.846,437,2.368,438,2.457,439,3.437,440,3.75,441,5.04,442,3.437,443,2.966,444,3.437,445,2.672,446,3.437,447,3.437,448,3.167,449,2.806,450,2.806,451,3.918,452,3.437,453,3.437,454,3.167,455,3.167,456,1.835,457,3.06,458,2.087,459,5.04,460,3.437,461,3.437,462,3.437,463,4.35,464,2.966,465,3.437,466,3.437,467,3.437,468,3.437,469,5.04,470,3.437,471,3.437,472,2.368,473,3.437,474,3.437,475,2.148]],["title/classes/CourseGroupInfo.html",[0,0.148,476,3.047]],["body/classes/CourseGroupInfo.html",[0,0.164,2,1.024,3,0.128,4,0.108,5,0.087,7,1.589,8,3.184,9,0.253,10,0.827,12,1.444,14,2.791,15,2.845,16,1.432,17,2.901,18,1.224,21,0.928,23,0.79,24,0.006,25,0.457,26,0.372,27,0.524,28,2.191,29,2.415,30,2.564,32,2.162,33,2.491,34,1.556,35,3.612,36,4.507,37,4.795,39,0.606,41,2.797,42,2.245,43,3.14,44,2.611,45,2.611,46,2.245,47,2.611,48,2.551,49,2.118,50,2.611,51,0.349,52,1.16,53,4.44,54,2.388,55,1.565,56,1.513,57,0.964,59,2.079,61,0.121,62,1.637,70,2.079,76,2.201,80,0.004,81,0.004,145,0.505,263,2.159,417,2.549,420,2.118,476,4.44,477,7.061,478,5.701,479,2.969,480,4.789,481,5.925,482,6.612,483,7.211,484,4.524,485,4.89,486,1.969,487,2.674,488,3.639,489,4.221,490,4.221,491,4.89]],["title/classes/CourseInfo.html",[0,0.148,492,2.685]],["body/classes/CourseInfo.html",[0,0.191,2,1.195,3,0.15,4,0.126,5,0.102,7,1.754,9,0.296,10,0.913,14,3.082,16,1.581,18,1.429,21,0.903,23,0.922,24,0.006,25,0.781,26,0.388,27,0.612,29,2.29,30,2.595,39,1.006,41,2.005,42,2.621,43,2.917,46,2.621,51,0.324,52,1.281,55,1.387,56,1.766,57,1.125,59,2.427,61,0.142,62,1.91,80,0.005,81,0.005,259,4.802,417,2.814,420,2.473,435,4.203,456,3.047,457,3.466,458,3.466,479,3.466,492,4.321,493,7.754,494,6.142,495,4.66,496,4.66]],["title/classes/CourseNews.html",[0,0.148,497,2.85]],["body/classes/CourseNews.html",[0,0.203,2,0.612,3,0.077,4,0.144,5,0.052,7,1.61,8,2.63,9,0.151,10,0.573,12,0.863,14,1.934,15,1.971,16,1.203,17,2.009,21,0.929,23,0.472,24,0.006,25,0.567,26,0.374,27,0.811,28,2.221,29,2.428,30,2.726,32,1.624,33,1.872,34,1.327,39,1.019,41,1.027,42,1.342,43,3.422,44,1.56,45,1.56,46,1.342,47,1.56,48,1.525,49,1.266,50,1.56,51,0.326,52,1.175,54,2.644,55,0.71,56,0.904,57,0.576,61,0.162,62,0.978,64,2.181,66,4.669,70,1.243,76,2.438,80,0.003,81,0.003,90,2.822,91,0.935,106,0.603,142,0.551,145,0.302,219,1.929,220,3.916,221,3.859,223,2.537,243,2.273,272,3.386,334,2.791,359,1.884,408,1.177,411,2.091,417,1.156,420,2.346,487,3.315,492,3.289,497,2.878,498,2.273,499,3.699,500,3.937,501,3.859,502,3.965,503,3.682,504,4.95,505,3.039,506,4.714,507,4.512,508,2.762,509,3.853,510,4.139,511,3.271,512,2.694,513,3.471,514,4.209,515,4.031,516,3.471,517,2.694,518,2.694,519,3.645,520,4.335,521,3.645,522,3.471,523,2.502,524,3.322,525,3.471,526,2.694,527,2.694,528,3.581,529,2.694,530,3.491,531,3.873,532,2.694,533,2.694,534,2.962,535,2.694,536,3.322,537,2.694,538,3.645,539,2.694,540,3.645,541,2.694,542,2.972,543,2.386,544,2.711,545,1.775,546,2.273,547,1.398,548,1.638,549,2.175,550,2.09,551,2.386,552,2.386,553,2.386,554,2.386,555,2.386,556,2.014,557,2.175,558,2.386,559,3.645,560,2.891,561,2.962,562,2.825,563,2.825,564,2.891,565,3.491,566,3.491,567,2.386,568,3.645,569,2.386,570,2.386,571,4.422,572,1.946,573,1.946]],["title/injectables/CourseRepo.html",[209,1.09,574,3.291]],["body/injectables/CourseRepo.html",[0,0.202,3,0.116,4,0.097,5,0.079,7,1.088,9,0.229,18,1.104,21,0.818,23,1.187,24,0.006,25,0.687,26,0.335,27,0.788,34,1.65,41,1.55,51,0.35,55,1.072,57,0.87,61,0.11,80,0.004,81,0.004,86,1.745,91,1.259,106,1.411,110,1.088,135,1.988,142,1.385,209,1.483,210,1.876,212,2.945,219,2.527,228,3.588,229,2.743,241,2.109,244,2.57,263,1.948,299,3.155,300,4.737,302,3.552,408,1.776,412,4.3,413,4.676,414,4.676,456,4.236,574,4.476,575,4.066,576,6.015,577,6.015,578,6.015,579,4.937,580,5.543,581,4.937,582,5.543,583,4.937,584,5.543,585,4.937,586,2.844,587,3.04,588,3.341,589,3.808,590,5.906,591,4.412,592,5.191,593,7.936,594,7.349,595,7.349,596,3.808,597,4.412,598,5.674,599,6.843,600,4.412,601,3.747]],["title/classes/CourseScope.html",[0,0.148,590,3.817]],["body/classes/CourseScope.html",[0,0.197,2,0.894,3,0.112,4,0.094,5,0.076,7,1.45,9,0.221,10,0.755,21,0.807,23,1.17,24,0.006,25,0.629,26,0.346,27,0.721,32,1.281,33,1.476,34,1.636,39,0.898,41,1.5,43,2.757,51,0.346,55,1.037,57,0.842,61,0.106,80,0.004,81,0.004,86,1.689,91,1.231,106,1.387,110,1.053,135,1.977,142,1.366,209,1.45,212,2.364,219,2.378,228,2.872,229,2.325,241,2.042,244,2.526,263,1.885,300,3.791,302,2.522,315,3.382,408,1.719,412,4.205,413,4.573,414,4.573,456,4.195,574,3.178,575,3.936,580,3.936,582,3.936,584,3.936,586,2.753,587,2.943,588,3.931,589,3.686,590,6.562,591,5.882,592,5.077,593,7.858,594,7.249,595,7.249,596,3.686,597,4.271,598,5.618,599,6.728,600,4.271,601,3.877,602,2.411,603,5.077,604,6.582,605,5.077,606,5.077,607,5.006,608,3.936,609,4.779,610,3.686,611,4.573,612,3.936,613,3.686,614,5.492,615,4.802,616,4.802,617,3.936,618,3.486]],["title/classes/Coursegroup.html",[0,0.148,619,2.765]],["body/classes/Coursegroup.html",[0,0.155,2,0.969,3,0.122,4,0.102,5,0.083,7,1.532,8,3.141,9,0.24,10,0.797,14,2.692,15,2.744,16,1.381,17,2.797,18,1.159,21,0.942,23,1.003,24,0.006,25,0.581,26,0.367,27,0.666,28,2.114,29,2.378,30,2.617,32,2.104,33,2.424,34,1.263,37,4.625,39,0.574,41,3.072,42,2.126,43,3.073,44,2.472,45,2.472,46,2.126,47,2.472,48,2.415,49,2.006,50,2.472,51,0.319,52,1.119,55,1.51,56,1.433,57,0.913,59,1.969,61,0.154,62,1.55,63,1.898,70,1.969,76,2.085,80,0.004,81,0.004,91,1.301,106,1.282,135,1.076,142,1.171,145,0.478,228,2.261,263,2.045,412,5.36,417,2.458,420,2.006,463,3.997,464,3.997,480,4.687,488,3.446,489,5.364,490,3.997,592,6.054,619,3.885,620,4.268,621,7.497,622,7.015,623,6.471,624,6.955,625,5.182,626,5.182,627,5.182,628,6.215,629,5.182,630,3.034,631,3.781,632,4.631]],["title/interfaces/CoursegroupInfoProperties.html",[145,0.456,482,3.817]],["body/interfaces/CoursegroupInfoProperties.html",[0,0.191,3,0.15,4,0.126,5,0.102,7,1.407,8,2.718,9,0.296,10,0.913,12,1.686,24,0.006,26,0.353,27,0.763,30,2.381,34,1.16,35,3.199,37,4.248,41,2.934,51,0.37,52,1.281,53,4.903,54,2.787,55,1.729,56,1.766,57,1.125,59,2.427,61,0.142,62,1.91,70,2.427,76,2.569,80,0.005,81,0.005,145,0.589,147,1.766,263,2.52,417,2.258,476,3.934,477,5.261,478,4.248,479,3.466,480,5.221,481,6.337,482,6.692,484,4.932,486,2.298,487,3.121,488,4.248,489,4.927,490,4.927,491,5.709]],["title/injectables/CoursegroupRepo.html",[209,1.09,633,4.076]],["body/injectables/CoursegroupRepo.html",[0,0.192,3,0.15,4,0.126,5,0.102,9,0.297,18,1.434,21,0.794,23,1.152,24,0.006,25,0.667,26,0.325,27,0.765,34,1.165,41,2.014,51,0.37,55,1.392,57,1.13,61,0.142,80,0.005,81,0.005,86,2.267,91,1.493,106,1.182,110,1.413,135,1.332,142,1.08,209,1.759,210,2.437,212,2.729,219,2.401,229,2.466,241,2.74,244,2.153,263,2.531,299,4.098,300,5.239,302,4.213,480,3.583,488,5.309,586,3.695,587,3.95,598,5.101,619,3.583,633,6.575,634,5.732,635,7.983,636,6.414,637,7.983,638,6.414,639,6.414,640,6.414,641,6.414,642,6.414]],["title/classes/CreateNewsParams.html",[0,0.148,643,3.438]],["body/classes/CreateNewsParams.html",[0,0.21,2,0.981,3,0.123,4,0.103,5,0.084,9,0.243,10,0.804,16,1.392,21,0.873,24,0.006,26,0.358,27,0.671,28,2.13,29,2.318,39,1.039,51,0.321,52,1.556,61,0.116,68,5.385,80,0.004,81,0.004,90,3.217,123,3.147,135,1.089,220,3.858,221,3.955,222,4.862,227,3.803,499,3.675,500,3.841,501,4.4,503,4.284,534,2.562,643,4.87,644,7.445,645,4.044,646,3.344,647,5.406,648,4.17,649,7.009,650,4.686,651,5.243,652,5.773,653,4.316,654,5.773,655,5.406,656,5.773,657,4.87,658,4.87,659,5.243,660,5.243,661,4.478,662,4.478,663,5.243,664,5.243,665,5.76,666,5.773,667,4.17,668,5.243,669,5.243,670,4.907,671,4.87,672,2.501,673,6.264,674,5.773,675,7.235,676,3.229,677,3.825,678,3.119]],["title/controllers/DashboardController.html",[679,2.206,680,3.817]],["body/controllers/DashboardController.html",[0,0.2,3,0.157,4,0.131,5,0.106,9,0.309,21,0.664,24,0.006,29,1.761,51,0.385,61,0.148,80,0.005,81,0.005,86,2.359,91,1.531,106,1.23,110,1.47,135,1.699,142,1.124,212,2.778,229,2.527,241,2.851,244,2.24,646,4.221,679,2.975,680,6.311,681,3.343,682,5.964,683,4.264,684,4.713,685,9.223,686,6.674,687,6.147,688,5.964,689,4.264,690,4.869,691,4.637,692,5.148,693,6.674,694,4.869,695,6.674,696,6.674,697,5.148,698,6.674]],["title/classes/DashboardEntity.html",[0,0.148,699,2.765]],["body/classes/DashboardEntity.html",[0,0.241,2,0.881,3,0.11,4,0.093,5,0.075,9,0.218,10,0.747,16,1.885,18,1.053,21,0.841,23,0.679,24,0.006,25,0.393,26,0.344,27,0.451,39,1.06,51,0.192,57,0.829,61,0.199,64,1.693,70,1.788,80,0.004,81,0.004,90,3.099,91,1.218,98,2.779,106,1.2,142,1.474,145,0.601,219,2.45,359,3.752,420,2.891,437,4.963,438,5.406,456,2.245,475,4.889,548,3.741,699,3.639,700,3.13,701,5.15,702,5.88,703,6.385,704,5.15,705,5.15,706,6.513,707,5.733,708,4.707,709,4.707,710,4.707,711,4.331,712,5.406,713,5.88,714,2.8,715,3.262,716,3.008,717,3.434,718,2.899,719,2.63,720,3.434,721,3.13,722,3.434,723,4.752,724,3.434,725,2.899,726,4.752,727,5.406,728,5.627,729,2.8,730,4.752,731,4.752,732,3.434,733,3.008,734,3.008,735,3.434,736,4.752,737,3.434]],["title/classes/DashboardGridElementModel.html",[0,0.148,738,3.162]],["body/classes/DashboardGridElementModel.html",[0,0.228,2,0.916,3,0.115,4,0.096,5,0.078,7,1.806,8,3.197,9,0.227,10,0.768,14,2.591,15,2.641,16,1.759,17,2.693,18,1.095,21,0.931,23,0.707,24,0.006,25,0.409,26,0.369,27,0.469,28,2.034,29,2.437,30,2.761,32,1.794,33,2.068,34,1.385,35,2.454,39,1.022,41,2.102,42,2.01,43,3.002,44,2.337,45,2.337,46,2.01,47,2.337,48,2.283,49,1.896,50,2.337,51,0.31,52,1.318,54,2.921,55,1.453,56,1.354,57,0.863,61,0.169,62,2.281,63,1.794,65,2.283,80,0.004,81,0.004,90,1.794,98,2.491,228,2.137,263,1.933,410,2.585,456,2.337,475,4.26,499,1.827,510,2.454,547,3.502,548,3.82,684,4.721,704,5.237,719,2.737,733,4.873,734,4.873,738,4.277,739,3.778,740,4.899,741,7.068,742,5.514,743,6.751,744,4.899,745,5.514,746,4.899,747,4.899,748,4.899,749,3.258,750,3.13,751,6.281,752,6.281,753,3.016,754,3.778,755,3.574,756,2.737,757,4.035,758,3.778,759,2.914,760,4.035,761,3.574,762,4.035]],["title/classes/DashboardGridElementResponse.html",[0,0.148,763,3.61]],["body/classes/DashboardGridElementResponse.html",[0,0.216,2,1.022,3,0.128,4,0.107,5,0.087,9,0.253,10,0.826,16,1.851,21,0.909,24,0.006,26,0.372,29,2.413,39,1.06,51,0.222,52,0.879,61,0.16,80,0.004,81,0.004,90,3.415,98,2.604,123,3.176,233,3.49,410,3.801,520,3.49,661,5.149,662,5.149,670,5.349,672,2.606,678,4.794,684,4.149,691,3.795,701,6.265,711,5.359,712,5.149,727,4.602,728,4.79,761,3.985,763,5.879,764,4.499,765,7.201,766,7.201,767,6.353,768,8.076,769,5.463,770,5.463,771,6.437,772,5.463,773,5.463,774,7.656,775,5.463,776,5.463,777,4.214]],["title/classes/DashboardMapper.html",[0,0.148,692,3.817]],["body/classes/DashboardMapper.html",[0,0.192,2,1.197,3,0.15,4,0.126,5,0.102,9,0.296,21,0.636,23,0.924,24,0.006,25,0.535,26,0.261,27,0.613,34,1.448,51,0.325,61,0.142,80,0.005,81,0.005,91,1.492,106,1.18,135,1.887,142,1.342,508,3.957,646,3.804,684,3.687,691,6.315,692,6.15,699,5.078,763,5.817,778,5.72,779,5.302,780,7.973,781,6.401,782,4.937,783,4.257,784,4.257,785,6.401,786,6.401,787,6.401,788,7.973,789,3.206,790,6.401,791,6.401,792,6.401,793,6.401,794,6.401,795,6.401,796,6.401,797,6.401,798,6.401,799,6.401,800,6.401,801,6.401,802,6.401,803,6.401,804,6.401]],["title/classes/DashboardModelEntity.html",[0,0.148,759,2.944]],["body/classes/DashboardModelEntity.html",[0,0.234,2,0.958,3,0.12,4,0.101,5,0.082,7,1.84,8,3.227,9,0.237,10,0.791,14,2.671,15,2.723,16,1.783,17,2.776,18,1.146,21,0.893,23,0.739,24,0.006,25,0.428,26,0.34,27,0.491,28,2.097,29,2.3,30,2.685,32,2.091,33,2.41,34,1.516,35,3.456,39,1.033,41,2.167,42,2.102,43,3.058,44,2.444,45,2.444,46,2.102,47,2.444,48,2.388,49,1.983,50,2.444,51,0.318,52,1.343,54,3.405,55,1.498,56,1.416,57,0.903,61,0.173,62,2.334,63,1.876,65,2.388,80,0.004,81,0.004,90,1.876,98,2.097,228,2.235,263,2.021,410,2.704,456,2.444,475,4.36,499,1.911,510,2.566,547,2.948,548,2.566,684,4.495,704,5.335,719,2.862,733,3.273,734,3.273,738,3.273,739,3.952,741,6.427,742,4.22,743,5.684,745,4.22,749,3.407,750,3.273,751,6.427,752,6.427,753,3.155,754,3.952,755,3.738,756,2.862,757,4.22,758,3.952,759,4.106,760,5.684,761,5.693,762,4.22,805,5.123,806,5.123]],["title/classes/DashboardModelMapper.html",[0,0.148,807,3.61]],["body/classes/DashboardModelMapper.html",[0,0.157,2,0.979,3,0.123,4,0.103,5,0.083,9,0.242,21,0.784,23,1.138,24,0.006,25,0.659,26,0.321,27,0.756,34,1.702,51,0.321,52,0.842,54,3.055,55,1.136,56,1.447,61,0.116,80,0.004,81,0.004,91,1.31,106,1.454,135,1.823,142,1.418,212,2.477,229,2.162,244,2.647,508,4.326,548,3.507,667,4.693,684,4.544,699,4.705,701,4.473,707,5.382,714,3.114,729,4.693,738,5.04,750,3.344,759,5.648,782,4.037,807,5.108,808,4.678,809,7.001,810,7.001,811,7.001,812,7.001,813,5.234,814,7.001,815,5.234,816,7.231,817,7.001,818,5.234,819,4.678,820,4.311,821,5.234,822,5.234,823,5.234,824,5.234,825,5.234,826,7.001,827,5.234,828,3.637,829,5.234,830,5.234,831,5.234,832,5.234,833,5.234,834,5.234,835,5.234,836,5.234,837,5.234,838,4.311,839,5.234,840,3.819,841,4.311,842,5.234,843,5.234,844,5.234,845,5.234,846,5.234,847,5.234,848,5.234,849,5.234,850,5.234,851,5.234,852,5.234,853,5.234]],["title/injectables/DashboardRepo.html",[209,1.09,854,3.438]],["body/injectables/DashboardRepo.html",[0,0.206,3,0.12,4,0.1,5,0.081,9,0.236,16,1.547,18,1.142,21,0.866,23,1.203,24,0.006,25,0.697,26,0.339,27,0.799,34,0.927,41,1.603,51,0.365,52,1.108,55,1.108,57,0.9,61,0.153,63,2.522,65,2.38,80,0.004,81,0.004,86,1.805,91,1.288,106,1.537,110,1.125,135,1.903,142,1.404,145,0.471,209,1.517,210,1.94,212,2.816,219,2.201,229,2.689,244,2.615,263,2.015,288,3.548,291,4.784,299,3.263,300,4.803,302,3.634,304,5.311,322,4.206,334,2.853,684,3.966,699,5.208,705,5.731,714,3.038,715,2.558,729,4.097,759,3.038,782,3.939,807,3.725,816,5.671,820,4.206,854,4.784,855,4.206,856,4.228,857,6.886,858,7.171,859,5.106,860,6.154,861,5.106,862,6.154,863,5.106,864,5.106,865,5.106,866,4.563,867,5.024,868,3.263,869,3.144,870,3.548,871,3.263,872,4.563,873,4.206,874,4.563,875,4.563,876,6.962,877,4.563,878,6.154,879,6.154,880,4.563,881,4.563,882,4.563,883,4.563,884,3.725,885,2.495]],["title/classes/DashboardResponse.html",[0,0.148,691,3.438]],["body/classes/DashboardResponse.html",[0,0.23,2,1.128,3,0.141,4,0.119,5,0.096,9,0.279,10,0.88,16,1.895,21,0.764,24,0.006,26,0.313,29,2.027,39,1.04,51,0.245,52,1.235,61,0.17,80,0.004,81,0.004,90,3.095,98,2.334,123,3.242,233,4.907,410,3.183,520,4.907,661,5.399,662,5.399,670,5.449,672,2.877,678,5.027,684,5.124,691,5.336,701,6,711,4.011,712,3.853,727,3.853,728,4.011,761,6.164,763,6.164,764,4.967,765,5.39,766,5.39,767,5.336,768,7.735,771,5.39,774,6.863,777,5.924,886,6.031,887,6.031]],["title/injectables/DashboardUc.html",[209,1.09,687,3.438]],["body/injectables/DashboardUc.html",[0,0.203,3,0.159,4,0.133,5,0.108,9,0.314,18,1.515,21,0.821,23,0.978,24,0.006,25,0.566,26,0.276,27,0.649,51,0.362,61,0.15,80,0.005,81,0.005,86,2.395,91,1.545,106,1.249,110,1.493,135,1.407,142,1.141,209,1.819,210,2.574,212,2.796,229,2.55,244,2.274,602,2.481,684,4.756,687,5.737,699,3.785,854,5.737,858,7.636,867,6.764,888,6.055,889,6.775,890,6.775,891,6.775,892,4.172,893,6.775,894,6.055,895,6.775,896,6.775]],["title/classes/DefaultGridReference.html",[0,0.148,714,2.944]],["body/classes/DefaultGridReference.html",[0,0.241,2,0.874,3,0.11,4,0.092,5,0.075,9,0.216,10,0.743,16,1.883,18,1.045,21,0.839,23,0.674,24,0.006,25,0.39,26,0.355,27,0.448,39,1.08,51,0.19,57,0.823,61,0.199,64,1.681,70,1.775,80,0.004,81,0.004,90,3.395,91,1.212,98,2.774,106,0.861,142,1.47,145,0.598,219,2.502,359,3.732,420,1.808,437,5.196,438,5.579,456,2.229,475,4.878,548,3.726,699,2.61,700,3.107,701,4.14,702,3.408,703,5.427,704,5.133,705,4.14,707,5.392,711,4.309,712,5.922,713,6.533,714,3.855,715,3.726,716,2.985,717,3.408,718,2.877,719,2.61,720,3.408,721,3.107,722,3.408,723,4.727,724,3.408,725,2.877,726,4.727,727,5.392,728,5.612,729,2.78,730,4.727,731,4.727,732,3.408,733,2.985,734,2.985,735,3.408,736,4.727,737,3.408,897,6.48,898,4.672,899,4.672,900,4.672]],["title/classes/DefaultGridReferenceModel.html",[0,0.148,750,3.162]],["body/classes/DefaultGridReferenceModel.html",[0,0.233,2,0.952,3,0.119,4,0.1,5,0.081,7,1.835,8,3.222,9,0.236,10,0.788,14,2.66,15,2.711,16,1.779,17,2.764,18,1.138,21,0.911,23,0.734,24,0.006,25,0.425,26,0.354,27,0.488,28,2.088,29,2.365,30,2.786,32,1.841,33,2.122,34,1.412,35,2.549,39,1.057,41,2.157,42,2.088,43,3.05,44,2.428,45,2.428,46,2.088,47,2.428,48,2.372,49,1.97,50,2.428,51,0.317,52,1.34,54,2.998,55,1.491,56,1.407,57,0.897,61,0.173,62,2.326,63,1.864,65,2.372,80,0.004,81,0.004,90,2.849,98,2.088,228,2.221,263,2.008,410,4.105,456,2.428,475,4.345,499,1.898,510,2.549,547,2.935,548,2.549,684,3.958,704,5.321,719,2.843,733,3.252,734,3.252,738,3.252,739,3.926,741,6.406,742,4.192,743,5.659,745,4.192,749,3.385,750,4.39,751,6.406,752,6.406,753,3.134,754,3.926,755,3.713,756,2.843,757,4.192,758,3.926,759,3.028,760,4.192,761,3.713,762,4.192,901,5.09,902,5.09,903,5.09]],["title/controllers/DelayController.html",[679,2.206,904,3.817]],["body/controllers/DelayController.html",[0,0.19,3,0.149,4,0.125,5,0.101,9,0.294,21,0.631,24,0.006,29,1.676,32,2.126,34,1.153,51,0.352,61,0.141,80,0.005,81,0.005,91,1.484,106,1.17,110,1.399,114,3.102,135,1.647,142,1.336,183,2.893,212,2.716,229,2.672,244,2.131,400,5.787,679,3.536,681,3.973,904,6.673,905,6.534,906,5.229,907,7.465,908,6.349,909,5.511,910,4.695,911,5.275,912,4.569,913,6.119,914,5.674,915,6.349,916,4.057,917,5.229,918,6.534,919,5.674,920,5.674,921,6.349,922,4.897,923,3.263,924,5.229,925,5.511,926,5.229,927,3.351,928,4.632,929,4.897]],["title/injectables/DurationLoggingInterceptor.html",[209,1.09,930,4.076]],["body/injectables/DurationLoggingInterceptor.html",[0,0.185,3,0.145,4,0.121,5,0.098,9,0.286,10,0.894,21,0.775,23,0.891,24,0.006,25,0.516,26,0.251,27,0.591,32,1.655,33,1.907,34,1.415,51,0.365,61,0.137,80,0.004,81,0.004,86,3.019,91,1.458,106,1.138,110,1.36,123,2.072,135,1.282,142,1.04,209,1.717,210,2.346,397,5.183,562,3.981,602,3.129,657,4.289,715,3.092,913,6.012,925,5.415,930,6.42,931,7.634,932,5.517,933,7.795,934,6.012,935,5.183,936,5.168,937,6.966,938,6.966,939,6.92,940,8.018,941,6.174,942,3.35,943,7.634,944,7.795,945,6.174,946,5.085,947,6.174,948,5.517,949,5.517,950,6.174,951,7.795,952,6.174,953,6.174,954,6.174]],["title/modules/ErrorModule.html",[169,1.48,384,3.61]],["body/modules/ErrorModule.html",[0,0.209,3,0.164,4,0.137,5,0.111,24,0.006,32,2.255,51,0.367,61,0.155,80,0.005,81,0.005,110,1.539,123,2.345,169,2.516,171,2.924,183,3.184,238,5.375,373,4.11,384,6.137,399,5.005,403,7.226,916,4.464,927,3.687,955,6.987,956,7.518,957,5.18,958,5.375,959,6.137,960,6.987,961,6.987,962,5.389]],["title/classes/ErrorResponse.html",[0,0.148,108,2.944]],["body/classes/ErrorResponse.html",[0,0.191,2,1.19,3,0.149,4,0.125,5,0.101,18,1.776,21,0.633,23,0.918,24,0.006,25,0.532,26,0.38,27,0.609,39,1.09,51,0.259,61,0.141,80,0.005,81,0.005,86,3.206,87,4.043,89,4.988,90,3.172,98,2.632,108,4.726,109,4.907,110,1.402,116,4.036,123,2.666,124,5.759,125,4.575,126,5.075,127,4.31,356,5.686,440,5.282,963,5.686,964,6.362,965,6.362,966,6.362,967,5.24,968,6.362,969,3.785,970,5.686,971,3.785,972,3.109,973,3.918,974,4.42,975,4.907]],["title/injectables/FeathersAuthProvider.html",[202,3.291,209,1.09]],["body/injectables/FeathersAuthProvider.html",[0,0.129,3,0.101,4,0.084,5,0.068,9,0.199,12,2.359,14,1.662,18,0.96,21,0.845,23,1.226,24,0.006,25,0.71,26,0.346,27,0.814,34,0.78,39,0.906,41,2.231,51,0.333,55,0.932,57,0.757,61,0.095,80,0.003,81,0.003,91,1.142,106,1.507,110,0.946,135,1.914,142,1.431,145,0.396,202,4.061,209,1.345,210,1.631,212,3.023,219,2.623,220,4.153,221,4.379,222,4.767,223,3.423,228,3.815,229,2.848,230,4.243,240,3.837,241,1.835,244,2.745,254,2.473,259,3.138,263,1.694,376,3.56,411,3.423,505,1.694,601,1.957,602,2.603,909,4.243,910,2.33,976,7.814,977,3.537,978,6.107,979,6.351,980,6.107,981,6.107,982,6.351,983,4.294,984,5.43,985,4.294,986,6.107,987,4.294,988,3.837,989,4.294,990,6.107,991,4.294,992,6.107,993,4.294,994,4.294,995,4.294,996,5.457,997,4.294,998,3.837,999,6.107,1000,3.837,1001,6.107,1002,6.107,1003,4.294,1004,4.294,1005,4.294,1006,6.107,1007,6.107,1008,6.107,1009,4.294,1010,3.133,1011,4.294,1012,4.294,1013,4.294,1014,2.33,1015,5.03,1016,3.837,1017,4.294,1018,4.294,1019,2.399]],["title/interfaces/FeathersError.html",[145,0.456,1020,3.438]],["body/interfaces/FeathersError.html",[3,0.168,4,0.141,5,0.114,7,1.881,9,0.332,10,0.979,24,0.006,26,0.403,39,1.084,61,0.159,80,0.005,81,0.005,87,4.211,98,2.772,116,3.98,145,0.661,147,1.98,1020,5.932,1021,6.401,1022,6.401,1023,8.441]],["title/modules/FeathersModule.html",[169,1.48,200,3.438]],["body/modules/FeathersModule.html",[0,0.194,3,0.152,4,0.128,5,0.104,24,0.006,51,0.327,61,0.144,80,0.005,81,0.005,110,1.431,123,2.179,169,2.732,171,3.659,172,3.75,179,4.494,180,3.427,181,2.959,183,3.666,200,6.739,204,4.494,207,4.613,376,4.029,377,4.134,912,4.634,984,6.417,998,5.803,1024,5.803,1025,5.803,1026,5.803,1027,6.494,1028,5.35,1029,4.786,1030,4.494,1031,4.246,1032,5.14,1033,5.589,1034,5.589,1035,5.589,1036,5.589,1037,6.626]],["title/interfaces/FeathersService.html",[145,0.456,1038,3.817]],["body/interfaces/FeathersService.html",[0,0.149,3,0.117,4,0.098,5,0.08,9,0.231,16,1.345,21,0.765,23,0.977,24,0.006,25,0.566,26,0.336,27,0.649,34,0.905,39,0.552,51,0.351,57,0.878,61,0.183,65,2.323,75,3.232,80,0.004,81,0.004,91,1.267,100,4.505,106,1.248,110,1.098,126,3.185,135,1.406,142,0.839,145,0.46,147,1.378,169,1.491,171,2.086,207,4.061,209,1.493,219,2.179,229,2.55,242,4.299,254,2.871,280,3.185,344,3.575,376,4.643,377,2.561,560,3.232,561,3.31,562,3.157,563,3.157,564,3.232,565,3.902,588,2.956,602,1.826,892,3.069,912,4.973,916,3.185,984,3.185,1019,2.785,1028,3.315,1029,5.137,1030,2.785,1031,4.557,1032,3.185,1033,3.463,1034,3.463,1035,3.463,1036,3.463,1037,4.105,1038,6.368,1039,5.935,1040,3.636,1041,4.243,1042,7.378,1043,5.49,1044,6.054,1045,7.504,1046,4.984,1047,5.484,1048,6.054,1049,4.984,1050,4.454,1051,3.185,1052,4.105,1053,5.225,1054,5.579,1055,4.105,1056,3.463,1057,4.454,1058,4.454,1059,4.454,1060,6.054,1061,4.454,1062,3.636,1063,4.328,1064,3.845,1065,3.315,1066,4.454,1067,4.454,1068,4.454,1069,3.845,1070,3.315,1071,3.069,1072,4.454]],["title/injectables/FeathersServiceProvider.html",[209,1.09,984,3.162]],["body/injectables/FeathersServiceProvider.html",[0,0.15,3,0.117,4,0.098,5,0.08,9,0.231,16,0.991,18,1.116,21,0.766,23,0.978,24,0.006,25,0.567,26,0.336,27,0.65,34,0.906,39,0.853,51,0.352,57,0.88,61,0.183,65,2.327,75,3.235,80,0.004,81,0.004,91,1.269,100,4.51,106,0.92,110,1.1,123,1.675,126,3.19,135,1.408,142,0.841,145,0.46,169,1.493,171,2.838,207,4.36,209,1.494,210,1.897,219,1.79,229,2.095,242,4.302,254,2.876,280,3.19,376,4.645,377,3.485,560,3.235,561,3.313,562,3.161,563,3.161,564,3.235,565,3.906,588,2.959,602,1.828,892,3.074,912,4.759,916,3.19,984,4.333,1019,2.789,1028,4.51,1029,4.915,1030,3.788,1031,4.962,1032,4.333,1033,4.712,1034,4.712,1035,4.712,1036,4.712,1037,5.585,1038,6.372,1039,5.94,1040,3.642,1041,2.565,1042,6.06,1043,4.51,1044,4.462,1045,6.343,1047,4.742,1048,4.462,1050,4.462,1051,3.19,1052,4.112,1053,5.231,1054,5.585,1055,4.112,1056,4.712,1057,4.462,1058,4.462,1059,6.06,1060,6.06,1061,4.462,1062,3.642,1063,4.333,1064,3.851,1065,3.32,1066,4.462,1067,4.462,1068,4.462,1069,3.851,1070,3.32,1071,3.074,1072,4.462,1073,6.781,1074,4.992,1075,4.992,1076,4.992,1077,3.469]],["title/classes/FileTaskInfo.html",[0,0.148,1078,3.162]],["body/classes/FileTaskInfo.html",[0,0.17,2,1.061,3,0.133,4,0.112,5,0.09,7,1.626,8,3.212,9,0.263,10,0.846,12,1.497,14,2.857,15,2.912,16,1.466,17,2.969,18,1.268,21,0.935,23,0.818,24,0.006,25,0.753,26,0.367,27,0.543,28,2.243,29,2.438,30,2.763,32,1.978,33,2.28,34,1.34,39,0.963,41,1.78,42,2.326,43,3.183,44,2.705,45,2.705,46,2.326,47,2.705,48,2.643,49,2.195,50,2.705,51,0.334,52,1.187,55,1.231,56,1.567,57,0.999,59,2.154,61,0.126,62,1.696,70,2.154,80,0.004,81,0.004,145,0.523,417,2.609,420,2.195,457,3.077,458,3.077,479,3.077,484,4.587,486,3.242,487,2.771,502,4.716,557,3.771,1078,4.716,1079,7.159,1080,6.704,1081,7.381,1082,5.068,1083,3.492,1084,5.068]],["title/interfaces/FileTaskInfoProperties.html",[145,0.456,1080,3.817]],["body/interfaces/FileTaskInfoProperties.html",[0,0.198,3,0.155,4,0.13,5,0.106,7,1.458,8,2.778,9,0.306,10,0.933,12,1.747,24,0.006,25,0.789,26,0.331,30,2.636,39,1.018,51,0.359,52,1.309,55,1.436,56,1.829,57,1.166,59,2.514,61,0.147,62,1.979,70,2.514,80,0.005,81,0.005,145,0.61,147,1.829,417,2.339,457,3.591,458,3.591,479,3.591,484,4.983,486,2.928,487,3.233,502,5.123,557,4.401,1078,4.228,1079,5.45,1080,6.799,1083,4.075,1084,5.914]],["title/interfaces/GlobalConstants.html",[145,0.456,1085,3.817]],["body/interfaces/GlobalConstants.html",[3,0.161,4,0.135,5,0.109,9,0.317,10,0.953,24,0.006,26,0.364,27,0.891,39,1.104,51,0.279,61,0.152,80,0.005,81,0.005,135,1.726,145,0.632,147,1.893,1085,6.902,1086,5.641,1087,8.52,1088,8.52,1089,8.52,1090,6.846,1091,6.849,1092,6.846,1093,3.717,1094,4.997]],["title/classes/GlobalErrorFilter.html",[0,0.148,959,3.61]],["body/classes/GlobalErrorFilter.html",[0,0.154,2,0.633,3,0.079,4,0.067,5,0.054,9,0.157,10,0.588,21,0.615,23,0.74,24,0.006,25,0.517,26,0.302,27,0.491,30,1.012,32,0.907,33,1.045,34,1.417,49,1.31,51,0.34,61,0.075,64,1.217,80,0.003,81,0.003,82,4.591,85,4.411,86,2.187,87,3.078,89,2.953,90,2.267,91,1.158,106,1.272,108,5.271,110,0.746,114,1.654,115,2.782,116,4.678,120,2.61,124,2.25,125,5.173,127,1.836,132,2.61,133,3.024,135,2.016,142,1.559,145,0.312,207,3.266,242,2.864,305,5.191,315,3.18,336,3.05,340,5.687,373,2.505,377,1.739,508,2.82,560,2.446,561,2.505,562,2.389,563,2.389,564,1.614,602,2.267,715,2.568,840,2.469,856,3.358,936,5.103,957,4.568,959,3.74,1014,1.836,1020,4.797,1023,3.024,1030,1.891,1051,2.162,1095,5.325,1096,2.469,1097,6.189,1098,5.722,1099,5.097,1100,5.127,1101,3.384,1102,5.127,1103,6.189,1104,6.904,1105,3.384,1106,6.189,1107,3.384,1108,3.384,1109,3.024,1110,3.024,1111,3.384,1112,3.384,1113,3.384,1114,2.787,1115,3.024,1116,2.787,1117,5.916,1118,2.787,1119,2.25,1120,3.024,1121,3.562,1122,2.787,1123,2.469,1124,4.116,1125,2.25,1126,2.787,1127,3.024,1128,4.582,1129,3.024,1130,2.787,1131,3.024,1132,3.024,1133,3.024,1134,3.024,1135,3.024,1136,3.682,1137,4.223,1138,3.384,1139,3.384,1140,4.223,1141,5.722,1142,3.384,1143,3.384,1144,3.384,1145,4.223,1146,3.384,1147,3.384,1148,5.127,1149,3.384,1150,3.384,1151,2.351,1152,4.582,1153,2.469,1154,3.024,1155,2.25,1156,2.162,1157,4.582,1158,2.787,1159,4.582,1160,3.024,1161,3.954,1162,3.024,1163,3.024,1164,2.61,1165,2.787,1166,3.024,1167,3.024,1168,2.787,1169,2.787,1170,2.787,1171,2.61,1172,3.024,1173,3.024,1174,3.024,1175,3.024,1176,6.63,1177,2.787,1178,6.63,1179,3.024,1180,2.787,1181,3.024,1182,3.384,1183,3.384,1184,3.384,1185,5.127,1186,3.384,1187,3.384]],["title/classes/GlobalValidationPipe.html",[0,0.148,1188,3.817]],["body/classes/GlobalValidationPipe.html",[0,0.252,2,1.12,3,0.14,4,0.118,5,0.095,7,1.684,10,0.686,18,1.883,21,0.595,24,0.006,26,0.343,29,2.017,32,2.048,34,1.087,51,0.311,61,0.133,62,1.79,64,2.749,80,0.004,81,0.004,82,3.98,95,5.31,110,1.319,115,4.813,123,2.008,127,3.248,132,4.616,142,1.008,295,3.248,335,5.575,399,4.547,547,3.597,601,2.727,646,4.016,670,3.344,676,4.706,789,2.998,972,2.924,1014,3.248,1047,3.685,1063,3.824,1070,3.98,1188,5.895,1189,6.83,1190,5.349,1191,6.294,1192,4.706,1193,6.294,1194,6.294,1195,6.294,1196,4.883,1197,8.419,1198,5.985,1199,5.31,1200,4.929,1201,5.985,1202,4.158,1203,5.985,1204,5.985,1205,5.985,1206,5.985,1207,4.616,1208,4.366,1209,4.366,1210,5.985,1211,4.366,1212,5.985,1213,4.929,1214,3.685,1215,5.349,1216,4.366,1217,3.561,1218,5.985,1219,5.985]],["title/classes/GridElement.html",[0,0.148,729,2.944]],["body/classes/GridElement.html",[0,0.236,2,0.839,3,0.105,4,0.088,5,0.072,9,0.208,10,0.722,16,1.868,18,1.003,21,0.899,23,0.647,24,0.006,25,0.375,26,0.368,27,0.43,39,1.017,51,0.183,57,0.79,61,0.196,64,1.613,70,1.704,80,0.004,81,0.004,90,3.045,91,1.178,98,2.928,106,1.341,142,1.451,145,0.581,219,2.506,359,3.627,420,1.736,435,2.367,437,5.451,438,5.507,456,2.139,475,4.815,548,4.434,699,2.505,700,2.982,701,4.023,702,3.272,703,6.289,704,5.042,705,4.023,707,5.507,711,4.188,712,5.312,713,6.459,714,2.668,715,3.645,716,2.865,717,3.272,718,2.762,719,2.505,720,3.272,721,2.982,722,3.272,723,4.594,724,3.272,725,2.762,726,6.065,727,5.656,728,5.887,729,3.746,730,4.594,731,4.594,732,3.272,733,4.65,734,4.65,735,3.272,736,4.594,737,3.272,1220,6.297,1221,4.485,1222,4.485,1223,4.485,1224,4.485,1225,4.485,1226,4.485]],["title/interfaces/HtmlMailContent.html",[145,0.456,163,3.047]],["body/interfaces/HtmlMailContent.html",[3,0.149,4,0.125,5,0.101,7,2.054,9,0.293,10,0.908,24,0.006,25,0.529,26,0.322,27,0.759,39,1.129,61,0.141,80,0.005,81,0.005,145,0.89,146,4.879,147,1.751,148,4.048,149,5.323,150,5.268,151,4.214,152,4.214,153,4.879,154,4.214,155,4.214,156,4.214,157,5.577,158,4.048,159,4.214,160,4.879,161,6.2,162,6.2,163,5.323,164,4.299,165,4.048,166,4.214,167,4.214,168,4.214]],["title/interfaces/ICourseProperties.html",[145,0.456,418,3.817]],["body/interfaces/ICourseProperties.html",[0,0.136,3,0.106,4,0.089,5,0.072,7,1,8,2.167,9,0.401,10,0.728,16,1.26,18,1.015,24,0.006,25,0.757,26,0.361,27,0.911,30,2.71,32,2.319,37,3.017,39,1.081,41,3.077,51,0.323,52,1.021,55,1.378,56,1.254,57,0.799,59,1.724,61,0.101,62,1.357,63,2.682,70,1.724,76,2.553,80,0.004,81,0.004,98,1.379,123,3.041,135,0.942,142,1.069,145,0.418,147,1.254,219,1.675,263,1.79,295,2.462,302,2.394,395,2.699,408,1.632,409,3.499,410,4.923,411,3.494,412,5.334,413,5.8,414,5.8,415,2.899,416,2.899,417,1.603,418,5.648,421,6.544,423,6.544,425,6.544,431,4.054,437,2.794,438,2.899,439,4.054,440,4.221,441,5.673,442,4.054,443,3.499,444,4.054,445,3.152,446,4.054,447,4.054,448,3.736,449,3.31,450,3.31,451,4.411,452,4.054,453,4.054,454,3.736,455,3.736,456,2.164,457,3.445,458,2.462,459,5.673,460,4.054,461,4.054,462,4.054,463,4.897,464,3.499,465,4.054,466,4.054,467,4.054,468,4.054,469,5.673,470,4.054,471,4.054,472,2.794,473,4.054,474,4.054,475,2.534]],["title/interfaces/ICoursegroupProperties.html",[145,0.456,623,3.817]],["body/interfaces/ICoursegroupProperties.html",[0,0.187,3,0.146,4,0.123,5,0.099,7,1.374,8,2.677,9,0.289,10,0.899,24,0.006,26,0.319,27,0.751,30,2.566,37,4.146,41,3.121,51,0.349,52,1.262,55,1.703,56,1.724,57,1.099,59,2.369,61,0.174,62,1.865,63,2.284,70,2.369,76,2.508,80,0.004,81,0.004,135,1.295,142,1.321,145,0.575,147,1.724,263,2.46,412,5.929,417,2.204,463,4.809,464,4.809,480,5.184,488,4.146,489,6.05,490,4.809,592,6.619,619,3.483,620,5.136,621,5.572,622,5.572,623,6.619,628,5.572,630,2.72,631,4.549,632,5.572]],["title/interfaces/ICreateNews.html",[145,0.456,1227,3.438]],["body/interfaces/ICreateNews.html",[3,0.136,4,0.114,5,0.093,9,0.269,10,0.859,20,3.576,24,0.006,26,0.39,27,0.795,28,2.523,39,1.03,51,0.357,57,1.023,61,0.201,80,0.004,81,0.004,90,3.212,123,1.949,145,0.858,147,1.605,219,2.191,220,3.663,221,4.157,222,5.111,408,2.697,435,3.956,456,2.77,487,4.056,492,4.067,499,3.529,500,4.137,501,4.393,503,4.759,505,2.957,528,3.956,534,2.838,542,3.455,544,4.067,545,4.067,630,2.534,1227,5.208,1228,4.237,1229,6.699,1230,4.035,1231,4.035,1232,4.237,1233,4.237,1234,5.19,1235,4.035,1236,3.862]],["title/interfaces/ICurrentUser.html",[145,0.456,1237,2.543]],["body/interfaces/ICurrentUser.html",[1,4.451,3,0.143,4,0.12,5,0.097,9,0.282,10,0.886,12,2.356,15,2.403,16,1.869,17,2.45,24,0.006,25,0.509,26,0.375,28,2.348,39,1.137,61,0.188,80,0.004,81,0.004,145,0.783,147,1.683,223,2.549,228,3.895,236,5.138,411,4.003,1237,3.971,1238,4.697,1239,5.704,1240,4.862,1241,4.491,1242,3.686,1243,6.202,1244,5.369,1245,5.138,1246,3.214,1247,3.214]],["title/interfaces/IDashboardRepo.html",[145,0.456,867,3.61]],["body/interfaces/IDashboardRepo.html",[0,0.222,3,0.134,4,0.112,5,0.091,9,0.264,16,1.471,21,0.567,24,0.006,34,1.035,41,1.79,51,0.377,52,0.917,55,1.238,57,1.005,61,0.164,63,2.713,65,2.657,80,0.004,81,0.004,86,2.015,91,1.386,106,1.051,110,1.256,135,1.956,142,1.467,145,0.526,147,1.576,209,1.632,212,2.325,219,1.955,229,2.69,244,2.761,263,2.249,288,3.961,300,4.267,302,3.009,304,4.398,322,4.696,334,3.185,684,4.267,699,4.866,705,5.257,714,3.392,715,2.856,729,4.407,759,3.392,782,4.398,807,4.16,816,6.101,820,4.696,854,3.961,855,4.696,856,3.094,858,7.435,860,5.095,862,5.095,866,5.095,867,6.002,868,3.643,869,3.511,870,3.961,871,3.643,872,5.095,873,4.696,874,5.095,875,5.095,876,7.353,877,5.095,878,6.62,879,6.62,880,5.095,881,5.095,882,5.095,883,5.095,884,4.16,885,2.786,1248,5.702]],["title/interfaces/IErrorType.html",[145,0.456,342,3.61]],["body/interfaces/IErrorType.html",[3,0.168,4,0.141,5,0.115,9,0.332,10,0.98,24,0.006,26,0.403,39,1.112,61,0.159,80,0.005,81,0.005,86,3.227,90,3.462,117,6.896,145,0.662,147,1.984,342,6.238,1249,6.416,1250,6.416]],["title/interfaces/IFindOptions.html",[145,0.456,1251,3.291]],["body/interfaces/IFindOptions.html",[3,0.162,4,0.136,5,0.11,9,0.32,10,0.958,20,4.255,24,0.006,26,0.366,27,0.894,61,0.207,80,0.005,81,0.005,98,2.54,145,0.771,147,1.91,534,3.376,1251,5.557,1252,5.041,1253,5.041,1254,5.553,1255,5.376,1256,7.687,1257,6.809,1258,4.595,1259,4.801,1260,5.041,1261,6.882,1262,6.882]],["title/interfaces/IGridElement.html",[145,0.456,707,3.162]],["body/interfaces/IGridElement.html",[0,0.246,3,0.115,4,0.097,5,0.078,9,0.227,10,0.768,16,1.834,24,0.006,26,0.349,39,1.037,51,0.2,57,0.864,61,0.201,64,1.765,70,1.864,80,0.004,81,0.004,90,3.145,98,2.807,142,1.492,145,0.618,147,1.356,219,2.438,359,3.86,420,1.899,437,5.051,438,5.486,456,2.341,475,4.952,548,3.823,699,2.741,700,3.263,701,4.282,702,3.579,703,6.467,704,4.877,705,4.282,707,5.663,711,4.456,712,5.486,713,6.619,714,2.919,715,3.357,716,3.135,717,3.579,718,3.021,719,2.741,720,3.579,721,3.263,722,3.579,723,4.889,724,3.579,725,3.021,726,6.264,727,5.486,728,5.71,729,2.919,730,4.889,731,4.889,732,3.579,733,3.135,734,3.135,735,3.579,736,4.889,737,3.579,1136,5.273]],["title/interfaces/IGridElementReference.html",[145,0.456,437,3.047]],["body/interfaces/IGridElementReference.html",[0,0.248,3,0.118,4,0.099,5,0.08,9,0.232,10,0.78,16,1.843,24,0.006,26,0.314,39,1.042,51,0.204,57,0.884,61,0.202,64,1.805,70,1.906,80,0.004,81,0.004,90,3.169,98,2.822,142,1.502,145,0.627,147,1.387,219,2.45,359,3.919,420,1.942,437,5.328,438,5.529,456,2.393,475,4.985,548,3.867,699,2.802,700,3.336,701,4.347,702,3.66,703,5.632,704,4.933,705,4.347,707,5.529,711,4.524,712,5.529,713,6.658,714,2.984,715,3.408,716,3.205,717,3.66,718,3.089,719,2.802,720,3.66,721,3.336,722,3.66,723,4.963,724,3.66,725,3.089,726,4.963,727,5.529,728,5.754,729,2.984,730,4.963,731,4.963,732,3.66,733,3.205,734,3.205,735,3.66,736,4.963,737,3.66,1136,4.048]],["title/interfaces/ILogger.html",[145,0.456,1263,3.817]],["body/interfaces/ILogger.html",[3,0.141,4,0.118,5,0.096,9,0.278,21,0.912,23,1.324,24,0.006,25,0.767,26,0.373,27,0.934,39,1.123,61,0.133,80,0.004,81,0.004,89,5.285,91,1.433,106,1.691,116,3.571,145,0.554,147,1.661,344,4.951,942,5.459,1263,5.909,1264,5.369,1265,5.909,1266,5.094,1267,7.661,1268,7.661,1269,6.008,1270,6.008,1271,6.846,1272,6.947,1273,6.008,1274,6.846,1275,6.008,1276,6.008,1277,6.008,1278,6.846,1279,6.008,1280,5.369,1281,5.369]],["title/interfaces/INewsProperties.html",[66,3.162,145,0.456]],["body/interfaces/INewsProperties.html",[0,0.225,3,0.094,4,0.163,5,0.064,7,1.652,8,1.984,9,0.186,10,0.666,12,1.058,16,0.796,24,0.006,25,0.486,26,0.37,27,0.84,28,2.279,30,2.562,34,1.241,39,1.068,51,0.349,52,1.281,54,2.536,55,0.87,56,1.108,57,0.706,61,0.177,62,1.199,64,2.46,66,4.792,70,1.523,76,2.75,80,0.003,81,0.003,90,3.041,142,0.675,145,0.37,147,1.108,219,2.477,220,3.664,221,3.425,223,1.678,243,2.785,272,3.82,334,3.247,359,2.309,408,1.442,411,1.678,417,1.417,420,1.551,487,3.664,492,3.154,497,2.309,498,2.785,499,3.554,500,4.139,501,4.159,502,4.506,503,4.321,504,5.809,505,3.379,506,5.532,507,5.295,508,1.826,510,4.29,513,2.785,514,3.939,516,2.785,519,2.924,520,3.713,521,2.924,522,2.785,523,2.007,524,2.665,525,2.785,528,3.609,530,4.32,531,4.792,534,2.84,536,2.665,538,2.924,540,2.924,542,3.458,543,2.924,544,3.154,545,2.175,546,2.785,547,1.712,548,2.007,549,2.665,550,2.561,551,2.924,552,2.924,553,2.924,554,2.924,555,2.924,556,2.468,557,2.665,558,2.924,559,4.24,560,3.262,561,3.341,562,3.187,563,3.187,564,3.262,565,3.939,566,3.939,567,2.924,568,4.24,569,2.924,570,2.924,571,4.989,572,2.385,573,2.385]],["title/interfaces/INewsScope.html",[145,0.456,1235,3.438]],["body/interfaces/INewsScope.html",[3,0.139,4,0.117,5,0.095,9,0.275,10,0.871,20,3.651,24,0.006,26,0.381,27,0.896,28,1.802,39,0.841,51,0.36,57,1.044,61,0.203,80,0.004,81,0.004,90,2.171,123,1.989,145,0.862,147,1.639,219,2.212,220,3.711,221,4.198,222,5.443,408,2.733,435,4.009,456,2.828,487,4.095,492,4.122,499,3.487,500,4.164,501,2.969,503,3.217,505,2.997,528,4.009,534,2.897,542,3.527,544,4.122,545,4.122,630,3.657,1227,4.119,1228,4.325,1229,5.298,1230,4.119,1231,4.119,1232,4.325,1233,4.325,1234,6.788,1235,5.277,1236,5.878]],["title/interfaces/IPagination.html",[145,0.456,1257,3.61]],["body/interfaces/IPagination.html",[3,0.162,4,0.136,5,0.11,9,0.32,10,0.958,20,4.255,24,0.006,26,0.366,27,0.894,61,0.207,80,0.005,81,0.005,98,2.951,145,0.771,147,1.91,534,3.376,1251,4.595,1252,5.041,1253,5.041,1254,4.111,1255,3.98,1256,6.882,1257,6.554,1258,6.206,1259,6.484,1260,5.041,1261,6.882,1262,6.882]],["title/interfaces/IParentDescriptionsProperties.html",[145,0.456,1282,3.162]],["body/interfaces/IParentDescriptionsProperties.html",[0,0.162,3,0.127,4,0.107,5,0.086,7,1.193,8,2.445,9,0.251,10,0.821,16,1.763,24,0.006,25,0.762,26,0.361,27,0.686,28,2.176,30,2.553,34,1.3,35,3.587,39,1.077,51,0.361,52,1.152,54,2.363,55,1.176,56,1.497,57,0.954,59,2.057,61,0.178,62,1.62,76,2.881,80,0.004,81,0.004,98,1.646,123,2.865,145,0.74,147,1.497,219,2.408,408,2.887,410,4.506,415,3.46,416,3.46,417,1.914,457,2.939,458,2.939,480,3.025,486,2.887,487,2.646,510,4.019,547,2.314,586,3.119,602,2.623,630,3.125,749,3.601,1019,3.025,1093,2.939,1282,5.127,1283,3.951,1284,3.68,1285,4.177,1286,4.354,1287,4.941,1288,4.976,1289,4.261,1290,4.41,1291,4.001,1292,3.46,1293,3.763,1294,3.951,1295,4.177,1296,3.763,1297,2.783,1298,4.177,1299,4.177,1300,4.177,1301,4.177,1302,4.177,1303,4.177,1304,4.177,1305,4.177,1306,4.177,1307,3.951,1308,4.177]],["title/interfaces/IResolvedUser.html",[145,0.456,1243,3.438]],["body/interfaces/IResolvedUser.html",[1,3.454,3,0.141,4,0.118,5,0.096,9,0.278,10,0.877,12,1.583,15,3.502,16,1.892,17,3.571,24,0.006,25,0.501,26,0.393,28,2.85,39,1.134,61,0.187,80,0.004,81,0.004,145,0.777,147,1.658,223,3.716,228,2.616,236,3.988,411,3.925,1237,3.081,1238,4.625,1239,3.831,1240,4.84,1241,4.02,1242,2.861,1243,5.855,1244,4.166,1245,5.903,1246,4.685,1247,4.685]],["title/interfaces/IRole.html",[145,0.456,1245,3.291]],["body/interfaces/IRole.html",[1,3.756,3,0.153,4,0.128,5,0.104,9,0.302,10,0.925,12,1.721,15,2.573,16,1.928,17,2.623,24,0.006,25,0.764,26,0.328,28,2.451,39,1.131,61,0.194,80,0.005,81,0.005,145,0.808,147,1.803,223,2.73,228,2.845,236,4.336,411,3.665,1237,3.351,1238,5.03,1239,4.166,1240,4.257,1241,4.177,1242,3.111,1243,5.604,1244,4.531,1245,5.823,1246,3.442,1247,3.442]],["title/interfaces/IRoleProperties.html",[145,0.456,1309,3.817]],["body/interfaces/IRoleProperties.html",[0,0.171,3,0.134,4,0.112,5,0.091,7,1.256,8,2.529,9,0.381,10,0.849,24,0.006,25,0.773,26,0.367,27,0.834,30,2.605,34,1.345,35,3.71,39,1.069,51,0.301,52,1.191,53,3.511,55,1.238,56,1.576,57,1.005,59,2.166,61,0.183,62,1.705,63,2.088,70,2.166,76,2.293,80,0.004,81,0.004,145,0.526,147,1.576,219,2.383,223,3.873,417,2.015,457,3.094,458,3.094,523,2.856,534,3.619,676,3.511,969,4.407,1136,3.392,1209,4.16,1240,5.207,1242,3.925,1309,6.346,1310,4.398,1311,4.398,1312,5.095,1313,4.398,1314,3.961,1315,4.696,1316,4.16,1317,5.095,1318,5.095,1319,5.095,1320,5.095,1321,5.713]],["title/interfaces/ISubmissionProperties.html",[145,0.456,1322,3.817]],["body/interfaces/ISubmissionProperties.html",[0,0.137,3,0.107,4,0.09,5,0.102,7,1.01,8,2.183,9,0.212,10,0.733,12,1.21,24,0.006,26,0.384,27,0.913,30,2.383,34,1.161,35,3.202,39,1.022,49,1.774,51,0.353,52,1.028,53,4.534,54,2,55,0.995,56,1.267,57,0.807,59,1.741,61,0.102,62,1.371,70,1.741,76,3.205,80,0.004,81,0.004,98,2.547,135,1.327,142,0.772,145,0.423,147,1.267,408,1.649,417,1.62,420,1.774,476,4.906,478,3.048,484,4.795,486,3.429,487,3.598,510,3.688,619,4.849,630,2,885,3.598,1019,4.681,1078,5.897,1284,2.355,1291,2.56,1322,5.679,1323,3.775,1324,6.464,1325,6.902,1326,7.489,1327,7.96,1328,4.999,1329,7.96,1330,6.332,1331,3.535,1332,4.096,1333,3.775,1334,5.266,1335,4.096,1336,3.048,1337,4.096,1338,6.065,1339,4.442,1340,6.58,1341,5.714,1342,4.096,1343,4.096,1344,4.096,1345,4.096,1346,4.096,1347,4.096,1348,4.096,1349,3.535,1350,4.096,1351,4.096,1352,4.096]],["title/interfaces/ITaskParent.html",[145,0.456,1292,3.162]],["body/interfaces/ITaskParent.html",[0,0.159,3,0.125,4,0.105,5,0.085,7,1.171,8,2.414,9,0.246,10,0.811,16,1.752,21,0.79,23,0.767,24,0.006,25,0.708,26,0.324,27,0.509,28,2.149,30,2.534,34,1.284,35,3.542,39,0.977,51,0.359,52,1.138,54,2.319,55,1.154,56,1.469,57,0.936,59,2.019,61,0.176,62,1.589,76,2.845,80,0.004,81,0.004,91,1.323,98,2.149,106,1.465,123,1.783,145,0.733,147,1.469,219,2.483,228,2.319,408,2.86,410,2.805,415,5.414,416,5.414,417,1.878,457,2.884,458,2.884,480,2.969,486,2.86,487,2.597,510,3.981,547,2.271,586,3.061,602,2.59,630,3.468,749,3.534,1019,2.969,1093,2.884,1282,5.079,1283,3.877,1284,3.634,1285,4.099,1286,4.313,1287,4.895,1288,4.914,1289,4.208,1290,4.355,1291,3.951,1292,4.519,1293,4.914,1294,3.877,1295,4.099,1296,3.692,1297,2.731,1298,4.099,1299,4.099,1300,4.099,1301,4.099,1302,4.099,1303,4.099,1304,4.099,1305,4.099,1306,4.099,1307,3.877,1308,4.099,1353,5.825,1354,5.314,1355,5.314,1356,5.314]],["title/interfaces/ITaskProperties.html",[145,0.456,1288,3.438]],["body/interfaces/ITaskProperties.html",[0,0.156,3,0.122,4,0.103,5,0.083,7,1.149,8,2.385,9,0.242,10,0.801,16,1.387,24,0.006,25,0.754,26,0.375,27,0.918,28,2.556,30,2.516,34,1.268,35,3.499,39,1.021,51,0.357,52,1.124,54,2.276,55,1.132,56,1.442,57,0.919,59,1.982,61,0.175,62,1.56,76,2.81,80,0.004,81,0.004,98,1.585,123,1.751,145,0.726,147,1.442,219,2.22,408,3.155,410,2.753,415,3.333,416,3.333,417,1.844,457,2.831,458,2.831,480,2.914,486,2.833,487,2.549,510,3.945,547,2.229,586,3.005,602,3.212,630,3.67,749,3.469,1019,2.914,1093,2.831,1282,4.463,1283,3.806,1284,4.322,1285,4.024,1286,4.759,1287,5.558,1288,5.472,1289,5.217,1290,5.4,1291,4.899,1292,3.333,1293,3.625,1294,3.806,1295,4.024,1296,3.625,1297,2.681,1298,4.024,1299,4.024,1300,4.024,1301,4.024,1302,4.024,1303,4.024,1304,4.024,1305,4.024,1306,4.024,1307,3.806,1308,4.024]],["title/interfaces/ITaskStatus.html",[145,0.456,1357,3.817]],["body/interfaces/ITaskStatus.html",[0,0.205,3,0.16,4,0.134,5,0.109,9,0.316,10,0.952,24,0.006,26,0.364,51,0.278,61,0.152,80,0.005,81,0.005,98,3.028,145,0.63,147,1.889,486,3.428,1331,5.271,1349,5.271,1357,7.172,1358,5.629,1359,5.629,1360,6.46,1361,6.46,1362,6.46,1363,4.986,1364,5.712,1365,6.108,1366,6.108]],["title/interfaces/IUserProperties.html",[145,0.456,1367,3.291]],["body/interfaces/IUserProperties.html",[0,0.184,3,0.144,4,0.121,5,0.098,7,1.352,8,2.651,9,0.415,10,0.89,12,1.62,24,0.006,25,0.649,26,0.364,30,2.762,39,1.104,51,0.316,52,1.249,55,1.332,56,1.697,57,1.081,59,2.332,61,0.172,62,1.836,70,2.332,76,2.469,80,0.004,81,0.004,145,0.566,147,1.697,219,2.437,411,2.569,417,2.169,505,3.644,556,3.779,969,4.62,1241,2.928,1246,4.874,1247,4.874,1367,5.665,1368,5.055,1369,5.901,1370,4.734,1371,4.734,1372,4.081,1373,4.081,1374,4.081,1375,4.081,1376,4.734,1377,4.734,1378,5.055]],["title/interfaces/IUserProperties-1.html",[145,0.382,1367,2.752,1379,2.462]],["body/interfaces/IUserProperties-1.html",[0,0.169,3,0.132,4,0.111,5,0.09,7,1.243,8,2.511,9,0.427,10,0.843,12,1.489,24,0.006,25,0.684,26,0.375,27,0.831,30,2.759,34,1.024,35,2.825,39,1.091,51,0.333,52,1.183,53,3.473,54,2.461,55,1.224,56,1.559,57,0.994,59,2.143,61,0.163,62,1.687,70,2.143,76,2.958,80,0.004,81,0.004,145,0.52,147,1.559,219,2.435,411,2.361,417,1.993,505,3.64,556,3.473,969,4.376,1240,5.028,1241,2.69,1242,4.292,1246,4.748,1247,4.748,1321,4.35,1367,5.443,1369,5.748,1370,4.35,1371,4.35,1372,3.75,1373,3.75,1374,3.75,1375,3.75,1376,4.35,1377,4.35,1380,4.645,1381,5.04,1382,5.04]],["title/interfaces/IUserTaskInfoProperties.html",[145,0.456,1383,3.817]],["body/interfaces/IUserTaskInfoProperties.html",[0,0.201,3,0.158,4,0.132,5,0.107,7,1.48,9,0.311,10,0.942,24,0.006,26,0.334,30,2.654,39,1.092,51,0.334,52,1.321,55,1.458,56,1.857,57,1.183,59,2.552,61,0.149,62,2.009,70,2.552,80,0.005,81,0.005,145,0.619,147,1.857,259,4.221,417,2.374,479,3.645,484,3.545,486,2.416,1241,3.204,1246,5.004,1247,5.004,1372,4.467,1373,4.467,1374,4.467,1375,4.467,1383,6.844,1384,5.532]],["title/interfaces/InlineAttachment.html",[145,0.456,153,3.047]],["body/interfaces/InlineAttachment.html",[3,0.15,4,0.126,5,0.102,7,2.062,9,0.297,10,0.915,24,0.006,25,0.536,26,0.261,39,1.125,61,0.142,80,0.005,81,0.005,145,0.892,146,4.916,147,1.773,148,4.098,149,5.601,150,6.222,151,4.265,152,4.265,153,5.352,154,4.265,155,6.049,156,4.265,157,5.352,158,4.098,159,4.265,160,4.916,161,5.309,162,5.309,163,4.916,164,4.332,165,4.098,166,4.265,167,4.265,168,4.265]],["title/modules/InterceptorModule.html",[169,1.48,385,3.61]],["body/modules/InterceptorModule.html",[0,0.195,3,0.153,4,0.128,5,0.104,24,0.006,51,0.356,61,0.145,63,2.388,80,0.005,81,0.005,110,1.437,123,2.188,132,5.03,169,2.412,171,2.73,183,2.971,274,4.967,295,3.539,377,4.701,385,5.884,399,4.799,400,6.389,789,4.04,869,4.016,916,4.166,925,5.604,927,4.257,962,6.221,1192,4.967,1297,4.145,1385,6.521,1386,6.643,1387,5.604,1388,6.221,1389,4.799,1390,9.149,1391,5.604,1392,6.643,1393,7.057]],["title/injectables/JwtAuthGuard.html",[209,1.09,1394,3.817]],["body/injectables/JwtAuthGuard.html",[0,0.226,3,0.177,4,0.148,5,0.12,7,1.662,24,0.006,51,0.358,61,0.167,80,0.005,81,0.005,110,1.662,186,5.817,209,1.939,210,2.865,1394,6.79,1395,6.74,1396,6.74,1397,7.542,1398,7.542]],["title/interfaces/JwtConstants.html",[145,0.456,190,3.438]],["body/interfaces/JwtConstants.html",[3,0.151,4,0.127,5,0.103,9,0.299,10,0.919,24,0.006,26,0.371,39,1.093,51,0.263,61,0.178,63,2.364,73,6.838,79,6.181,80,0.005,81,0.005,135,1.664,145,0.595,147,1.784,190,6.333,207,3.406,228,2.816,435,4.229,547,2.757,631,4.708,1239,5.12,1399,5.316,1400,8.377,1401,7.162,1402,6.454,1403,6.454,1404,5.316,1405,4.292,1406,4.708,1407,4.292,1408,6.454,1409,5.768,1410,5.768,1411,5.768,1412,6.454,1413,5.768,1414,4.708,1415,4.978,1416,6.454,1417,5.316,1418,6.454,1419,5.316,1420,5.768,1421,6.454,1422,6.454,1423,5.768,1424,5.768]],["title/interfaces/JwtPayload.html",[145,0.456,1425,3.817]],["body/interfaces/JwtPayload.html",[3,0.149,4,0.125,5,0.101,7,1.748,9,0.294,10,0.909,24,0.006,26,0.387,39,1.109,51,0.258,57,1.119,61,0.141,63,3.319,80,0.005,81,0.005,98,2.892,145,0.586,147,1.755,1237,4.446,1409,8.099,1410,8.099,1411,8.099,1413,8.099,1414,6.612,1415,6.99,1419,6.534,1420,7.089,1425,6.119,1426,5.674,1427,5.674,1428,6.534]],["title/injectables/JwtStrategy.html",[177,3.61,209,1.09]],["body/injectables/JwtStrategy.html",[0,0.17,3,0.133,4,0.112,5,0.091,7,1.252,9,0.263,12,1.95,18,1.27,21,0.735,23,1.066,24,0.006,25,0.617,26,0.301,27,0.708,51,0.383,61,0.126,62,1.699,63,2.707,80,0.004,81,0.004,86,2.612,91,1.382,106,1.047,110,1.252,135,1.534,142,0.957,177,5.391,178,6.539,186,4.382,190,3.947,191,4.679,193,5.077,209,1.628,210,2.158,212,2.578,229,2.282,241,2.427,244,2.48,275,4.731,602,2.081,1014,3.083,1196,3.63,1207,4.382,1239,3.63,1242,2.71,1388,5.7,1415,5.7,1425,6.709,1429,5.077,1430,5.681,1431,6.422,1432,5.681,1433,7.39,1434,5.681,1435,7.773,1436,5.681,1437,4.382,1438,5.077,1439,5.462,1440,5.681,1441,5.681,1442,5.681,1443,5.681,1444,5.681,1445,5.681,1446,5.681,1447,5.681,1448,5.681,1449,5.681,1450,5.077,1451,5.681,1452,4.382,1453,4.55,1454,5.681,1455,5.681,1456,4.679,1457,5.681,1458,5.077,1459,2.919,1460,5.077,1461,5.681,1462,5.077,1463,3.272]],["title/injectables/JwtValidationAdapter.html",[178,3.438,209,1.09]],["body/injectables/JwtValidationAdapter.html",[0,0.162,1,4.13,3,0.127,4,0.107,5,0.087,9,0.251,16,1.696,21,0.713,23,1.034,24,0.006,25,0.599,26,0.292,27,0.687,39,1.085,51,0.292,61,0.12,80,0.004,81,0.004,91,1.341,106,1.321,110,1.195,123,1.821,135,1.488,178,4.981,209,1.58,210,2.061,212,2.865,229,2.639,242,4.005,244,2.406,274,5.261,275,4.13,560,3.42,561,3.503,562,3.342,563,3.342,564,3.42,565,4.13,653,4.415,935,5.681,1014,2.944,1207,5.53,1214,4.415,1239,5.459,1241,3.42,1415,7.375,1428,5.905,1439,6.283,1464,6.614,1465,4.468,1466,7.17,1467,7.17,1468,7.17,1469,5.425,1470,7.17,1471,5.425,1472,7.17,1473,4.13,1474,5.905,1475,5.53,1476,5.231,1477,7.17,1478,7.17,1479,6.407,1480,6.407,1481,5.425,1482,7.17,1483,5.425,1484,5.425,1485,7.17,1486,5.425,1487,5.425,1488,5.425,1489,5.425]],["title/modules/LearnroomModule.html",[169,1.48,1490,3.61]],["body/modules/LearnroomModule.html",[0,0.205,3,0.161,4,0.135,5,0.109,24,0.006,51,0.379,61,0.152,80,0.005,81,0.005,110,1.509,169,2.486,171,2.867,172,3.874,179,4.643,180,3.615,181,3.121,183,3.787,184,3.347,680,6.902,681,4.163,687,6.733,688,6.121,854,5.775,894,6.121,927,3.615,962,5.283,1490,7.07,1491,6.121,1492,6.121,1493,6.849,1494,6.849,1495,6.849]],["title/classes/LearnroomTestHelper.html",[0,0.148,1496,4.076]],["body/classes/LearnroomTestHelper.html",[0,0.123,2,0.767,3,0.096,4,0.081,5,0.065,7,1.302,9,0.19,10,0.678,12,1.829,21,0.97,23,1.159,24,0.006,25,0.699,26,0.372,27,0.77,32,1.1,33,1.267,34,1.376,41,1.856,43,3.479,51,0.309,52,0.66,55,0.891,57,0.723,61,0.091,80,0.003,81,0.003,91,1.106,106,1.773,135,1.574,142,1.452,219,2.374,259,4.844,263,1.619,315,3.56,344,3.119,408,3.461,411,1.717,412,4.427,413,2.85,414,2.85,480,2.292,505,2.332,534,2.005,602,2.943,619,4.676,1241,2.82,1328,2.363,1336,2.728,1496,4.868,1497,3.379,1498,6.72,1499,4.868,1500,5.911,1501,5.911,1502,5.848,1503,7.581,1504,7.581,1505,7.581,1506,5.848,1507,4.559,1508,4.868,1509,4.868,1510,5.707,1511,4.868,1512,5.707,1513,5.707,1514,5.707,1515,5.707,1516,5.707,1517,3.666,1518,4.868,1519,3.666,1520,3.666,1521,5.911,1522,6.775,1523,4.103,1524,5.911,1525,4.103,1526,4.103,1527,4.103,1528,4.103,1529,4.103,1530,4.103,1531,3.379,1532,3.666,1533,3.379,1534,3.666,1535,3.666,1536,3.379,1537,3.666,1538,3.666,1539,3.666,1540,3.666,1541,3.666,1542,3.666,1543,4.103,1544,4.103,1545,3.666,1546,3.379,1547,3.379,1548,5.911,1549,5.911,1550,4.103,1551,4.103,1552,4.103,1553,4.103,1554,4.103,1555,4.103,1556,4.103]],["title/classes/LessonTaskInfo.html",[0,0.148,1286,2.685]],["body/classes/LessonTaskInfo.html",[0,0.17,2,1.059,3,0.133,4,0.111,5,0.09,7,1.624,8,3.21,9,0.262,10,0.845,14,2.854,15,2.909,16,1.464,17,2.965,18,1.266,21,0.935,23,0.817,24,0.006,25,0.473,26,0.367,27,0.542,28,2.241,29,2.437,30,2.598,32,1.976,33,2.277,34,1.338,39,0.627,41,1.777,42,2.322,43,3.181,44,2.7,45,2.7,46,2.322,47,2.7,48,2.638,49,2.191,50,2.7,51,0.334,52,1.186,55,1.229,56,1.565,57,0.997,59,2.15,61,0.126,62,1.693,76,2.277,80,0.004,81,0.004,145,0.522,408,3.43,417,2.606,420,2.191,479,3.071,480,4.119,486,3.125,510,3.692,515,3.764,586,3.26,630,3.577,1082,6.588,1286,4,1557,7.154,1558,6.035,1559,6.7,1560,5.66,1561,4.129,1562,5.058,1563,5.058,1564,5.058,1565,5.058]],["title/interfaces/LessonTaskInfoProperties.html",[145,0.456,1559,3.817]],["body/interfaces/LessonTaskInfoProperties.html",[0,0.197,3,0.155,4,0.13,5,0.105,7,1.452,8,2.771,9,0.305,10,0.931,24,0.006,26,0.33,27,0.778,30,2.428,51,0.358,52,1.306,55,1.43,56,1.822,57,1.161,59,2.503,61,0.146,62,1.971,76,2.651,80,0.005,81,0.005,145,0.608,147,1.822,408,3.586,417,2.329,479,3.576,480,3.681,486,2.371,510,4.066,586,3.796,630,4.006,1286,3.576,1557,5.427,1558,6.552,1559,6.786,1561,4.807,1562,5.889,1563,5.889,1564,5.889,1565,5.889]],["title/injectables/Logger.html",[209,1.09,936,2.85]],["body/injectables/Logger.html",[0,0.193,3,0.151,4,0.127,5,0.103,7,1.766,24,0.006,32,1.73,51,0.326,61,0.143,64,2.322,75,3.079,80,0.005,81,0.005,91,1.207,110,1.422,209,1.766,210,2.452,238,4.124,242,4.477,376,3.232,588,3.496,715,4.014,789,4.014,923,3.316,936,5.503,942,4.73,973,3.974,1033,4.484,1063,4.124,1196,4.124,1263,7.031,1266,5.796,1473,3.717,1566,5.768,1567,9.116,1568,6.454,1569,6.454,1570,4.292,1571,4.978,1572,5.768,1573,4.978,1574,5.768,1575,4.292,1576,4.124,1577,7.162,1578,4.708,1579,6.454,1580,6.454,1581,5.768,1582,4.708,1583,5.768,1584,4.124,1585,6.454,1586,6.454,1587,6.454]],["title/modules/LoggerModule.html",[169,1.48,386,3.162]],["body/modules/LoggerModule.html",[0,0.211,3,0.165,4,0.139,5,0.112,24,0.006,51,0.344,61,0.156,80,0.005,81,0.005,110,1.553,169,2.529,171,2.951,172,3.942,179,4.725,180,3.721,181,3.212,183,3.854,204,4.725,386,6.303,936,5.845,1588,6.3,1589,6.3,1590,6.3,1591,7.05,1592,7.05]],["title/interfaces/Mail.html",[145,0.456,164,2.685]],["body/interfaces/Mail.html",[3,0.139,4,0.117,5,0.095,7,1.949,9,0.275,10,0.872,24,0.006,25,0.496,26,0.381,27,0.923,39,1.134,61,0.132,80,0.004,81,0.004,145,0.877,146,4.683,147,1.642,148,3.795,149,5.166,150,5.057,151,3.95,152,3.95,153,4.683,154,3.95,155,3.95,156,3.95,157,5.166,158,3.795,159,3.95,160,5.447,161,5.057,162,5.057,163,5.447,164,5.076,165,5.652,166,5.882,167,5.882,168,5.882]],["title/interfaces/MailAttachment.html",[145,0.456,149,3.047]],["body/interfaces/MailAttachment.html",[3,0.148,4,0.124,5,0.1,7,1.991,9,0.292,10,0.905,24,0.006,25,0.755,26,0.351,39,1.132,61,0.14,80,0.004,81,0.004,145,0.889,146,4.86,147,1.741,148,4.024,149,5.565,150,5.249,151,6.009,152,6.009,153,4.86,154,4.188,155,4.188,156,4.188,157,5.308,158,4.024,159,4.188,160,4.86,161,5.249,162,5.249,163,4.86,164,4.283,165,4.024,166,4.188,167,4.188,168,4.188]],["title/interfaces/MailContent.html",[145,0.456,157,3.047]],["body/interfaces/MailContent.html",[3,0.148,4,0.124,5,0.101,7,1.992,9,0.292,10,0.906,24,0.006,25,0.527,26,0.322,27,0.757,39,1.123,61,0.14,80,0.005,81,0.005,145,0.889,146,5.569,147,1.744,148,4.032,149,5.313,150,5.255,151,4.197,152,4.197,153,5.569,154,4.197,155,4.197,156,4.197,157,5.569,158,5.778,159,6.014,160,4.866,161,5.255,162,5.255,163,4.866,164,4.288,165,4.032,166,4.197,167,4.197,168,4.197]],["title/modules/MailModule.html",[169,1.48,1593,3.438]],["body/modules/MailModule.html",[0,0.185,3,0.145,4,0.121,5,0.098,21,0.613,23,0.889,24,0.006,25,0.65,26,0.347,27,0.59,39,0.945,51,0.347,61,0.137,80,0.004,81,0.004,91,1.153,106,1.136,110,1.358,135,1.616,142,1.311,145,0.568,169,2.552,171,2.579,183,2.808,184,3.011,204,3.442,508,3.547,927,3.252,928,4.495,1593,5.929,1594,4.495,1595,5.507,1596,6.412,1597,6.915,1598,6.162,1599,4.108,1600,6.583,1601,7.029,1602,4.495,1603,4.097,1604,5.929,1605,5.507,1606,5.679,1607,5.679,1608,5.679,1609,6.005,1610,5.075,1611,4.753,1612,5.075,1613,5.075,1614,6.412,1615,4.753,1616,5.075,1617,5.507,1618,5.507,1619,5.507]],["title/interfaces/MailModuleOptions.html",[145,0.456,1597,3.817]],["body/interfaces/MailModuleOptions.html",[0,0.182,3,0.143,4,0.12,5,0.097,9,0.281,10,0.885,24,0.006,25,0.508,26,0.375,39,1.082,51,0.345,61,0.135,80,0.004,81,0.004,110,1.339,135,1.602,142,1.299,145,0.561,147,1.68,169,2.536,183,2.77,184,2.97,204,3.395,508,2.77,927,3.208,928,4.434,1593,5.362,1594,4.434,1596,5.006,1597,6.541,1599,3.208,1600,5.953,1601,6.985,1602,4.434,1603,4.042,1604,5.892,1605,5.432,1606,6.718,1607,6.718,1608,6.718,1609,5.953,1610,5.006,1611,4.688,1612,5.006,1613,5.006,1614,6.356,1615,4.688,1616,5.006,1617,5.432,1618,5.432,1619,5.432]],["title/injectables/MailService.html",[209,1.09,1604,3.438]],["body/injectables/MailService.html",[0,0.19,3,0.149,4,0.125,5,0.101,9,0.293,18,1.772,21,0.788,23,1.143,24,0.006,25,0.662,26,0.322,27,0.759,39,0.877,51,0.352,61,0.141,80,0.005,81,0.005,86,2.8,91,1.482,106,1.168,110,1.396,145,0.584,164,4.914,209,1.746,210,2.407,212,2.714,229,2.447,244,2.126,547,2.707,602,2.902,789,3.968,892,3.902,911,5.748,1599,4.562,1602,4.623,1603,4.214,1604,5.504,1607,4.623,1608,4.623,1620,5.219,1621,6.525,1622,6.336,1623,8.499,1624,6.985,1625,6.336,1626,7.08,1627,6.336,1628,5.663,1629,5.663,1630,5.663,1631,5.663,1632,4.887]],["title/interfaces/MailServiceOptions.html",[145,0.456,1624,3.817]],["body/interfaces/MailServiceOptions.html",[0,0.199,3,0.156,4,0.13,5,0.106,9,0.307,10,0.934,18,1.483,24,0.006,26,0.332,39,1.065,51,0.359,61,0.147,80,0.005,81,0.005,86,2.88,110,1.461,145,0.612,147,1.833,164,4.422,209,1.796,212,2.082,229,2.048,244,2.225,547,2.833,602,2.985,789,3.321,892,4.084,911,4.41,1599,3.5,1602,4.838,1603,4.41,1604,4.607,1607,6.714,1608,6.714,1620,5.462,1623,7.885,1624,6.805,1626,5.926,1628,5.926,1629,5.926,1630,5.926,1631,5.926,1632,5.115]],["title/modules/MongoMemoryDatabaseModule.html",[169,1.48,1633,3.817]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.15,3,0.118,4,0.099,5,0.08,18,1.124,21,0.677,23,0.725,24,0.006,25,0.42,26,0.277,27,0.481,34,0.912,51,0.363,55,1.478,56,1.389,61,0.184,63,1.84,80,0.004,81,0.004,86,1.776,91,0.94,106,1.255,110,1.107,135,1.72,142,1.395,169,2.477,171,2.103,183,2.29,184,2.455,204,2.807,212,2.426,229,2.104,244,2.593,264,3.875,344,2.652,472,3.094,508,3.104,602,2.83,715,2.517,871,4.352,885,2.455,892,4.194,916,3.21,923,3.5,927,3.594,935,4.529,1041,2.582,1155,3.341,1476,3.666,1584,3.21,1595,4.49,1596,5.61,1599,4.078,1600,6.678,1633,5.96,1634,6.364,1635,6.343,1636,6.364,1637,4.138,1638,7.403,1639,5.024,1640,8.658,1641,5.024,1642,6.087,1643,6.823,1644,6.905,1645,4.138,1646,6.905,1647,8.159,1648,3.341,1649,3.666,1650,4.138,1651,4.49,1652,6.087,1653,5.61,1654,5.253,1655,4.49,1656,3.875,1657,3.21,1658,3.666,1659,3.491,1660,4.138,1661,3.491,1662,4.138,1663,3.875,1664,6.087,1665,4.49,1666,4.49,1667,4.49,1668,5.024,1669,3.666,1670,5.024,1671,5.024,1672,5.61,1673,3.491,1674,3.666,1675,4.49,1676,5.024,1677,5.024]],["title/classes/News.html",[0,0.148,499,1.846]],["body/classes/News.html",[0,0.204,2,0.619,3,0.078,4,0.144,5,0.053,7,1.618,8,2.747,9,0.153,10,0.578,12,0.873,14,1.951,15,1.988,16,1.355,17,2.027,18,0.74,21,0.937,23,0.727,24,0.006,25,0.647,26,0.378,27,0.83,28,2.232,29,2.411,30,2.733,32,1.636,33,1.885,34,1.334,39,1.021,41,1.039,42,1.358,43,2.5,44,1.579,45,1.579,46,1.358,47,1.579,48,1.542,49,1.281,50,1.579,51,0.328,52,1.182,54,2.978,55,0.718,56,0.915,57,0.583,61,0.163,62,0.99,64,2.196,66,5.141,70,1.257,76,2.455,80,0.003,81,0.003,90,2.834,91,0.943,106,0.61,142,0.557,145,0.305,219,1.939,220,3.932,221,3.876,223,2.555,243,2.299,272,3.41,334,2.816,359,1.906,408,1.19,411,2.11,417,1.781,420,2.642,487,3.335,492,2.735,497,1.906,498,2.299,499,3.569,500,3.949,501,3.876,502,3.986,503,3.704,504,4.979,505,3.053,506,4.742,507,4.539,508,2.782,509,3.887,510,4.03,513,3.502,514,4.231,515,4.059,516,3.502,519,3.677,520,4.361,521,3.677,522,3.502,523,2.524,524,3.352,525,3.502,528,3.602,530,3.516,531,3.9,534,2.983,536,3.352,538,3.677,540,3.677,542,3.632,543,2.414,544,2.735,545,1.796,546,2.299,547,1.414,548,2.524,549,3.352,550,3.22,551,2.414,552,2.414,553,2.414,554,2.414,555,2.414,556,2.038,557,2.2,558,2.414,559,3.677,560,2.912,561,2.983,562,2.845,563,2.845,564,2.912,565,3.516,566,3.516,567,2.414,568,3.677,569,2.414,570,2.414,571,4.454,572,1.969,573,1.969,1678,5.04,1679,3.309,1680,3.309,1681,3.309,1682,3.309,1683,3.309,1684,3.309,1685,3.309,1686,3.309,1687,3.309,1688,3.309,1689,3.309,1690,3.309]],["title/controllers/NewsController.html",[679,2.206,1691,3.817]],["body/controllers/NewsController.html",[0,0.113,3,0.088,4,0.074,5,0.06,9,0.174,10,0.636,12,2.274,16,1.101,21,0.771,23,1.119,24,0.006,25,0.648,26,0.316,27,0.743,29,2.047,34,0.682,39,0.974,51,0.351,52,0.892,57,0.662,61,0.083,80,0.003,81,0.003,86,1.328,91,1.037,106,1.43,110,0.828,125,3.194,135,1.858,142,1.306,212,2.96,227,3.009,229,2.763,241,1.606,242,3.097,244,2.603,499,3.581,505,2.869,523,2.777,545,3.009,549,3.687,588,3.384,598,3.542,601,3.002,643,5.053,646,4.005,672,1.793,679,1.675,681,1.882,683,2.401,689,2.401,690,2.742,694,2.742,697,5.983,856,3.947,1028,2.499,1047,4.998,1191,3.095,1237,4.878,1255,4.189,1450,4.955,1691,4.276,1692,3.358,1693,5.922,1694,4.577,1695,6.588,1696,5.659,1697,3.758,1698,5.082,1699,3.758,1700,3.687,1701,5.713,1702,3.758,1703,5.544,1704,3.758,1705,7.254,1706,3.095,1707,5.053,1708,4.837,1709,3.758,1710,4.567,1711,3.758,1712,5.544,1713,3.758,1714,4.955,1715,4.647,1716,5.544,1717,3.852,1718,3.758,1719,5.306,1720,5.544,1721,3.758,1722,5.082,1723,3.358,1724,2.899,1725,5.389,1726,2.499,1727,3.095,1728,4.21,1729,3.358,1730,2.611,1731,2.742,1732,3.358,1733,3.358,1734,3.758,1735,3.358,1736,3.358,1737,3.358,1738,3.358,1739,5.99,1740,3.095,1741,3.358,1742,3.358,1743,3.358,1744,3.358,1745,3.358,1746,3.095,1747,3.095,1748,3.758,1749,6.588,1750,3.758,1751,3.758,1752,3.758,1753,5.544,1754,3.758]],["title/classes/NewsFilterQuery.html",[0,0.148,1707,3.438]],["body/classes/NewsFilterQuery.html",[0,0.223,2,1.078,3,0.135,4,0.113,5,0.092,9,0.267,10,0.855,16,1.481,21,0.822,24,0.006,26,0.337,27,0.889,29,2.183,39,0.969,51,0.356,52,0.927,61,0.128,68,5.588,80,0.004,81,0.004,123,3.04,135,1.197,220,4.426,221,4.143,222,5.093,227,4.048,499,3.461,500,3.986,534,2.817,630,3.255,658,5.183,661,4.767,662,4.767,665,6.034,666,6.144,667,4.438,671,6.077,672,2.75,674,7.204,675,6.144,676,3.55,677,4.206,678,3.43,1236,5.5,1707,5.183,1755,7.204,1756,4.748,1757,5.765,1758,5.443,1759,6.667,1760,5.765,1761,5.765,1762,5.765,1763,5.765,1764,6.667,1765,7.46,1766,5.765,1767,7.46,1768,5.765,1769,7.46,1770,6.144,1771,5.765,1772,5.765]],["title/classes/NewsMapper.html",[0,0.148,1731,3.61]],["body/classes/NewsMapper.html",[0,0.144,2,0.898,3,0.113,4,0.094,5,0.077,9,0.222,12,1.267,21,0.808,23,1.173,24,0.006,25,0.679,26,0.331,27,0.779,34,0.872,51,0.347,52,0.772,61,0.107,80,0.004,81,0.004,90,2.418,91,1.235,106,1.498,135,1.687,142,1.369,220,3.226,221,3.78,222,4.066,499,3.178,500,3.009,501,3.307,503,3.583,505,1.894,508,4.378,542,2.856,601,3.009,643,5.647,646,4.383,779,4.391,783,3.193,784,3.193,1047,4.066,1227,5.243,1233,5.506,1235,5.647,1236,3.193,1707,5.647,1719,5.93,1730,5.647,1731,4.817,1773,4.29,1774,6.603,1775,6.603,1776,6.603,1777,6.603,1778,4.801,1779,6.603,1780,4.801,1781,6.603,1782,4.801,1783,6.603,1784,4.801,1785,3.703,1786,7.547,1787,3.703,1788,3.703,1789,4.29,1790,4.801,1791,4.801,1792,4.801,1793,4.801,1794,4.801,1795,4.29,1796,4.801,1797,4.801,1798,4.801,1799,4.801,1800,4.801,1801,4.29,1802,4.801,1803,4.29,1804,6.603,1805,4.801,1806,4.801,1807,4.801,1808,4.801,1809,4.801,1810,4.801,1811,4.801,1812,4.801,1813,3.954,1814,4.801,1815,3.954,1816,4.801,1817,4.29,1818,4.29,1819,6.603,1820,4.801,1821,4.801,1822,4.801,1823,6.603,1824,6.603,1825,6.603,1826,4.801,1827,4.801]],["title/modules/NewsModule.html",[169,1.48,1828,3.61]],["body/modules/NewsModule.html",[0,0.179,3,0.14,4,0.118,5,0.095,24,0.006,51,0.388,61,0.133,80,0.004,81,0.004,110,1.319,169,2.286,171,2.505,172,3.562,179,4.269,180,3.159,181,2.727,183,3.482,184,3.734,195,6.512,204,4.269,270,3.248,386,5.988,472,3.685,681,3.828,1199,4.158,1691,6.842,1696,4.366,1728,6.348,1729,5.349,1828,7.281,1829,5.349,1830,5.985,1831,5.349,1832,5.349,1833,6.233,1834,5.985,1835,6.494,1836,5.349,1837,5.985,1838,5.985,1839,5.349,1840,5.985,1841,5.985,1842,5.985,1843,3.98,1844,3.98,1845,6.83,1846,5.985,1847,5.985,1848,5.985,1849,4.158]],["title/injectables/NewsRepo.html",[209,1.09,1833,3.291]],["body/injectables/NewsRepo.html",[0,0.103,3,0.081,4,0.068,5,0.055,7,1.147,9,0.16,10,0.597,16,1.034,21,0.907,23,1.285,24,0.006,25,0.744,26,0.367,27,0.853,32,0.926,33,1.067,34,0.627,43,3.15,51,0.35,52,1.204,55,1.13,56,0.955,57,0.609,61,0.077,69,3.495,80,0.003,81,0.003,91,0.974,106,1.663,110,0.761,135,1.786,142,1.055,209,1.147,210,1.313,212,2.994,219,1.842,229,2.75,233,4.004,242,3.501,244,2.821,288,6.268,290,5.601,291,3.618,292,4.654,293,4.654,294,4.654,295,2.826,296,4.654,297,4.654,298,4.654,304,2.665,305,6.307,307,3.088,309,3.088,311,3.088,313,3.088,315,2.676,316,3.088,318,3.088,320,3.088,344,2.748,354,4.848,497,3.61,499,3.403,500,3.919,502,2.826,505,3.104,507,3.463,546,4.848,549,4.64,572,3.729,573,3.729,587,2.128,588,2.272,598,3.327,601,2.373,602,2.295,607,4.64,630,2.734,648,3.098,777,5.382,958,2.208,1010,4.572,1041,2.676,1117,4.572,1236,4.64,1251,5.431,1254,3.098,1255,3,1599,4.539,1649,2.521,1694,4.354,1758,2.521,1833,3.463,1850,3.088,1851,6.267,1852,5.208,1853,5.208,1854,3.455,1855,4.848,1856,3.455,1857,5.208,1858,3.455,1859,6.977,1860,4.654,1861,6.977,1862,5.208,1863,3.455,1864,3.455,1865,3.455,1866,3.455,1867,3.455,1868,3.455,1869,3.455,1870,3.455,1871,3.455,1872,3.455,1873,3.455,1874,2.846,1875,3.455,1876,4.654,1877,3.455,1878,4.017,1879,3.455,1880,3.455,1881,5.208,1882,3.455,1883,5.208,1884,3.455,1885,3.455,1886,5.208,1887,5.208,1888,3.455,1889,3.088,1890,3.455,1891,2.846,1892,3.455,1893,2.521,1894,2.056,1895,6.267,1896,3.455,1897,3.455,1898,3.455]],["title/classes/NewsResponse.html",[0,0.148,1730,3.438]],["body/classes/NewsResponse.html",[0,0.112,2,0.7,3,0.088,4,0.169,5,0.06,9,0.173,10,0.634,12,2.213,15,2.594,16,1.745,17,2.645,21,0.937,24,0.006,25,0.607,26,0.393,27,0.777,28,2.464,29,2.487,39,1.051,51,0.315,52,1.575,61,0.083,68,4.639,80,0.003,81,0.003,90,2.837,123,3.251,135,1.365,220,3.212,221,3.293,222,4.048,223,3.242,227,3.001,233,3.533,408,1.989,499,3.64,500,4.074,501,3.879,502,3.568,503,3.568,505,3.396,506,4.568,507,4.372,530,2.157,531,2.392,534,3.212,545,3.001,548,3.637,652,4.554,653,3.405,654,4.554,655,4.265,661,4.639,662,4.639,665,4.796,666,4.554,667,3.29,670,5.178,671,5.044,672,1.786,677,2.732,678,3.912,767,6.211,1200,4.554,1339,2.601,1576,3.533,1696,4.034,1730,3.842,1899,2.888,1900,3.744,1901,5.98,1902,3.744,1903,5.651,1904,3.744,1905,3.744,1906,3.744,1907,4.554,1908,3.744,1909,4.796,1910,4.942,1911,3.744,1912,5.876,1913,3.744,1914,5.415,1915,3.744,1916,5.53,1917,3.744,1918,4.796,1919,3.089,1920,3.744,1921,2.888,1922,3.744,1923,3.744,1924,3.744,1925,3.744,1926,3.744,1927,4.265,1928,3.744,1929,5.876,1930,3.744]],["title/classes/NewsScope.html",[0,0.148,1878,3.817]],["body/classes/NewsScope.html",[0,0.153,2,0.957,3,0.12,4,0.101,5,0.082,7,1.519,9,0.237,10,0.79,21,0.866,23,1.257,24,0.006,25,0.697,26,0.365,27,0.799,28,1.554,32,1.371,33,1.58,34,0.929,39,0.924,43,2.856,51,0.34,52,0.823,55,1.11,56,1.414,61,0.113,80,0.004,81,0.004,91,1.29,106,1.538,135,1.431,142,1.313,220,2.499,225,3.043,315,3.542,499,2.571,500,2.331,503,2.775,588,3.915,589,3.945,596,5.317,601,3.553,602,2.525,603,5.317,605,5.317,606,5.317,607,5.793,608,4.213,610,3.945,611,4.789,612,4.213,613,3.945,614,5.688,615,5.029,616,5.029,617,4.213,618,3.731,630,3.402,657,5.417,885,2.499,958,3.268,1010,3.731,1016,4.571,1236,4.584,1379,3.043,1855,5.797,1878,6.922,1931,6.422,1932,4.213,1933,6.893,1934,6.893,1935,6.893,1936,5.115,1937,6.893,1938,5.115,1939,3.945,1940,4.789,1941,5.115,1942,5.115,1943,5.115,1944,6.893,1945,5.115,1946,5.115,1947,3.554,1948,2.946,1949,5.115,1950,5.115,1951,5.115,1952,5.115]],["title/interfaces/NewsTargetFilter.html",[145,0.456,1855,3.438]],["body/interfaces/NewsTargetFilter.html",[3,0.169,4,0.142,5,0.115,9,0.333,10,0.982,24,0.006,26,0.348,51,0.348,52,1.157,57,1.268,61,0.16,80,0.005,81,0.005,145,0.664,147,1.989,219,2.497,220,4.622,221,4.738,500,3.279,1015,7.792,1855,5.949,1931,5.926,1953,6.43]],["title/injectables/NewsUc.html",[209,1.09,1728,3.162]],["body/injectables/NewsUc.html",[0,0.075,3,0.059,4,0.049,5,0.04,9,0.116,12,1.817,16,1.588,18,0.561,21,0.795,23,1.154,24,0.006,25,0.668,26,0.333,27,0.766,28,1.781,32,1.724,33,1.576,34,0.736,39,0.565,49,1.975,51,0.307,52,0.403,57,0.442,61,0.056,80,0.002,81,0.002,91,0.758,106,1.584,110,0.553,123,0.842,135,1.862,142,1.347,201,4.46,209,0.893,210,0.953,212,2.926,219,2.566,220,3.908,221,2.935,222,4.46,223,3.547,227,1.361,228,4.104,229,2.655,241,1.072,242,4.802,244,3.076,295,1.361,344,2.14,411,2.693,420,1.569,499,3.601,500,3.136,502,1.361,503,4.091,505,0.99,508,2.325,523,3.777,524,2.696,560,1.197,561,1.226,562,1.169,563,1.169,587,1.545,588,3.29,602,3.148,630,2.226,658,4.072,667,1.492,677,1.83,838,3.339,856,2.2,885,1.226,936,4.172,949,2.242,958,1.603,979,3.623,988,3.623,1010,5.284,1015,3.339,1019,2.851,1041,2.083,1047,4.796,1141,1.935,1217,1.492,1227,4.072,1233,4.276,1235,5.033,1236,4.278,1241,1.934,1251,3.897,1255,1.445,1260,1.83,1297,2.622,1463,1.445,1576,1.603,1578,2.958,1599,3.632,1693,2.958,1696,3.723,1728,2.59,1740,3.339,1789,2.242,1795,2.242,1801,5.237,1803,5.237,1818,3.623,1833,4.577,1836,2.242,1855,2.817,1874,2.066,1954,2.066,1955,4.054,1956,4.054,1957,4.054,1958,4.054,1959,5.103,1960,2.508,1961,2.508,1962,4.054,1963,2.508,1964,4.054,1965,2.508,1966,4.054,1967,2.508,1968,4.054,1969,4.56,1970,4.56,1971,3.393,1972,4.054,1973,2.508,1974,4.054,1975,2.508,1976,2.508,1977,4.054,1978,2.508,1979,2.958,1980,2.508,1981,5.103,1982,2.508,1983,4.054,1984,2.508,1985,2.508,1986,2.508,1987,3.339,1988,4.827,1989,2.508,1990,2.242,1991,2.508,1992,5.861,1993,2.508,1994,4.054,1995,2.508,1996,4.054,1997,2.508,1998,5.237,1999,2.508,2000,2.508,2001,2.508,2002,4.054,2003,2.242,2004,4.054,2005,2.508,2006,2.508,2007,4.054,2008,2.508,2009,2.508,2010,5.103,2011,2.508,2012,4.054,2013,2.508,2014,2.508,2015,2.508,2016,2.242,2017,1.83,2018,2.508,2019,2.508,2020,2.508,2021,2.508,2022,2.242,2023,4.054,2024,2.508,2025,2.508,2026,2.508,2027,4.054,2028,2.508,2029,2.508,2030,2.508,2031,2.508,2032,2.508]],["title/classes/PaginationQuery.html",[0,0.148,1708,3.291]],["body/classes/PaginationQuery.html",[0,0.238,2,1.188,3,0.149,4,0.125,5,0.101,9,0.294,10,0.909,21,0.789,24,0.006,26,0.323,27,0.868,29,2.094,32,2.126,33,2.45,51,0.323,61,0.141,80,0.005,81,0.005,98,2.892,123,2.662,656,6.534,671,6.011,672,3.029,676,3.91,777,6.119,885,3.876,1213,6.534,1258,5.753,1259,6.481,1379,4.72,1708,5.275,2033,5.674,2034,6.297,2035,6.349,2036,4.305,2037,7.933,2038,7.933,2039,7.933,2040,6.349,2041,6.349,2042,7.089,2043,6.349,2044,8.652,2045,5.674,2046,6.349,2047,6.349,2048,6.349,2049,6.349]],["title/classes/PaginationResponse.html",[0,0.148,1726,3.291]],["body/classes/PaginationResponse.html",[0,0.182,2,1.139,3,0.143,4,0.12,5,0.097,9,0.282,10,0.886,18,1.362,21,0.916,23,0.879,24,0.006,25,0.509,26,0.375,27,0.883,29,2.356,51,0.248,61,0.135,80,0.004,81,0.004,98,3.062,305,6.127,344,4.078,670,5.458,672,2.905,789,4.615,1258,6.36,1259,6.645,1726,5.138,2050,5.442,2051,6.977,2052,7.727,2053,6.09,2054,6.09,2055,6.09,2056,6.09,2057,6.09,2058,6.09,2059,6.09,2060,6.09,2061,6.09]],["title/injectables/ParseObjectIdPipe.html",[209,1.09,1725,3.438]],["body/injectables/ParseObjectIdPipe.html",[0,0.202,3,0.158,4,0.133,5,0.108,9,0.312,21,0.671,23,0.973,24,0.006,25,0.564,26,0.275,27,0.646,33,2.544,34,1.225,39,1.051,41,2.585,51,0.362,55,1.464,57,1.189,61,0.15,80,0.005,81,0.005,91,1.541,106,1.243,110,1.486,135,1.401,142,1.136,209,1.814,210,2.563,219,1.78,254,3.886,263,2.661,715,3.379,1202,5.722,1725,5.722,1919,4.601,2062,7.36,2063,5.556,2064,8.235,2065,6.746,2066,8.235,2067,6.746,2068,8.235,2069,6.746,2070,6.746]],["title/interfaces/PlainTextMailContent.html",[145,0.456,160,3.047]],["body/interfaces/PlainTextMailContent.html",[3,0.149,4,0.125,5,0.101,7,2.054,9,0.293,10,0.908,24,0.006,25,0.529,26,0.322,27,0.759,39,1.129,61,0.141,80,0.005,81,0.005,145,0.89,146,4.879,147,1.751,148,4.048,149,5.323,150,5.268,151,4.214,152,4.214,153,4.879,154,4.214,155,4.214,156,4.214,157,5.577,158,4.048,159,4.214,160,5.323,161,6.2,162,6.2,163,4.879,164,4.299,165,4.048,166,4.214,167,4.214,168,4.214]],["title/classes/ResolvedUser.html",[0,0.148,1453,3.047]],["body/classes/ResolvedUser.html",[0,0.177,2,1.107,3,0.139,4,0.116,5,0.094,9,0.274,10,0.87,15,3.304,16,1.663,17,3.368,21,0.957,24,0.006,26,0.396,28,2.684,29,2.54,39,1.085,51,0.309,57,1.042,61,0.168,80,0.004,81,0.004,223,3.505,411,3.505,670,5.643,672,2.823,715,3.8,1240,4.42,1242,3.995,1243,5.818,1245,5.045,1246,4.42,1247,4.42,1453,4.672,2071,4.874,2072,5.917,2073,5.917,2074,5.917,2075,5.917,2076,5.917,2077,5.917,2078,5.917,2079,5.917]],["title/classes/ResolvedUserMapper.html",[0,0.148,2080,3.817]],["body/classes/ResolvedUserMapper.html",[0,0.187,2,1.166,3,0.146,4,0.123,5,0.099,9,0.289,12,2.449,16,1.238,21,0.62,23,0.9,24,0.006,25,0.655,26,0.254,27,0.597,32,1.671,33,1.926,34,1.132,39,0.95,51,0.319,52,1.003,61,0.138,80,0.004,81,0.004,91,1.467,106,1.149,135,1.295,142,1.05,223,3.769,508,3.91,646,3.742,779,5.216,783,4.146,784,4.146,1240,4.529,1242,4.295,1453,5.545,1813,5.136,1815,5.136,1817,5.572,2080,6.05,2081,5.572,2082,7.843,2083,6.235,2084,4.809,2085,5.572,2086,6.235,2087,5.572,2088,6.235,2089,6.235,2090,6.235,2091,6.235,2092,6.235,2093,6.235,2094,5.572,2095,6.235,2096,5.572]],["title/classes/Role.html",[0,0.148,1242,2.361]],["body/classes/Role.html",[0,0.149,2,0.929,3,0.117,4,0.098,5,0.079,7,1.489,8,3.108,9,0.356,10,0.775,14,2.617,15,2.667,16,1.342,17,2.719,18,1.111,21,0.921,23,0.717,24,0.006,25,0.743,26,0.377,27,0.476,28,2.054,29,2.403,30,2.722,32,2.21,33,2.547,34,1.497,35,3.386,39,1.026,41,1.56,42,2.038,43,3.02,44,2.37,45,2.37,46,2.038,47,2.37,48,2.316,49,1.923,50,2.37,51,0.275,52,1.087,53,3.06,55,1.079,56,1.373,57,0.875,59,1.888,61,0.17,62,1.486,63,1.82,70,1.888,76,1.999,80,0.004,81,0.004,145,0.458,219,2.176,223,3.61,417,2.389,420,1.923,457,2.696,458,2.696,523,2.489,534,3.303,676,3.06,969,4.021,1136,2.956,1209,3.625,1240,5.059,1242,3.933,1309,6.36,1310,3.832,1311,3.832,1312,4.44,1313,3.832,1314,3.452,1315,4.092,1316,3.625,1317,4.44,1318,4.44,1319,4.44,1320,4.44,1321,5.214,2097,6.759,2098,4.092,2099,4.969,2100,4.969,2101,4.969]],["title/injectables/RoleRepo.html",[209,1.09,2102,3.438]],["body/injectables/RoleRepo.html",[0,0.167,3,0.131,4,0.11,5,0.089,9,0.258,10,0.836,16,1.615,18,1.246,21,0.891,23,1.245,24,0.006,25,0.768,26,0.351,27,0.827,39,0.901,51,0.351,52,0.896,55,1.209,57,0.981,61,0.124,80,0.004,81,0.004,86,1.969,91,1.365,106,1.499,110,1.227,135,1.689,142,1.228,209,1.607,210,2.116,212,3.017,219,2.472,223,2.331,229,2.84,241,2.38,244,2.73,263,2.197,299,3.559,300,4.972,302,3.85,885,2.721,1242,4.469,2102,5.068,2103,4.977,2104,8.96,2105,6.519,2106,7.295,2107,7.295,2108,7.295,2109,6.519,2110,5.57,2111,7.295,2112,5.57,2113,7.295,2114,5.57,2115,5.57,2116,7.295,2117,7.295,2118,5.57]],["title/injectables/RoleUC.html",[209,1.09,2119,3.438]],["body/injectables/RoleUC.html",[0,0.189,3,0.148,4,0.124,5,0.101,9,0.293,18,1.414,21,0.787,23,1.142,24,0.006,25,0.661,26,0.322,27,0.758,34,1.148,39,0.7,51,0.368,52,1.017,57,1.114,61,0.14,80,0.005,81,0.005,86,2.235,91,1.48,106,1.165,110,1.393,135,1.313,142,1.065,209,1.743,210,2.402,212,2.711,219,2.389,223,3.9,229,2.444,236,4.205,241,2.702,244,2.122,1240,4.176,1311,4.877,2102,6.604,2119,5.498,2120,5.651,2121,7.913,2122,6.324,2123,6.324,2124,7.913,2125,6.324,2126,3.762,2127,6.324,2128,6.324,2129,6.324,2130,6.324,2131,6.324]],["title/classes/SchoolInfo.html",[0,0.148,528,2.612]],["body/classes/SchoolInfo.html",[0,0.191,2,1.195,3,0.15,4,0.126,5,0.102,7,1.754,9,0.296,10,0.913,14,3.082,16,1.581,18,1.429,21,0.903,23,0.922,24,0.006,25,0.781,26,0.388,27,0.612,29,2.29,30,2.595,39,1.006,41,2.005,42,2.621,43,2.917,46,2.621,51,0.324,52,1.281,55,1.387,56,1.766,57,1.125,59,2.427,61,0.142,62,1.91,80,0.005,81,0.005,259,4.802,417,2.814,420,2.473,435,4.203,457,3.466,458,3.466,479,3.466,494,6.142,495,4.66,496,4.66,528,4.203,1230,4.438,2132,7.754]],["title/classes/SchoolInfoMapper.html",[0,0.148,1785,3.817]],["body/classes/SchoolInfoMapper.html",[0,0.206,2,1.29,3,0.162,4,0.136,5,0.11,9,0.319,21,0.686,23,0.995,24,0.006,25,0.576,26,0.281,27,0.66,34,1.252,51,0.34,52,1.109,61,0.153,80,0.005,81,0.005,91,1.561,106,1.271,135,1.431,142,1.161,508,4.089,528,5.04,646,3.981,779,5.549,783,4.585,784,4.585,1785,6.437,1909,6.804,2133,7.458,2134,5.318,2135,8.345,2136,5.678,2137,6.894,2138,5.678,2139,6.894]],["title/classes/SchoolInfoResponse.html",[0,0.148,1909,3.61]],["body/classes/SchoolInfoResponse.html",[0,0.203,2,1.27,3,0.159,4,0.134,5,0.108,9,0.314,10,0.948,16,1.888,21,0.822,24,0.006,25,0.795,26,0.337,29,2.182,39,1.027,51,0.276,52,1.492,61,0.151,80,0.005,81,0.005,123,2.992,505,3.66,661,5.283,662,5.283,670,4.98,672,3.239,678,4.04,767,4.717,1909,6.032,1921,5.237,2140,7.967,2141,5.237,2142,5.592,2143,5.592]],["title/classes/SchoolNews.html",[0,0.148,572,2.944]],["body/classes/SchoolNews.html",[0,0.203,2,0.612,3,0.077,4,0.144,5,0.052,7,1.61,8,2.63,9,0.151,10,0.573,12,0.863,14,1.934,15,1.971,16,1.203,17,2.009,21,0.929,23,0.472,24,0.006,25,0.567,26,0.374,27,0.811,28,2.221,29,2.428,30,2.726,32,1.624,33,1.872,34,1.327,39,1.019,41,1.027,42,1.342,43,3.422,44,1.56,45,1.56,46,1.342,47,1.56,48,1.525,49,1.266,50,1.56,51,0.326,52,1.175,54,2.644,55,0.71,56,0.904,57,0.576,61,0.162,62,0.978,64,2.181,66,4.669,70,1.243,76,2.438,80,0.003,81,0.003,90,2.822,91,0.935,106,0.603,142,0.551,145,0.302,219,1.929,220,3.916,221,3.859,223,2.537,243,2.273,272,3.386,334,2.791,359,1.884,408,1.177,411,2.091,417,1.156,420,2.346,487,3.315,492,2.711,497,1.884,498,2.273,499,3.699,500,3.937,501,3.859,502,3.965,503,3.682,504,4.95,505,3.039,506,4.714,507,4.512,508,2.762,509,3.853,510,4.139,512,2.694,513,3.471,514,4.209,515,4.031,516,3.471,517,2.694,518,2.694,519,3.645,520,4.335,521,3.645,522,3.471,523,2.502,524,3.322,525,3.471,526,2.694,527,2.694,528,3.857,529,2.694,530,3.491,531,3.873,532,2.694,533,2.694,534,2.962,535,2.694,536,3.322,537,2.694,538,3.645,539,2.694,540,3.645,541,2.694,542,2.972,543,2.386,544,2.711,545,1.775,546,2.273,547,1.398,548,1.638,549,2.175,550,2.09,551,2.386,552,2.386,553,2.386,554,2.386,555,2.386,556,2.014,557,2.175,558,2.386,559,3.645,560,2.891,561,2.962,562,2.825,563,2.825,564,2.891,565,3.491,566,3.491,567,2.386,568,3.645,569,2.386,570,2.386,571,4.422,572,2.972,573,1.946,2144,3.271]],["title/classes/Scope.html",[0,0.148,588,2.159]],["body/classes/Scope.html",[0,0.13,2,0.811,3,0.102,4,0.085,5,0.069,9,0.201,10,0.705,14,1.678,20,2.67,21,0.773,23,1.031,24,0.006,25,0.514,26,0.357,27,0.589,32,1.162,33,2.207,39,1.009,49,2.38,51,0.25,55,0.941,56,1.198,61,0.189,63,1.588,80,0.004,81,0.004,91,1.15,100,2.883,106,1.133,135,1.77,142,1.556,265,3.163,305,5.17,315,3.995,588,2.683,601,4.082,602,2.617,603,5.511,605,4.743,606,4.743,607,6.145,610,4.743,611,5.924,613,4.743,614,5.988,615,6.22,616,6.22,618,3.163,630,3.117,885,3.491,971,2.579,1019,2.422,1136,5.072,1316,5.212,1339,4.272,1379,2.579,1389,4.625,1656,3.344,1657,2.77,1919,2.422,1939,6.576,1948,4.478,2017,3.163,2145,3.344,2146,5.495,2147,4.336,2148,4.336,2149,4.336,2150,4.336,2151,4.336,2152,4.336,2153,4.336,2154,6.385,2155,5.885,2156,5.495,2157,3.875,2158,4.336,2159,3.875,2160,6.385,2161,4.336,2162,4.336,2163,3.875,2164,4.336,2165,3.875,2166,4.336,2167,4.336,2168,4.336,2169,5.495,2170,4.336,2171,6.149,2172,4.336,2173,4.336,2174,4.336,2175,4.336,2176,4.336,2177,4.336,2178,4.336,2179,6.149,2180,4.336,2181,6.149,2182,4.336,2183,4.336,2184,4.336,2185,4.336,2186,4.336]],["title/classes/ServerConsole.html",[0,0.148,2187,3.817]],["body/classes/ServerConsole.html",[0,0.175,2,1.095,3,0.137,4,0.115,5,0.093,9,0.271,18,1.308,21,0.828,23,1.087,24,0.006,25,0.629,26,0.307,27,0.722,29,1.988,39,0.922,51,0.307,61,0.13,80,0.004,81,0.004,91,1.409,106,1.388,114,2.859,123,3.054,142,1.268,181,3.432,241,2.5,315,4.52,363,6.473,365,4.513,373,2.859,374,6.197,907,7.244,910,5.21,923,4.28,1043,5.849,1065,5.539,1389,5.233,2187,5.81,2188,5.229,2189,7.532,2190,5.851,2191,5.851,2192,7.532,2193,6.417,2194,5.851,2195,7.532,2196,6.731,2197,5.851,2198,6.731,2199,7.186,2200,5.229,2201,5.851,2202,5.851]],["title/modules/ServerConsoleModule.html",[169,1.48,2203,3.61]],["body/modules/ServerConsoleModule.html",[0,0.198,3,0.155,4,0.13,5,0.106,24,0.006,51,0.384,61,0.147,80,0.005,81,0.005,110,1.458,169,2.434,171,2.77,172,3.793,179,4.547,180,3.492,181,3.015,183,4.017,184,3.977,363,6.678,365,5.104,373,3.233,374,5.632,1030,3.697,2187,6.278,2200,5.914,2203,7.175,2204,5.914,2205,5.914,2206,5.914,2207,6.678,2208,6.618,2209,6.618,2210,8.139,2211,6.618,2212,6.618,2213,3.697]],["title/controllers/ServerController.html",[679,2.206,2214,3.817]],["body/controllers/ServerController.html",[0,0.213,3,0.166,4,0.14,5,0.113,9,0.329,21,0.706,24,0.006,29,1.873,32,2.276,39,0.94,51,0.289,61,0.157,80,0.005,81,0.005,91,1.589,106,1.308,110,1.564,114,3.468,142,1.195,679,3.785,681,3.555,907,7.756,909,5.9,910,4.608,911,5.647,912,4.892,922,5.475,923,3.647,2214,6.55,2215,6.343,2216,7.098]],["title/modules/ServerModule.html",[169,1.48,2207,3.438]],["body/modules/ServerModule.html",[0,0.135,1,3.635,3,0.105,4,0.088,5,0.072,12,1.924,24,0.006,26,0.183,34,0.817,39,0.875,51,0.4,55,1.37,56,1.243,61,0.1,63,1.647,64,1.618,65,2.096,69,3.958,71,3.281,80,0.004,81,0.004,110,0.991,135,1.728,142,0.757,169,1.887,170,6.294,171,1.883,172,2.941,176,5.994,179,3.525,180,2.374,181,2.049,184,3.083,381,6.294,408,2.27,476,3.885,484,3.33,486,2.27,492,3.424,497,3.635,499,2.353,514,3.635,528,3.33,544,3.424,547,1.922,560,2.145,561,2.198,562,2.096,563,2.096,564,2.145,572,3.754,573,3.754,619,3.525,681,3.16,738,4.032,750,4.032,759,3.754,871,4.032,996,4.019,1078,4.032,1087,5.639,1088,5.639,1089,5.639,1168,3.704,1169,3.704,1170,3.704,1242,3.01,1265,3.469,1284,3.242,1286,3.424,1490,6.294,1593,5.782,1599,3.33,1606,3.281,1607,3.281,1608,3.281,1643,3.704,1645,3.704,1654,3.469,1828,6.294,2207,6.831,2213,2.513,2214,5.622,2217,4.019,2218,4.019,2219,6.294,2220,3.704,2221,6.31,2222,6.31,2223,3.281,2224,2.991,2225,2.874,2226,3.704,2227,4.498,2228,4.498,2229,3.125,2230,4.498,2231,4.498,2232,4.498,2233,4.498,2234,4.498,2235,4.498,2236,4.498,2237,4.498,2238,4.498,2239,4.498,2240,5.197,2241,5.197,2242,4.867,2243,5.197,2244,4.498,2245,4.498,2246,4.498,2247,4.498,2248,4.019,2249,3.125,2250,4.498,2251,4.498,2252,6.31,2253,4.498,2254,3.704,2255,2.991,2256,4.019,2257,3.704,2258,4.498]],["title/classes/StatusDomainService.html",[0,0.148,2259,4.076]],["body/classes/StatusDomainService.html",[0,0.163,2,1.017,3,0.127,4,0.107,5,0.087,9,0.252,10,0.823,18,1.215,21,0.884,23,1.234,24,0.006,25,0.714,26,0.372,27,0.819,39,0.602,49,2.104,51,0.221,52,0.874,61,0.121,80,0.004,81,0.004,91,1.343,98,2.443,106,1.481,135,1.49,142,1.209,435,2.868,486,3.198,602,3.344,630,3.132,885,3.927,1284,5.145,1291,5.101,1307,3.965,1314,3.776,1338,7.042,1339,4.987,1360,3.776,1361,5.584,1362,3.776,1364,3.472,2259,5.912,2260,4.857,2261,7.178,2262,7.178,2263,7.178,2264,7.178,2265,5.434,2266,5.434,2267,7.178,2268,5.434,2269,7.178,2270,5.434,2271,7.178,2272,5.434,2273,5.434,2274,5.434,2275,5.434,2276,5.434,2277,5.434,2278,5.434,2279,5.434,2280,4.857,2281,5.434,2282,5.434,2283,5.434,2284,5.434,2285,5.434,2286,5.434]],["title/classes/Submission.html",[0,0.148,1284,2.543]],["body/classes/Submission.html",[0,0.117,2,0.731,3,0.092,4,0.077,5,0.091,7,1.257,8,2.901,9,0.181,10,0.654,12,1.031,14,2.209,15,2.251,16,1.133,17,2.295,18,0.874,21,0.944,23,0.564,24,0.006,25,0.327,26,0.383,27,0.646,28,1.734,29,2.466,30,2.606,32,2.112,33,2.434,34,1.543,35,3.948,36,5.551,39,0.965,41,1.227,42,1.603,43,2.714,44,1.864,45,1.864,46,1.603,47,1.864,48,1.821,49,2.209,50,1.864,51,0.335,52,0.918,53,4.15,54,1.705,55,0.848,56,1.08,57,0.689,59,1.485,61,0.087,62,1.169,70,1.485,76,2.981,80,0.003,81,0.003,91,1.067,98,2.252,106,0.72,135,1.185,142,0.658,145,0.36,408,1.406,417,2.017,420,2.209,476,4.15,478,2.599,484,4.344,486,3.248,487,3.293,510,3.376,515,4.482,619,4.403,630,2.49,885,3.293,1019,4.867,1078,5.43,1284,2.932,1291,2.183,1322,5.716,1323,3.219,1324,5.716,1325,6.104,1326,6.623,1327,7.356,1328,4.54,1329,7.356,1330,6.005,1331,3.014,1332,5.099,1333,4.7,1334,4.7,1335,5.099,1336,2.599,1337,5.099,1338,6.779,1339,3.964,1340,6.023,1341,5.099,1342,3.492,1343,3.492,1344,3.492,1345,3.492,1346,3.492,1347,3.492,1348,3.492,1349,3.014,1350,3.492,1351,3.492,1352,3.492,2287,3.908,2288,3.908,2289,3.908,2290,3.908,2291,3.908,2292,3.908,2293,3.908,2294,3.908,2295,3.908,2296,3.908,2297,3.908,2298,3.908]],["title/injectables/SubmissionRepo.html",[209,1.09,2299,4.076]],["body/injectables/SubmissionRepo.html",[0,0.159,3,0.124,4,0.104,5,0.085,9,0.246,18,1.186,21,0.842,23,1.222,24,0.006,25,0.708,26,0.345,27,0.811,51,0.359,52,0.853,55,1.534,56,1.467,57,0.935,61,0.118,63,1.943,64,1.909,80,0.004,81,0.004,86,1.875,91,1.322,106,1.464,110,1.169,135,1.758,142,1.337,209,1.556,210,2.016,212,2.989,219,2.538,228,3.848,229,2.801,241,2.267,244,2.842,263,2.093,299,3.39,300,4.878,302,3.728,476,4.35,481,3.528,486,1.909,576,6.313,580,5.819,587,3.267,588,2.315,598,4.514,601,3.219,602,2.909,607,3.528,619,2.964,1119,3.528,1284,2.726,1291,3.947,1328,3.056,1330,3.871,1948,4.069,2213,2.964,2299,5.819,2300,4.741,2301,7.065,2302,7.065,2303,5.305,2304,7.065,2305,5.305,2306,7.065,2307,5.305,2308,7.065,2309,5.305,2310,4.741,2311,7.065,2312,5.305,2313,7.065,2314,5.305]],["title/classes/TargetInfoMapper.html",[0,0.148,1787,3.817]],["body/classes/TargetInfoMapper.html",[0,0.206,2,1.287,3,0.161,4,0.135,5,0.11,9,0.319,21,0.684,23,0.993,24,0.006,25,0.575,26,0.28,27,0.659,34,1.249,51,0.339,52,1.107,61,0.153,80,0.005,81,0.005,91,1.559,106,1.268,135,1.428,142,1.158,500,3.135,508,4.086,542,5.544,646,3.976,779,5.542,784,4.575,1787,6.428,1918,6.799,1929,6.148,2134,5.306,2136,5.666,2138,5.666,2315,7.448,2316,8.334,2317,6.879,2318,6.879,2319,6.879]],["title/classes/TargetInfoResponse.html",[0,0.148,1918,3.61]],["body/classes/TargetInfoResponse.html",[0,0.203,2,1.27,3,0.159,4,0.134,5,0.108,9,0.314,10,0.948,16,1.888,21,0.822,24,0.006,25,0.795,26,0.337,29,2.182,39,1.027,51,0.276,52,1.492,61,0.151,80,0.005,81,0.005,123,2.992,500,4.228,661,5.283,662,5.283,670,4.98,672,3.239,678,4.04,767,4.717,1918,6.032,1921,5.237,2141,5.237,2142,5.592,2143,5.592,2320,7.967]],["title/classes/Task.html",[0,0.148,486,1.78]],["body/classes/Task.html",[0,0.136,2,0.852,3,0.107,4,0.09,5,0.073,7,1.403,8,3.036,9,0.211,10,0.73,14,2.465,15,2.512,16,1.578,17,2.561,18,1.019,21,0.938,23,0.657,24,0.006,25,0.724,26,0.369,27,0.852,28,2.541,29,2.464,30,2.713,32,2.13,33,2.455,34,1.518,35,3.676,39,0.985,41,1.43,42,1.869,43,2.911,44,2.174,45,2.174,46,1.869,47,2.174,48,2.124,49,1.764,50,2.174,51,0.34,52,1.024,54,1.988,55,0.989,56,1.259,57,0.803,59,1.731,61,0.163,62,1.363,76,2.561,80,0.004,81,0.004,98,1.385,123,1.529,145,0.677,219,2.097,408,2.859,410,2.405,415,2.911,416,2.911,417,2.251,420,1.764,457,2.472,458,2.472,480,3.557,486,3.008,487,2.226,510,3.676,515,4.234,547,2.721,586,2.625,602,2.911,630,2.778,749,3.03,1019,2.545,1093,2.472,1282,4.068,1283,3.324,1284,3.272,1285,3.514,1286,4.312,1287,5.149,1288,5.521,1289,4.728,1290,4.894,1291,4.44,1292,2.911,1293,3.166,1294,3.324,1295,4.911,1296,3.166,1297,2.341,1298,4.911,1299,3.514,1300,3.514,1301,3.514,1302,3.514,1303,3.514,1304,3.514,1305,3.514,1306,3.514,1307,3.324,1308,3.514,2321,6.368,2322,4.556,2323,4.556,2324,4.556,2325,4.556,2326,4.556]],["title/injectables/TaskAuthorizationService.html",[209,1.09,2327,3.438]],["body/injectables/TaskAuthorizationService.html",[0,0.178,3,0.14,4,0.117,5,0.095,9,0.276,12,2.01,18,1.331,21,0.757,23,1.099,24,0.006,25,0.636,26,0.31,27,0.729,51,0.342,57,1.048,61,0.169,80,0.004,81,0.004,86,2.103,91,1.424,106,1.097,110,1.311,135,1.581,142,1.002,209,1.678,210,2.261,212,2.636,219,2.336,228,2.596,229,2.352,241,2.542,244,2.555,478,5.063,488,3.957,523,4.433,534,2.908,574,6.223,716,4.865,718,4.689,1014,3.229,1056,5.29,1062,5.555,1558,4.134,1561,4.341,1715,3.802,2327,5.29,2328,4.901,2329,7.614,2330,5.951,2331,5.951,2332,7.614,2333,7.29,2334,5.951,2335,5.873,2336,5.555,2337,6.805,2338,7.614,2339,5.318,2340,4.59,2341,4.59,2342,5.951,2343,5.318,2344,5.951,2345,5.951,2346,7.614,2347,5.951,2348,5.318]],["title/controllers/TaskController.html",[679,2.206,2349,3.817]],["body/controllers/TaskController.html",[0,0.178,3,0.139,4,0.117,5,0.095,9,0.275,21,0.591,23,0.857,24,0.006,25,0.496,26,0.242,27,0.569,29,1.568,34,1.078,51,0.392,57,1.046,61,0.132,80,0.004,81,0.004,86,2.099,91,1.423,106,1.095,110,1.309,135,1.836,142,1.281,212,2.634,229,2.349,241,2.538,244,1.993,601,3.465,646,2.833,672,2.833,679,2.648,681,2.975,683,3.795,689,3.795,690,4.333,694,4.333,1237,4.545,1258,5.057,1259,5.284,1694,5.829,1701,5.262,1706,4.892,1708,6.468,1724,4.581,1726,3.95,1727,4.892,1948,4.381,2051,5.548,2349,5.866,2350,5.308,2351,4.127,2352,5.94,2353,5.829,2354,5.94,2355,4.333,2356,4.581,2357,5.94,2358,5.94,2359,5.94,2360,5.94,2361,5.94,2362,5.94,2363,5.94,2364,5.94,2365,5.94]],["title/classes/TaskMapper.html",[0,0.148,2356,3.817]],["body/classes/TaskMapper.html",[0,0.188,2,1.176,3,0.147,4,0.124,5,0.1,9,0.291,21,0.625,23,0.907,24,0.006,25,0.525,26,0.256,27,0.602,34,1.141,49,2.433,51,0.321,61,0.139,63,2.302,80,0.004,81,0.004,91,1.475,106,1.158,135,1.788,142,1.058,486,2.836,508,3.924,646,3.76,779,5.242,783,4.18,784,4.18,1360,4.367,1361,4.367,1362,4.367,1364,5.037,1813,5.177,1815,5.177,2138,5.177,2213,3.511,2280,5.617,2355,6.588,2356,6.08,2366,5.617,2367,7.883,2368,8.07,2369,6.285,2370,7.883,2371,4.18,2372,6.285,2373,6.285,2374,6.285,2375,6.285,2376,6.285,2377,6.285,2378,6.285,2379,6.285,2380,6.285,2381,5.617,2382,6.285,2383,6.285,2384,6.285,2385,6.285,2386,6.285,2387,6.285]],["title/modules/TaskModule.html",[169,1.48,2219,3.61]],["body/modules/TaskModule.html",[0,0.194,3,0.152,4,0.127,5,0.103,24,0.006,51,0.389,61,0.144,80,0.005,81,0.005,110,1.428,169,2.403,171,2.713,172,3.745,179,4.488,180,3.42,181,2.953,183,3.661,184,3.166,574,6.359,681,4.024,2126,3.856,2219,7.325,2327,6.644,2339,5.791,2349,6.736,2353,6.644,2388,5.791,2389,5.791,2390,6.644,2391,6.481,2392,6.481,2393,4.141,2394,6.481]],["title/classes/TaskParentTestEntity.html",[0,0.148,2395,3.817]],["body/classes/TaskParentTestEntity.html",[0,0.177,2,0.768,3,0.096,4,0.081,5,0.066,7,0.905,9,0.19,10,0.678,12,2.278,16,1.663,18,0.919,21,0.833,23,0.854,24,0.006,25,0.672,26,0.309,27,0.727,28,1.248,34,1.679,41,2.177,49,1.59,51,0.309,52,0.661,55,0.892,57,0.724,61,0.131,80,0.003,81,0.003,91,1.107,98,1.798,106,1.278,135,1.973,142,1.573,219,2.525,228,2.581,263,1.621,344,2.168,408,2.729,410,2.168,411,2.476,415,4.847,416,4.847,475,2.295,481,3.934,484,4.554,486,3.441,560,1.96,561,2.007,562,1.915,563,1.915,564,1.96,565,2.366,586,2.366,630,2.581,715,2.963,1014,2.229,1246,2.168,1247,2.168,1282,4.43,1284,4.802,1286,3.762,1287,4.671,1289,3.52,1290,5.439,1291,3.305,1292,4.43,1293,4.111,1324,4.563,1328,4.631,1330,2.997,1353,6.248,1498,4.111,1502,3.169,1506,3.169,1546,3.383,1547,4.873,2034,2.854,2395,5.348,2396,3.383,2397,5.287,2398,5.916,2399,5.287,2400,4.108,2401,4.108,2402,4.108,2403,4.108,2404,6.197,2405,3.671,2406,3.671,2407,3.671,2408,3.169,2409,3.671,2410,3.671,2411,6.197,2412,3.671,2413,3.671,2414,3.671,2415,3.383,2416,5.287,2417,3.671,2418,5.287,2419,3.671,2420,3.671,2421,3.671,2422,3.671,2423,5.287,2424,3.671,2425,3.671,2426,3.671,2427,3.671,2428,3.671]],["title/injectables/TaskRepo.html",[209,1.09,2390,3.438]],["body/injectables/TaskRepo.html",[0,0.118,3,0.092,4,0.077,5,0.063,9,0.182,18,0.881,21,0.821,23,1.141,24,0.006,25,0.661,26,0.322,27,0.757,28,2.26,34,1.229,51,0.336,52,0.633,55,0.855,56,1.088,57,0.694,61,0.087,63,2.479,69,3.725,80,0.003,81,0.003,86,1.392,91,1.073,106,1.57,110,0.868,123,1.925,135,1.903,142,1.331,181,1.794,209,1.264,210,1.496,212,2.91,219,2.387,229,2.697,236,5.488,241,1.682,242,4.155,244,2.859,299,2.516,300,4.284,302,3.028,344,3.572,408,1.417,486,2.064,587,2.425,588,3.245,598,3.666,601,2.614,602,3.261,607,4.946,1014,2.137,1041,3.822,1119,2.618,1251,6.015,1254,4.027,1255,4.753,1286,3.113,1287,3.533,1289,2.343,1290,5.246,1291,2.2,1328,2.268,1336,2.618,1462,5.127,1558,2.736,1561,4.186,1599,4.979,1659,3.986,1694,3.986,1874,3.243,1876,5.127,1889,3.519,1894,2.343,2126,2.343,2242,4.425,2348,5.127,2351,5.167,2371,2.618,2390,3.986,2393,2.516,2429,3.519,2430,5.737,2431,5.737,2432,5.737,2433,7.437,2434,3.937,2435,5.737,2436,3.937,2437,4.726,2438,6.797,2439,6.647,2440,5.737,2441,3.937,2442,5.737,2443,3.937,2444,5.737,2445,3.937,2446,3.937,2447,3.243,2448,5.221,2449,5.737,2450,5.737,2451,5.737,2452,5.737,2453,5.737,2454,7.437,2455,5.737,2456,3.937,2457,3.937,2458,3.937,2459,3.937,2460,3.037,2461,3.937,2462,3.937,2463,3.986,2464,3.037,2465,3.937,2466,3.243,2467,2.873,2468,5.737,2469,3.937,2470,3.037]],["title/classes/TaskResponse.html",[0,0.148,2355,3.61]],["body/classes/TaskResponse.html",[0,0.172,2,1.074,3,0.135,4,0.113,5,0.092,9,0.266,10,0.853,15,3.257,16,1.639,17,3.321,21,0.951,24,0.006,25,0.69,26,0.393,27,0.888,28,2.817,29,2.524,39,1.059,51,0.234,61,0.127,80,0.004,81,0.004,98,2.509,114,3.636,123,1.927,435,3.031,486,2.677,646,3.55,648,4.428,670,5.546,671,6.287,672,2.74,712,5.275,756,4.158,1289,4.912,1360,3.99,1361,3.99,1362,3.99,1364,5.275,2355,5.43,2471,5.133,2472,6.651,2473,8.257,2474,5.743,2475,5.743,2476,5.743,2477,5.743,2478,5.743,2479,5.743,2480,5.743,2481,5.743]],["title/classes/TaskScope.html",[0,0.148,2448,3.817]],["body/classes/TaskScope.html",[0,0.152,2,0.952,3,0.119,4,0.1,5,0.081,7,1.514,9,0.236,10,0.788,21,0.911,23,1.293,24,0.006,25,0.727,26,0.373,27,0.833,28,2.364,32,1.364,33,1.572,39,0.922,43,2.849,51,0.317,52,0.819,57,0.897,61,0.113,80,0.004,81,0.004,91,1.285,106,1.651,142,1.402,219,2.418,315,3.531,486,1.831,547,2.175,588,3.91,589,3.926,596,6.423,601,2.319,602,2.849,603,5.299,605,5.299,606,5.299,607,5.172,608,4.192,610,3.926,611,4.774,612,4.192,613,3.926,614,5.674,615,5.012,616,5.012,617,4.192,618,3.713,1019,3.838,1287,4.231,1289,4.954,1290,3.134,1932,4.192,2438,5.659,2448,7.36,2482,7.772,2483,6.871,2484,6.871,2485,6.871,2486,8.328,2487,6.871,2488,5.09,2489,6.871,2490,5.09,2491,6.871,2492,6.871,2493,5.09,2494,5.09,2495,5.09,2496,5.09]],["title/classes/TaskTestHelper.html",[0,0.148,2408,3.817]],["body/classes/TaskTestHelper.html",[0,0.147,2,0.597,3,0.075,4,0.063,5,0.051,7,1.08,9,0.148,10,0.562,12,2.013,16,1.33,21,0.942,23,1.183,24,0.006,25,0.73,26,0.361,27,0.785,28,1.814,32,0.855,33,0.986,34,1.586,41,2.103,43,3.322,49,1.235,51,0.273,52,0.788,55,0.693,57,0.562,61,0.109,80,0.003,81,0.003,91,0.917,98,0.97,106,1.715,135,1.883,142,1.492,219,2.5,228,1.392,259,4.321,263,1.259,315,3.067,344,4.026,408,2.409,410,1.684,411,2.052,415,2.039,416,2.039,435,1.684,475,1.783,481,4.454,484,4.677,486,3.48,505,1.934,560,1.522,561,1.559,562,1.487,563,1.487,564,1.522,565,1.838,586,1.838,602,1.795,630,1.392,715,1.598,1014,1.732,1241,2.338,1246,1.684,1247,1.684,1282,3.132,1284,4.706,1286,3.239,1287,4.124,1289,3.985,1290,5.049,1291,2.738,1292,3.132,1293,2.217,1324,3.781,1328,4.576,1330,2.328,1353,4.037,1498,6.464,1499,4.037,1502,5.166,1506,5.166,1507,3.781,1508,4.037,1509,4.037,1510,4.916,1511,4.037,1512,4.916,1513,4.916,1514,4.916,1515,4.916,1516,4.916,1517,2.852,1518,4.037,1519,2.852,1520,2.852,1531,2.628,1532,2.852,1533,2.628,1534,4.381,1535,2.852,1536,2.628,1537,2.852,1538,2.852,1539,2.852,1540,2.852,1541,2.852,1542,2.852,1546,2.628,1547,4.037,2034,2.217,2395,4.604,2396,2.628,2397,2.852,2399,4.381,2404,5.334,2405,2.852,2406,2.852,2407,2.852,2408,3.781,2409,4.381,2410,2.852,2411,5.334,2412,4.381,2413,2.852,2414,2.852,2415,2.628,2416,4.381,2417,5.985,2418,5.334,2419,2.852,2420,2.852,2421,4.381,2422,2.852,2423,4.381,2424,4.381,2425,2.852,2426,4.381,2427,2.852,2428,2.852,2497,4.902,2498,4.902,2499,4.902,2500,4.902,2501,4.902,2502,3.191,2503,3.191,2504,3.191,2505,3.191,2506,3.191,2507,3.191,2508,3.191]],["title/injectables/TaskUC.html",[209,1.09,2353,3.438]],["body/injectables/TaskUC.html",[0,0.11,3,0.086,4,0.073,5,0.059,9,0.171,15,1.455,18,0.825,21,0.83,23,1.204,24,0.006,25,0.697,26,0.34,27,0.799,34,1.397,51,0.328,52,0.593,57,0.65,61,0.121,63,1.35,64,1.326,74,2.27,80,0.003,81,0.003,86,1.932,91,1.023,106,1.486,110,0.812,125,4.151,135,1.965,142,1.357,201,4.012,209,1.205,210,1.401,212,2.748,219,2.351,223,1.543,228,3.739,229,2.49,239,4.503,241,1.575,244,2.705,254,2.124,376,1.847,486,3.149,523,3.263,534,1.802,577,4.886,578,4.886,582,4.503,584,4.503,587,3.366,602,3.467,630,2.385,841,3.037,885,3.183,969,3.253,971,2.194,1070,2.452,1237,4.288,1254,3.253,1255,5.323,1257,6.498,1260,2.69,1289,2.194,1333,4.503,1360,5.007,1361,5.007,1362,5.007,1363,5.615,1379,3.253,1694,3.798,1701,3.253,1706,4.503,2003,3.295,2051,5.257,2126,2.194,2327,5.007,2333,3.037,2343,3.295,2351,3.798,2353,3.798,2381,3.295,2390,5.601,2438,4.503,2509,3.037,2510,5.467,2511,5.467,2512,5.467,2513,3.687,2514,3.687,2515,5.467,2516,3.687,2517,5.467,2518,3.687,2519,3.687,2520,3.687,2521,3.687,2522,5.467,2523,6.44,2524,3.687,2525,3.687,2526,3.687,2527,3.687,2528,3.295,2529,3.295,2530,3.295,2531,3.037,2532,3.037,2533,3.687,2534,2.844,2535,5.467,2536,3.687,2537,3.687,2538,3.687,2539,3.687,2540,5.467,2541,3.687,2542,3.687,2543,3.687,2544,7.206,2545,5.467,2546,3.687,2547,3.687,2548,3.687,2549,5.467,2550,3.687,2551,3.687,2552,3.687,2553,6.515,2554,3.687,2555,3.687,2556,3.687,2557,5.467,2558,3.687,2559,3.687,2560,3.687,2561,3.687,2562,3.687,2563,3.687,2564,3.687,2565,3.687,2566,3.687,2567,3.687,2568,3.687]],["title/classes/TaskWithStatusVo.html",[0,0.148,1363,3.61]],["body/classes/TaskWithStatusVo.html",[0,0.199,2,1.246,3,0.156,4,0.131,5,0.106,9,0.308,10,0.937,18,1.489,21,0.879,23,0.961,24,0.006,25,0.556,26,0.36,27,0.638,51,0.271,61,0.148,80,0.005,81,0.005,98,2.686,145,0.614,486,3.61,1331,5.137,1349,5.137,1357,7.425,1358,7.591,1359,5.485,1360,4.627,1361,4.627,1362,4.627,1363,5.961,1364,6.23,1365,7.302,1366,5.952,2569,8.171,2570,6.66]],["title/classes/TeamInfo.html",[0,0.148,544,2.685]],["body/classes/TeamInfo.html",[0,0.191,2,1.195,3,0.15,4,0.126,5,0.102,7,1.754,9,0.296,10,0.913,14,3.082,16,1.581,18,1.429,21,0.903,23,0.922,24,0.006,25,0.781,26,0.388,27,0.612,29,2.29,30,2.595,39,1.006,41,2.005,42,2.621,43,2.917,46,2.621,51,0.324,52,1.281,55,1.387,56,1.766,57,1.125,59,2.427,61,0.142,62,1.91,80,0.005,81,0.005,259,4.802,417,2.814,420,2.473,435,4.203,457,3.466,458,3.466,479,3.466,494,6.142,495,4.66,496,4.66,544,4.321,1231,4.438,2571,7.754]],["title/classes/TeamNews.html",[0,0.148,573,2.944]],["body/classes/TeamNews.html",[0,0.203,2,0.612,3,0.077,4,0.144,5,0.052,7,1.61,8,2.63,9,0.151,10,0.573,12,0.863,14,1.934,15,1.971,16,1.203,17,2.009,21,0.929,23,0.472,24,0.006,25,0.567,26,0.374,27,0.811,28,2.221,29,2.428,30,2.726,32,1.624,33,1.872,34,1.327,39,1.019,41,1.027,42,1.342,43,3.422,44,1.56,45,1.56,46,1.342,47,1.56,48,1.525,49,1.266,50,1.56,51,0.326,52,1.175,54,2.644,55,0.71,56,0.904,57,0.576,61,0.162,62,0.978,64,2.181,66,4.669,70,1.243,76,2.438,80,0.003,81,0.003,90,2.822,91,0.935,106,0.603,142,0.551,145,0.302,219,1.929,220,3.916,221,3.859,223,2.537,243,2.273,272,3.386,334,2.791,359,1.884,408,1.177,411,2.091,417,1.156,420,2.346,487,3.315,492,2.711,497,1.884,498,2.273,499,3.699,500,3.937,501,3.859,502,3.965,503,3.682,504,4.95,505,3.039,506,4.714,507,4.512,508,2.762,509,3.853,510,4.139,512,2.694,513,3.471,514,4.209,515,4.031,516,3.471,517,2.694,518,2.694,519,3.645,520,4.335,521,3.645,522,3.471,523,2.502,524,3.322,525,3.471,526,2.694,527,2.694,528,3.581,529,2.694,530,3.491,531,3.873,532,2.694,533,2.694,534,2.962,535,2.694,536,3.322,537,2.694,538,3.645,539,2.694,540,3.645,541,2.694,542,2.972,543,2.386,544,3.289,545,1.775,546,2.273,547,1.398,548,1.638,549,2.175,550,2.09,551,2.386,552,2.386,553,2.386,554,2.386,555,2.386,556,2.014,557,2.175,558,2.386,559,3.645,560,2.891,561,2.962,562,2.825,563,2.825,564,2.891,565,3.491,566,3.491,567,2.386,568,3.645,569,2.386,570,2.386,571,4.422,572,1.946,573,2.972,2572,3.271]],["title/controllers/TeamNewsController.html",[679,2.206,1835,3.817]],["body/controllers/TeamNewsController.html",[0,0.165,3,0.129,4,0.108,5,0.088,9,0.255,12,1.91,21,0.547,23,0.794,24,0.006,25,0.46,26,0.224,27,0.527,29,1.452,34,0.999,39,0.895,51,0.386,57,0.969,61,0.122,80,0.004,81,0.004,86,1.944,91,1.354,106,1.014,110,1.212,125,4.168,135,1.679,142,0.926,212,2.539,229,2.235,241,2.35,242,3.073,244,1.846,499,2.699,545,4.843,588,3.528,598,4.623,601,3.685,646,2.624,672,2.624,679,2.452,681,2.755,683,3.515,689,3.515,690,4.013,694,4.013,697,4.243,958,3.515,1231,3.822,1237,4.414,1255,4.948,1459,2.827,1700,5.377,1701,5.31,1707,5.968,1708,5.713,1710,5.96,1724,4.243,1725,5.027,1726,3.658,1727,4.531,1728,5.166,1730,3.822,1731,4.013,1732,4.916,1733,4.916,1739,4.531,1740,4.531,1741,4.916,1742,4.916,1743,4.916,1744,4.916,1745,4.916,1835,5.581,2393,3.515,2573,6.467,2574,4.916,2575,8.086,2576,5.501,2577,7.236,2578,5.501,2579,8.086,2580,5.501,2581,5.501,2582,4.916,2583,4.916,2584,5.501,2585,5.501]],["title/classes/TestHelper.html",[0,0.148,1498,3.438]],["body/classes/TestHelper.html",[0,0.105,2,0.656,3,0.082,4,0.069,5,0.056,9,0.162,10,0.604,12,2.522,16,1.496,18,1.572,21,0.926,23,0.912,24,0.006,25,0.587,26,0.322,27,0.606,32,0.939,33,1.083,34,1.148,39,0.834,41,1.985,51,0.257,52,1.017,55,0.761,61,0.078,63,1.928,64,1.894,80,0.003,81,0.003,91,0.985,106,1.646,135,1.459,142,1.332,219,2.388,233,3.364,259,5.01,263,1.383,315,4.066,334,4.824,344,2.778,399,3.132,505,3.121,588,1.529,602,2.316,716,2.24,718,3.242,768,4.336,828,2.435,856,4.581,1041,1.801,1117,5.496,1119,2.331,1151,2.435,1241,3.594,1339,5.234,1378,4.336,1405,2.331,1459,3.612,1463,3.032,1473,3.032,1498,3.658,1499,5.207,1502,5.81,1506,6.33,1507,4.877,1508,4.336,1509,4.336,1510,5.789,1511,4.336,1512,5.789,1513,5.789,1514,5.789,1515,6.516,1516,5.789,1518,6.516,1531,4.336,1533,4.336,1536,4.336,1570,2.331,1576,4.491,1657,2.24,2084,5.81,2335,6.102,2336,3.841,2415,2.887,2460,2.704,2467,3.841,2586,3.133,2587,5.265,2588,5.127,2589,4.04,2590,5.265,2591,5.265,2592,5.265,2593,4.705,2594,5.265,2595,4.705,2596,3.505,2597,3.505,2598,3.505,2599,3.505,2600,3.505,2601,3.505,2602,3.505,2603,3.505,2604,3.505,2605,3.505,2606,3.505,2607,3.505,2608,3.505,2609,3.505,2610,3.505,2611,3.505,2612,3.505,2613,2.331,2614,3.505,2615,3.505,2616,2.435,2617,3.133,2618,8.207,2619,5.265,2620,3.505,2621,3.133,2622,7.028,2623,2.887,2624,2.557,2625,3.505,2626,3.505,2627,3.505,2628,3.133,2629,5.265,2630,3.505,2631,3.505,2632,3.505,2633,3.505,2634,3.505,2635,3.133,2636,3.505,2637,3.505]],["title/injectables/TimeoutInterceptor.html",[209,1.09,1393,3.817]],["body/injectables/TimeoutInterceptor.html",[0,0.16,3,0.125,4,0.105,5,0.085,9,0.247,10,0.813,21,0.878,23,1.023,24,0.006,25,0.592,26,0.324,27,0.813,32,1.429,33,1.647,51,0.345,61,0.118,80,0.004,81,0.004,91,1.326,98,2.76,106,1.306,110,1.175,123,1.79,142,1.429,191,4.392,209,1.562,210,2.026,315,2.74,508,3.628,560,2.544,561,2.606,562,3.955,563,2.485,564,2.544,565,3.072,602,2.916,679,3.16,715,2.671,913,5.467,918,5.838,925,4.925,937,6.335,938,6.335,939,6.545,940,7.583,942,2.894,943,7.116,946,4.392,948,4.766,1030,3.96,1031,3.741,1054,4.392,1117,3.89,1297,2.74,1391,6.31,1393,5.467,1507,6.142,1674,5.171,1700,4.714,2146,6.335,2638,4.766,2639,7.089,2640,5.171,2641,4.925,2642,5.838,2643,7.963,2644,7.963,2645,5.333,2646,5.333,2647,6.142,2648,5.333,2649,5.333,2650,5.333,2651,5.333,2652,5.333,2653,7.089,2654,7.089,2655,5.333,2656,7.089,2657,5.333,2658,5.333,2659,5.333,2660,5.333,2661,5.333,2662,5.333,2663,5.333,2664,7.089,2665,5.333,2666,5.333]],["title/classes/UpdateNewsParams.html",[0,0.148,1719,3.61]],["body/classes/UpdateNewsParams.html",[0,0.265,2,1.109,3,0.139,4,0.117,5,0.095,9,0.275,10,1.013,21,0.833,24,0.006,26,0.341,27,0.728,28,2.308,29,2.212,39,0.979,51,0.309,52,1.504,61,0.132,80,0.004,81,0.004,90,3.347,123,2.966,499,3.591,501,4.577,503,4.548,645,4.573,646,3.624,648,4.519,650,5.298,652,6.256,653,4.677,654,6.256,655,5.859,671,6.141,672,2.828,673,6.788,674,7.28,675,6.904,676,3.651,1196,4.853,1232,5.542,1405,5.051,1719,5.542,2667,7.899,2668,7.596,2669,7.596,2670,5.542,2671,6.788,2672,7.596,2673,5.928,2674,5.928,2675,5.928]],["title/classes/User.html",[0,0.148,12,1.306]],["body/classes/User.html",[0,0.158,2,0.989,3,0.124,4,0.104,5,0.084,7,1.553,8,3.157,9,0.392,10,0.808,12,1.86,14,2.728,15,2.781,16,1.4,17,2.835,18,1.182,21,0.946,23,0.763,24,0.006,25,0.662,26,0.376,27,0.507,28,2.142,29,2.48,30,2.81,32,1.889,33,2.177,34,1.28,39,1.064,41,1.66,42,2.169,43,3.097,44,2.522,45,2.522,46,2.169,47,2.522,48,2.464,49,2.047,50,2.522,51,0.287,52,1.134,55,1.148,56,1.462,57,0.932,59,2.009,61,0.156,62,1.581,70,2.009,76,2.127,80,0.004,81,0.004,145,0.488,219,2.232,411,2.95,417,2.491,420,2.047,505,3.337,556,3.256,969,4.194,1241,2.522,1246,4.463,1247,4.463,1367,5.624,1368,4.355,1369,5.403,1370,4.078,1371,4.078,1372,3.516,1373,3.516,1374,3.516,1375,3.516,1376,4.078,1377,4.078,1378,4.355,2098,4.355,2676,7.049,2677,4.725,2678,5.288,2679,5.288,2680,5.288,2681,4.725,2682,4.725]],["title/classes/User-1.html",[0,0.124,12,1.092,1379,2.462]],["body/classes/User-1.html",[0,0.145,2,0.908,3,0.114,4,0.095,5,0.077,7,1.466,8,3.088,9,0.409,10,0.763,12,1.756,14,2.575,15,2.624,16,1.321,17,2.676,18,1.085,21,0.94,23,0.7,24,0.006,25,0.682,26,0.38,27,0.819,28,2.022,29,2.467,30,2.795,32,2.034,33,2.344,34,1.378,35,2.431,39,1.047,41,1.524,42,1.991,43,2.99,44,2.315,45,2.315,46,1.991,47,2.315,48,2.262,49,1.879,50,2.315,51,0.309,52,1.07,53,2.988,54,2.117,55,1.053,56,1.341,57,0.855,59,1.844,61,0.148,62,1.451,70,1.844,76,2.676,80,0.004,81,0.004,145,0.448,219,2.332,411,2.784,417,2.351,420,1.879,505,3.375,556,2.988,969,3.957,1240,4.774,1241,2.315,1242,3.62,1246,4.309,1247,4.309,1321,3.743,1367,5.429,1369,5.217,1370,3.743,1371,3.743,1372,3.227,1373,3.227,1374,3.227,1375,3.227,1376,3.743,1377,3.743,1380,3.997,1381,4.337,1382,4.337,2098,3.997,2677,4.337,2681,5.944,2682,4.337,2683,6.652,2684,4.853,2685,4.853,2686,4.853,2687,4.853,2688,4.853]],["title/controllers/UserController.html",[679,2.206,2689,3.817]],["body/controllers/UserController.html",[0,0.197,3,0.155,4,0.13,5,0.105,9,0.305,12,1.739,21,0.655,23,0.951,24,0.006,25,0.551,26,0.268,27,0.631,29,1.739,51,0.391,57,1.161,61,0.146,80,0.005,81,0.005,86,2.329,91,1.519,106,1.214,110,1.452,142,1.11,212,2.762,229,2.507,241,2.815,672,3.144,679,2.937,681,3.301,683,4.21,689,4.21,690,4.807,694,4.807,1237,4.719,1453,4.058,1701,5.234,1724,5.083,2393,4.21,2689,6.261,2690,5.889,2691,6.59,2692,8.118,2693,6.59,2694,5.85,2695,6.59,2696,6.59,2697,6.59,2698,6.59,2699,6.59]],["title/injectables/UserFacade.html",[209,1.09,1431,3.438]],["body/injectables/UserFacade.html",[0,0.198,3,0.155,4,0.13,5,0.105,9,0.306,18,1.477,21,0.808,23,1.173,24,0.006,25,0.679,26,0.331,27,0.779,51,0.374,57,1.163,61,0.146,80,0.005,81,0.005,86,2.334,91,1.521,106,1.217,110,1.455,135,1.371,142,1.112,209,1.791,210,2.509,212,2.765,229,2.511,241,2.821,244,2.216,783,4.391,1237,4.722,1431,5.647,1453,5.423,1701,3.929,2694,6.389,2700,5.901,2701,8.128,2702,6.604,2703,6.604,2704,8.128,2705,6.604,2706,6.604,2707,6.604]],["title/classes/UserInfo.html",[0,0.148,514,2.85]],["body/classes/UserInfo.html",[0,0.184,2,1.15,3,0.144,4,0.121,5,0.098,7,1.713,9,0.285,10,0.891,14,3.01,16,1.544,18,1.375,21,0.919,23,0.887,24,0.006,25,0.514,26,0.39,27,0.589,29,2.365,30,2.764,39,1.061,41,1.931,42,2.523,43,2.848,46,2.523,51,0.316,52,1.251,55,1.335,56,1.7,57,1.083,59,2.336,61,0.136,62,1.839,80,0.004,81,0.004,259,4.749,417,2.748,420,2.38,435,4.103,479,3.337,494,4.743,495,4.486,496,4.486,514,4.479,1241,2.934,1246,4.728,1247,4.728,1372,4.089,1373,4.089,1374,4.089,1375,4.089,2708,8.007,2709,7.775]],["title/classes/UserInfoMapper.html",[0,0.148,1788,3.817]],["body/classes/UserInfoMapper.html",[0,0.205,2,1.281,3,0.161,4,0.135,5,0.109,9,0.317,21,0.681,23,0.988,24,0.006,25,0.572,26,0.279,27,0.656,34,1.244,51,0.338,52,1.102,61,0.152,80,0.005,81,0.005,91,1.555,106,1.262,135,1.422,142,1.153,508,4.078,514,5.491,646,3.965,779,5.527,783,4.555,784,4.555,1788,6.411,1903,6.789,2085,6.121,2087,6.121,2134,5.283,2136,5.641,2710,7.428,2711,8.312,2712,6.849,2713,6.849,2714,6.849]],["title/classes/UserInfoResponse.html",[0,0.148,1903,3.61]],["body/classes/UserInfoResponse.html",[0,0.194,2,1.212,3,0.152,4,0.127,5,0.103,9,0.3,10,0.921,12,2.524,16,1.863,21,0.868,24,0.006,25,0.763,26,0.355,29,2.305,39,1.059,51,0.264,52,1.292,61,0.144,80,0.005,81,0.005,123,3.064,661,5.133,662,5.133,670,5.1,672,3.092,678,3.856,767,5.582,1246,4.609,1247,4.609,1903,5.862,1921,4.999,1971,5.343,2141,4.999,2142,5.338,2143,5.338,2715,8.158,2716,7.18,2717,6.481]],["title/modules/UserModule.html",[169,1.48,176,3.438]],["body/modules/UserModule.html",[0,0.189,3,0.148,4,0.124,5,0.1,24,0.006,51,0.379,61,0.14,80,0.004,81,0.004,110,1.388,169,2.36,171,2.636,172,3.679,176,7.025,179,4.409,180,3.324,181,2.87,183,3.597,204,4.409,679,2.807,681,3.953,1431,6.95,2102,6.597,2119,6.597,2126,3.747,2393,4.024,2689,6.649,2694,6.314,2718,5.628,2719,5.628,2720,5.628,2721,6.314,2722,6.298,2723,6.298]],["title/injectables/UserRepo.html",[209,1.09,2721,3.291]],["body/injectables/UserRepo.html",[0,0.196,3,0.154,4,0.129,5,0.104,9,0.303,12,2.316,16,1.606,18,1.464,21,0.804,23,1.167,24,0.006,25,0.676,26,0.329,27,0.775,51,0.373,52,1.053,55,1.421,57,1.154,61,0.145,80,0.005,81,0.005,86,2.314,91,1.513,106,1.207,110,1.443,135,1.359,142,1.103,209,1.782,210,2.488,212,2.754,219,2.418,229,2.498,241,2.798,244,2.198,263,2.583,299,4.184,300,5.278,302,4.268,2105,7.227,2109,7.227,2721,5.377,2724,5.852,2725,6.548,2726,6.548,2727,6.548]],["title/classes/UserTaskInfo.html",[0,0.148,484,2.612]],["body/classes/UserTaskInfo.html",[0,0.182,2,1.135,3,0.142,4,0.119,5,0.097,7,1.698,9,0.281,10,0.884,14,2.984,16,1.531,18,1.357,21,0.915,23,0.875,24,0.006,25,0.507,26,0.375,27,0.581,29,2.353,30,2.752,39,1.058,41,1.904,42,2.489,43,2.823,46,2.489,51,0.314,52,1.24,55,1.317,56,1.677,57,1.069,59,2.305,61,0.135,62,1.814,70,2.305,80,0.004,81,0.004,145,0.559,259,4.729,417,2.724,420,2.348,479,3.292,484,4.068,485,6.889,486,3.207,495,4.426,496,4.426,1241,2.894,1246,4.705,1247,4.705,1372,4.034,1373,4.034,1374,4.034,1375,4.034,1383,6.876,1384,7.342,2728,6.066]],["title/injectables/UserUC.html",[209,1.09,2694,3.291]],["body/injectables/UserUC.html",[0,0.187,3,0.146,4,0.123,5,0.099,9,0.289,12,1.646,18,1.394,21,0.78,23,1.132,24,0.006,25,0.655,26,0.319,27,0.751,51,0.385,57,1.099,61,0.138,80,0.004,81,0.004,86,2.772,91,1.467,106,1.149,110,1.374,135,1.628,142,1.05,209,1.728,210,2.369,212,2.694,229,2.423,241,2.664,244,2.093,602,2.284,838,5.136,1237,4.627,1453,5.284,1701,3.71,2080,4.809,2119,6.68,2126,3.71,2694,5.216,2721,6.299,2729,5.572,2730,7.843,2731,6.235,2732,6.235,2733,7.843,2734,6.235,2735,5.136,2736,6.235,2737,6.235,2738,5.572,2739,6.235,2740,6.235,2741,5.572,2742,6.235,2743,6.235]],["title/classes/ValidationError.html",[0,0.148,95,3.438]],["body/classes/ValidationError.html",[0,0.176,2,1.099,3,0.138,4,0.116,5,0.094,7,1.663,9,0.272,10,0.866,18,1.313,21,0.955,23,0.847,24,0.006,25,0.491,26,0.395,27,0.563,39,1.033,43,3.474,51,0.307,61,0.13,62,1.756,80,0.004,81,0.004,85,6.253,86,3.459,87,3.366,88,5.548,89,5.248,90,3.056,91,1.412,92,6.873,93,6.873,95,5.246,98,1.785,99,5.248,100,6.059,101,5.248,102,5.248,103,5.248,104,5.248,105,5.248,106,1.391,107,5.248,108,3.494,109,4.53,110,1.294,111,5.248,112,4.837,115,3.187,116,2.737,117,4.284,119,5.248,344,3.099,2744,5.248,2745,5.873,2746,5.873,2747,5.873]],["title/classes/ValidationErrorDetailResponse.html",[0,0.148,130,3.817]],["body/classes/ValidationErrorDetailResponse.html",[0,0.219,2,1.365,3,0.171,4,0.144,5,0.116,18,1.632,21,0.725,23,1.053,24,0.006,25,0.61,26,0.297,27,0.699,39,1.089,61,0.162,80,0.005,81,0.005,86,2.579,112,6.009,116,4.024,127,4.989,130,6.659,2748,7.715,2749,6.52,2750,7.296,2751,7.296,2752,7.11]],["title/modules/ValidationModule.html",[169,1.48,387,3.61]],["body/modules/ValidationModule.html",[0,0.219,3,0.172,4,0.144,5,0.117,24,0.006,51,0.375,61,0.162,80,0.005,81,0.005,110,1.611,169,2.585,171,3.061,183,3.332,387,6.307,401,7.725,916,4.673,927,3.86,962,5.641,1188,6.668,2753,7.313,2754,7.313,2755,7.313]],["title/changelog.html",[2756,3.192,2757,2.876,2758,3.699]],["body/changelog.html",[0,0.06,1,1.942,2,0.775,3,0.014,4,0.012,5,0.079,9,0.027,12,1.909,13,0.913,16,0.398,20,0.36,21,0.199,24,0.002,25,0.132,27,0.151,28,1.025,32,0.904,33,0.342,34,1.035,51,0.082,52,0.178,54,0.875,60,1.793,64,1.713,65,0.736,68,0.708,69,1.377,71,0.809,72,0.523,73,0.427,74,0.682,75,0.529,80,0.001,81,0.001,87,1.37,88,0.94,89,0.337,98,0.337,106,0.291,114,2.848,115,1.83,116,2.595,118,1.152,127,2.118,142,0.098,145,0.102,164,0.857,169,0.919,172,0.517,180,0.585,181,0.505,183,0.266,184,0.286,204,0.327,207,1.264,212,0.184,223,1.634,225,0.659,227,0.317,228,0.484,229,0.488,230,0.77,233,0.374,236,1.05,242,0.327,244,0.196,254,0.337,265,0.427,269,0.389,270,2.861,273,0.451,275,2.385,277,3.005,279,0.77,280,0.708,291,0.406,295,2.861,325,0.451,336,0.348,337,0.406,338,1.194,339,1.756,354,0.77,370,0.482,373,1.343,374,0.708,376,3.905,377,1.579,389,0.737,393,0.482,395,2.464,397,2.243,408,1.49,411,0.245,440,1.05,449,0.809,450,1.747,451,0.406,456,0.957,472,1.235,478,1.334,481,2.596,486,0.861,488,0.389,499,0.413,500,0.266,501,1.005,502,0.857,505,2.853,522,1.097,523,1.955,530,0.91,536,0.389,545,1.491,547,0.25,560,0.957,561,0.542,562,0.273,564,0.529,566,0.337,588,0.255,601,1.252,619,0.327,647,1.218,648,0.659,653,1.692,656,0.482,657,4.788,667,1.194,683,0.374,689,0.374,716,0.374,719,0.327,721,0.389,725,0.682,753,0.36,755,0.427,756,1.884,758,0.451,789,2.288,828,1.097,840,0.427,856,1.98,869,0.682,870,0.406,871,0.374,873,0.913,884,0.809,885,0.542,909,3.868,910,2.479,911,1.05,912,1.77,922,0.451,923,2.447,927,0.834,935,0.737,942,0.317,958,1.009,969,0.348,971,1.194,972,0.542,973,0.682,974,0.77,1000,0.99,1014,0.601,1029,0.348,1030,0.327,1031,1.78,1032,2.155,1034,2.135,1041,1.031,1043,2.243,1047,0.36,1051,0.374,1053,0.451,1062,2.242,1063,1.009,1069,1.218,1071,0.36,1077,0.77,1083,2.077,1090,0.482,1093,1.089,1094,0.809,1098,0.451,1118,0.482,1119,0.737,1121,1.097,1123,0.427,1125,0.737,1136,0.348,1141,0.855,1151,1.394,1153,0.809,1156,0.374,1171,1.218,1180,0.482,1192,1.692,1194,0.482,1195,1.652,1196,1.53,1199,2.712,1200,3.215,1207,0.855,1209,2.005,1213,0.482,1214,0.973,1216,1.747,1217,0.659,1230,3.434,1231,1.394,1232,0.427,1240,1.451,1241,3.534,1242,1.142,1244,0.77,1254,0.659,1255,0.638,1258,0.389,1266,1.05,1284,0.57,1287,0.682,1290,1.692,1291,1.338,1294,1.152,1296,0.406,1297,1.412,1313,0.451,1316,0.809,1325,0.913,1328,0.91,1334,0.482,1336,0.737,1364,0.708,1369,1.009,1379,0.94,1389,0.348,1391,0.406,1392,3.215,1404,0.482,1405,1.334,1406,0.427,1407,1.828,1414,1.152,1417,0.482,1419,0.482,1428,0.482,1435,1.412,1437,2.371,1439,2.044,1452,0.855,1459,1.23,1463,1.156,1473,5.059,1476,1.152,1561,1.152,1570,0.389,1571,6.516,1573,0.451,1576,1.009,1581,0.523,1584,2.155,1599,0.309,1603,1.592,1621,1.301,1632,0.451,1635,0.77,1648,0.737,1649,0.809,1659,0.406,1661,0.406,1663,0.451,1672,0.913,1673,2.343,1674,0.809,1693,2.242,1696,2.005,1700,0.737,1715,1.009,1717,1.394,1723,2.456,1746,0.482,1758,0.427,1764,3.26,1843,1.334,1844,1.05,1845,4.713,1849,0.77,1860,1.412,1891,0.482,1894,0.348,1901,0.482,1907,1.301,1919,1.121,1927,2.371,1940,0.77,1947,1.097,1948,0.337,1969,1.793,1971,1.05,1979,0.809,2016,0.523,2017,2.005,2034,4.215,2036,1.089,2045,0.99,2126,0.94,2193,0.427,2199,0.451,2213,4.661,2223,2.46,2224,0.389,2225,1.009,2226,0.482,2229,2.343,2249,1.663,2254,1.301,2255,0.389,2310,0.523,2335,1.847,2337,1.793,2341,3.194,2351,1.91,2437,0.913,2439,0.99,2447,1.301,2460,2.371,2463,0.77,2464,0.451,2467,0.809,2470,0.855,2472,0.523,2531,0.913,2532,0.913,2588,0.427,2595,0.99,2613,1.334,2617,5.519,2635,0.523,2640,1.152,2647,0.451,2670,2.005,2716,1.412,2752,0.913,2758,2.747,2759,0.585,2760,1.394,2761,0.913,2762,0.523,2763,1.464,2764,0.585,2765,0.585,2766,1.58,2767,0.77,2768,4.16,2769,8.302,2770,4.211,2771,0.585,2772,6.892,2773,0.585,2774,1.108,2775,5.113,2776,0.585,2777,0.523,2778,2.044,2779,0.585,2780,1.108,2781,0.523,2782,0.585,2783,0.855,2784,0.585,2785,1.58,2786,3.489,2787,0.585,2788,0.585,2789,0.585,2790,0.585,2791,0.99,2792,1.58,2793,0.585,2794,0.585,2795,0.585,2796,0.585,2797,0.585,2798,2.264,2799,0.585,2800,0.585,2801,7.406,2802,1.91,2803,1.108,2804,0.585,2805,0.427,2806,2.006,2807,0.523,2808,1.464,2809,0.99,2810,0.585,2811,3.904,2812,1.58,2813,0.585,2814,6.006,2815,0.585,2816,8.37,2817,5.567,2818,0.585,2819,0.585,2820,0.585,2821,5.567,2822,0.585,2823,4.067,2824,0.99,2825,0.585,2826,0.585,2827,0.585,2828,3.073,2829,2.264,2830,0.585,2831,0.585,2832,0.585,2833,0.585,2834,1.58,2835,0.585,2836,1.793,2837,9.003,2838,0.585,2839,0.482,2840,1.793,2841,2.46,2842,1.58,2843,1.108,2844,0.585,2845,0.585,2846,1.91,2847,0.585,2848,0.585,2849,1.108,2850,0.585,2851,0.585,2852,1.793,2853,0.482,2854,1.412,2855,0.585,2856,2.14,2857,0.482,2858,0.585,2859,0.585,2860,0.585,2861,0.585,2862,1.412,2863,0.585,2864,0.585,2865,0.585,2866,0.585,2867,1.972,2868,3.073,2869,2.747,2870,0.585,2871,0.585,2872,0.585,2873,0.585,2874,1.108,2875,0.585,2876,0.585,2877,0.585,2878,0.77,2879,1.58,2880,0.585,2881,0.585,2882,0.406,2883,0.585,2884,0.585,2885,0.585,2886,5.851,2887,0.523,2888,1.58,2889,0.585,2890,5.567,2891,0.585,2892,1.108,2893,2.394,2894,0.523,2895,0.585,2896,0.585,2897,0.585,2898,0.585,2899,1.412,2900,2.394,2901,0.585,2902,2.394,2903,0.585,2904,2.006,2905,1.108,2906,2.371,2907,0.585,2908,0.585,2909,0.585,2910,2.006,2911,0.585,2912,2.006,2913,4.083,2914,0.585,2915,0.585,2916,1.108,2917,2.006,2918,3.411,2919,0.585,2920,1.108,2921,0.523,2922,0.523,2923,0.451,2924,0.523,2925,1.972,2926,0.913,2927,2.601,2928,1.464,2929,0.406,2930,1.108,2931,0.585,2932,1.412,2933,0.585,2934,0.585,2935,0.585,2936,0.585,2937,1.58,2938,1.108,2939,0.585,2940,0.585,2941,5.567,2942,1.847,2943,1.108,2944,1.108,2945,1.108,2946,1.793,2947,0.585,2948,3.372,2949,0.585,2950,0.585,2951,0.585,2952,1.793,2953,1.108,2954,0.585,2955,0.585,2956,1.58,2957,0.585,2958,0.482,2959,0.77,2960,2.14,2961,0.523,2962,1.218,2963,0.585,2964,2.747,2965,0.585,2966,1.58,2967,5.273,2968,2.531,2969,0.585,2970,0.585,2971,0.585,2972,1.108,2973,1.152,2974,0.585,2975,2.14,2976,1.108,2977,0.585,2978,0.585,2979,2.006,2980,2.394,2981,1.652,2982,0.913,2983,0.585,2984,0.585,2985,3.005,2986,0.585,2987,0.585,2988,0.585,2989,0.99,2990,0.585,2991,0.585,2992,1.58,2993,0.913,2994,0.585,2995,0.99,2996,0.585,2997,3.372,2998,3.215,2999,1.108,3000,2.394,3001,0.585,3002,0.585,3003,0.585,3004,1.793,3005,0.523,3006,0.585,3007,0.585,3008,0.585,3009,0.482,3010,0.585,3011,0.585,3012,0.585,3013,0.585,3014,2.748,3015,2.006,3016,0.585,3017,0.99,3018,0.451,3019,2.747,3020,0.482,3021,2.006,3022,1.108,3023,0.99,3024,0.99,3025,0.99,3026,1.282,3027,1.828,3028,0.585,3029,0.585,3030,0.523,3031,0.585,3032,0.482,3033,0.427,3034,2.135,3035,0.585,3036,0.523,3037,0.585,3038,2.006,3039,0.585,3040,6.38,3041,0.585,3042,0.585,3043,0.585,3044,0.585,3045,0.585,3046,2.394,3047,1.58,3048,0.585,3049,1.301,3050,0.585,3051,0.585,3052,0.585,3053,2.14,3054,0.585,3055,1.108,3056,0.585,3057,0.585,3058,1.108,3059,0.585,3060,2.006,3061,0.913,3062,0.585,3063,0.585,3064,0.585,3065,2.005,3066,1.58,3067,0.585,3068,0.585,3069,0.585,3070,0.427,3071,0.585,3072,2.006,3073,0.585,3074,3.014,3075,0.585,3076,0.523,3077,0.585,3078,3.411,3079,1.108,3080,1.152,3081,1.108,3082,0.585,3083,0.585,3084,3.899,3085,0.585,3086,0.585,3087,0.585,3088,0.585,3089,3.904,3090,3.372,3091,0.585,3092,4.762,3093,0.585,3094,0.585,3095,0.585,3096,2.394,3097,0.585,3098,0.585,3099,1.652,3100,0.482,3101,0.585,3102,0.523,3103,0.585,3104,1.793,3105,0.585,3106,0.585,3107,1.58,3108,0.585,3109,1.793,3110,0.585,3111,0.585,3112,1.58,3113,0.99,3114,0.99,3115,1.108,3116,1.108,3117,1.793,3118,1.108,3119,0.523,3120,0.585,3121,1.108,3122,1.108,3123,1.58,3124,1.108,3125,1.793,3126,0.585,3127,0.99,3128,0.585,3129,1.108,3130,0.99,3131,0.585,3132,2.747,3133,1.108,3134,0.585,3135,2.14,3136,0.585,3137,2.748,3138,3.073,3139,0.585,3140,0.585,3141,1.108,3142,0.585,3143,0.482,3144,0.585,3145,0.585,3146,0.585,3147,0.523,3148,0.585,3149,0.585,3150,0.585,3151,0.585,3152,0.585,3153,0.585,3154,0.585,3155,0.585,3156,0.585,3157,1.108,3158,3.26,3159,0.585,3160,1.412,3161,0.913,3162,0.585,3163,0.585,3164,1.108,3165,1.108,3166,0.585,3167,1.652,3168,0.585,3169,0.585,3170,1.097,3171,0.585,3172,0.585,3173,0.585,3174,0.585,3175,2.006,3176,3.648,3177,0.585,3178,0.585,3179,0.585,3180,1.301,3181,0.482,3182,0.585,3183,0.585,3184,0.585,3185,1.108,3186,1.108,3187,1.108,3188,0.99,3189,1.108,3190,0.585,3191,1.412,3192,0.585,3193,0.585,3194,0.585,3195,2.155,3196,0.585,3197,1.108,3198,0.585,3199,0.585,3200,0.99,3201,0.585,3202,0.585,3203,1.412,3204,1.793,3205,0.585,3206,0.585,3207,0.99,3208,0.585,3209,0.585,3210,0.585,3211,0.585,3212,0.585,3213,2.748,3214,1.108,3215,0.585,3216,0.585,3217,0.585,3218,0.585,3219,0.585,3220,0.585,3221,0.99,3222,0.585,3223,3.904,3224,0.585,3225,2.456,3226,0.585,3227,1.412,3228,0.585,3229,0.585,3230,0.99,3231,0.585,3232,0.585,3233,2.394,3234,1.108,3235,0.585,3236,1.58,3237,1.152,3238,0.585,3239,0.585,3240,0.585,3241,1.108,3242,0.585,3243,0.585,3244,0.99,3245,0.585,3246,0.585,3247,0.855,3248,1.108,3249,2.748,3250,0.585,3251,0.585,3252,0.585,3253,0.482,3254,0.585,3255,1.108,3256,0.99,3257,0.585,3258,0.585,3259,0.585,3260,0.585,3261,2.394,3262,0.523,3263,0.585,3264,0.99,3265,0.585,3266,0.523,3267,2.006,3268,0.913,3269,0.585,3270,1.108,3271,1.58,3272,0.585,3273,0.585,3274,0.427,3275,0.585,3276,0.585,3277,1.108,3278,0.585,3279,0.482,3280,0.585,3281,0.585,3282,0.585,3283,1.58,3284,0.585,3285,0.585,3286,1.108,3287,0.585,3288,0.585,3289,0.585,3290,0.585,3291,1.108,3292,0.585,3293,1.58,3294,0.451,3295,0.585,3296,0.585,3297,1.152,3298,1.108,3299,1.464,3300,0.585,3301,0.585,3302,0.585,3303,0.585,3304,1.58,3305,1.547,3306,0.585,3307,0.523,3308,0.585,3309,1.58,3310,0.585,3311,0.585,3312,0.585,3313,1.58,3314,0.585,3315,0.585,3316,1.108,3317,0.585,3318,1.412,3319,1.108,3320,0.585,3321,0.585,3322,0.585,3323,0.585,3324,0.585,3325,0.451,3326,0.855,3327,0.451,3328,0.585,3329,0.585,3330,0.523,3331,0.99,3332,0.585,3333,0.585,3334,0.585,3335,0.585,3336,1.58,3337,0.585,3338,0.585,3339,0.585,3340,2.006,3341,0.585,3342,1.108,3343,1.108,3344,0.585,3345,0.585,3346,0.585,3347,1.108,3348,0.585,3349,0.585,3350,0.585,3351,0.523,3352,0.523,3353,0.585,3354,0.585,3355,0.585,3356,0.523,3357,0.585,3358,0.585,3359,0.585,3360,0.585,3361,0.585,3362,0.585,3363,0.585,3364,0.585,3365,0.523,3366,0.585,3367,0.585,3368,0.585,3369,0.585,3370,0.585,3371,0.585,3372,1.108,3373,0.585,3374,0.585,3375,0.523,3376,1.108,3377,0.585,3378,0.913,3379,1.394,3380,0.585,3381,1.108,3382,0.523,3383,0.585,3384,0.523,3385,0.585,3386,1.108,3387,0.585,3388,0.585,3389,0.482,3390,0.585,3391,2.394,3392,0.585,3393,0.585,3394,0.585,3395,0.585,3396,0.523,3397,0.585,3398,0.585,3399,0.585,3400,0.585,3401,0.585,3402,0.451,3403,0.585,3404,1.58,3405,0.585,3406,0.585,3407,0.585,3408,0.585,3409,0.585,3410,0.737,3411,1.108,3412,0.585,3413,1.58,3414,0.585,3415,0.585,3416,0.585,3417,0.585,3418,0.585,3419,0.585,3420,0.585,3421,0.585,3422,0.585,3423,1.108,3424,0.482,3425,1.108,3426,0.523,3427,1.301,3428,0.585,3429,0.855,3430,0.585,3431,0.482,3432,0.585,3433,8.343,3434,3.073,3435,0.585,3436,0.585,3437,0.482,3438,0.585,3439,0.585,3440,0.585,3441,0.585,3442,0.585,3443,2.748,3444,0.585,3445,1.152,3446,0.585,3447,0.585,3448,0.585,3449,0.585,3450,0.585,3451,2.006,3452,2.006,3453,1.464,3454,1.412,3455,2.394,3456,1.108,3457,1.108,3458,3.014,3459,1.547,3460,3.073,3461,0.99,3462,1.108,3463,1.108,3464,0.913,3465,1.108,3466,0.585,3467,0.585,3468,2.747,3469,0.482,3470,0.406,3471,0.913,3472,0.585,3473,0.451,3474,0.406,3475,0.451,3476,0.585,3477,0.585,3478,0.523,3479,0.585,3480,0.585,3481,0.585,3482,0.585,3483,0.585,3484,1.108,3485,0.585,3486,0.585,3487,1.108,3488,0.585,3489,0.585,3490,0.585,3491,0.523,3492,0.585,3493,0.585,3494,0.99,3495,0.482,3496,0.585,3497,1.58,3498,0.585,3499,0.523,3500,1.108,3501,0.585,3502,0.585,3503,0.523,3504,0.585,3505,1.108,3506,0.585,3507,0.585,3508,0.585,3509,0.585,3510,0.585,3511,0.99,3512,0.99,3513,2.006,3514,1.652,3515,0.585,3516,0.585,3517,0.585,3518,1.301,3519,0.585,3520,0.585,3521,0.585,3522,1.108,3523,1.58,3524,0.585,3525,0.585,3526,0.585,3527,0.585,3528,1.108,3529,0.585,3530,0.855,3531,0.523,3532,1.108,3533,0.585,3534,0.523,3535,0.585,3536,0.585,3537,1.108,3538,1.108,3539,0.585,3540,0.585,3541,0.585,3542,0.585,3543,1.58,3544,1.58,3545,1.547,3546,0.406,3547,1.972,3548,0.585,3549,1.108,3550,0.585,3551,0.585,3552,0.523,3553,1.108,3554,1.58,3555,0.99,3556,0.585,3557,0.585,3558,0.523,3559,0.585,3560,0.585,3561,1.663,3562,0.585,3563,0.585,3564,0.585,3565,0.585,3566,0.585,3567,0.585,3568,0.585,3569,0.585,3570,0.585,3571,0.585,3572,1.108,3573,0.523,3574,0.482,3575,0.523,3576,0.585,3577,0.482,3578,0.585,3579,0.482,3580,0.585,3581,1.301,3582,0.585,3583,0.585,3584,0.585,3585,1.108,3586,0.585,3587,0.585,3588,0.585,3589,0.913,3590,0.585,3591,0.585,3592,0.585,3593,0.585,3594,0.585,3595,0.523,3596,0.585,3597,1.108,3598,0.585,3599,0.585,3600,1.108,3601,1.108,3602,1.58,3603,1.793,3604,1.108,3605,1.301,3606,0.913,3607,0.406,3608,0.585,3609,0.482,3610,0.523,3611,0.585,3612,0.809,3613,0.585,3614,1.412,3615,0.585,3616,0.585,3617,0.585,3618,0.585,3619,0.523,3620,0.585,3621,1.108,3622,1.58,3623,0.99,3624,0.585,3625,0.585,3626,0.585,3627,1.108,3628,0.99,3629,1.108,3630,0.585,3631,0.585,3632,0.585,3633,0.585,3634,0.585,3635,0.585,3636,0.585,3637,0.585,3638,0.585,3639,0.523,3640,0.523,3641,0.585,3642,0.585,3643,1.58,3644,0.585,3645,1.108,3646,0.585,3647,0.99,3648,0.585,3649,1.108,3650,0.585,3651,1.108,3652,0.585,3653,0.913,3654,0.585,3655,0.523,3656,0.585,3657,0.585,3658,0.523,3659,1.58,3660,1.108,3661,0.77,3662,0.99,3663,1.108,3664,0.99,3665,1.108,3666,0.809,3667,0.585,3668,1.108,3669,0.523,3670,0.585,3671,1.108,3672,0.99,3673,0.585,3674,0.523,3675,0.585,3676,0.523,3677,0.585,3678,0.585,3679,1.108,3680,0.585,3681,0.585,3682,0.913,3683,0.585,3684,3.372,3685,0.585,3686,0.523,3687,0.523,3688,0.585,3689,0.585,3690,0.585,3691,0.585,3692,0.585,3693,0.585,3694,0.585,3695,0.585,3696,0.585,3697,0.585,3698,0.585,3699,0.585,3700,0.585,3701,0.585,3702,0.913,3703,0.585,3704,0.585,3705,0.585,3706,0.585,3707,0.585,3708,0.585,3709,0.585,3710,0.585,3711,0.585,3712,0.585,3713,0.482,3714,0.585,3715,0.482,3716,0.585,3717,0.585,3718,0.523,3719,0.585,3720,0.585,3721,0.585,3722,0.585,3723,0.585,3724,0.585,3725,0.585,3726,0.585,3727,0.585,3728,0.585,3729,0.482,3730,0.585,3731,0.585,3732,0.585,3733,0.585,3734,1.58,3735,0.585,3736,1.108,3737,1.58,3738,1.108,3739,1.108,3740,1.108,3741,1.108,3742,0.585,3743,0.585,3744,0.585,3745,0.585,3746,0.585,3747,0.585,3748,0.523,3749,0.585,3750,1.108,3751,0.585,3752,0.585,3753,0.451,3754,0.585,3755,0.482,3756,0.585,3757,1.108,3758,0.585,3759,0.451,3760,0.585,3761,0.585,3762,0.585,3763,0.585,3764,0.482,3765,0.585,3766,1.58,3767,1.58,3768,0.585,3769,0.585,3770,0.585,3771,0.585,3772,0.585,3773,0.585,3774,0.585,3775,0.523,3776,0.585,3777,0.585,3778,1.108,3779,0.523,3780,0.523,3781,0.523,3782,0.585,3783,0.585,3784,0.585,3785,0.585,3786,0.585,3787,0.585,3788,0.585,3789,0.585,3790,0.585,3791,1.108,3792,1.108,3793,0.585,3794,0.523,3795,0.585,3796,0.585,3797,0.585,3798,1.108,3799,0.585,3800,0.585,3801,1.108,3802,0.585,3803,1.108,3804,0.585,3805,0.585,3806,1.108,3807,2.006,3808,0.585,3809,0.585,3810,0.585,3811,0.585,3812,0.585,3813,0.855,3814,0.523,3815,1.108,3816,0.585,3817,0.585,3818,0.585,3819,0.585,3820,0.585,3821,0.585,3822,0.585,3823,0.585,3824,0.585,3825,0.585,3826,0.585,3827,0.585,3828,0.585,3829,0.585,3830,1.58,3831,0.585,3832,0.585,3833,0.585,3834,0.585,3835,0.585,3836,0.585,3837,0.585,3838,1.108,3839,1.108,3840,0.585,3841,0.585,3842,0.585,3843,2.006,3844,4.362,3845,1.108,3846,0.913,3847,0.99,3848,1.108,3849,0.99,3850,1.108,3851,0.585,3852,1.108,3853,0.99,3854,1.108,3855,1.108,3856,1.108,3857,0.913,3858,1.108,3859,2.006,3860,1.108,3861,2.006,3862,1.108,3863,1.108,3864,0.99,3865,0.99,3866,1.58,3867,1.108,3868,0.585,3869,0.482,3870,0.855,3871,0.451,3872,1.108,3873,0.585,3874,2.394,3875,1.108,3876,0.585,3877,0.482,3878,0.585,3879,2.006,3880,0.585,3881,0.585,3882,0.585,3883,0.585,3884,0.523,3885,0.585,3886,0.585,3887,0.585,3888,1.108,3889,1.108,3890,1.108,3891,0.585,3892,0.585,3893,0.585,3894,0.585,3895,0.585,3896,1.108,3897,1.108,3898,0.585,3899,0.585,3900,0.585,3901,0.451,3902,0.585,3903,0.585,3904,0.585,3905,1.108,3906,0.585,3907,1.58,3908,1.412,3909,0.585,3910,0.585,3911,0.482,3912,1.108,3913,1.108,3914,0.585,3915,0.451,3916,0.585,3917,0.585,3918,1.58,3919,1.108,3920,1.108,3921,0.585,3922,1.108,3923,0.585,3924,0.585,3925,0.585,3926,2.006,3927,0.585,3928,0.585,3929,0.585,3930,0.585,3931,0.585,3932,0.585,3933,0.585,3934,1.108,3935,0.585,3936,0.585,3937,0.585,3938,0.523,3939,0.585,3940,1.108,3941,0.585,3942,0.585,3943,0.482,3944,0.585,3945,1.108,3946,0.585,3947,0.523,3948,0.585,3949,1.108,3950,1.108,3951,0.585,3952,0.585,3953,0.523,3954,1.108,3955,0.585,3956,0.585,3957,1.108,3958,1.108,3959,0.585,3960,0.585,3961,0.585,3962,1.108,3963,1.108,3964,0.585,3965,0.585,3966,1.108,3967,0.585,3968,0.585,3969,0.585,3970,1.108,3971,0.585,3972,0.585,3973,0.482,3974,0.585,3975,2.006,3976,0.482,3977,0.585,3978,0.585,3979,1.108,3980,0.523,3981,0.451,3982,1.108,3983,0.585,3984,2.394,3985,1.108,3986,0.585,3987,0.585,3988,0.482,3989,0.585,3990,0.585,3991,0.585,3992,0.585,3993,0.585,3994,0.585,3995,0.585,3996,0.585,3997,0.585,3998,0.585,3999,0.585,4000,0.585,4001,0.99,4002,0.585,4003,0.585,4004,0.585,4005,0.585,4006,0.482,4007,0.585,4008,0.585,4009,0.523,4010,0.585,4011,0.523,4012,0.585,4013,0.585,4014,0.585,4015,0.482,4016,0.451,4017,0.585,4018,0.585,4019,0.523,4020,1.58,4021,0.585,4022,0.523,4023,0.523,4024,0.585,4025,0.523,4026,0.585,4027,0.585,4028,0.585,4029,0.585,4030,0.585,4031,2.006,4032,0.585,4033,0.585,4034,0.523,4035,0.585,4036,1.412,4037,0.585,4038,0.585,4039,0.585,4040,0.585,4041,0.523,4042,0.585,4043,0.585,4044,1.108,4045,0.585,4046,0.585,4047,0.585,4048,1.108,4049,0.585,4050,0.585,4051,0.585,4052,0.585,4053,1.58,4054,1.108,4055,1.108,4056,0.585,4057,0.523,4058,0.585,4059,1.108,4060,0.523,4061,1.58,4062,0.585,4063,0.585,4064,0.585,4065,0.585,4066,0.585,4067,1.108,4068,1.108,4069,1.108,4070,1.412,4071,1.108,4072,0.585,4073,1.108,4074,0.585,4075,1.108,4076,0.523,4077,1.58,4078,0.585,4079,0.585,4080,0.585,4081,0.585,4082,2.394,4083,0.585,4084,0.523,4085,0.585,4086,0.585,4087,0.585,4088,0.523,4089,0.585,4090,0.913,4091,0.585,4092,0.523,4093,0.451,4094,0.585,4095,0.585,4096,0.585,4097,0.585,4098,1.108,4099,0.585,4100,0.585,4101,0.585,4102,0.585,4103,0.523,4104,0.585,4105,0.585,4106,0.482,4107,0.585,4108,0.585,4109,0.482,4110,0.585,4111,0.585,4112,0.585,4113,1.108,4114,0.523]],["title/coverage.html",[3410,4.483]],["body/coverage.html",[0,0.296,1,1.077,5,0.03,6,1.671,8,0.638,12,1.094,24,0.006,26,0.076,32,0.501,34,0.34,66,1.195,69,0.937,80,0.002,81,0.002,82,1.244,83,1.671,84,1.671,85,1.195,95,1.299,108,1.113,115,1.015,116,2.277,120,1.442,121,1.671,122,1.671,130,1.442,145,0.88,146,1.152,148,4.057,149,1.152,153,1.152,157,1.152,160,1.152,163,1.152,164,1.015,177,1.364,178,1.299,190,2.208,201,1.152,202,1.244,209,1.997,211,1.671,259,0.961,260,2.617,288,1.299,289,1.671,333,1.671,342,1.364,363,1.299,364,1.671,365,1.442,366,1.671,408,0.673,409,3.196,418,1.442,437,1.152,476,1.152,477,2.617,478,2.113,479,4.133,482,1.442,484,0.987,486,2.284,492,1.015,493,1.671,497,1.077,498,3.804,499,0.697,500,0.852,514,1.077,528,0.987,544,1.015,572,1.113,573,1.113,574,1.244,575,2.617,588,0.816,590,1.442,619,1.045,620,2.617,623,1.442,633,1.54,634,1.671,643,1.299,644,2.617,645,3.196,665,3.023,679,2.83,680,1.442,682,1.671,687,1.299,689,1.195,691,1.299,692,1.442,699,1.045,700,3.641,707,1.195,714,1.113,729,1.113,738,1.195,739,3.196,750,1.195,759,1.113,763,1.364,764,2.617,778,1.671,807,1.364,808,1.671,854,1.299,855,2.617,867,1.364,885,5.018,888,1.671,904,1.442,905,3.413,906,3.413,917,1.54,924,1.54,930,1.54,931,1.671,932,1.671,936,1.077,959,1.364,963,1.671,967,1.54,976,2.84,977,2.617,984,1.195,1020,1.299,1021,1.671,1022,1.671,1038,1.442,1039,2.451,1040,2.318,1078,1.195,1079,2.617,1080,1.442,1085,1.442,1086,3.413,1092,1.54,1095,5.729,1096,5.419,1099,1.54,1114,1.54,1116,1.54,1122,1.54,1126,1.54,1136,4.419,1164,1.442,1165,1.54,1177,1.54,1188,1.442,1189,1.671,1190,1.671,1227,1.299,1228,2.318,1235,1.299,1237,0.961,1238,3.196,1242,0.892,1243,1.299,1245,1.244,1249,1.671,1250,1.671,1251,1.244,1252,2.318,1253,2.318,1257,1.364,1263,1.442,1264,1.671,1282,1.195,1283,3.565,1284,0.961,1286,1.015,1288,1.299,1292,1.195,1309,1.442,1310,2.451,1322,1.442,1323,2.617,1357,1.442,1358,2.617,1359,2.617,1363,1.364,1367,2.113,1368,2.617,1380,2.617,1383,1.442,1384,2.617,1393,1.442,1394,1.442,1395,1.671,1396,1.671,1399,3.413,1425,1.442,1426,1.671,1427,1.671,1429,1.671,1431,1.299,1453,1.152,1464,2.617,1465,2.617,1496,1.54,1497,1.54,1498,1.299,1557,2.617,1559,1.442,1566,1.671,1594,2.318,1597,1.442,1604,1.299,1611,1.442,1620,2.617,1624,1.442,1634,1.54,1635,2.208,1636,1.54,1637,1.54,1650,1.54,1691,1.442,1692,1.671,1701,1.113,1707,1.299,1708,1.244,1719,1.364,1725,1.299,1726,1.244,1728,1.195,1730,1.299,1731,1.364,1755,2.617,1756,2.617,1770,1.54,1773,1.671,1785,1.442,1787,1.442,1788,1.442,1833,1.244,1835,1.442,1850,1.671,1855,1.299,1878,1.442,1899,3.196,1903,1.364,1909,1.364,1914,1.54,1918,1.364,1919,1.045,1931,2.617,1932,2.617,1939,1.442,1953,1.671,1954,1.54,2033,1.671,2050,1.671,2062,1.671,2063,1.54,2071,1.54,2080,1.442,2081,1.671,2102,1.299,2103,1.671,2119,1.299,2120,1.671,2132,1.671,2133,1.671,2134,3.196,2140,1.671,2141,3.196,2145,4.897,2187,1.442,2188,1.671,2214,1.442,2215,1.671,2220,4.509,2229,2.208,2240,1.54,2241,1.54,2242,1.442,2243,1.54,2259,1.54,2260,1.671,2299,1.54,2300,1.671,2315,1.671,2320,1.671,2327,1.299,2328,1.54,2349,1.442,2350,1.671,2353,1.299,2355,1.364,2356,1.442,2366,1.671,2390,1.299,2395,1.442,2396,2.617,2408,1.442,2429,1.671,2448,1.442,2471,1.671,2482,1.671,2509,1.54,2571,1.671,2573,1.671,2574,1.671,2586,1.671,2638,1.671,2647,1.442,2667,1.671,2689,1.442,2690,1.671,2694,1.244,2700,1.671,2708,1.671,2710,1.671,2715,1.671,2721,1.244,2724,1.671,2729,1.671,2744,1.671,2748,1.671,2749,1.671,2791,1.671,2942,1.442,2975,1.671,2985,1.54,3053,3.703,3065,1.364,3078,2.617,3143,1.54,3227,2.84,3244,1.671,3264,1.671,3379,1.299,3410,1.244,3973,7.837,4115,1.54,4116,8.067,4117,9.598,4118,6.968,4119,6.968,4120,9.15,4121,1.671,4122,2.617,4123,5.953,4124,1.87,4125,5.953,4126,5.953,4127,5.475,4128,7.933,4129,1.671,4130,1.671,4131,3.703,4132,3.703,4133,1.671,4134,1.671,4135,7.428,4136,1.87,4137,6.349,4138,4.886,4139,6.349,4140,1.87,4141,7.428,4142,1.671,4143,3.413,4144,1.54,4145,1.87,4146,1.87,4147,1.671,4148,1.87,4149,5.953,4150,1.87,4151,3.178,4152,3.178,4153,1.87,4154,1.87,4155,4.144,4156,1.87,4157,4.144,4158,1.87,4159,1.87,4160,1.87,4161,3.178,4162,1.87,4163,1.87,4164,1.87,4165,1.671,4166,1.671,4167,2.84,4168,2.84,4169,1.671,4170,1.671,4171,1.671,4172,1.87,4173,1.87,4174,1.87,4175,1.671,4176,1.671,4177,1.671,4178,1.671,4179,1.671,4180,1.671,4181,1.671,4182,1.671,4183,3.413,4184,1.87]],["title/dependencies.html",[172,2.772,3713,3.409]],["body/dependencies.html",[0,0.174,4,0.079,5,0.093,16,0.798,24,0.006,26,0.164,55,1.486,56,1.111,69,2.013,80,0.003,81,0.003,110,0.885,114,1.963,172,1.873,186,3.099,188,3.591,207,3.614,212,1.828,229,2.319,263,1.585,339,4.375,373,1.963,374,2.567,376,2.013,389,2.672,391,2.672,445,2.792,513,4.046,531,2.567,560,2.778,672,1.917,676,4.217,916,2.567,946,3.31,1031,3.073,1051,4.798,1052,3.31,1110,3.591,1369,2.567,1407,2.672,1438,6.12,1439,2.672,1479,3.591,1602,2.932,1603,2.672,1606,2.932,1645,3.31,1648,2.672,1673,2.792,1693,2.932,1715,2.567,1722,3.099,1970,3.591,2196,3.591,2224,2.672,2225,3.72,2226,3.31,2249,6.217,2824,3.591,2840,3.591,3161,4.796,3188,3.591,3274,2.932,3330,3.591,3331,3.591,3378,4.796,3382,3.591,3491,3.591,3511,3.591,3512,3.591,3552,3.591,3558,3.591,3595,3.591,3607,2.792,3612,4.248,3623,3.591,3814,3.591,4057,3.591,4092,3.591,4185,5.823,4186,8.573,4187,4.018,4188,4.018,4189,4.018,4190,4.018,4191,4.018,4192,4.018,4193,5.823,4194,5.823,4195,4.018,4196,5.823,4197,5.823,4198,4.018,4199,4.018,4200,4.018,4201,4.018,4202,4.018,4203,4.018,4204,4.018,4205,4.018,4206,4.018,4207,4.018,4208,3.31,4209,4.018,4210,4.018,4211,5.823,4212,4.018,4213,4.018,4214,6.848,4215,4.018,4216,4.018,4217,4.018,4218,4.018,4219,5.823,4220,4.018,4221,5.823,4222,4.018,4223,4.018,4224,7.97,4225,4.018,4226,4.018,4227,4.018,4228,4.018,4229,3.591,4230,4.018,4231,4.018,4232,4.018,4233,4.018,4234,4.018,4235,5.823,4236,4.018,4237,4.018,4238,4.018,4239,5.823,4240,4.018,4241,5.823,4242,5.823,4243,4.018,4244,4.018,4245,4.018,4246,3.099,4247,4.018,4248,4.018,4249,4.018,4250,4.018,4251,4.018,4252,5.823,4253,4.018,4254,4.018,4255,4.018,4256,4.018,4257,4.018,4258,4.018,4259,4.018,4260,4.018,4261,4.018,4262,4.018,4263,4.018,4264,4.018,4265,4.018,4266,4.018,4267,4.018,4268,4.018,4269,4.018,4270,5.823,4271,5.204,4272,4.018,4273,4.018,4274,4.018,4275,4.018,4276,3.591,4277,4.018,4278,4.018,4279,5.823,4280,4.018,4281,4.018,4282,4.018,4283,4.018,4284,4.018,4285,4.018,4286,4.018,4287,4.018,4288,4.018,4289,4.018,4290,4.018,4291,4.018,4292,5.823,4293,4.018,4294,4.018,4295,4.018,4296,4.018,4297,4.018,4298,5.823,4299,3.591,4300,3.31,4301,4.018,4302,4.018,4303,4.018,4304,4.018,4305,4.018,4306,4.018,4307,4.018,4308,4.018,4309,3.591,4310,4.018,4311,4.018,4312,4.018,4313,4.018,4314,4.018,4315,4.018,4316,4.018,4317,4.018,4318,4.018,4319,3.31,4320,4.018,4321,4.018,4322,4.018,4323,4.018,4324,4.018,4325,4.018,4326,4.018,4327,4.018,4328,4.018,4329,4.018,4330,4.018,4331,4.018]],["title/miscellaneous/enumerations.html",[4332,2.644,4333,5.316]],["body/miscellaneous/enumerations.html",[9,0.316,24,0.006,33,3.095,80,0.005,81,0.005,221,4.158,408,2.459,412,4.367,413,4.748,414,4.748,456,3.26,505,2.696,545,3.708,1228,4.986,1230,4.748,1231,4.748,1252,4.986,1253,6.056,1260,6.056,1261,6.837,1262,6.837,1328,3.937,1336,4.545,1497,5.629,1522,7.418,1545,6.108,1715,4.367,2328,5.629,2333,6.837,2340,5.271,2509,5.629,2523,7.418,2528,6.108,2529,6.108,2530,6.108,2531,5.629,4332,4.367,4333,6.108,4334,6.834,4335,6.108,4336,6.108,4337,6.834,4338,6.834]],["title/miscellaneous/functions.html",[4332,2.644,4339,4.34]],["body/miscellaneous/functions.html",[9,0.252,23,1.38,24,0.006,25,0.799,26,0.389,27,0.916,33,1.678,39,1.047,80,0.004,81,0.004,85,4.586,106,1.763,108,4.27,116,3.746,305,6.072,344,2.868,547,2.322,601,3.271,611,3.776,614,5.237,615,5.237,616,5.237,618,3.965,630,3.73,885,2.655,1014,2.949,1020,4.987,1095,4.192,1096,6.237,1137,4.476,1140,4.476,1145,4.476,1164,5.536,1202,3.776,1316,6.485,1379,3.233,1389,4.782,1770,6.62,1919,3.036,2017,5.237,2145,4.192,2155,4.476,2156,4.857,2157,4.857,2159,4.857,2160,7.183,2163,4.857,2165,4.857,2169,4.857,4019,4.857,4122,6.62,4129,6.415,4130,6.415,4142,4.857,4170,4.857,4171,6.415,4177,6.415,4178,6.415,4179,6.415,4180,6.415,4181,6.415,4182,6.415,4332,3.472,4339,3.965,4340,5.434,4341,7.183,4342,8.16,4343,5.434,4344,5.434,4345,4.476,4346,5.434,4347,5.434]],["title/index.html",[9,0.192,2756,3.192,2757,2.876]],["body/index.html",[16,0.864,24,0.005,25,0.515,32,1.167,34,0.79,64,1.566,65,2.874,74,3.797,75,4.543,80,0.004,81,0.004,87,3.192,88,2.59,89,2.508,90,1.595,98,2.176,114,3.013,116,2.874,123,1.461,126,2.782,172,2.029,207,4.339,238,2.782,264,3.358,269,5.18,270,3.346,273,4.757,274,2.681,275,2.508,279,3.025,295,2.362,373,4.017,395,2.59,397,2.895,451,3.025,499,2.3,525,3.025,530,2.508,566,3.552,648,2.59,653,2.681,683,4.575,856,3.886,869,2.681,870,3.025,909,3.025,910,2.362,923,3.169,942,2.362,974,4.975,975,3.358,1029,2.59,1031,3.255,1032,3.94,1041,2.237,1051,4.977,1053,3.358,1063,3.94,1077,6.231,1156,3.94,1161,3.358,1192,5.257,1208,3.176,1254,2.59,1297,2.237,1404,3.586,1473,3.552,1662,3.586,1715,2.782,1758,3.176,1893,4.499,1894,2.59,1971,2.895,2042,3.891,2223,3.176,2224,2.895,2225,3.94,2255,2.895,2464,3.358,2589,2.782,2760,3.025,2761,3.586,2763,4.499,2778,4.762,2802,3.025,2823,4.757,2837,3.891,2846,3.025,2854,7.845,2867,3.586,2878,3.025,2906,3.358,2921,5.511,2923,4.757,2926,6.415,2929,3.025,2962,3.358,3032,3.586,3034,3.025,3195,4.575,3203,3.891,3256,6.4,3299,4.499,3379,3.025,3410,2.895,3424,5.079,3445,4.499,3453,3.176,3473,3.358,3474,5.412,3546,3.025,3561,3.025,3577,5.898,3579,5.079,3610,3.891,3759,3.358,3781,3.891,3869,3.586,3870,4.757,3871,3.358,3911,3.586,4015,3.586,4088,3.891,4090,3.586,4246,3.358,4348,3.358,4349,7.032,4350,4.499,4351,3.025,4352,3.358,4353,3.586,4354,3.358,4355,5.079,4356,4.101,4357,3.891,4358,4.354,4359,5.511,4360,5.511,4361,4.354,4362,4.354,4363,4.354,4364,3.358,4365,3.891,4366,6.167,4367,3.891,4368,3.891,4369,3.176,4370,7.161,4371,4.975,4372,3.891,4373,4.354,4374,3.891,4375,5.079,4376,4.354,4377,3.586,4378,3.358,4379,4.354,4380,4.354,4381,3.586,4382,4.354,4383,4.354,4384,3.891,4385,3.358,4386,4.354,4387,3.891,4388,6.167,4389,6.167,4390,8.221,4391,7.789,4392,4.354,4393,4.354,4394,6.167,4395,3.891,4396,4.354,4397,3.586,4398,6.167,4399,4.354,4400,3.891,4401,6.167,4402,6.167,4403,3.176,4404,3.891,4405,4.354,4406,4.354,4407,3.358,4408,4.354,4409,3.358,4410,3.891,4411,4.354,4412,3.586,4413,4.757,4414,4.354,4415,4.354,4416,3.891,4417,4.354,4418,2.895,4419,3.586]],["title/license.html",[2756,3.192,2757,2.876,4420,3.699]],["body/license.html",[0,0.028,4,0.174,5,0.028,12,1.657,21,0.093,24,0.001,28,0.285,30,0.281,34,0.841,51,0.038,52,0.277,64,2.555,65,1.382,71,0.685,75,0.448,79,0.724,80,0.001,81,0.001,87,3.71,88,0.559,91,0.176,98,0.524,126,1.102,142,0.158,145,0.395,147,0.661,158,0.6,164,0.51,165,2.492,181,0.428,223,2.184,225,1.764,227,1.609,233,1.102,237,2.138,238,3.775,265,3.128,280,6.101,295,0.936,315,0.483,336,0.559,338,1.026,354,0.652,376,0.864,377,1.524,391,0.624,396,0.724,440,0.624,443,1.845,448,0.773,501,0.47,505,0.37,520,0.6,523,2.613,524,0.624,550,2.213,562,0.438,563,0.438,588,0.41,602,0.344,648,1.423,653,1.826,655,0.724,658,2.06,667,0.559,718,0.578,725,2.133,754,0.724,755,0.685,789,1.198,840,1.258,868,1.102,884,0.685,911,5.238,912,2.668,923,2.811,927,2.059,942,0.51,971,1.764,972,2.981,974,3.218,1028,1.591,1032,2.492,1041,0.886,1051,1.102,1070,0.624,1071,3.368,1083,1.826,1125,1.147,1196,0.6,1199,0.652,1209,2.163,1211,1.258,1214,1.826,1217,1.026,1241,2.609,1254,1.026,1259,1.198,1314,2.71,1315,2.853,1364,0.6,1379,2.061,1387,3.959,1407,1.591,1456,0.773,1459,2.928,1463,2.247,1473,1.378,1475,0.724,1476,4.157,1570,0.624,1575,0.624,1578,0.685,1599,0.496,1657,0.6,1658,3.128,1660,0.773,1661,2.71,1663,1.845,1673,2.06,1700,1.591,1717,1.198,1722,0.724,1747,0.773,1758,4.157,1844,0.624,1893,1.258,1894,2.321,1919,3.967,1948,0.993,1971,0.624,1979,0.685,2017,0.685,2034,1.662,2193,1.258,2198,0.839,2213,1.657,2255,0.624,2470,1.845,2534,0.724,2582,1.541,2588,0.685,2589,3.334,2593,0.839,2613,0.624,2624,2.163,2641,2.06,2671,4.415,2738,0.839,2762,0.839,2763,1.745,2767,1.662,2768,2.163,2769,1.541,2778,2.851,2786,0.839,2798,0.773,2802,2.407,2805,0.685,2809,3.096,2823,0.724,2852,0.839,2878,2.06,2894,2.138,2923,6.611,2925,6.732,2928,5.333,2929,1.662,2942,0.724,2958,1.421,2968,1.421,2973,0.685,2981,0.773,2985,0.773,2993,1.421,2995,1.541,3005,2.65,3009,1.421,3017,0.839,3018,0.724,3030,2.138,3032,0.773,3049,2.442,3061,0.773,3065,1.258,3074,1.541,3078,1.421,3080,0.685,3100,0.773,3113,1.541,3125,0.839,3147,0.839,3161,1.421,3170,0.652,3191,0.839,3195,2.492,3204,0.839,3207,0.839,3221,0.839,3237,2.163,3247,2.672,3266,1.541,3268,0.773,3279,1.421,3294,3.307,3297,0.685,3305,0.724,3307,0.839,3325,0.724,3326,2.672,3351,0.839,3384,0.839,3402,0.724,3410,1.147,3426,1.541,3431,1.421,3437,0.773,3453,0.685,3459,3.307,3471,0.773,3473,6.125,3474,3.625,3475,1.845,3478,6.697,3495,1.421,3531,0.839,3545,3.572,3561,3.218,3574,0.773,3589,0.773,3603,0.839,3605,1.421,3606,1.421,3609,3.815,3639,0.839,3661,2.06,3662,0.839,3664,0.839,3702,0.773,3729,0.773,3753,1.33,3846,1.421,3870,2.287,3871,1.845,3877,1.421,3911,1.421,3915,1.845,3947,1.541,3981,1.845,3988,3.213,4006,4.505,4009,0.839,4016,0.724,4022,5.891,4023,1.541,4025,1.541,4034,0.839,4070,0.839,4076,1.541,4093,4.219,4103,2.138,4147,0.839,4246,0.724,4349,0.773,4353,0.773,4369,5.007,4371,0.652,4372,2.138,4377,3.531,4400,0.839,4403,1.745,4413,1.845,4418,0.624,4420,8.597,4421,6.592,4422,6.441,4423,0.939,4424,2.392,4425,7.808,4426,5.305,4427,5.711,4428,3.464,4429,0.939,4430,0.939,4431,1.725,4432,3.464,4433,2.392,4434,2.392,4435,5.699,4436,0.939,4437,0.939,4438,1.541,4439,3.464,4440,3.531,4441,1.725,4442,1.725,4443,5.451,4444,4.631,4445,0.939,4446,0.939,4447,3.901,4448,1.541,4449,0.839,4450,0.839,4451,4.888,4452,8.534,4453,2.392,4454,2.138,4455,0.939,4456,0.939,4457,2.965,4458,4.94,4459,0.939,4460,4.94,4461,1.33,4462,0.939,4463,3.464,4464,0.724,4465,0.773,4466,5.61,4467,0.839,4468,0.839,4469,5.218,4470,5.469,4471,3.464,4472,5.699,4473,0.939,4474,1.725,4475,0.939,4476,0.939,4477,2.138,4478,0.939,4479,0.939,4480,0.939,4481,0.939,4482,0.939,4483,0.939,4484,2.965,4485,0.939,4486,2.392,4487,0.939,4488,0.939,4489,5.653,4490,1.845,4491,0.939,4492,0.939,4493,1.97,4494,2.392,4495,0.939,4496,2.138,4497,0.724,4498,1.725,4499,1.725,4500,2.392,4501,0.939,4502,4.866,4503,3.464,4504,3.464,4505,3.901,4506,2.392,4507,1.725,4508,0.939,4509,0.939,4510,0.939,4511,2.392,4512,0.939,4513,0.939,4514,1.725,4515,0.939,4516,1.725,4517,0.939,4518,0.939,4519,2.965,4520,0.839,4521,1.725,4522,8.495,4523,2.392,4524,4.94,4525,2.65,4526,1.33,4527,0.939,4528,1.725,4529,2.392,4530,4.94,4531,5.218,4532,2.965,4533,1.725,4534,2.965,4535,2.65,4536,0.939,4537,2.392,4538,7.579,4539,1.541,4540,0.939,4541,4.631,4542,0.939,4543,2.138,4544,2.71,4545,0.939,4546,6.277,4547,2.138,4548,1.725,4549,5.469,4550,3.901,4551,0.939,4552,1.725,4553,4.287,4554,0.939,4555,5.908,4556,1.725,4557,0.939,4558,0.773,4559,0.939,4560,2.392,4561,0.939,4562,0.939,4563,0.939,4564,0.773,4565,2.392,4566,2.65,4567,0.939,4568,0.939,4569,0.939,4570,1.541,4571,5.218,4572,0.839,4573,0.773,4574,2.138,4575,2.392,4576,2.392,4577,0.939,4578,3.096,4579,0.839,4580,2.138,4581,0.939,4582,0.939,4583,0.939,4584,1.541,4585,0.939,4586,6.845,4587,1.541,4588,2.138,4589,0.685,4590,1.725,4591,2.965,4592,0.939,4593,1.725,4594,2.853,4595,0.939,4596,0.939,4597,0.939,4598,1.725,4599,0.939,4600,1.421,4601,0.939,4602,2.853,4603,0.939,4604,0.773,4605,4.287,4606,2.442,4607,0.939,4608,3.096,4609,0.939,4610,1.725,4611,0.939,4612,0.939,4613,0.939,4614,0.939,4615,0.939,4616,2.392,4617,0.939,4618,1.725,4619,1.725,4620,1.725,4621,0.939,4622,5.908,4623,1.541,4624,0.939,4625,0.939,4626,0.839,4627,0.939,4628,0.685,4629,0.939,4630,0.939,4631,2.392,4632,0.839,4633,0.939,4634,5.61,4635,0.724,4636,0.939,4637,0.939,4638,3.464,4639,3.486,4640,0.939,4641,0.939,4642,2.392,4643,0.939,4644,0.939,4645,2.965,4646,0.939,4647,0.939,4648,0.939,4649,0.939,4650,0.939,4651,0.939,4652,1.725,4653,0.939,4654,0.939,4655,0.939,4656,1.725,4657,0.939,4658,0.939,4659,0.939,4660,0.939,4661,0.939,4662,1.725,4663,1.258,4664,4.415,4665,0.939,4666,3.901,4667,0.939,4668,0.939,4669,2.392,4670,2.965,4671,2.965,4672,2.965,4673,0.939,4674,3.096,4675,3.096,4676,0.939,4677,2.392,4678,0.939,4679,1.725,4680,0.939,4681,1.541,4682,3.464,4683,1.725,4684,2.965,4685,2.965,4686,0.939,4687,2.392,4688,3.096,4689,0.939,4690,0.939,4691,3.531,4692,1.725,4693,0.685,4694,0.939,4695,0.839,4696,2.392,4697,0.939,4698,0.939,4699,2.138,4700,0.939,4701,0.939,4702,0.939,4703,0.939,4704,0.939,4705,2.392,4706,0.939,4707,0.839,4708,2.138,4709,1.725,4710,3.901,4711,6.346,4712,2.392,4713,1.725,4714,1.725,4715,1.725,4716,2.965,4717,0.839,4718,0.939,4719,0.939,4720,0.939,4721,3.486,4722,1.725,4723,0.939,4724,0.939,4725,0.939,4726,0.939,4727,1.725,4728,0.939,4729,1.725,4730,0.939,4731,0.939,4732,3.379,4733,0.939,4734,4.888,4735,0.939,4736,0.939,4737,0.939,4738,0.939,4739,1.725,4740,0.939,4741,2.527,4742,2.965,4743,1.725,4744,0.839,4745,0.939,4746,0.939,4747,0.939,4748,0.939,4749,1.725,4750,0.939,4751,0.939,4752,0.773,4753,2.65,4754,0.939,4755,1.725,4756,0.939,4757,0.939,4758,2.138,4759,0.939,4760,0.939,4761,0.939,4762,0.939,4763,2.965,4764,0.939,4765,0.939,4766,0.839,4767,0.839,4768,0.839,4769,0.939,4770,0.939,4771,0.939,4772,3.464,4773,0.939,4774,0.939,4775,2.965,4776,0.939,4777,0.939,4778,0.939,4779,0.939,4780,0.939,4781,0.939,4782,2.965,4783,0.939,4784,0.939,4785,2.392,4786,0.939,4787,0.773,4788,2.392,4789,0.939,4790,0.939,4791,0.939,4792,0.939,4793,0.939,4794,0.939,4795,0.939,4796,0.839,4797,1.541,4798,0.939,4799,0.685,4800,1.725,4801,0.839,4802,0.939,4803,2.965,4804,0.939,4805,0.939,4806,1.725,4807,2.392,4808,2.392,4809,0.773,4810,1.725,4811,0.939,4812,4.287,4813,0.939,4814,0.939,4815,1.725,4816,0.939,4817,0.939,4818,0.939,4819,0.939,4820,2.965,4821,2.392,4822,0.939,4823,3.464,4824,0.939,4825,0.939,4826,0.939,4827,0.939,4828,0.839,4829,0.939,4830,1.725,4831,1.725,4832,1.541,4833,2.392,4834,0.839,4835,0.939,4836,2.392,4837,0.939,4838,1.421,4839,0.939,4840,1.725,4841,0.939,4842,0.939,4843,1.725,4844,7.31,4845,2.392,4846,0.939,4847,3.464,4848,5.218,4849,2.392,4850,0.939,4851,0.939,4852,0.939,4853,2.965,4854,0.939,4855,2.392,4856,0.939,4857,0.939,4858,0.939,4859,0.939,4860,0.939,4861,0.939,4862,0.939,4863,2.965,4864,1.725,4865,0.939,4866,0.939,4867,2.392,4868,0.939,4869,1.725,4870,2.392,4871,1.725,4872,0.939,4873,0.939,4874,0.939,4875,1.725,4876,2.392,4877,0.839,4878,0.939,4879,0.939,4880,1.725,4881,0.939,4882,0.839,4883,0.939,4884,0.939,4885,0.939,4886,2.392,4887,1.725,4888,0.839,4889,0.939,4890,0.939,4891,2.965,4892,0.939,4893,2.392,4894,0.939,4895,0.939,4896,1.725,4897,0.939,4898,0.939,4899,0.939,4900,2.392,4901,1.725,4902,1.725,4903,0.939,4904,1.725,4905,4.287,4906,1.541,4907,2.392,4908,2.965,4909,0.839,4910,0.939,4911,1.725,4912,0.939,4913,2.392,4914,0.939,4915,0.939,4916,0.939,4917,0.939,4918,0.939,4919,0.939,4920,2.392,4921,1.725,4922,0.939,4923,0.839,4924,0.939,4925,0.939,4926,1.725,4927,1.725,4928,0.939,4929,1.541,4930,0.939,4931,0.939,4932,0.773,4933,0.939,4934,2.392,4935,0.939,4936,0.939,4937,0.939,4938,0.939,4939,1.725,4940,2.392,4941,0.939,4942,0.939,4943,0.939,4944,0.939,4945,1.725,4946,0.939,4947,0.939,4948,0.939,4949,0.939,4950,0.939,4951,0.939,4952,0.939,4953,0.939,4954,0.724,4955,0.939,4956,0.939,4957,0.939,4958,2.965,4959,0.939,4960,0.939,4961,1.725,4962,0.939,4963,0.939,4964,0.939,4965,0.939,4966,0.939,4967,0.939,4968,0.939,4969,0.773,4970,0.939,4971,0.939,4972,0.939,4973,0.839,4974,1.725,4975,0.939,4976,0.939,4977,0.939,4978,0.939,4979,0.839,4980,1.725,4981,0.939,4982,0.939,4983,0.839,4984,0.839,4985,0.652,4986,0.939,4987,1.725,4988,1.725,4989,0.939,4990,0.939,4991,0.939,4992,0.939,4993,2.392,4994,1.421,4995,0.939,4996,1.725,4997,1.725,4998,0.939,4999,0.773,5000,0.839,5001,0.939,5002,0.839,5003,0.939,5004,0.939,5005,1.725,5006,0.939,5007,2.392,5008,0.939,5009,0.939,5010,0.939,5011,0.939,5012,0.939,5013,0.939,5014,0.939,5015,0.939,5016,0.939,5017,0.939,5018,0.839,5019,0.939,5020,0.773,5021,0.939,5022,0.939,5023,0.939,5024,0.939,5025,0.939,5026,0.939,5027,0.939,5028,0.939,5029,0.939,5030,0.939,5031,0.939,5032,0.939,5033,0.724,5034,0.839,5035,1.725,5036,1.541,5037,0.939,5038,0.939,5039,0.939,5040,0.939,5041,0.939,5042,0.939,5043,0.839,5044,0.724,5045,0.939,5046,0.939,5047,0.773,5048,0.939,5049,0.939,5050,0.939,5051,0.939,5052,0.939]],["title/modules.html",[171,2.822]],["body/modules.html",[24,0.005,80,0.005,81,0.005,170,4.89,171,2.805,176,4.657,195,4.657,200,4.657,381,4.89,384,4.89,385,4.89,386,4.282,387,4.89,1071,5.835,1407,6.678,1490,4.89,1593,4.657,1633,5.17,1828,4.89,2203,4.89,2207,4.657,2219,4.89,5053,10.042,5054,10.042,5055,9.116,5056,9.476]],["title/overview.html",[5057,5.199]],["body/overview.html",[2,0.866,24,0.006,80,0.004,81,0.004,147,1.28,170,6.749,171,1.938,172,3.001,173,4.138,174,4.138,175,4.138,176,6.765,177,5.401,178,5.144,179,3.598,180,2.444,181,2.11,195,6.508,196,4.138,197,4.138,198,4.138,199,4.138,200,6.05,201,5.5,202,4.923,210,1.759,363,5.144,381,6.905,382,4.138,383,4.138,384,5.401,385,5.401,386,5.707,387,5.401,574,4.923,681,2.319,687,5.144,936,5.145,984,5.707,1024,4.138,1025,4.138,1026,4.138,1431,6.206,1490,6.137,1491,4.138,1492,4.138,1588,4.138,1589,4.138,1590,4.138,1593,5.144,1728,5.707,1828,6.966,1829,4.138,1831,4.138,1832,4.138,1833,4.923,2102,5.144,2119,5.144,2203,6.353,2204,4.138,2205,4.138,2206,4.138,2207,6.828,2217,4.138,2218,4.138,2219,6.905,2327,5.144,2353,5.144,2388,4.138,2389,4.138,2390,5.144,2470,3.572,2694,4.923,2718,4.138,2719,4.138,2720,4.138,2721,4.923,2777,4.138,2942,3.572,3065,3.378,5057,3.572,5058,4.631]],["title/todo.html",[63,1.516,2756,3.192,2757,2.876]],["body/todo.html",[0,0.124,5,0.066,10,0.477,12,1.575,16,1.185,18,0.93,24,0.005,25,0.499,26,0.243,32,2.044,39,0.46,52,1.425,57,0.732,63,1.523,64,2.744,65,3.765,69,2.082,80,0.003,81,0.003,87,1.853,114,3.411,115,2.256,116,2.781,118,3.033,127,2.256,147,1.149,169,2.416,181,2.719,184,2.031,204,2.322,207,3.149,212,2.191,227,2.256,229,1.284,266,5.749,269,3.968,270,4.808,275,4.021,295,5.03,302,3.149,335,4.353,377,2.136,389,3.968,395,3.55,399,2.473,400,3.033,403,3.206,449,5.092,472,4.298,499,1.55,502,2.256,561,2.916,566,2.395,631,3.033,646,2.847,648,3.55,679,1.853,683,2.656,753,3.674,828,2.888,870,2.888,871,2.656,892,2.56,910,4.699,923,2.136,936,2.395,942,3.238,957,2.56,958,2.656,973,3.674,1029,4.153,1031,3.149,1041,3.587,1064,4.603,1077,4.85,1083,4.974,1093,2.256,1094,3.033,1096,3.033,1121,2.888,1124,2.764,1155,5.371,1156,3.813,1192,2.56,1193,6.653,1196,2.656,1199,2.888,1214,2.56,1216,3.033,1217,2.473,1266,3.968,1387,2.888,1391,2.888,1407,2.764,1437,3.206,1439,2.764,1456,4.915,1458,3.715,1459,2.136,1463,2.395,1570,2.764,1584,2.656,1599,3.684,1642,6.238,1657,2.656,1658,3.033,1669,3.033,1673,2.888,1717,2.888,1843,2.764,1844,2.764,1894,2.473,1919,2.322,1927,3.206,1948,2.395,2126,2.473,2223,3.033,2225,3.813,2249,4.85,2371,5.072,2393,2.656,2613,4.642,2763,4.353,2768,3.033,2801,3.715,2814,3.424,2829,3.424,2839,4.915,2882,2.888,2886,6.653,2906,3.206,2913,3.715,2959,2.888,2982,3.424,3009,3.424,3020,3.424,3024,3.715,3025,3.715,3027,2.764,3049,3.424,3070,3.033,3084,3.715,3305,3.206,3379,4.146,3454,3.715,3458,3.715,3530,4.603,3545,3.206,3546,2.888,3702,3.424,3713,3.424,3715,3.424,3759,3.206,4016,3.206,4106,3.424,4109,3.424,4271,3.715,4299,3.715,4300,3.424,4351,2.888,4397,3.424,4407,3.206,4418,2.764,4419,3.424,4461,3.206,4464,3.206,4589,3.033,4626,3.715,4752,3.424,5033,4.603,5059,3.424,5060,4.157,5061,3.715,5062,3.715,5063,3.206,5064,3.424,5065,4.157,5066,4.157,5067,3.715,5068,4.157,5069,4.157,5070,4.157,5071,4.157,5072,4.157,5073,4.157,5074,4.157,5075,4.157,5076,4.157,5077,3.424,5078,4.157,5079,4.157,5080,4.157,5081,4.157,5082,4.157,5083,4.157,5084,4.157,5085,4.157,5086,4.157,5087,4.157,5088,4.157,5089,4.157,5090,4.157,5091,4.157,5092,3.715,5093,4.157,5094,4.157,5095,4.157,5096,4.157,5097,4.157,5098,3.715,5099,4.157,5100,4.157,5101,3.715,5102,3.715,5103,3.715,5104,4.157,5105,3.715,5106,4.157,5107,4.157,5108,4.157,5109,3.424,5110,4.157,5111,6.238,5112,4.157,5113,4.157,5114,4.157,5115,4.157,5116,4.157,5117,4.157,5118,3.424,5119,4.157,5120,5.967,5121,3.715,5122,4.157]],["title/miscellaneous/typealiases.html",[4332,2.644,5123,5.948]],["body/miscellaneous/typealiases.html",[9,0.257,12,1.467,16,1.104,20,4.487,24,0.006,26,0.395,39,0.616,52,0.894,71,4.056,80,0.004,81,0.004,98,1.69,100,5.405,145,0.513,169,2.179,219,1.923,305,5.405,435,4.85,438,4.656,472,3.424,492,3.017,499,2.718,523,3.65,528,2.934,542,4.335,544,3.017,587,5.005,611,5.062,700,3.697,705,4.656,1039,4.288,1040,5.93,1045,6.001,1055,6.001,1228,4.056,1232,4.056,1233,5.316,1242,3.476,1245,3.697,1252,4.056,1253,5.316,1256,6.001,1310,4.288,1311,5.62,1313,4.288,1459,2.857,1594,4.056,1599,3.845,1609,5.62,1610,6.001,1635,3.863,1638,6.512,1654,4.288,1673,5.062,1899,4.288,1912,6.512,1954,4.579,1987,4.579,1988,4.579,2051,4.056,2071,4.579,2145,4.288,2154,6.512,2155,6.001,2368,6.512,3180,4.579,3181,4.579,4143,4.579,4144,6.001,4332,3.552,4335,6.512,4336,4.969,4342,7.264,4744,4.969,5124,5.56,5125,7.287,5126,7.287,5127,5.56,5128,7.287,5129,5.56,5130,7.287,5131,7.287,5132,5.56,5133,7.287,5134,7.287,5135,5.56,5136,4.969,5137,5.56,5138,4.969,5139,4.969,5140,7.287,5141,5.56,5142,7.287,5143,5.56,5144,4.969,5145,5.56,5146,5.56,5147,5.56,5148,5.56,5149,5.56,5150,3.863,5151,5.56,5152,5.56,5153,5.56,5154,5.56,5155,5.56]],["title/miscellaneous/variables.html",[2841,4.34,4332,2.644]],["body/miscellaneous/variables.html",[1,1.147,9,0.092,10,0.228,12,2.053,14,0.771,24,0.006,25,0.425,26,0.351,29,0.526,30,0.596,32,2.585,33,2.961,34,1.412,39,0.481,41,0.625,49,0.771,61,0.096,63,0.729,64,0.716,69,1.679,73,1.453,75,0.95,80,0.002,81,0.002,82,2.229,85,2.141,87,1.494,90,1.589,91,0.373,98,0.605,106,0.367,108,2.581,114,1.637,115,1.081,116,4.436,117,1.453,123,0.668,124,2.229,125,2.931,127,1.081,135,1.882,142,1.436,169,0.596,183,1.527,190,3.015,207,2.29,212,0.625,223,1.816,225,1.185,228,1.893,229,0.615,239,1.64,244,0.668,254,1.93,270,1.819,274,1.226,315,1.722,336,1.994,338,1.185,340,3.574,342,1.453,373,1.637,374,2.141,377,1.023,399,1.185,400,1.453,408,0.716,409,1.536,410,1.051,411,1.816,435,1.051,445,1.384,450,1.453,454,1.64,455,1.64,476,1.226,484,1.051,486,0.716,492,1.081,497,1.147,499,0.743,505,0.786,514,1.147,528,1.051,530,1.147,531,1.272,544,1.081,547,1.854,560,0.95,561,0.973,562,0.928,563,0.928,564,0.95,572,1.185,573,1.185,601,1.527,619,1.112,644,1.64,645,2.585,648,1.994,665,4.488,670,1.112,677,3.165,679,0.888,681,0.997,689,2.141,725,1.226,727,1.272,738,1.272,750,1.272,756,1.872,759,1.185,840,1.453,856,2.354,871,1.272,885,0.973,892,1.226,904,1.536,905,1.64,906,3.574,909,1.384,910,1.819,913,1.536,917,2.76,918,2.76,919,1.78,920,1.78,923,1.722,924,2.76,925,2.328,926,1.64,927,2.29,928,1.453,929,1.536,936,3.769,939,1.536,942,1.819,957,3.134,973,1.226,1014,1.819,1020,2.328,1029,1.185,1030,1.112,1031,1.769,1041,1.023,1062,1.453,1064,1.536,1069,1.536,1070,1.324,1077,1.384,1078,1.272,1083,1.226,1085,1.536,1086,1.64,1090,1.64,1092,3.574,1093,1.081,1094,1.453,1095,1.536,1096,5.012,1098,1.536,1099,2.76,1114,2.76,1115,1.78,1116,2.76,1117,4.488,1118,1.64,1119,1.324,1120,1.78,1121,3.015,1122,2.76,1123,1.453,1124,2.885,1125,1.324,1126,2.76,1127,1.78,1128,2.995,1129,1.78,1130,1.64,1131,1.78,1132,1.78,1133,1.78,1134,1.78,1135,1.78,1137,1.64,1140,1.64,1141,4.379,1145,1.64,1151,1.384,1152,2.995,1153,1.453,1154,1.78,1155,1.324,1156,2.772,1157,2.995,1158,1.64,1159,2.995,1160,1.78,1161,2.585,1162,1.78,1163,1.78,1164,1.536,1165,2.76,1166,1.78,1167,1.78,1168,1.64,1169,1.64,1170,1.64,1171,1.536,1172,1.78,1173,1.78,1174,1.78,1175,1.78,1176,5.074,1177,2.76,1178,5.074,1179,1.78,1180,1.64,1181,1.78,1192,1.226,1195,2.76,1202,1.384,1214,1.226,1217,1.185,1237,2.23,1239,2.141,1240,3.247,1242,2.428,1244,1.384,1284,1.023,1286,1.081,1297,1.023,1314,1.384,1369,1.272,1387,1.384,1399,1.64,1400,1.78,1401,1.78,1405,1.324,1417,1.64,1423,1.78,1424,1.78,1437,1.536,1439,3.776,1453,2.064,1464,1.64,1465,2.76,1473,1.147,1480,1.78,1575,1.324,1584,2.141,1594,1.453,1599,2.29,1600,2.585,1601,2.76,1606,1.453,1609,1.536,1611,2.585,1612,1.64,1613,1.64,1614,1.64,1615,1.536,1616,1.64,1634,1.64,1635,3.015,1636,1.64,1637,2.76,1643,2.76,1644,2.995,1647,5.074,1650,2.76,1651,1.78,1652,2.995,1653,1.64,1654,2.585,1655,1.78,1656,1.536,1657,1.272,1658,1.453,1659,1.384,1660,1.64,1661,1.384,1662,1.64,1663,1.536,1664,2.995,1665,1.78,1666,1.78,1667,1.78,1701,3.66,1755,1.64,1756,2.76,1843,1.324,1844,1.324,1899,1.536,1907,1.64,1914,2.76,1919,1.872,1939,2.585,1947,1.384,1948,1.147,2034,1.384,2084,1.536,2094,1.78,2096,1.78,2203,1.453,2213,2.424,2220,1.64,2224,1.324,2225,2.141,2229,4.546,2240,2.76,2241,2.76,2242,2.585,2243,2.76,2254,1.64,2255,2.229,2613,1.324,2621,1.78,2640,1.453,2647,2.585,2670,1.453,2741,1.78,2778,2.885,2841,1.453,2846,4.274,2906,2.585,2922,1.78,2926,1.64,2958,1.64,2959,1.384,2960,1.78,2961,2.995,2962,1.536,3004,2.995,3034,1.384,3070,3.713,3119,1.78,3326,1.536,3410,1.324,3470,1.384,3530,1.536,3574,1.64,3581,1.64,3607,3.015,3640,2.995,3682,1.64,3775,2.995,3779,1.78,3869,1.64,4106,1.64,4115,1.64,4121,1.78,4122,2.76,4131,1.78,4132,4.548,4133,2.995,4134,3.878,4143,1.64,4144,4.191,4165,1.78,4166,2.995,4167,1.78,4168,1.78,4169,2.995,4175,1.78,4176,2.995,4183,4.191,4229,1.78,4332,1.272,4339,2.445,4341,5.847,4345,1.64,4348,2.585,4375,1.64,4410,1.78,4558,1.64,4589,1.453,5064,1.64,5077,3.574,5101,2.995,5111,1.78,5136,1.78,5138,2.995,5139,3.878,5156,1.991,5157,3.351,5158,5.678,5159,1.991,5160,1.991,5161,4.339,5162,1.991,5163,1.991,5164,5.089,5165,4.339,5166,1.991,5167,3.351,5168,1.991,5169,1.991,5170,1.991,5171,3.351,5172,1.991,5173,1.991,5174,1.991,5175,1.991,5176,1.991,5177,1.991,5178,1.991,5179,1.78,5180,1.991,5181,1.991,5182,1.78,5183,1.991,5184,1.991,5185,1.991,5186,1.991,5187,1.991,5188,2.76,5189,1.78,5190,1.78,5191,1.78,5192,1.991,5193,1.991,5194,1.991,5195,2.995,5196,1.991,5197,1.991,5198,1.991,5199,1.991,5200,1.991,5201,1.78,5202,1.991,5203,3.878,5204,1.991,5205,1.991,5206,1.991,5207,1.991,5208,1.991,5209,1.991,5210,1.991,5211,1.991,5212,1.991,5213,1.991,5214,1.991,5215,1.991,5216,1.991,5217,1.991,5218,1.991,5219,1.991,5220,1.991,5221,1.991,5222,1.991,5223,1.991,5224,1.991,5225,1.991,5226,1.991,5227,1.991,5228,1.991,5229,1.991,5230,1.991,5231,1.991,5232,3.351,5233,2.995,5234,3.351,5235,1.991,5236,1.991,5237,1.991,5238,1.991,5239,1.991]],["title/additional-documentation/nestjs-application.html",[75,1.697,373,1.738,972,1.738,2036,1.93]],["body/additional-documentation/nestjs-application.html",[7,0.786,24,0.005,25,0.298,32,0.956,64,3.053,65,3.304,68,2.278,75,4.278,80,0.003,81,0.003,87,3.549,88,3.172,147,0.986,169,1.595,171,1.492,180,1.882,207,2.814,225,3.172,227,1.935,238,2.278,270,5.029,275,3.071,295,1.935,337,2.477,338,2.121,339,2.278,373,4.239,374,4.848,376,1.786,377,2.74,392,2.75,443,2.75,445,2.477,472,2.195,501,1.786,508,2.91,560,3.381,564,2.544,658,3.704,756,1.992,789,3.199,868,2.278,869,3.283,910,4.32,923,3.642,929,2.75,972,1.742,973,2.195,974,3.704,975,2.75,1029,3.172,1031,1.882,1032,2.278,1041,2.74,1047,2.195,1051,2.278,1070,2.371,1071,2.195,1083,2.195,1121,4.925,1151,2.477,1155,4.713,1161,2.75,1192,2.195,1208,3.89,1214,2.195,1217,3.172,1265,2.75,1386,2.936,1387,4.437,1405,4.713,1459,1.832,1473,2.054,1571,2.75,1573,2.75,1575,2.371,1603,4.713,1621,2.936,1648,3.546,1653,2.936,1659,2.477,1843,5.046,1844,4.713,1849,2.477,1927,2.75,2036,2.893,2199,4.113,2224,2.371,2225,2.278,2255,3.546,2256,3.186,2257,4.392,2589,2.278,2628,3.186,2641,3.704,2757,3.704,2760,2.477,2778,6.3,2783,4.113,2798,2.936,2836,4.765,2857,4.392,2886,2.936,2918,2.936,2925,2.936,2929,2.477,2952,3.186,2959,4.925,2962,4.113,2973,3.89,2981,5.26,2982,4.392,3023,3.186,3026,4.848,3027,2.371,3070,6.19,3167,2.936,3170,2.477,3237,3.89,3378,2.936,3379,6.379,3410,5.046,3427,4.392,3530,4.113,3546,2.477,3561,3.704,3577,2.936,3581,4.392,3607,2.477,3718,5.708,3780,3.186,3813,4.113,3849,4.765,3865,3.186,4183,2.936,4309,3.186,4319,2.936,4348,2.75,4349,2.936,4350,2.601,4352,2.75,4354,2.75,4357,3.186,4364,4.926,4375,2.936,4397,2.936,4409,5.467,4418,4.713,4426,2.936,4558,2.936,4579,4.765,4588,3.186,4589,4.659,4634,3.186,4663,2.601,4732,2.601,4741,3.89,4799,2.601,4838,2.936,4882,3.186,4888,3.186,4999,4.392,5020,2.936,5044,2.75,5055,3.186,5057,2.75,5098,4.765,5102,5.708,5103,5.708,5150,3.704,5188,4.392,5189,4.765,5190,3.186,5191,3.186,5203,3.186,5240,3.565,5241,2.936,5242,3.565,5243,3.565,5244,3.565,5245,3.565,5246,3.565,5247,3.565,5248,3.565,5249,3.565,5250,5.332,5251,3.565,5252,3.565,5253,3.565,5254,5.332,5255,7.088,5256,3.565,5257,3.565,5258,3.565,5259,2.936,5260,3.565,5261,7.088,5262,3.186,5263,3.565,5264,3.565,5265,3.565,5266,7.962,5267,3.565,5268,3.565,5269,3.565,5270,3.565,5271,5.332,5272,3.565,5273,3.565,5274,3.565,5275,3.565,5276,5.332,5277,3.565,5278,3.565,5279,4.765,5280,5.332,5281,3.565,5282,3.565,5283,3.565,5284,3.565,5285,5.332,5286,3.565,5287,3.565,5288,3.565,5289,2.75,5290,3.565,5291,3.565,5292,3.565,5293,3.565,5294,3.565,5295,3.565,5296,3.186,5297,3.565,5298,3.565,5299,3.565,5300,3.565,5301,3.565,5302,6.387,5303,4.765,5304,3.565,5305,3.565,5306,3.565,5307,3.565,5308,3.565,5309,3.565,5310,5.332,5311,3.565,5312,5.332,5313,4.392,5314,3.186,5315,3.565,5316,6.387,5317,5.332,5318,3.565,5319,3.565,5320,3.565,5321,3.186,5322,3.565,5323,3.186,5324,3.565,5325,3.565,5326,3.565,5327,3.565,5328,3.565,5329,3.565,5330,3.565,5331,3.565]],["title/additional-documentation/nestjs-application/software-architecture.html",[972,1.738,2036,1.93,4356,2.365,4427,2.743]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.586,4,0.046,5,0.05,12,1.891,16,1.04,21,0.48,23,0.452,24,0.002,25,0.194,32,0.349,33,0.967,34,0.569,52,0.504,62,0.693,63,0.477,64,2.765,65,1.46,68,3.087,69,0.652,73,0.949,75,3.612,79,1.004,80,0.001,81,0.001,87,3.32,88,1.863,89,0.749,98,0.395,114,3.639,115,2.365,116,2.99,118,0.949,124,1.541,125,1.335,127,2.062,142,0.219,145,0.569,147,0.64,172,2.032,181,1.056,184,0.636,204,0.727,223,0.97,225,1.863,227,4.502,230,0.904,238,2.428,247,1.072,254,0.749,269,5.42,270,0.706,272,0.727,275,1.335,279,0.904,280,2.001,295,0.706,334,0.727,336,5.53,337,0.904,338,2.261,339,4.362,354,0.904,374,0.831,376,3.953,377,1.953,391,3.718,392,1.787,395,3.117,396,1.004,397,4.104,399,0.774,408,0.468,450,0.949,456,1.494,472,2.684,481,1.541,500,1.056,501,1.16,523,1.16,530,1.804,545,0.706,547,0.556,548,0.652,563,0.606,566,1.335,588,0.568,601,1.732,647,1.004,653,1.427,657,0.904,667,1.378,678,0.774,718,0.801,721,0.865,753,0.801,756,2.7,789,4.354,856,2.062,868,2.001,869,0.801,870,3.64,910,1.7,911,0.865,912,4.546,927,3.114,934,4.761,935,3.718,942,4.109,957,0.801,971,3.117,972,1.53,974,4.288,1029,1.863,1030,2.926,1031,4.536,1032,2.785,1034,1.61,1043,2.083,1056,2.176,1071,1.427,1093,3.201,1123,0.949,1124,4.266,1125,0.865,1130,1.072,1153,0.949,1156,0.831,1192,1.427,1202,0.904,1214,1.427,1216,4.079,1217,1.378,1230,0.904,1240,1.223,1241,2.499,1242,0.621,1244,0.904,1254,0.774,1255,0.749,1258,0.865,1266,2.083,1272,3.98,1297,1.953,1314,2.176,1328,0.749,1336,1.541,1388,1.004,1389,2.261,1391,0.904,1392,4.859,1406,3.525,1414,0.949,1459,2.873,1460,1.163,1463,0.749,1473,0.749,1474,1.072,1476,3.18,1558,0.904,1570,2.083,1571,1.004,1575,1.541,1576,0.831,1578,2.773,1582,1.69,1615,1.004,1632,1.004,1648,0.865,1649,0.949,1656,1.004,1657,0.831,1658,3.18,1661,2.176,1674,0.949,1714,2.071,1715,0.831,1849,0.904,1893,4.304,1894,2.875,1919,0.727,1940,0.904,1947,0.904,1948,0.749,1979,0.949,2036,0.706,2193,0.949,2213,1.294,2223,0.949,2224,2.083,2225,2.001,2335,1.004,2336,0.949,2340,1.004,2341,1.004,2351,2.176,2437,1.072,2463,6.394,2464,1.004,2466,1.908,2467,2.285,2532,1.072,2534,2.416,2588,2.285,2589,2.785,2613,0.865,2616,4.099,2623,2.58,2624,3.822,2640,0.949,2641,0.904,2642,1.072,2670,1.69,2760,1.61,2761,1.908,2767,2.641,2768,2.285,2770,2.58,2781,3.896,2783,1.004,2802,4.979,2805,2.773,2807,1.163,2808,0.949,2829,1.072,2839,1.072,2841,0.949,2846,0.904,2853,1.072,2856,2.799,2857,1.072,2862,1.163,2867,1.072,2869,2.799,2878,2.176,2882,0.904,2887,1.163,2899,2.071,2918,1.072,2924,1.163,2928,3.525,2964,2.799,2968,1.072,2993,1.072,2998,1.908,3026,0.831,3027,2.527,3033,2.773,3034,1.61,3036,1.163,3065,0.949,3076,1.163,3080,3.18,3099,1.072,3100,1.908,3102,1.163,3104,1.163,3114,1.163,3117,1.163,3135,1.163,3170,0.904,3181,1.908,3195,2.428,3230,2.071,3237,3.822,3247,7.117,3253,1.908,3274,2.285,3297,2.773,3299,5.946,3318,1.163,3325,1.787,3356,2.071,3379,1.61,3389,3.59,3402,1.787,3424,1.072,3429,1.004,3431,1.072,3445,3.18,3453,2.285,3459,2.932,3468,3.397,3474,3.357,3475,1.004,3494,1.163,3495,1.908,3499,1.163,3514,1.908,3518,2.58,3534,5.516,3545,2.416,3546,0.904,3547,1.072,3561,1.61,3579,1.072,3606,1.072,3612,0.949,3619,3.896,3628,2.071,3658,2.799,3661,3.029,3666,0.949,3676,2.071,3715,1.072,3729,1.072,3753,2.932,3755,1.072,3764,1.072,3813,1.004,3847,1.163,3853,1.163,3864,2.071,3884,3.896,3901,1.787,3915,1.787,3943,1.072,3973,1.072,3976,1.072,3980,3.397,3981,1.004,3988,1.072,4001,1.163,4006,1.908,4036,1.163,4060,1.163,4084,1.163,4093,1.787,4114,2.071,4319,1.908,4348,2.416,4350,1.69,4351,1.61,4356,5.517,4364,1.004,4365,2.071,4369,2.773,4371,0.904,4377,1.908,4378,2.932,4385,6.773,4403,0.949,4407,1.004,4409,1.004,4413,1.787,4426,1.908,4427,1.004,4438,2.071,4440,1.072,4443,1.163,4448,1.163,4451,1.163,4454,1.163,4464,1.004,4466,1.163,4477,1.163,4489,1.908,4490,3.727,4493,3.98,4496,2.071,4497,1.787,4520,1.163,4525,1.163,4526,4.761,4544,0.904,4547,1.163,4564,1.072,4566,2.799,4570,1.163,4572,1.163,4578,1.163,4586,1.163,4587,1.163,4594,5.624,4600,1.072,4602,1.072,4604,1.908,4606,1.072,4608,1.163,4628,0.949,4635,2.932,4639,1.163,4663,0.949,4664,1.163,4681,1.163,4691,1.072,4693,0.949,4708,1.163,4711,1.163,4717,1.163,4721,2.071,4732,0.949,4734,1.163,4741,2.285,4753,1.163,4766,2.071,4767,3.896,4787,1.072,4796,3.397,4797,1.163,4799,0.949,4801,1.163,4809,1.072,4828,1.163,4832,1.163,4834,1.163,4838,1.072,4877,4.318,4906,1.163,4923,1.163,4932,4.315,4954,5.115,4969,1.072,4983,1.163,4984,1.163,4985,4.288,4994,1.072,5034,1.163,5047,1.072,5057,1.004,5059,1.908,5062,1.163,5063,3.727,5105,2.071,5121,1.163,5259,1.072,5289,1.004,5332,1.301,5333,1.301,5334,5.733,5335,5.9,5336,2.317,5337,3.132,5338,4.605,5339,2.317,5340,2.799,5341,5.238,5342,1.301,5343,1.301,5344,2.932,5345,3.397,5346,1.301,5347,1.301,5348,1.301,5349,1.301,5350,1.301,5351,2.317,5352,2.317,5353,1.301,5354,1.301,5355,4.359,5356,1.301,5357,1.301,5358,3.132,5359,2.317,5360,1.301,5361,1.301,5362,1.301,5363,1.301,5364,1.301,5365,1.301,5366,1.301,5367,1.163,5368,2.317,5369,4.832,5370,1.301,5371,1.301,5372,2.317,5373,2.317,5374,3.801,5375,3.132,5376,3.801,5377,1.301,5378,3.397,5379,3.397,5380,1.301,5381,1.301,5382,1.301,5383,1.301,5384,1.301,5385,1.301,5386,2.799,5387,1.301,5388,1.301,5389,1.301,5390,7.448,5391,1.301,5392,7.347,5393,1.301,5394,2.071,5395,1.301,5396,2.317,5397,1.072,5398,5.9,5399,1.301,5400,2.799,5401,2.317,5402,1.301,5403,1.301,5404,1.301,5405,1.301,5406,1.301,5407,3.13,5408,2.317,5409,1.301,5410,1.301,5411,1.301,5412,1.301,5413,1.163,5414,1.301,5415,2.58,5416,1.301,5417,1.301,5418,1.163,5419,1.301,5420,1.301,5421,1.301,5422,1.163,5423,2.317,5424,1.301,5425,3.132,5426,1.301,5427,1.301,5428,1.301,5429,2.317,5430,1.301,5431,2.317,5432,3.132,5433,1.301,5434,1.301,5435,1.301,5436,2.071,5437,2.317,5438,3.132,5439,1.301,5440,1.301,5441,1.301,5442,1.301,5443,1.301,5444,1.301,5445,1.163,5446,1.301,5447,2.317,5448,1.301,5449,1.301,5450,5.9,5451,1.301,5452,1.163,5453,1.072,5454,1.301,5455,1.301,5456,1.301,5457,1.301,5458,1.301,5459,1.301,5460,1.301,5461,3.132,5462,1.301,5463,2.317,5464,3.132,5465,1.301,5466,1.301,5467,1.301,5468,1.301,5469,2.317,5470,1.301,5471,1.301,5472,1.301,5473,2.071,5474,1.301,5475,1.163,5476,1.301,5477,1.301,5478,2.317,5479,1.301,5480,1.163,5481,1.301,5482,2.317,5483,1.301,5484,1.301,5485,1.301,5486,1.301,5487,1.163,5488,1.301,5489,1.301,5490,2.317,5491,1.301,5492,1.301,5493,1.301,5494,1.301,5495,1.301,5496,1.163,5497,1.301,5498,1.301,5499,1.301,5500,1.163,5501,3.132,5502,1.301,5503,1.301,5504,1.301,5505,1.301,5506,1.301,5507,2.317,5508,1.301,5509,1.163,5510,1.301,5511,3.132,5512,1.301,5513,1.301,5514,2.317,5515,1.301,5516,2.317,5517,1.301,5518,1.301,5519,1.301,5520,1.301,5521,1.301,5522,1.301,5523,1.301,5524,2.317,5525,1.301,5526,1.301,5527,1.301,5528,1.301,5529,1.301,5530,1.301,5531,1.301,5532,1.301,5533,8.07,5534,1.301,5535,1.301,5536,1.163,5537,1.301,5538,1.301,5539,2.317,5540,1.301,5541,1.301,5542,1.301,5543,1.301,5544,1.301,5545,1.301,5546,1.163,5547,1.301,5548,1.301,5549,1.163,5550,1.301,5551,1.301,5552,1.301,5553,1.301,5554,2.317,5555,1.301,5556,1.301,5557,2.416,5558,1.301,5559,1.301,5560,1.072,5561,1.301,5562,1.301,5563,4.359,5564,1.301,5565,1.301,5566,1.301,5567,1.301,5568,1.301,5569,1.301,5570,1.301,5571,1.301,5572,1.301,5573,1.301,5574,1.301,5575,2.317,5576,1.301,5577,1.301,5578,2.317,5579,1.301,5580,1.301,5581,1.301,5582,2.317,5583,1.301,5584,1.301,5585,1.301,5586,1.301,5587,1.301,5588,1.163,5589,2.317,5590,1.301,5591,2.317,5592,1.301,5593,1.301,5594,1.301,5595,1.163,5596,2.317]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[87,1.39,972,1.524,2036,1.692,2616,2.167,4356,2.074]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.241,2,0.445,3,0.056,4,0.047,5,0.128,10,0.564,12,1.651,16,0.472,18,0.532,20,1.464,21,0.734,24,0.006,25,0.617,26,0.158,29,1.651,30,0.711,32,0.637,34,0.705,51,0.158,52,1.139,61,0.149,64,3.266,65,1.809,68,2.48,69,3.828,74,2.39,75,1.134,80,0.002,81,0.002,87,1.73,114,3.28,115,2.669,125,1.369,126,3.627,127,1.29,135,1.179,142,0.828,145,0.219,147,1.073,169,2.675,171,3.368,172,1.108,183,1.768,184,1.896,195,1.651,200,3.417,201,2.39,202,3.775,204,3.75,207,3.302,209,0.524,212,1.218,225,1.414,227,3.081,229,1.199,230,1.651,241,1.016,244,1.302,270,2.669,272,3.75,274,3.496,281,1.833,282,1.958,291,1.651,325,1.833,334,2.168,335,1.734,336,3.378,338,2.926,370,1.958,373,3.057,376,4.112,377,2.917,389,3.271,399,2.309,451,2.696,486,0.855,499,1.834,501,1.944,505,1.94,530,2.235,564,1.134,566,1.369,601,1.083,643,1.651,646,3.378,648,1.414,658,3.417,667,1.414,676,3.029,679,3.293,681,3.134,697,1.833,719,1.328,753,1.464,756,1.328,789,3.828,828,1.651,856,3.081,868,1.519,892,2.39,910,2.106,912,4.079,923,1.221,925,1.651,934,3.794,957,1.464,971,3.722,972,2.403,973,1.464,975,1.833,977,1.958,982,2.124,984,4.289,1028,1.581,1029,3.722,1030,3.75,1033,3.417,1034,1.651,1035,1.651,1036,1.651,1040,1.734,1041,1.221,1043,1.581,1047,1.464,1056,1.651,1065,1.581,1071,1.464,1083,3.029,1093,1.29,1109,2.124,1121,1.651,1124,1.581,1156,3.143,1191,4.051,1193,3.197,1202,1.651,1208,1.734,1211,1.734,1214,1.464,1216,3.588,1217,2.309,1237,1.994,1296,1.651,1388,1.833,1389,2.309,1394,1.833,1406,1.734,1414,1.734,1439,1.581,1459,3.45,1463,2.235,1473,2.833,1474,1.958,1475,2.993,1558,2.696,1582,2.831,1584,1.519,1649,3.588,1657,2.48,1698,1.833,1700,1.581,1701,2.309,1708,1.581,1717,4.347,1722,1.833,1725,1.651,1735,2.124,1736,2.124,1737,2.124,1738,2.124,1739,1.958,1747,1.958,1843,1.581,1893,2.831,1894,1.414,1910,2.124,1919,2.168,1940,1.651,1948,2.833,1971,1.581,2063,1.958,2126,2.926,2213,1.328,2229,1.651,2249,1.651,2371,5.082,2393,1.519,2460,1.833,2463,5.132,2589,3.997,2613,4.464,2616,4.347,2624,1.734,2721,1.581,2735,5.153,2767,1.651,2770,1.958,2802,1.651,2808,1.734,2841,1.734,2846,2.696,2853,4.051,2882,2.696,2929,1.651,2973,2.831,2998,4.676,3018,3.794,3026,2.48,3027,1.581,3033,1.734,3080,3.588,3130,2.124,3158,2.124,3167,1.958,3195,2.48,3274,2.831,3297,2.831,3299,1.734,3326,1.833,3327,2.993,3429,1.833,3459,1.833,3464,1.958,3469,1.958,3470,2.696,3474,1.651,3475,1.833,3514,4.051,3561,2.696,3573,2.124,3575,2.124,3607,4.347,3647,2.124,3653,1.958,3655,2.124,3661,1.651,3666,1.734,3669,2.124,3686,2.124,3687,2.124,3759,1.833,3870,1.833,3901,1.833,3953,2.124,3976,1.958,4345,1.958,4351,5.31,4353,1.958,4356,3.271,4364,1.833,4369,1.734,4371,1.651,4381,1.958,4384,2.124,4385,3.794,4395,2.124,4403,1.734,4404,2.124,4409,4.379,4412,1.958,4413,4.379,4416,2.124,4418,1.581,4419,1.958,4450,2.124,4465,1.958,4467,2.124,4497,1.833,4526,1.833,4539,2.124,4544,1.651,4564,1.958,4573,1.958,4574,2.124,4600,1.958,4606,1.958,4628,1.734,4635,1.833,4663,2.831,4674,2.124,4693,1.734,4732,1.734,4787,1.958,4799,1.734,4909,4.395,4954,2.993,4979,2.124,4985,1.651,5002,2.124,5047,1.958,5063,4.379,5064,4.051,5077,4.051,5118,4.051,5150,3.417,5179,2.124,5195,2.124,5201,2.124,5259,1.958,5262,2.124,5313,3.197,5334,2.124,5344,1.833,5379,2.124,5392,7.164,5394,2.124,5397,3.197,5413,2.124,5415,1.958,5422,2.124,5436,2.124,5445,3.468,5452,4.395,5487,3.468,5509,3.468,5546,3.468,5549,2.124,5557,1.833,5597,1.958,5598,2.124,5599,2.377,5600,4.918,5601,2.377,5602,6.329,5603,3.197,5604,2.377,5605,3.881,5606,5.677,5607,2.377,5608,2.377,5609,2.377,5610,2.377,5611,2.377,5612,2.377,5613,2.377,5614,3.881,5615,2.377,5616,2.377,5617,2.377,5618,2.124,5619,3.881,5620,4.918,5621,2.377,5622,2.377,5623,2.377,5624,2.377,5625,2.124,5626,2.377,5627,2.377,5628,2.124,5629,3.881,5630,2.377,5631,1.958,5632,2.377,5633,2.377,5634,2.377,5635,2.377,5636,2.377,5637,2.377,5638,2.377,5639,2.377,5640,3.881,5641,3.881,5642,2.377,5643,2.124,5644,3.468,5645,2.377,5646,2.377,5647,2.377,5648,2.377,5649,2.377,5650,2.377,5651,2.377,5652,2.377,5653,2.377,5654,2.377,5655,2.377,5656,2.377,5657,2.377,5658,2.377,5659,2.377,5660,2.377,5661,2.377,5662,2.377,5663,2.377,5664,2.377,5665,2.377,5666,1.833,5667,2.377,5668,2.377,5669,2.377,5670,2.377,5671,2.377,5672,2.377,5673,2.377,5674,2.377,5675,2.377,5676,2.377,5677,2.377,5678,2.377,5679,2.124,5680,2.377,5681,2.377,5682,2.377,5683,2.124,5684,2.377,5685,2.377,5686,2.377,5687,2.377,5688,2.377,5689,2.377,5690,2.377,5691,2.377,5692,2.377,5693,2.124,5694,2.377]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[972,1.524,2036,1.692,2371,2.074,5344,2.405,5695,2.787]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[12,2.371,21,0.38,24,0.006,29,1.009,34,1.331,39,0.423,52,0.903,63,1.4,64,3.276,65,3.101,69,4.09,74,2.354,75,3.896,80,0.003,81,0.003,87,2.502,88,3.34,113,3.148,116,1.781,126,2.442,135,1.166,142,0.945,145,0.352,181,1.742,212,1.2,219,1.482,229,1.181,244,2.621,247,4.624,254,2.202,272,3.136,275,3.234,291,2.655,325,4.33,336,5.022,337,4.623,338,2.274,339,2.442,373,2.743,376,1.914,377,2.885,389,2.542,392,4.33,395,2.274,396,2.948,397,2.542,411,2.35,420,1.479,451,3.9,486,1.375,502,2.074,505,2.625,516,3.9,523,1.914,601,2.558,647,5.132,657,2.655,667,4.363,753,3.457,789,3.912,841,3.148,856,3.046,868,3.587,885,1.868,912,2.202,935,2.542,942,2.074,957,2.354,971,5.151,1030,4.936,1035,2.655,1036,2.655,1065,2.542,1123,2.788,1124,2.542,1136,2.274,1151,2.655,1208,2.788,1211,2.788,1297,1.964,1369,3.587,1387,2.655,1405,2.542,1452,2.948,1459,3.419,1473,3.234,1576,4.251,1669,2.788,1698,2.948,1849,2.655,1947,2.655,1979,2.788,1990,3.416,2022,3.416,2084,2.948,2199,2.948,2249,2.655,2336,2.788,2351,2.655,2371,6.288,2463,2.655,2589,3.587,2624,2.788,2760,2.655,2763,2.788,2767,2.655,2778,2.542,2805,4.096,2878,3.9,2882,3.9,2927,2.948,2928,2.788,3027,3.733,3033,2.788,3109,5.946,3132,3.416,3195,2.442,3294,2.948,3297,4.854,3325,2.948,3327,2.948,3437,3.148,3445,2.788,3470,2.655,3473,4.33,3612,2.788,3661,2.655,3666,5.699,3753,2.948,3764,3.148,3943,3.148,3981,2.948,4093,2.948,4208,3.148,4246,2.948,4339,2.788,4351,2.655,4352,2.948,4356,4.876,4369,2.788,4371,2.655,4378,2.948,4461,2.948,4465,4.624,4490,6.299,4497,2.948,4502,3.148,4544,2.655,4628,4.096,4693,2.788,4732,4.096,4741,4.096,4799,2.788,4932,3.148,4954,2.948,4973,3.416,4985,2.655,5020,3.148,5033,2.948,5043,5.017,5044,2.948,5059,3.148,5109,3.148,5150,2.655,5241,3.148,5289,2.948,5313,3.148,5340,3.416,5344,4.33,5345,3.416,5392,6.025,5475,3.416,5480,3.416,5500,3.416,5536,3.416,5560,3.148,5597,3.148,5602,5.017,5618,5.017,5666,2.948,5679,3.416,5683,3.416,5695,3.416,5696,3.822,5697,3.822,5698,3.822,5699,3.822,5700,3.822,5701,3.822,5702,3.822,5703,3.822,5704,5.614,5705,3.822,5706,3.822,5707,3.822,5708,3.822,5709,3.822,5710,3.822,5711,3.822,5712,3.822,5713,3.822,5714,3.822,5715,3.822,5716,3.822,5717,3.822,5718,3.822,5719,3.416,5720,3.822,5721,3.822,5722,3.416,5723,3.822,5724,3.416,5725,3.822,5726,3.822,5727,3.822,5728,3.822,5729,3.822,5730,3.822,5731,3.822,5732,5.017,5733,3.822,5734,3.822,5735,3.822,5736,3.822,5737,3.822,5738,3.822,5739,3.822,5740,3.822,5741,3.822,5742,3.822,5743,3.822,5744,3.822,5745,3.822,5746,3.822,5747,3.822,5748,3.822,5749,3.822,5750,3.822,5751,3.822,5752,3.822,5753,3.822,5754,3.822,5755,3.822,5756,3.822,5757,3.822,5758,3.822,5759,3.822,5760,3.822,5761,5.614,5762,3.822,5763,3.148,5764,3.822,5765,3.416,5766,3.822,5767,3.822,5768,3.822,5769,3.822,5770,3.148]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[391,2.074,972,1.524,2036,1.692,4985,2.167,5338,2.568]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.193,18,1.037,24,0.006,25,0.387,26,0.326,32,2.256,39,1.025,51,0.302,61,0.103,64,2.881,75,2.212,80,0.004,81,0.004,87,3.303,88,2.759,89,2.671,90,1.698,95,4.479,98,1.959,113,3.82,114,3.15,115,4.021,116,3.923,124,3.084,125,2.671,127,4.567,145,0.595,169,2.517,184,3.15,209,1.022,212,1.456,225,2.759,238,4.734,267,3.82,270,2.516,272,4.139,274,2.856,334,2.591,336,5.007,337,3.222,338,3.835,339,2.963,373,3.15,376,3.229,386,4.119,389,3.084,391,4.287,395,2.759,397,5.325,403,3.577,440,4.287,550,2.963,602,1.698,653,3.969,789,2.323,923,2.383,936,5.249,942,5.021,956,4.144,957,3.969,958,2.963,959,3.383,967,3.82,971,2.759,972,3.15,973,4.563,1031,2.447,1033,3.222,1065,3.084,1093,2.516,1124,4.927,1125,6.059,1155,4.287,1158,3.82,1217,3.835,1266,4.287,1271,4.144,1272,3.82,1274,4.144,1278,4.144,1280,4.144,1281,4.144,1297,3.313,1389,2.759,1406,3.383,1459,3.313,1463,2.671,1475,3.577,1570,3.084,1572,4.144,1575,3.084,1582,4.703,1584,4.119,1746,5.309,1839,4.144,1998,4.144,2193,3.383,2213,2.591,2752,3.82,2808,3.383,2823,3.577,3026,2.963,3034,3.222,3195,2.963,3429,3.577,3672,4.144,3857,5.309,4350,3.383,4381,3.82,4418,3.084,4584,4.144,4707,4.144,4985,3.222,5303,4.144,5338,5.309,5453,3.82,5496,4.144,5603,3.82,5628,4.144,5631,3.82,5666,3.577,5693,4.144,5770,3.82,5771,4.637,5772,8.008,5773,4.637,5774,4.637,5775,8.008,5776,4.144,5777,4.637,5778,4.637,5779,7.41,5780,4.637,5781,4.637,5782,4.637,5783,4.637,5784,6.446,5785,4.637,5786,4.637,5787,4.637,5788,4.637,5789,4.144,5790,4.637,5791,6.446,5792,4.637,5793,4.637,5794,4.637,5795,4.637,5796,4.637,5797,4.637,5798,4.637,5799,4.637,5800,4.637,5801,4.637,5802,4.637,5803,4.637]],["title/additional-documentation/nestjs-application/testing.html",[869,2.549,972,2.022,2036,2.246]],["body/additional-documentation/nestjs-application/testing.html",[0,0.089,1,1.002,2,0.325,12,1.036,13,1.432,21,0.463,23,0.251,24,0.006,25,0.328,26,0.19,32,1.248,33,1.439,34,0.542,51,0.122,52,0.28,55,0.378,64,3,69,1.966,74,1.839,75,2.502,80,0.002,81,0.002,87,2.731,106,0.321,114,0.85,116,3.615,124,2.61,125,3.021,127,0.944,135,1.578,142,0.883,169,2.163,171,1.25,172,1.83,181,0.792,183,1.789,184,1.918,201,1.839,212,2.555,213,1.554,214,1.554,220,0.85,223,0.728,225,4.17,227,0.944,228,0.759,229,1.768,230,2.075,234,1.554,244,2.766,254,2.261,270,5.043,272,1.669,274,1.071,275,2.261,279,2.075,281,1.341,300,1.72,302,2.072,335,1.269,336,2.335,338,1.777,373,0.85,376,2.333,377,3.148,386,1.111,393,1.432,395,1.777,408,0.626,411,0.728,440,1.156,445,2.075,449,1.269,497,1.002,499,2.135,536,1.156,547,0.743,550,1.111,562,0.811,563,0.811,566,2.261,588,1.303,631,1.269,646,0.83,678,1.035,679,2.076,681,0.871,719,0.972,725,2.868,753,1.071,756,1.669,789,3.622,819,1.554,828,1.208,856,3.106,868,2.976,869,5.241,884,1.269,910,5.043,912,3.021,914,5.116,923,0.894,926,4.319,927,2.768,928,3.398,929,4.045,934,1.341,935,3.097,939,1.341,942,1.621,957,2.417,969,1.777,970,2.669,971,3.645,973,1.071,1010,1.269,1014,0.944,1028,1.156,1030,0.972,1031,2.072,1043,1.986,1056,1.208,1063,1.908,1065,4.299,1071,1.839,1077,1.208,1093,3.924,1094,1.269,1098,2.304,1119,1.156,1125,1.156,1136,4.698,1153,1.269,1155,3.807,1156,2.976,1171,2.304,1192,1.071,1194,1.432,1199,1.208,1211,1.269,1215,1.554,1239,1.111,1240,0.918,1254,1.035,1255,1.72,1265,1.341,1266,1.156,1297,2.393,1328,1.002,1364,1.111,1379,3.12,1386,1.432,1389,1.777,1391,2.075,1452,1.341,1459,2.695,1463,1.002,1573,1.341,1574,1.554,1575,1.156,1576,1.111,1577,1.554,1578,3.398,1582,1.269,1584,2.508,1633,2.304,1635,2.075,1646,1.554,1648,1.156,1659,1.208,1661,1.208,1669,4.176,1672,2.46,1674,1.269,1675,1.554,1693,1.269,1694,2.075,1698,2.304,1700,1.156,1705,1.554,1710,1.432,1715,1.111,1717,1.208,1726,1.156,1728,1.111,1759,1.554,1833,2.61,1843,3.487,1844,2.61,1849,3.643,1894,1.035,1901,1.432,1919,0.972,1940,3.236,1947,2.727,1948,3.021,1971,1.156,1987,1.432,1988,1.432,2051,1.269,2126,4.614,2207,2.075,2213,0.972,2248,1.554,2255,2.61,2257,1.432,2340,1.341,2341,1.341,2371,1.156,2393,1.111,2447,1.432,2463,4.695,2466,1.432,2534,1.341,2588,1.269,2589,1.111,2616,3.643,2623,1.432,2640,4.176,2641,1.208,2642,1.432,2735,1.432,2757,1.208,2767,1.208,2768,1.269,2778,1.156,2802,2.075,2805,2.179,2808,4.176,2814,1.432,2846,2.075,2878,3.643,2882,3.236,2923,2.304,2927,1.341,2928,1.269,2929,2.075,2932,1.554,2946,1.554,2959,2.075,2973,4.176,2989,1.554,3019,2.669,3020,3.233,3026,4.956,3027,3.487,3033,1.269,3034,2.075,3080,3.398,3127,2.669,3143,1.432,3160,4.686,3170,1.208,3180,2.46,3195,1.111,3200,5.474,3225,1.554,3247,1.341,3262,1.554,3268,1.432,3279,1.432,3294,3.028,3299,1.269,3305,1.341,3327,1.341,3365,1.554,3375,1.554,3389,1.432,3396,1.554,3445,2.179,3453,2.864,3461,1.554,3464,1.432,3469,1.432,3470,2.075,3471,1.432,3474,3.977,3503,1.554,3518,1.432,3546,2.075,3547,1.432,3589,3.233,3605,1.432,3609,2.46,3612,1.269,3614,1.554,3666,2.179,3674,1.554,3682,3.233,3755,1.432,3794,3.508,3813,1.341,3846,1.432,3857,1.432,3871,2.304,3877,1.432,3901,1.341,3908,5.474,3915,2.304,4011,1.554,4015,1.432,4041,1.554,4090,1.432,4115,1.432,4208,1.432,4276,1.554,4300,1.432,4339,4.469,4351,3.236,4352,4.045,4359,1.554,4360,1.554,4368,1.554,4371,1.208,4374,1.554,4378,1.341,4385,1.341,4403,2.179,4407,5.212,4412,1.432,4427,1.341,4440,1.432,4449,1.554,4461,2.304,4464,1.341,4468,1.554,4489,1.432,4490,3.028,4493,1.432,4502,3.233,4526,1.341,4535,1.554,4543,1.554,4544,1.208,4573,1.432,4580,1.554,4594,2.46,4602,1.432,4604,1.432,4623,1.554,4628,1.269,4632,1.554,4635,1.341,4663,1.269,4675,1.554,4688,1.554,4691,1.432,4693,1.269,4699,1.554,4741,2.179,4752,1.432,4758,1.554,4768,6.265,4809,1.432,4929,1.554,4994,1.432,4999,1.432,5000,1.554,5018,4.162,5033,1.341,5063,3.028,5067,1.554,5092,1.554,5109,1.432,5118,1.432,5144,1.554,5150,1.208,5182,1.554,5233,2.669,5241,1.432,5279,1.554,5289,4.987,5296,1.554,5314,1.554,5367,1.554,5378,1.554,5386,2.669,5392,5.407,5397,1.432,5400,1.554,5407,1.432,5415,1.432,5418,4.162,5453,1.432,5557,1.341,5560,3.233,5595,2.669,5597,3.836,5598,1.554,5603,1.432,5625,1.554,5631,1.432,5643,1.554,5644,1.554,5666,4.045,5719,1.554,5722,2.669,5724,1.554,5732,1.554,5765,1.554,5770,2.46,5776,1.554,5789,1.554,5804,2.987,5805,1.739,5806,1.739,5807,1.739,5808,1.739,5809,1.739,5810,1.739,5811,1.739,5812,1.739,5813,1.739,5814,1.739,5815,1.739,5816,1.739,5817,1.739,5818,2.987,5819,1.739,5820,1.739,5821,1.739,5822,1.739,5823,1.739,5824,1.739,5825,1.739,5826,1.739,5827,1.739,5828,1.739,5829,1.739,5830,1.739,5831,1.739,5832,1.739,5833,1.739,5834,1.739,5835,1.739,5836,1.739,5837,1.739,5838,1.739,5839,1.739,5840,1.739,5841,1.739,5842,1.739,5843,1.739,5844,1.739,5845,1.739,5846,1.554,5847,3.926,5848,1.739,5849,3.926,5850,2.987,5851,5.244,5852,2.987,5853,3.926,5854,4.657,5855,1.739,5856,1.739,5857,2.987,5858,1.739,5859,1.739,5860,1.739,5861,1.739,5862,1.739,5863,1.739,5864,1.739,5865,1.739,5866,5.725,5867,1.739,5868,1.739,5869,1.739,5870,1.739,5871,1.739,5872,1.739,5873,1.739,5874,1.739,5875,1.739,5876,1.739,5877,1.739,5878,1.739,5879,2.987,5880,1.739,5881,2.987,5882,1.739,5883,1.739,5884,1.739,5885,2.987,5886,1.739,5887,1.739,5888,3.926,5889,2.987,5890,2.987,5891,1.739,5892,1.739,5893,4.657,5894,1.739,5895,1.739,5896,1.739,5897,1.739,5898,1.739,5899,1.739,5900,1.739,5901,2.987,5902,2.987,5903,1.739,5904,2.987,5905,1.739,5906,1.739,5907,1.739,5908,1.739,5909,1.739,5910,2.987,5911,2.987,5912,1.739,5913,1.739,5914,2.987,5915,1.739,5916,1.739,5917,2.987,5918,1.739,5919,1.739,5920,1.739,5921,1.739,5922,1.739,5923,1.739,5924,2.987,5925,4.657,5926,1.739,5927,1.739,5928,1.739,5929,1.739,5930,1.739,5931,1.739,5932,2.987,5933,1.739,5934,1.739,5935,1.739,5936,1.739,5937,1.739,5938,1.739,5939,1.739,5940,1.739,5941,1.739,5942,1.739,5943,1.739,5944,2.987,5945,1.739,5946,1.739,5947,1.739,5948,1.739,5949,1.739,5950,1.739,5951,1.739,5952,1.739,5953,1.739,5954,1.739,5955,1.739,5956,1.739,5957,1.739,5958,1.739,5959,1.739,5960,1.739,5961,1.739,5962,1.739,5963,1.739,5964,1.739,5965,1.739,5966,1.739,5967,1.739,5968,1.739,5969,1.739,5970,1.739,5971,1.739,5972,1.739,5973,1.739,5974,1.739,5975,1.739,5976,1.739,5977,1.739]],["title/additional-documentation/nestjs-application/decisions.html",[972,2.022,2036,2.246,5763,3.409]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.475,16,1.248,24,0.005,29,1.659,52,1.011,54,2.742,55,1.364,64,3.098,69,3.948,80,0.004,81,0.004,114,3.071,269,4.18,280,4.016,339,4.016,373,3.071,564,3.76,588,2.742,719,3.511,756,4.404,789,3.148,871,4.016,922,4.848,923,3.23,927,3.317,1031,3.317,1035,5.477,1036,4.367,1063,4.016,1093,3.411,1196,4.016,1407,5.727,1459,3.23,1463,3.62,1583,5.617,1648,5.727,1669,4.585,1891,6.493,1894,3.739,1940,5.477,2336,5.751,2467,5.751,2616,4.367,2760,4.367,2783,6.643,3026,4.016,3099,5.177,3170,4.367,3253,5.177,3274,4.585,3352,5.617,3427,5.177,3555,5.617,3607,4.367,3661,4.367,3748,5.617,3938,5.617,4350,4.585,4356,4.18,4544,4.367,4969,5.177,5044,4.848,5407,5.177,5557,4.848,5588,5.617,5763,6.493,5846,5.617,5978,6.285,5979,6.285,5980,6.285,5981,6.285,5982,6.285,5983,6.285,5984,6.285,5985,6.285,5986,6.285,5987,7.883,5988,6.285,5989,6.285,5990,6.285,5991,6.285,5992,6.285,5993,6.285,5994,6.285,5995,6.285,5996,6.285,5997,6.285,5998,6.285,5999,6.285,6000,6.285]],["title/additional-documentation/nestjs-application/vscode.html",[972,2.022,2036,2.246,4354,3.192]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.134,24,0.005,65,3.905,74,4.274,75,3.997,80,0.005,81,0.005,270,4.546,354,4.822,373,4.094,391,4.615,756,3.877,910,3.766,1041,4.306,1083,5.159,1459,3.566,2583,6.202,2641,4.822,2670,5.063,2927,5.353,2959,5.821,3018,5.353,3026,4.434,3061,5.716,3070,5.063,3237,5.063,3402,5.353,3470,4.822,3653,6.901,4354,6.463,4387,7.488,4418,4.615,4589,5.063,4695,6.202,5036,8.043,5061,6.202,5150,4.822,5188,5.716,5321,6.202,5323,6.202,6001,6.94,6002,6.94,6003,6.94,6004,6.94,6005,6.94,6006,6.94,6007,6.94,6008,6.94,6009,6.94]],["title/additional-documentation/nestjs-application/git.html",[972,2.022,2036,2.246,4355,3.409]],["body/additional-documentation/nestjs-application/git.html",[24,0.005,80,0.005,81,0.005,399,4.553,563,3.567,1297,3.933,1389,4.553,2213,4.275,2229,5.317,4016,5.903,4109,7.312,4355,7.724,4367,6.839,5473,6.839,6010,7.653,6011,7.653,6012,7.653,6013,7.653]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":885,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4264,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4301,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4312,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4227,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":4218,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4226,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4291,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4324,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4316,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4284,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4269,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4275,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4315,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4211,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4278,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4267,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4117,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4138,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":4157,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":4162,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":4136,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":4151,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":4128,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":4140,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":4164,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4120,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4116,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":4141,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4135,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4149,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4137,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":4139,"title":{},"body":{"coverage.html":{}}}],["0000d213816abba584714c0a",{"_index":880,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["0000d224816abba584714c9c",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":3096,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3092,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3089,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3040,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2941,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2817,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1379,"title":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}},"body":{"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4292,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4304,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4251,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4238,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4287,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":5901,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4248,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4331,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4302,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4222,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4191,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":5902,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4219,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":3670,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4254,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4192,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4231,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4119,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":4160,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":4174,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":4127,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":4126,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":4152,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":4158,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":4150,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":4161,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2034,"title":{},"body":{"classes/PaginationQuery.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":4118,"title":{},"body":{"coverage.html":{}}}],["106",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3078,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["110",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4294,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":2822,"title":{},"body":{"changelog.html":{}}}],["121",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":2873,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3207,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2912,"title":{},"body":{"changelog.html":{}}}],["1499",{"_index":3121,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":3074,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":3150,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5252,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3065,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4249,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3233,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":2782,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2904,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3191,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":4651,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":725,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4252,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4266,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4288,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4311,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4215,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4234,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4217,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":4124,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":4163,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2985,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":4424,"title":{},"body":{"license.html":{}}}],["2020",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2975,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["213",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3053,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["22.10.0",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":3982,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":4077,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2972,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":3962,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":3940,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":2797,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":2800,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3058,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":3872,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":3842,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":3824,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":3803,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":3801,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":3789,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":3778,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":3097,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":3059,"title":{},"body":{"changelog.html":{}}}],["247",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":2914,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3227,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":3739,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":3765,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":3763,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":3761,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":3756,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":3749,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":3683,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":3703,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":3700,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":3697,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":3624,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":3337,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":3334,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3241,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3236,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":3295,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":3001,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":3006,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3264,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26.0",{"_index":3238,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3242,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3240,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3208,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3206,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":3201,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":3198,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":3193,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":3190,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":3184,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3239,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3232,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3226,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3224,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3220,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3218,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3212,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3211,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":3173,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":2815,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":3095,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":3091,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":3088,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":3085,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":3082,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":3077,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":3073,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":3069,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":3067,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":3064,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":3062,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":3057,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":3052,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":3051,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":3045,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":3039,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":2984,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":2983,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":2978,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":2974,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":2971,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":2940,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":2935,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":2934,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":2911,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":2903,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["26.9.3",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2891,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":3923,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2942,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"overview.html":{}}}],["29",{"_index":3046,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":4089,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":5094,"title":{},"body":{"todo.html":{}}}],["3",{"_index":3294,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4298,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4306,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4295,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4286,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4329,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4209,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4307,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":4159,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":4148,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3221,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5311,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5305,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3213,"title":{},"body":{"changelog.html":{}}}],["318",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":4125,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":4003,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":2860,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":4099,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":3871,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4224,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4320,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4244,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4261,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":4194,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4228,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4186,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4193,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4245,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":4202,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5245,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4/18",{"_index":4155,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":4173,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":4146,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":5105,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":3971,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":5801,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1158,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":3920,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["43",{"_index":5058,"title":{},"body":{"overview.html":{}}}],["4385",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":3883,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":884,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4213,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4214,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4247,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4290,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4268,"title":{},"body":{"dependencies.html":{}}}],["5/19",{"_index":4156,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4154,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":4123,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":5792,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":3946,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":3157,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":3844,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5256,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5251,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":3891,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":4145,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":3143,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4233,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4204,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3188,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":4308,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4296,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4147,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["60000",{"_index":2115,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":3021,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":3825,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":3651,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":4172,"title":{},"body":{"coverage.html":{}}}],["6637",{"_index":3793,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":3772,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":3799,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":3725,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":2777,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6809",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":3141,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":3762,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":3659,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":5087,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":4728,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4747,"title":{},"body":{"license.html":{}}}],["7",{"_index":2470,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["7.0.0",{"_index":4235,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":4200,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":4197,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4243,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":4196,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":4195,"title":{},"body":{"dependencies.html":{}}}],["7.6.17",{"_index":4199,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":3155,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":3694,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":3498,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":3679,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":3112,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":3110,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":3149,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":4327,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":3189,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4206,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4256,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5203,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5281,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":3103,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["83",{"_index":4153,"title":{},"body":{"coverage.html":{}}}],["8300",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":3106,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":3108,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":3342,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":3134,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":3012,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":3310,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":3154,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":3335,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3248,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":3145,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3214,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":3168,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":3177,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":3185,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3219,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":3164,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3228,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3222,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":3115,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":3182,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":3010,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":3086,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3209,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":3192,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":3174,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":3199,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3202,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":3166,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":3194,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":2996,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":3118,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2791,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["9003",{"_index":2987,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":3079,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":2986,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":3075,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":2965,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":3136,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":3131,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":2976,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":2991,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":3093,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":2907,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":3083,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":3068,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":3054,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":2947,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":3063,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":2999,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":3048,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":3056,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":2954,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":3008,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":2905,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":3029,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":3037,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":2949,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":2963,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":2943,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":2957,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5274,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":2916,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":2936,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":2919,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":3041,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2039,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":4394,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":662,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1109,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1133,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1147,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":5599,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1134,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1149,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5287,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":14,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":603,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":2643,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.createdat",{"_index":2278,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["a.m",{"_index":4415,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":5842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":4787,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":4413,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":4673,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":5027,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":334,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":5524,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":454,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":4864,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4863,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5075,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":4019,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":912,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":5585,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":525,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":3606,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":3619,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":2146,"title":{},"body":{"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":4712,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5031,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":4495,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4672,"title":{},"body":{"license.html":{}}}],["according",{"_index":3100,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1,"title":{"classes/Account.html":{}},"body":{"classes/Account.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1239,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":60,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["accumulator",{"_index":2171,"title":{},"body":{"classes/Scope.html":{}}}],["accumulator.push(queryelement",{"_index":2176,"title":{},"body":{"classes/Scope.html":{}}}],["achieve",{"_index":5034,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":4614,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4911,"title":{},"body":{"license.html":{}}}],["act",{"_index":5841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1069,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":3061,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":1462,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{}}}],["activities",{"_index":4537,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4950,"title":{},"body":{"license.html":{}}}],["actors",{"_index":5704,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":4932,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":4767,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":4517,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":5390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2213,"title":{},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1473,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["addid",{"_index":1508,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["addid(entity",{"_index":1531,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["adding",{"_index":450,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":972,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4381,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5267,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":605,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":610,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["address",{"_index":4984,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":4513,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3628,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2856,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addstatustotask",{"_index":2261,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["addstatustotask(task",{"_index":2265,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["addtokentowhitelist",{"_index":1483,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":1489,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":1466,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":1468,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":3169,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":5729,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2918,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2842,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2956,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":3176,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":4649,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4793,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5019,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4794,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4422,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4892,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4611,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":2483,"title":{},"body":{"classes/TaskScope.html":{}}}],["afterduedateornone(duedate",{"_index":2487,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":5836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":5834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":3865,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":4663,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":5503,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":4699,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":5406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":5387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":5588,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":5051,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4967,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5006,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":5701,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":4920,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4205,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3205,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":1421,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5124,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":5383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":4899,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2927,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":2767,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2670,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":5832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":4675,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":354,"title":{},"body":{"classes/BusinessError.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":4478,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4724,"title":{},"body":{"license.html":{}}}],["always",{"_index":5407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":3181,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqp",{"_index":4207,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":1623,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4210,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5303,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4323,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":4865,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":5856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":4471,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":5608,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":5591,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":5379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ansible",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":4637,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2920,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":4685,"title":{},"body":{"license.html":{}}}],["anything",{"_index":4525,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":5657,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":114,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4361,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4362,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":4366,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":113,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":670,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":767,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1923,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1921,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":671,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1916,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1913,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":5355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1724,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('news",{"_index":1733,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":2358,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":2696,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":82,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1219,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":138,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":120,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{}}}],["apivalidationerrorresponse(error",{"_index":1138,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1156,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":403,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":402,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":400,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":401,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":4043,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5122,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":146,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["applicable",{"_index":4530,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5276,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":75,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4350,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":5671,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":4989,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1387,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":5369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":4377,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":4668,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5026,"title":{},"body":{"license.html":{}}}],["apps",{"_index":2922,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5139,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5127,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":5159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5128,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../database.config.ts",{"_index":5167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":5163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5129,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5131,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../find",{"_index":4336,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4341,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5136,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5138,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4335,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5135,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role.entity.ts",{"_index":5132,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../scope.ts",{"_index":4342,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":5158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":5157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.uc.ts",{"_index":4337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../taskdomainservice.ts",{"_index":5134,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../testhelper.ts",{"_index":4334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":5126,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5141,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5262,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5315,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5320,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":1086,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console",{"_index":364,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["apps/server/src/console/console.ts",{"_index":4121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/server",{"_index":2208,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2188,"title":{},"body":{"classes/ServerConsole.html":{},"coverage.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2194,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2197,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2191,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":388,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":121,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":963,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":965,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":2748,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":955,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":1095,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":1249,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":1021,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":4131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":1385,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":1264,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":1275,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":1273,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":1279,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":1270,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":1277,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":1591,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":1566,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1189,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":2753,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts",{"_index":409,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:28",{"_index":426,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:31",{"_index":424,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:35",{"_index":428,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:39",{"_index":430,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:43",{"_index":433,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:47",{"_index":432,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:51",{"_index":419,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:66",{"_index":436,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/course.entity.ts:71",{"_index":434,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts",{"_index":620,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:13",{"_index":626,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:16",{"_index":624,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:26",{"_index":629,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/coursegroup.entity.ts:31",{"_index":627,"title":{},"body":{"classes/Coursegroup.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts",{"_index":700,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:16",{"_index":898,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:18",{"_index":899,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:20",{"_index":897,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:28",{"_index":900,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:47",{"_index":1220,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:56",{"_index":1221,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:58",{"_index":1222,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:60",{"_index":1223,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:62",{"_index":1224,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:66",{"_index":1226,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:70",{"_index":1225,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:78",{"_index":708,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:80",{"_index":706,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:88",{"_index":710,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/dashboard.entity.ts:92",{"_index":709,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts",{"_index":1497,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:26",{"_index":1523,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:36",{"_index":1527,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:40",{"_index":1529,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:44",{"_index":1528,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/learnroom/testhelper.ts:48",{"_index":1525,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["apps/server/src/entities/user.entity.ts",{"_index":1368,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"coverage.html":{}}}],["apps/server/src/entities/user.entity.ts:16",{"_index":2678,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:19",{"_index":2679,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:22",{"_index":2680,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/entities/user.entity.ts:26",{"_index":2676,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/main.ts",{"_index":4142,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":1399,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":4143,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":1395,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":1426,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":1464,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":1429,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":1432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":1434,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":203,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":211,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":232,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":224,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":235,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":217,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":976,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":1634,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/types.ts",{"_index":5143,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":1039,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":1027,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/lernroom/controller/dashboard.controller.ts",{"_index":682,"title":{},"body":{"controllers/DashboardController.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/controller/dashboard.controller.ts:15",{"_index":686,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts",{"_index":764,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:13",{"_index":773,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:18",{"_index":772,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:23",{"_index":769,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:28",{"_index":775,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:33",{"_index":776,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:41",{"_index":887,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:46",{"_index":886,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:8",{"_index":770,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/lernroom/lernroom.module.ts",{"_index":1493,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts",{"_index":778,"title":{},"body":{"classes/DashboardMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts:5",{"_index":781,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts",{"_index":888,"title":{},"body":{"injectables/DashboardUc.html":{},"coverage.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:6",{"_index":890,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:9",{"_index":891,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":148,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":1594,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":1598,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":1620,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":1625,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":1627,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":644,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1755,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1899,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:16",{"_index":1906,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:21",{"_index":1925,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:26",{"_index":1900,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:31",{"_index":1905,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:38",{"_index":1915,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:43",{"_index":1917,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:50",{"_index":1924,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":1922,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":1920,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":1911,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:71",{"_index":1904,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:76",{"_index":1928,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:81",{"_index":1902,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:86",{"_index":1926,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":1908,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2140,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":2320,"title":{},"body":{"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":2667,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":2715,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1692,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":1699,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":1709,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":1713,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":1721,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":1704,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":2573,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":493,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":498,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1688,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1679,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1681,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1682,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1684,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1685,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:50",{"_index":1686,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:54",{"_index":1687,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:57",{"_index":1683,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:60",{"_index":1680,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:63",{"_index":1689,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:65",{"_index":1678,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:75",{"_index":1690,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":1228,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":2132,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":2571,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":2708,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1773,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:30",{"_index":1780,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:44",{"_index":1778,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:57",{"_index":1784,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":1782,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2133,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":2315,"title":{},"body":{"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":2710,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1834,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1931,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1850,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:13",{"_index":1873,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:21",{"_index":1856,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:34",{"_index":1863,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:41",{"_index":1858,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1954,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:110",{"_index":1984,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1961,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:134",{"_index":1965,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:145",{"_index":1976,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:165",{"_index":1982,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:183",{"_index":1975,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:193",{"_index":1978,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1963,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:55",{"_index":1967,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:86",{"_index":1973,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":2471,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":2477,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":2474,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":2476,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":2478,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":2475,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":2481,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":2480,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":2479,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":2350,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":2352,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts",{"_index":2260,"title":{},"body":{"classes/StatusDomainService.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:10",{"_index":2268,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:18",{"_index":2270,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:29",{"_index":2266,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/statusdomainservice.ts:4",{"_index":2264,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["apps/server/src/modules/task/domain/taskdomainservice.ts",{"_index":5152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/entity/course",{"_index":477,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/file",{"_index":1079,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson",{"_index":1557,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1323,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:23",{"_index":2296,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:26",{"_index":2294,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:29",{"_index":2290,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:32",{"_index":2297,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:36",{"_index":2288,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:39",{"_index":2295,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:43",{"_index":2291,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:46",{"_index":2292,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:49",{"_index":2293,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:51",{"_index":2298,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:57",{"_index":2287,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task",{"_index":1358,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1283,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:26",{"_index":1356,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:27",{"_index":1354,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:28",{"_index":1355,"title":{},"body":{"interfaces/ITaskParent.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:34",{"_index":2324,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:37",{"_index":2322,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:40",{"_index":2326,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:43",{"_index":2325,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:46",{"_index":2323,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:49",{"_index":2321,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/user",{"_index":1384,"title":{},"body":{"interfaces/IUserTaskInfoProperties.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":2366,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":2369,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2300,"title":{},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2303,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:16",{"_index":2307,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:24",{"_index":2309,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:29",{"_index":2305,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":2482,"title":{},"body":{"classes/TaskScope.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":2429,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":2434,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:22",{"_index":2436,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:41",{"_index":2441,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:55",{"_index":2443,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:66",{"_index":2445,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:74",{"_index":2446,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":2391,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":2328,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":2331,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":2334,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":2509,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:14",{"_index":2514,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:18",{"_index":2519,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:32",{"_index":2520,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:45",{"_index":2521,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:58",{"_index":2524,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:63",{"_index":2516,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:73",{"_index":2518,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts",{"_index":2396,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:10",{"_index":2400,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:12",{"_index":2398,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:19",{"_index":2403,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:24",{"_index":2401,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:32",{"_index":2402,"title":{},"body":{"classes/TaskParentTestEntity.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:48",{"_index":2507,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:54",{"_index":2506,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:64",{"_index":2502,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:74",{"_index":2504,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:81",{"_index":2508,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/task/utils/testhelper.ts:87",{"_index":2505,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":2071,"title":{},"body":{"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":2075,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":2074,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":2072,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":2079,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":2077,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":2076,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":2078,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":2073,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":2690,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":2693,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts",{"_index":6,"title":{},"body":{"classes/Account.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:17",{"_index":40,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:24",{"_index":38,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:27",{"_index":31,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/account.entity.ts:9",{"_index":22,"title":{},"body":{"classes/Account.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts",{"_index":1310,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:20",{"_index":2100,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:24",{"_index":2101,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/role.entity.ts:34",{"_index":2097,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts",{"_index":1380,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:18",{"_index":2684,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:21",{"_index":2685,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:24",{"_index":2686,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:30",{"_index":2688,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/entity/user.entity.ts:36",{"_index":2683,"title":{},"body":{"classes/User-1.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":2081,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":2083,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2103,"title":{},"body":{"injectables/RoleRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:12",{"_index":2112,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:17",{"_index":2110,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:22",{"_index":2114,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:8",{"_index":2108,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":2724,"title":{},"body":{"injectables/UserRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:10",{"_index":2726,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:7",{"_index":2725,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2120,"title":{},"body":{"injectables/RoleUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":2125,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":2123,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":2729,"title":{},"body":{"injectables/UserUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:12",{"_index":2734,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:9",{"_index":2732,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":2700,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":2703,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":2705,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":2722,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":4165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":575,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:23",{"_index":579,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:26",{"_index":581,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:33",{"_index":583,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:39",{"_index":585,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:9",{"_index":609,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":634,"title":{},"body":{"injectables/CoursegroupRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:11",{"_index":638,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:8",{"_index":636,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts",{"_index":739,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14",{"_index":903,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17",{"_index":902,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21",{"_index":740,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:29",{"_index":747,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:32",{"_index":748,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36",{"_index":746,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:39",{"_index":744,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43",{"_index":805,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:51",{"_index":806,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6",{"_index":901,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts",{"_index":808,"title":{},"body":{"classes/DashboardModelMapper.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:11",{"_index":813,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:25",{"_index":815,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:36",{"_index":818,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":855,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:14",{"_index":1248,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:18",{"_index":859,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:21",{"_index":861,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:28",{"_index":865,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:34",{"_index":863,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:40",{"_index":864,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2215,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2216,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2220,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/$1",{"_index":5212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":83,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":333,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":345,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":348,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":347,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":346,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":343,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":349,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":350,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":2744,"title":{},"body":{"classes/ValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":2746,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":4167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":931,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":905,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":2638,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":2648,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":2646,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":2645,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":2650,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":2652,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":2033,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":2040,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":2043,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":2050,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":2054,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":2057,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":2056,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":2055,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":2053,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":2062,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":4168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4170,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":260,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":262,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":284,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":286,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":285,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":287,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":261,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":1252,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1238,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/test/helper.ts",{"_index":2586,"title":{},"body":{"classes/TestHelper.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:11",{"_index":2587,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:27",{"_index":2603,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:29",{"_index":2602,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:31",{"_index":2601,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:36",{"_index":2600,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:42",{"_index":2599,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:65",{"_index":2604,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:7",{"_index":2597,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:70",{"_index":2605,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:74",{"_index":2607,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:78",{"_index":2606,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:82",{"_index":2598,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:9",{"_index":2596,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/test/helper.ts:90",{"_index":2608,"title":{},"body":{"classes/TestHelper.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5147,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5153,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":289,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":312,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":308,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":310,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":314,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":321,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":317,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":319,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":303,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":301,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":306,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":4175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2145,"title":{},"body":{"classes/Scope.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:57",{"_index":2147,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:59",{"_index":2151,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:67",{"_index":2148,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:71",{"_index":2149,"title":{},"body":{"classes/Scope.html":{}}}],["appthis",{"_index":4363,"title":{},"body":{"index.html":{}}}],["arc",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4356,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":5669,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5046,"title":{},"body":{"license.html":{}}}],["archives",{"_index":5718,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":5838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":5731,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4212,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2196,"title":{},"body":{"classes/ServerConsole.html":{},"dependencies.html":{}}}],["argument",{"_index":5886,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1104,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":5363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5010,"title":{},"body":{"license.html":{}}}],["around",{"_index":5059,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":4929,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":4940,"title":{},"body":{"license.html":{}}}],["array",{"_index":1316,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":839,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.isarray(constraint",{"_index":141,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(input",{"_index":2164,"title":{},"body":{"classes/Scope.html":{}}}],["array.isarray(user.permissions",{"_index":1003,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrayofobjects",{"_index":618,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["arrayofobjects.length",{"_index":2185,"title":{},"body":{"classes/Scope.html":{}}}],["arrayofquerys",{"_index":2179,"title":{},"body":{"classes/Scope.html":{}}}],["arrays",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":4646,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1261,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["asking",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":5497,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":5376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":4468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":4882,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":5643,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":3309,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":4595,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5002,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":5682,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5030,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4832,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":212,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":3674,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":5568,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":5472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5036,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":156,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":159,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":4842,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2828,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":4816,"title":{},"body":{"license.html":{}}}],["aud",{"_index":1411,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":1419,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":5563,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":5073,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":1396,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":208,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":977,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":985,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":993,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":995,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":989,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":987,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":991,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":1403,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":1424,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":1423,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":689,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":694,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1244,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":5573,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2846,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":690,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authguard",{"_index":1397,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":1398,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":170,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4815,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2534,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":206,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1838,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1985,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":195,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":201,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":4809,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":4906,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":4944,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4821,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5300,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":3003,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":5804,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":3125,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":3870,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":3196,"title":{},"body":{"changelog.html":{}}}],["avaible",{"_index":2612,"title":{},"body":{"classes/TestHelper.html":{}}}],["availability",{"_index":5809,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1071,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":3019,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":5347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":244,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":5857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":4446,"title":{},"body":{"license.html":{}}}],["aws",{"_index":4092,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3552,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":1314,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/StatusDomainService.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":2910,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":5389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1848,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":5741,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":2067,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":2070,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["bar",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":335,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":4326,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":151,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":1032,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":259,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseInfo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/SchoolInfo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TestHelper.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":496,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentity:7",{"_index":495,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["baseentitywithtimestamps",{"_index":8,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":44,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:22",{"_index":47,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:25",{"_index":45,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baseentitywithtimestamps:28",{"_index":50,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["baserepo",{"_index":288,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"coverage.html":{}}}],["baserepo:14",{"_index":1868,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:19",{"_index":1866,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:27",{"_index":1867,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:36",{"_index":1869,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:40",{"_index":1872,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:44",{"_index":1870,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:48",{"_index":1871,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:53",{"_index":1864,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["baserepo:9",{"_index":1865,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["basic",{"_index":4604,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":5534,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":5533,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":5539,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":3331,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":167,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4220,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":4480,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":4491,"title":{},"body":{"license.html":{}}}],["before",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":5900,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":5888,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5277,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":4395,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":4624,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":393,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":2642,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":3605,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":4938,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":5372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":5449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":4632,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":4474,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":5522,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5150,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5033,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":1657,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"classes/TestHelper.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":3080,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":4701,"title":{},"body":{"license.html":{}}}],["bind",{"_index":3855,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2888,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":5541,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":5813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":5820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":5717,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1722,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4318,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":630,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4171,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":4346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":4122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":5180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":5887,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["boss",{"_index":2901,"title":{},"body":{"changelog.html":{}}}],["bosscloud",{"_index":2875,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":3664,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":5880,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":2854,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":3004,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":3139,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":3055,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":5712,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":5520,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":5055,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5053,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["btw",{"_index":282,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":5551,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":5431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1121,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["buildandaddorquery",{"_index":606,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["buildandaddorquery(arrayofobjects",{"_index":613,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["building",{"_index":3172,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":3098,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5279,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":3104,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":3187,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":5459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5065,"title":{},"body":{"todo.html":{}}}],["business",{"_index":336,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":111,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":85,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":99,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":104,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":103,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":102,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":101,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":105,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":107,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":5791,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":3809,"title":{},"body":{"changelog.html":{}}}],["bylessonsornone",{"_index":2484,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonsornone(lessonids",{"_index":2489,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparentids",{"_index":2485,"title":{},"body":{"classes/TaskScope.html":{}}}],["byparentids(parentids",{"_index":2492,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypublic",{"_index":2486,"title":{},"body":{"classes/TaskScope.html":{}}}],["bytargets",{"_index":1933,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1935,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1934,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1937,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2301,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2304,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1315,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":2104,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":5429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":3748,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":5579,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":935,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1675,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":2878,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":5507,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":940,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1154,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":3445,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":5642,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":5417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5283,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":5491,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":3470,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":5545,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":5765,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":5796,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":4679,"title":{},"body":{"license.html":{}}}],["case",{"_index":971,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4490,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1098,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1102,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":5553,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":2657,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":2660,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":5555,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":5370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":5393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3266,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":1579,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":166,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":4846,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1229,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":4806,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4856,"title":{},"body":{"license.html":{}}}],["chain",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":3020,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4223,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":5530,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":2768,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1571,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":2758,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":2760,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":2798,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":3076,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":5583,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":4784,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4458,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3230,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":5440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":275,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":2969,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":5499,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":213,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":218,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1194,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":4405,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":4410,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":3813,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":5756,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":4370,"title":{},"body":{"index.html":{}}}],["children",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":3877,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":4992,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":5504,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4297,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":3122,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":4630,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4638,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5029,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4896,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4908,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":1023,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":1390,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3666,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":449,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":4735,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":5770,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5316,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":339,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":5453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":1654,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":4411,"title":{},"body":{"index.html":{}}}],["close",{"_index":1672,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":5025,"title":{},"body":{"license.html":{}}}],["closing",{"_index":3461,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4348,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3025,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":4088,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2226,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4273,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4259,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5085,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":196,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":197,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":199,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":198,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":382,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":383,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":1024,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":1025,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":1026,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":1491,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":1492,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1588,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1589,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1590,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1829,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1832,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1830,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1831,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2204,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2205,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_providers",{"_index":2206,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":2217,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2218,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":2388,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":2389,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2718,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2720,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2719,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":5547,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":3781,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":87,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":3794,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1204,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":5359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":4969,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":54,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User-1.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":35,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User-1.html":{}}}],["collections",{"_index":3072,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":410,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"miscellaneous/variables.html":{}}}],["columnnames",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":4979,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":4696,"title":{},"body":{"license.html":{}}}],["come",{"_index":4485,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4686,"title":{},"body":{"license.html":{}}}],["command",{"_index":2199,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":2192,"title":{},"body":{"classes/ServerConsole.html":{}}}],["commander",{"_index":4229,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":4558,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":1324,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["commentschema",{"_index":4030,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":4770,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3579,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":4921,"title":{},"body":{"license.html":{}}}],["committing",{"_index":4408,"title":{},"body":{"index.html":{}}}],["common",{"_index":4246,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":5399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":4600,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":4442,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":5645,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1118,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":5538,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":4692,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4700,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4953,"title":{},"body":{"license.html":{}}}],["compile",{"_index":929,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":4583,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":4404,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":5478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":1582,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":4878,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":5380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":4621,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5312,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3247,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":5435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4385,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":2953,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4230,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":2544,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":4532,"title":{},"body":{"license.html":{}}}],["computetaskstatusforstudent",{"_index":2510,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforstudent(task",{"_index":2515,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher",{"_index":2511,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher(task",{"_index":2517,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":2998,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":5602,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":4985,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":5665,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":3016,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4232,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":5824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":4947,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4502,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":5442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":2229,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":2223,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2246,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2247,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2245,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5322,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5246,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":2992,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":390,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":3885,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":5601,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":3864,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":4386,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1673,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5125,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":3114,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":5526,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":3135,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":3827,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":3011,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":4867,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5009,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2944,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":4834,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":5762,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":3431,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":5687,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":374,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console.module.ts",{"_index":2209,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolemodule",{"_index":2210,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":363,"title":{"injectables/ConsoleWriter.html":{}},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{},"overview.html":{}}}],["conspicuously",{"_index":4667,"title":{},"body":{"license.html":{}}}],["const",{"_index":135,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":4613,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":139,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":5433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":895,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject(request",{"_index":1058,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":1622,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":128,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":2190,"title":{},"body":{"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":2330,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(dashboardrepo",{"_index":889,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":2052,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":299,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":216,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":983,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":2750,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(id",{"_index":704,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(message",{"_index":2745,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":1960,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":19,"title":{},"body":{"classes/Account.html":{}}}],["constructor(private",{"_index":241,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":417,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["constructor(protected",{"_index":322,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":112,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":1074,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2122,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(submissions",{"_index":2263,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["constructor(task",{"_index":1365,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":2513,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":964,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":341,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":1430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(useridwithwritepermissions",{"_index":2397,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["constructor(userrepo",{"_index":2731,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":2702,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":94,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":4957,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4753,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":5476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":3147,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":4954,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":5352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":4400,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":1893,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":501,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":150,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":155,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":4918,"title":{},"body":{"license.html":{}}}],["context",{"_index":942,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":3426,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":4778,"title":{},"body":{"license.html":{}}}],["contract",{"_index":5351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":4831,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4963,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4449,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":4905,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4907,"title":{},"body":{"license.html":{}}}],["control",{"_index":3988,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":4910,"title":{},"body":{"license.html":{}}}],["controller",{"_index":679,"title":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":695,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('news",{"_index":1734,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":2359,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":2580,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":2697,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":5614,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":1494,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dto",{"_index":783,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":2736,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":2317,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":1837,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":2392,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":1840,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":681,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":4551,"title":{},"body":{"license.html":{}}}],["convention",{"_index":5816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":5397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":4538,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4942,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4785,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4546,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4830,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":4441,"title":{},"body":{"license.html":{}}}],["copies",{"_index":4435,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3478,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":4503,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4437,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":4425,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":4510,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4627,"title":{},"body":{"license.html":{}}}],["core",{"_index":389,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2230,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":5797,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1839,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":5774,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":381,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2808,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5004,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3908,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":4586,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":2824,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":4722,"title":{},"body":{"license.html":{}}}],["count",{"_index":598,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":587,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1881,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":2454,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":4897,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5154,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":4536,"title":{},"body":{"license.html":{}}}],["country",{"_index":4934,"title":{},"body":{"license.html":{}}}],["counts",{"_index":5149,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":5521,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":5361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":408,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course._id",{"_index":1555,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["course.entity",{"_index":1543,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["courseentities",{"_index":2240,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":619,"title":{"classes/Coursegroup.html":{}},"body":{"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":1544,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["coursegroupid",{"_index":2289,"title":{},"body":{"classes/Submission.html":{}}}],["coursegroupinfo",{"_index":476,"title":{"classes/CourseGroupInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursegroupinfoproperties",{"_index":482,"title":{"interfaces/CoursegroupInfoProperties.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"coverage.html":{}}}],["coursegrouprepo",{"_index":633,"title":{"injectables/CoursegroupRepo.html":{}},"body":{"injectables/CoursegroupRepo.html":{},"coverage.html":{}}}],["coursegroups",{"_index":488,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":2313,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":480,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Task.html":{}}}],["courseids",{"_index":639,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["courseids.map((id",{"_index":641,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["courseinfo",{"_index":492,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["coursename",{"_index":2473,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":497,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":574,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"coverage.html":{},"overview.html":{}}}],["courses",{"_index":456,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":590,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"coverage.html":{}}}],["coursetyps",{"_index":1522,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["court",{"_index":4962,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5024,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4924,"title":{},"body":{"license.html":{}}}],["cover",{"_index":5722,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":3410,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":4522,"title":{},"body":{"license.html":{}}}],["covers",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":3152,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":856,"title":{},"body":{"injectables/DashboardRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1735,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1697,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(dashboardprops",{"_index":860,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["create(userid",{"_index":1962,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createandadduser",{"_index":1509,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createandadduser(user",{"_index":1533,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createcourse",{"_index":1500,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcourse(type",{"_index":1521,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup",{"_index":1501,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcoursegroup(course",{"_index":1524,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createcurrenttestuser",{"_index":4166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":1576,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":15,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["createentityid",{"_index":1510,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createerrorresponse",{"_index":1099,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1106,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4129,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1137,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1145,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1126,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1160,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1144,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1164,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1140,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createid",{"_index":1511,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createid(entityid",{"_index":1536,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createinstance",{"_index":509,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":540,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createlessonwithtask",{"_index":2417,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createmikroormmodule",{"_index":1650,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":1671,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":5675,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":643,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createorqueryfromlist",{"_index":4177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createorqueryfromlist(arrayofobjects",{"_index":2169,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["createparamdecorator((data",{"_index":5177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":1611,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":1617,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":1484,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":1488,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1123,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createschool",{"_index":1502,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["createspinner",{"_index":371,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["createstudentcourse",{"_index":1503,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createsubmission",{"_index":2497,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createsubmission(task",{"_index":2421,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createsubmissionsforeachstudent",{"_index":2498,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createsubmissionsforeachstudent(task",{"_index":2426,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createsubstitutioncourse",{"_index":1504,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createtask",{"_index":2499,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createtask(parentid",{"_index":2412,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createtaskparent",{"_index":2500,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createtaskparent(useridwithwritepermissions",{"_index":2409,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createteachercourse",{"_index":1505,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["createteammembersubmission",{"_index":2501,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["createteammembersubmission(task",{"_index":2424,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["createtestmodule",{"_index":924,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createuser",{"_index":1506,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["creating",{"_index":647,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1200,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":502,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":516,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":5528,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":4563,"title":{},"body":{"license.html":{}}}],["critical",{"_index":5488,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":3688,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":391,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":5562,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":5667,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":5734,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4236,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2964,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":3992,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1181,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1183,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":268,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":4859,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":2533,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1907,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":1659,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1701,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1737,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":2550,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":697,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentvalue",{"_index":2172,"title":{},"body":{"classes/Scope.html":{}}}],["currentvalue[selectedkey",{"_index":2174,"title":{},"body":{"classes/Scope.html":{}}}],["custom",{"_index":973,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":5793,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":4714,"title":{},"body":{"license.html":{}}}],["customary",{"_index":4976,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4719,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":394,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":1586,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":5338,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":5377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":443,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5007,"title":{},"body":{"license.html":{}}}],["dash",{"_index":3610,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":684,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.entity",{"_index":439,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["dashboard.getgrid().map((gridelement",{"_index":787,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":785,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.entity",{"_index":820,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.model.mapper",{"_index":866,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard_repo",{"_index":1495,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":680,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardentity",{"_index":699,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["dashboardentity('thisisalsofake",{"_index":872,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardentity(modelentity.id",{"_index":849,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementmodel",{"_index":738,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(gridelement.getid",{"_index":821,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":763,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboardmapper",{"_index":692,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"coverage.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":698,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":876,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":759,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelentity(entity.getid",{"_index":850,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper",{"_index":807,"title":{"classes/DashboardModelMapper.html":{}},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["dashboardmodelmapper.mapgridelementtomodel(element",{"_index":853,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.maptoentity(dashboardmodel",{"_index":878,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.maptomodel(entity",{"_index":874,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardprops",{"_index":705,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":854,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"coverage.html":{}}}],["dashboardresponse",{"_index":691,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"coverage.html":{}}}],["dashboards",{"_index":2792,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":687,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":789,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":798,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.id",{"_index":792,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":796,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":794,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":5457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":5450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1093,"title":{},"body":{"interfaces/GlobalConstants.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2250,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":1637,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:48",{"_index":1639,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:58",{"_index":1641,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":1636,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":5410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":5423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5249,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":28,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":951,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":5544,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":2995,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":472,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":5525,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":1087,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":1088,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":1089,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":5146,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":5513,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":5696,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3216,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1265,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":1269,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":1280,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":4387,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2257,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":4650,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1456,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":2945,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":3102,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":5763,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":355,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":4822,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":1210,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4345,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":29,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":5466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":5477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decryption",{"_index":2977,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":2924,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":4640,"title":{},"body":{"license.html":{}}}],["default",{"_index":32,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":446,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":421,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":423,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":425,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5248,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultgridreference",{"_index":714,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["defaultgridreference(gridelement.getmetadata().title",{"_index":827,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreference(loaded.id",{"_index":846,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreferencemodel",{"_index":750,"title":{"classes/DefaultGridReferenceModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel(gridelement.getmetadata().id",{"_index":829,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultmessage",{"_index":117,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":656,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":2644,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5001,"title":{},"body":{"license.html":{}}}],["defending",{"_index":4475,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4959,"title":{},"body":{"license.html":{}}}],["define",{"_index":272,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5259,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":281,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":126,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3018,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":917,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":921,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":904,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1693,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1703,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1964,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":1702,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2447,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1753,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":5543,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":3318,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":5808,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":5502,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":4790,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":4922,"title":{},"body":{"license.html":{}}}],["depend",{"_index":5732,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":172,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":5241,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependent",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["deploy",{"_index":3126,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3977,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":3124,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1053,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":4930,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1262,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":5560,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":5828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":5829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":5371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":123,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptive",{"_index":5353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":5344,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":4730,"title":{},"body":{"license.html":{}}}],["designed",{"_index":4440,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":5548,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":5342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":5582,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":4983,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":134,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":2749,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":2751,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":4383,"title":{},"body":{"index.html":{}}}],["details",{"_index":88,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1120,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":3494,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":4762,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5271,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4349,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":5817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3005,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":3546,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":3165,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":4417,"title":{},"body":{"index.html":{}}}],["di",{"_index":5626,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["diagonalsize",{"_index":883,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dictionary",{"_index":2221,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":3036,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4270,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5113,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":4982,"title":{},"body":{"license.html":{}}}],["different",{"_index":1894,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":4813,"title":{},"body":{"license.html":{}}}],["digits",{"_index":3144,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1615,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":4625,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4736,"title":{},"body":{"license.html":{}}}],["directly",{"_index":4526,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":5069,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":4660,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4993,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4811,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":4038,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":5699,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":5707,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":266,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":546,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":571,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":4945,"title":{},"body":{"license.html":{}}}],["display",{"_index":2894,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":503,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":712,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":655,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":4548,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":3814,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5263,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":5839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":4986,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4433,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5040,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":4948,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4504,"title":{},"body":{"license.html":{}}}],["divide",{"_index":5396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":5373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":2952,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5101,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":648,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":3379,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":2762,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1860,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doesn't",{"_index":1662,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":5425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":2371,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":4237,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":279,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":4407,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":5847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":5852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":5867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":5862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":5870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":4764,"title":{},"body":{"license.html":{}}}],["down",{"_index":5811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":4875,"title":{},"body":{"license.html":{}}}],["driven",{"_index":5695,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5145,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":3148,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":5724,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":646,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":5606,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1792,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":2384,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1813,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1808,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1794,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":2386,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":2373,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2085,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":786,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":784,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2087,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2138,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1817,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":2093,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":1806,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":2091,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":1796,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1798,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":2377,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":1804,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1800,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1802,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1790,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1821,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1815,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1811,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1113,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1112,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":2695,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":1743,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1193,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":1289,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["duplicate",{"_index":3396,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":278,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":4713,"title":{},"body":{"license.html":{}}}],["duration",{"_index":933,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":930,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2829,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":4761,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4596,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1600,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":840,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":269,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1172,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.reference.load",{"_index":842,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e.value",{"_index":1173,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.xpos",{"_index":844,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e.ypos",{"_index":845,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["e2e",{"_index":1843,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":3474,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":4521,"title":{},"body":{"license.html":{}}}],["easier",{"_index":5337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1042,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":522,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3251,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":3137,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2979,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":5022,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4657,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4641,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5038,"title":{},"body":{"license.html":{}}}],["effects",{"_index":5427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":5810,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":4890,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5041,"title":{},"body":{"license.html":{}}}],["element",{"_index":768,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/TestHelper.html":{}}}],["elementdto",{"_index":788,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":797,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":791,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":795,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":793,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":801,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":803,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elements",{"_index":777,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":302,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":1369,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":3133,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":5708,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":4709,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5048,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1947,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1939,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":611,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":5725,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1199,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1195,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1206,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":4169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":4540,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":3747,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":5401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":5437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":5375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":5412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":4483,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2973,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2989,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":3518,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":2582,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":5697,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":4662,"title":{},"body":{"license.html":{}}}],["enough",{"_index":5455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":5458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":225,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4364,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":1482,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":4955,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4684,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4971,"title":{},"body":{"license.html":{}}}],["entites",{"_index":5456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":69,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":332,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":326,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities/learnroom/dashboard.entity",{"_index":782,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["entitiyids",{"_index":256,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":52,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity._id",{"_index":2633,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity.grid.map((element",{"_index":852,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["entity.id",{"_index":2632,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity.ts",{"_index":5605,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/base.entity",{"_index":2610,"title":{},"body":{"classes/TestHelper.html":{}}}],["entity/task",{"_index":2525,"title":{},"body":{"injectables/TaskUC.html":{}}}],["entityid",{"_index":219,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":2346,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":300,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2252,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":249,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":253,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":276,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":2807,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1450,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":534,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4333,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":666,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":2840,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":5078,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":3547,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":3162,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":4616,"title":{},"body":{"license.html":{}}}],["err",{"_index":2661,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":5868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":116,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":1271,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":961,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":1096,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":1101,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1105,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1107,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1139,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":1022,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":133,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":122,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":131,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":129,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1176,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1167,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":404,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":5510,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":384,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1166,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":108,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1150,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":362,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1135,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":127,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4239,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":1168,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5304,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":5386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":4580,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":5365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2337,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":870,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":5798,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":5799,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":3911,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2852,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":3109,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":3368,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":4431,"title":{},"body":{"license.html":{}}}],["everything",{"_index":3464,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":1460,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":4520,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":4594,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":3049,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":957,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1132,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1127,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1129,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1162,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1218,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":1097,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1131,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1125,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":1607,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":5350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":1613,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":4751,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":3307,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":3639,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":4915,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4619,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4964,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4575,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1844,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":5559,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1849,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5266,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":2593,"title":{},"body":{"classes/TestHelper.html":{},"license.html":{}}}],["execution",{"_index":2640,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":939,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":4891,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4658,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1296,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1405,"title":{},"body":{"interfaces/JwtConstants.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":5757,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1452,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exit",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["exp",{"_index":1410,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":5418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":5869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":5850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":5872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":5853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":5843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":4768,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":5866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":3662,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":5700,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":5858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":1428,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":1422,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":1054,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":4610,"title":{},"body":{"license.html":{}}}],["export",{"_index":61,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":5620,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":3669,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":204,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":2839,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":5408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":5474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1051,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":4995,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1170,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":4841,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1196,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":1475,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":4695,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":4550,"title":{},"body":{"license.html":{}}}],["external",{"_index":3299,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":1401,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":504,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":1370,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["externaluseridentifier'})@unique",{"_index":2677,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["extract",{"_index":5461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1215,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":1436,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1444,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":5570,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":4828,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":661,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":722,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":3534,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":5826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":4977,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":4620,"title":{},"body":{"license.html":{}}}],["factory",{"_index":5803,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3268,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":118,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":3305,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5017,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4615,"title":{},"body":{"license.html":{}}}],["fake",{"_index":717,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":1014,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":4756,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":4399,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":4518,"title":{},"body":{"license.html":{}}}],["fast",{"_index":5719,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4310,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":4765,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":207,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":5483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":997,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":205,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":1060,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1072,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":202,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":1020,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1115,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1067,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4185,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4187,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":4188,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":1052,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4189,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4190,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":200,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1038,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":1045,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":984,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1055,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":2823,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":4398,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":4094,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5313,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":4677,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5325,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":5733,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":2407,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["field",{"_index":2752,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":76,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["fields",{"_index":5067,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":5368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["fileids",{"_index":1335,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":5288,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["filenames",{"_index":2909,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1083,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":3159,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":2877,"title":{},"body":{"changelog.html":{}}}],["filetaskinfo",{"_index":1078,"title":{"classes/FileTaskInfo.html":{}},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filetaskinfoproperties",{"_index":1080,"title":{"interfaces/FileTaskInfoProperties.html":{}},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"coverage.html":{}}}],["filter",{"_index":958,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":2564,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filter.query.ts",{"_index":1756,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1762,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1760,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1766,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1953,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":960,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":607,"title":{},"body":{"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1765,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":5764,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":4851,"title":{},"body":{"license.html":{}}}],["find",{"_index":1041,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1044,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1694,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1706,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(parentids",{"_index":2435,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findall(targets",{"_index":1854,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbytaskids",{"_index":2302,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2306,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":576,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":580,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallcurrent",{"_index":2430,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallcurrent(parentids",{"_index":2440,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":577,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":582,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":578,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":584,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":2575,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":2576,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":1955,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1966,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":635,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":637,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["findbyid",{"_index":2105,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2109,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2106,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2111,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findforuser",{"_index":685,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1234,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1852,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1857,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1695,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1711,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1853,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1862,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1956,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1972,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2251,"title":{},"body":{"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":2431,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":2442,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":5517,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["findvisiblelessons",{"_index":2432,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findvisiblelessons(parentids",{"_index":2444,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finished",{"_index":5782,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1971,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1246,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["fit",{"_index":5445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":4997,"title":{},"body":{"license.html":{}}}],["fix",{"_index":2886,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5301,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":2769,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":3458,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":5896,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1764,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":4601,"title":{},"body":{"license.html":{}}}],["flush",{"_index":290,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["fly",{"_index":3171,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":5738,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":4409,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":5600,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":3981,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":3237,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5319,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":604,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":591,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":4656,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":5679,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1212,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":3531,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcearray",{"_index":4178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["forcearray(arrayofobjects).reduce(reducer",{"_index":2180,"title":{},"body":{"classes/Scope.html":{}}}],["forcearray(input",{"_index":2163,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["forcefullsync",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4006,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":440,"title":{},"body":{"classes/Course.html":{},"classes/ErrorResponse.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":3718,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":4704,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1595,"title":{},"body":{"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1596,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":3047,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2255,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":4428,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":5564,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":5479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":4426,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":4447,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4250,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":5689,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":5688,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":3081,"title":{},"body":{"changelog.html":{}}}],["fulfilled",{"_index":5485,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":4644,"title":{},"body":{"license.html":{}}}],["full",{"_index":3170,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":720,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1136,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":392,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":5378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":4779,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4339,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":4732,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":524,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5317,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":3178,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5302,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":2928,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4592,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3471,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":4375,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5308,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":5436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1712,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":2577,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":2692,"title":{},"body":{"controllers/UserController.html":{}}}],["get(id",{"_index":1048,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getdashboardbyid",{"_index":857,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":862,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdefaultmaxduedate",{"_index":2433,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["getdescriptions",{"_index":415,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["getdetails",{"_index":92,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getentitypermissions",{"_index":214,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":231,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getfirstuser",{"_index":1512,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getgrid",{"_index":702,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":907,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":703,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getinout",{"_index":2189,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2195,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getitems",{"_index":2563,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getmetadata",{"_index":713,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":1957,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1974,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofstudents",{"_index":416,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["getotheruser",{"_index":1513,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getparentid",{"_index":621,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["getpermittedcourses",{"_index":2329,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":2332,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":215,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":234,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":978,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":986,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":979,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":988,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getposition",{"_index":726,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getquery",{"_index":2150,"title":{},"body":{"classes/Scope.html":{}}}],["getrequiredpermissions",{"_index":1958,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1977,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":93,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getschool",{"_index":1514,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getservice",{"_index":1073,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1059,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1959,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1980,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getter",{"_index":444,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":2649,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":2756,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":980,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":990,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusers",{"_index":1515,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["getuserschoolpermissions",{"_index":981,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":992,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":858,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":982,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":994,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":2730,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(currentuser",{"_index":2733,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4355,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":4258,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":4281,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":4272,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":2962,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":4674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1700,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":1028,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":4680,"title":{},"body":{"license.html":{}}}],["global",{"_index":399,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"classes/TestHelper.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":1085,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":959,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1185,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":1386,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":1090,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1188,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":4421,"title":{},"body":{"license.html":{}}}],["go",{"_index":2464,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5109,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":4497,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":5715,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":1602,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":5846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":4803,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4498,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":1325,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":1326,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":1360,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradedstudentids",{"_index":2561,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradedusers.add(submission.student.id",{"_index":2283,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["gradedusers.size",{"_index":2286,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["gradefileids",{"_index":1337,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":1327,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":4823,"title":{},"body":{"license.html":{}}}],["granted",{"_index":4605,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4870,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5056,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":4731,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5032,"title":{},"body":{"license.html":{}}}],["grid",{"_index":701,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridarray",{"_index":882,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["gridelement",{"_index":729,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["gridelement(e.id",{"_index":843,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getmetadata",{"_index":790,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelement.getmetadata().displaycolor",{"_index":831,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getmetadata().title",{"_index":833,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getposition",{"_index":800,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["gridelement.getposition().x",{"_index":823,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getposition().y",{"_index":825,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelementreferencemetadata",{"_index":438,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":761,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["group",{"_index":478,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"coverage.html":{}}}],["grouping",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":2338,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["gt",{"_index":1951,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":2496,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":1747,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5179,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":5629,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":5575,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5258,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":5438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2669,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3429,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":337,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":3715,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1153,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":395,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":5362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":5664,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":5384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hardcodedtestdashboardid",{"_index":879,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["hash",{"_index":72,"title":{},"body":{"classes/Account.html":{},"changelog.html":{}}}],["haspermission",{"_index":2549,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":251,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":2512,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":2522,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haswritepermission",{"_index":1353,"title":{},"body":{"interfaces/ITaskParent.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["haswritepermission(userid",{"_index":1293,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["having",{"_index":4618,"title":{},"body":{"license.html":{}}}],["header",{"_index":1417,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":5505,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":5500,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":4482,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":5411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":447,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":5885,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":3146,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1119,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helper.createandadduser",{"_index":2594,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getfirstuser",{"_index":2590,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getotheruser",{"_index":2592,"title":{},"body":{"classes/TestHelper.html":{}}}],["helper.getusers",{"_index":2591,"title":{},"body":{"classes/TestHelper.html":{}}}],["helpers",{"_index":3573,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":5859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":5845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5286,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":5495,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":274,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":4912,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":5592,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":1558,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":5739,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":5349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":2859,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":5358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":5683,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":3375,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":5424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4271,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4274,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":4848,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4810,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3272,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":3158,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1332,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":1294,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":5364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":3468,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":5496,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":3612,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":448,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1103,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1182,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":4738,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5102,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":3734,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3235,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":4757,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2224,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":513,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["htmlcontent",{"_index":161,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":163,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["http",{"_index":124,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":4430,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/licenses",{"_index":5052,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":340,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":5790,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":5630,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5084,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":5727,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3024,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5327,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":5736,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":5668,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5328,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5330,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5326,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":5468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5071,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":5470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5331,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":109,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":119,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":356,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":5794,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":2915,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":453,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":5489,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":1409,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":6009,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":623,"title":{"interfaces/ICoursegroupProperties.html":{}},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"coverage.html":{}}}],["icourseproperties",{"_index":418,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"coverage.html":{}}}],["icreatenews",{"_index":1227,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":1237,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":2063,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":2065,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.tohexstring",{"_index":2415,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["id.ts",{"_index":5130,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":867,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"coverage.html":{}}}],["identical",{"_index":1478,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":4936,"title":{},"body":{"license.html":{}}}],["identified",{"_index":5800,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":741,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["identifier",{"_index":967,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":1477,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":5823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":236,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["ierrortype",{"_index":342,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":5750,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":5759,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":5752,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifindoptions",{"_index":1251,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["iframe",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":3779,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":1445,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":707,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["igridelementreference",{"_index":437,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"coverage.html":{}}}],["ilogger",{"_index":1263,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":1050,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1068,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1037,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4365,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":1570,"title":{},"body":{"injectables/Logger.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":868,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":5631,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":1406,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":715,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":5680,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":4958,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1056,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":3805,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":4903,"title":{},"body":{"license.html":{}}}],["imports",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":4833,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4961,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1946,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":3000,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":4476,"title":{},"body":{"license.html":{}}}],["improves",{"_index":5805,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":5607,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5011,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5014,"title":{},"body":{"license.html":{}}}],["inc",{"_index":4429,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5008,"title":{},"body":{"license.html":{}}}],["include",{"_index":265,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Scope.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":4576,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4535,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":3609,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":4703,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1201,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":3656,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":4481,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":4978,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4760,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3203,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2595,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["increases",{"_index":5463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":4829,"title":{},"body":{"license.html":{}}}],["independant",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":5767,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":4693,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":5506,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@property",{"_index":427,"title":{},"body":{"classes/Course.html":{}}}],["index()@property({fieldname",{"_index":429,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":2681,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["index.ts",{"_index":5064,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":3084,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":4873,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":4839,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3279,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":4515,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4771,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":66,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/Account.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":1235,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":5744,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":3035,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":368,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["info.entity",{"_index":487,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":479,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":2709,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:13",{"_index":2728,"title":{},"body":{"classes/UserTaskInfo.html":{}}}],["info.entity.ts:14",{"_index":1560,"title":{},"body":{"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:16",{"_index":485,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/UserTaskInfo.html":{}}}],["info.entity.ts:17",{"_index":1082,"title":{},"body":{"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{}}}],["info.entity.ts:19",{"_index":483,"title":{},"body":{"classes/CourseGroupInfo.html":{}}}],["info.entity.ts:20",{"_index":1081,"title":{},"body":{"classes/FileTaskInfo.html":{}}}],["info.entity.ts:7",{"_index":494,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1786,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2134,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":2136,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1929,"title":{},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2141,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":2143,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":2717,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2142,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":4744,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":974,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":5618,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":4871,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4900,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4529,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":267,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":758,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["inheritances",{"_index":1892,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":43,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{}}}],["init",{"_index":1516,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["inital",{"_index":2930,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":5776,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":1577,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":5569,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":4894,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":892,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":1629,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":1668,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":1670,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":209,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":210,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"injectables/CourseRepo.html":{},"injectables/CoursegroupRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":1033,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":1573,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":5532,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":154,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":153,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["inner",{"_index":4368,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":1389,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":74,"title":{},"body":{"classes/Account.html":{},"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":4588,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":4775,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4788,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1063,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1117,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4090,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instead",{"_index":3027,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":4384,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":4669,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3160,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["integrity",{"_index":473,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["intended",{"_index":4450,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":4661,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5043,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":4973,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":4543,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":5402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":4547,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":5561,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":937,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":938,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":925,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":407,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":385,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":4715,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4887,"title":{},"body":{"license.html":{}}}],["interface",{"_index":145,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":1441,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":147,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":4780,"title":{},"body":{"license.html":{}}}],["internal",{"_index":530,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":5742,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":379,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["internalservererrorexception",{"_index":1108,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1143,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":3924,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":5021,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4585,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4599,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":5713,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":1034,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":3976,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":3943,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5240,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5060,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":4690,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":5589,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":5594,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":5540,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":5409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":5516,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":5714,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":1257,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iparentdescriptionsproperties",{"_index":1282,"title":{"interfaces/IParentDescriptionsProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["ipermissionsandroles",{"_index":1311,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2222,"title":{},"body":{"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1243,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{}}}],["irole",{"_index":1245,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":1309,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"coverage.html":{}}}],["irrevocable",{"_index":4607,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1767,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1116,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1157,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":673,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":651,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdefined",{"_index":4179,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefined(input",{"_index":2156,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefined(key",{"_index":2167,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object",{"_index":2166,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(object[key",{"_index":2168,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(selectedkey",{"_index":2177,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(targetkey",{"_index":2178,"title":{},"body":{"classes/Scope.html":{}}}],["isdefined(testeddefinedvalue",{"_index":2161,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue",{"_index":4180,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedobjectvalue(currentvalue",{"_index":2173,"title":{},"body":{"classes/Scope.html":{}}}],["isdefinedobjectvalue(object",{"_index":2165,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery",{"_index":4181,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(input",{"_index":2157,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["isdefinedquery(query",{"_index":2162,"title":{},"body":{"classes/Scope.html":{}}}],["iserv",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":3175,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1114,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1152,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":1338,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{}}}],["isgraded(submission",{"_index":2267,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["isin",{"_index":1768,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1772,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":2044,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":2041,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":2035,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismember",{"_index":622,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismember(userid",{"_index":628,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["ismongoid",{"_index":1769,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["iso",{"_index":77,"title":{},"body":{"classes/Account.html":{}}}],["isolated",{"_index":5595,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":5831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":674,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1763,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":2673,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1757,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":2672,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1761,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":2011,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":1413,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":675,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":649,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":664,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":660,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":592,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["issubstitutionteacher",{"_index":595,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issue",{"_index":3090,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":1420,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":3427,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":594,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":1122,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1159,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":1587,"title":{},"body":{"injectables/Logger.html":{}}}],["isubmissionproperties",{"_index":1322,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"coverage.html":{}}}],["isubmissionstatus",{"_index":5133,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["iswhitelisted",{"_index":1467,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":1470,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":3033,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":5830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":5849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":5851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskparent",{"_index":1292,"title":{"interfaces/ITaskParent.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["itaskproperties",{"_index":1288,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"coverage.html":{}}}],["itaskstatus",{"_index":1357,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["item",{"_index":4561,"title":{},"body":{"license.html":{}}}],["items",{"_index":1313,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":2933,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":4791,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1233,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":1367,"title":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{}},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{},"coverage.html":{}}}],["iusertaskinfoproperties",{"_index":1383,"title":{"interfaces/IUserTaskInfoProperties.html":{}},"body":{"interfaces/IUserTaskInfoProperties.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{}}}],["jest",{"_index":2959,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":4183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":4392,"title":{},"body":{"index.html":{}}}],["job",{"_index":2781,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":3884,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":3352,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":4253,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":445,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":3530,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.stringify(e.constraints",{"_index":1174,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":4255,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":1415,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":1439,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":1394,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":190,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":1448,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":1447,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":1443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":1400,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":1425,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":177,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":178,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":1480,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":5481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":2763,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5264,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":4581,"title":{},"body":{"license.html":{}}}],["key",{"_index":2017,"title":{},"body":{"injectables/NewsUc.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["keyof",{"_index":5155,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":79,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":4539,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":4438,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":4464,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":4926,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4933,"title":{},"body":{"license.html":{}}}],["known",{"_index":3327,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":5554,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":455,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":4402,"title":{},"body":{"index.html":{}}}],["language",{"_index":2993,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":5464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":4697,"title":{},"body":{"license.html":{}}}],["last",{"_index":2716,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":2804,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":1247,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/ResolvedUser.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{}}}],["lasttriedfailedlogin",{"_index":11,"title":{},"body":{"classes/Account.html":{}}}],["later",{"_index":550,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":1970,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5321,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5083,"title":{},"body":{"todo.html":{}}}],["law",{"_index":4531,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4507,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4898,"title":{},"body":{"license.html":{}}}],["layer",{"_index":5392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":5549,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":5356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5063,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":2801,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4257,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4260,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2803,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":4039,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":3764,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":5045,"title":{},"body":{"license.html":{}}}],["lean",{"_index":4276,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":2310,"title":{},"body":{"injectables/SubmissionRepo.html":{},"changelog.html":{}}}],["learnroomdashboardentities",{"_index":2241,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["learnroommodule",{"_index":1490,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["learnroomtesthelper",{"_index":1496,"title":{"classes/LearnroomTestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"coverage.html":{}}}],["leave",{"_index":5119,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":2639,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":1029,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5309,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5290,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5110,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":4470,"title":{},"body":{"license.html":{}}}],["length",{"_index":474,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["lern",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2980,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":4036,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":1287,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["lessonid",{"_index":1295,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":2491,"title":{},"body":{"classes/TaskScope.html":{}}}],["lessons",{"_index":1561,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessontaskinfo",{"_index":1286,"title":{"classes/LessonTaskInfo.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessontaskinfoproperties",{"_index":1559,"title":{"interfaces/LessonTaskInfoProperties.html":{}},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"coverage.html":{}}}],["letter",{"_index":5640,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":4487,"title":{},"body":{"license.html":{}}}],["level",{"_index":3901,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":5827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":4812,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4528,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4574,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":4752,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":4420,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":4511,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4512,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4514,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4444,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4874,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4820,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":4868,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1259,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"license.html":{}}}],["limitation",{"_index":5005,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2958,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":3030,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3151,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":2968,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":4597,"title":{},"body":{"license.html":{}}}],["links",{"_index":3015,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":5098,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":233,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":3698,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":435,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/StatusDomainService.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":4895,"title":{},"body":{"license.html":{}}}],["living",{"_index":5711,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":5448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2938,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":5076,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":5615,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":841,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loaded.color",{"_index":848,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["loaded.title",{"_index":847,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["loader",{"_index":5878,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3217,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":3161,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5257,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5269,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":5471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2256,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":5677,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":5452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":3575,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3210,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1110,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":1266,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":1274,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5099,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":5580,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":4382,"title":{},"body":{"index.html":{}}}],["logger",{"_index":936,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":1100,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":944,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":1178,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1175,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1163,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":5863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":1568,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":1592,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":405,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":1111,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":386,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":5784,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":397,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":932,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":945,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":941,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":2463,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":5428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":5475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":3167,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":5649,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":5062,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":4403,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":3443,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1404,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":5012,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5015,"title":{},"body":{"license.html":{}}}],["lost",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":4037,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":5360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":5641,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1952,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":5566,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":4706,"title":{},"body":{"license.html":{}}}],["made",{"_index":4477,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":164,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["mail.interface",{"_index":1628,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":1605,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":1618,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":149,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["mailcatcher",{"_index":2951,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":157,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["maildrop",{"_index":2950,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":1593,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2244,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":1597,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"coverage.html":{}}}],["mails",{"_index":3038,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":1604,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["mailserviceoptions",{"_index":1624,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"coverage.html":{}}}],["main",{"_index":2853,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1064,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":5515,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":3729,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":3658,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2899,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":4578,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":1476,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":4635,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2671,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":2466,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3253,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":2857,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4208,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":5451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5066,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":4913,"title":{},"body":{"license.html":{}}}],["manual",{"_index":3123,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":5860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":3495,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":53,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/User-1.html":{}}}],["manytomany('role",{"_index":1317,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["manytomany({fieldname",{"_index":36,"title":{},"body":{"classes/Account.html":{},"classes/CourseGroupInfo.html":{},"classes/Submission.html":{}}}],["manytoone",{"_index":510,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone('dashboardmodelentity",{"_index":742,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('defaultgridreferencemodel",{"_index":745,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone({fieldname",{"_index":515,"title":{},"body":{"classes/CourseNews.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":3274,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((submission",{"_index":2566,"title":{},"body":{"injectables/TaskUC.html":{}}}],["mapcreatenewstodomain",{"_index":1774,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1777,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":5622,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":5623,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":809,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(gridelement",{"_index":812,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":1775,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1779,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":5509,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":2735,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":5621,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":693,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":1732,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":2357,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":2616,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":5422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoentity",{"_index":810,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoentity(modelentity",{"_index":814,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel",{"_index":811,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel(entity",{"_index":817,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoresponse",{"_index":779,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":780,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":1781,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2135,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":2316,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":2367,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":2082,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["maptoresponse(userinfo",{"_index":2711,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1776,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1783,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":4956,"title":{},"body":{"license.html":{}}}],["marked",{"_index":4818,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["marks",{"_index":4827,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4509,"title":{},"body":{"license.html":{}}}],["master",{"_index":3424,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":975,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":353,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":81,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":4622,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4792,"title":{},"body":{"license.html":{}}}],["materials",{"_index":3111,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":3117,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":5454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":5518,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":2045,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":2049,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":2038,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":1361,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":1656,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5104,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":2698,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":2691,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":4835,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":4414,"title":{},"body":{"index.html":{}}}],["means",{"_index":4369,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":4643,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4372,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":3031,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":5593,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":4666,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4678,"title":{},"body":{"license.html":{}}}],["meets",{"_index":4562,"title":{},"body":{"license.html":{}}}],["member",{"_index":1000,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":3298,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":1635,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":4559,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":4996,"title":{},"body":{"license.html":{}}}],["mere",{"_index":4542,"title":{},"body":{"license.html":{}}}],["merge",{"_index":4419,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3234,"title":{},"body":{"changelog.html":{}}}],["merges",{"_index":3735,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":4884,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":3014,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":89,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":5482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":2997,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":3120,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":4609,"title":{},"body":{"license.html":{}}}],["meta",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":4300,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":1043,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":91,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":3512,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":5462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":5403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":3759,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4262,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":4001,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1845,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":3197,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1847,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":55,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":1642,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5097,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":1664,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":1666,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":1667,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":1643,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2248,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":1651,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":1665,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":1644,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":2653,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":152,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":2046,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":2047,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":2048,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":5529,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":2037,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":3163,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":5647,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4332,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":4817,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1062,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1945,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":5388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4263,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":3581,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":5835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":5893,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":5881,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":5883,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2981,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":667,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardModelMapper.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["model.dashboard",{"_index":835,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.reference",{"_index":826,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.xpos",{"_index":822,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["model.ypos",{"_index":824,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity",{"_index":816,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements",{"_index":851,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements.init",{"_index":837,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["models",{"_index":2022,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":4505,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4565,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4022,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":4683,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4472,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":4533,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5243,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":169,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5201,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":5877,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":5655,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":5650,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":1646,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":5892,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":5891,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":171,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2227,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":5661,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":5659,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":5660,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/lernroom/lernroom.module",{"_index":2235,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2234,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity",{"_index":2237,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":2233,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":2238,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2231,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/entity",{"_index":2239,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2232,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4265,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":871,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongod",{"_index":1653,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongod.geturi",{"_index":1655,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodatabasemoduleoptions",{"_index":1638,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1648,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongomemorydatabasemodule",{"_index":1633,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":1647,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2249,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":5492,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4283,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3195,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":4857,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":5807,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":2921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4360,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5079,"title":{},"body":{"todo.html":{}}}],["move",{"_index":2460,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2806,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":918,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1128,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":3853,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":5391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":1216,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":5419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":5421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":328,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":3839,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":25,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":4412,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1717,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5118,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4285,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":3183,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4303,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":4694,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2902,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":2495,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":3753,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2624,"title":{},"body":{"classes/TestHelper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4587,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":3389,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1155,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5108,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5261,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5265,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5284,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5285,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5278,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5280,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5298,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5299,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5260,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5268,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5272,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5270,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5275,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5189,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5293,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5294,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5297,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5191,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5190,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5295,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3938,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1066,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":913,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":373,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriter.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5318,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":110,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":916,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4198,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4201,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":672,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":915,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":5882,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":1567,"title":{},"body":{"injectables/Logger.html":{}}}],["net",{"_index":4380,"title":{},"body":{"index.html":{}}}],["network",{"_index":4443,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":5519,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":230,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":34,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":5706,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":499,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1793,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":1841,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":2574,"title":{},"body":{"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["news.controller.ts:22",{"_index":2578,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":1814,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1995,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1795,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1789,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":645,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":2675,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":669,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":650,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":2674,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":659,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":668,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":663,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1818,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1797,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1799,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1801,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":1803,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1791,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":543,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1816,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1810,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":240,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{}}}],["news:100",{"_index":511,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:106",{"_index":2572,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:30",{"_index":537,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":512,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":518,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":526,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":532,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":533,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:54",{"_index":535,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:57",{"_index":529,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:60",{"_index":517,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:63",{"_index":539,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:65",{"_index":527,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:75",{"_index":541,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:94",{"_index":2144,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":2019,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":5674,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":5678,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1846,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1993,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1988,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1914,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1930,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1987,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1691,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":2004,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":1887,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":1895,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":1883,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":1707,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsid",{"_index":1705,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":1740,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":2009,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1744,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":2006,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1731,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1738,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1742,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1739,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1752,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1828,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1833,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1730,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["newsscope",{"_index":1878,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"coverage.html":{}}}],["newstargetfilter",{"_index":1855,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetinfo",{"_index":542,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetmodel",{"_index":221,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":243,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":1728,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":2013,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":2000,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newuser",{"_index":2618,"title":{},"body":{"classes/TestHelper.html":{}}}],["newuser._id",{"_index":2620,"title":{},"body":{"classes/TestHelper.html":{}}}],["newuser.id",{"_index":2622,"title":{},"body":{"classes/TestHelper.html":{}}}],["nexboard",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":2658,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":952,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":4106,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4357,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":5567,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4280,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4282,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":3545,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":4726,"title":{},"body":{"license.html":{}}}],["none",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":2027,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":3325,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":4755,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":4133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":264,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":5508,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":996,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{}}}],["notfoundexception(`the",{"_index":2253,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":4869,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4553,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4549,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":4858,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4854,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4807,"title":{},"body":{"license.html":{}}}],["november",{"_index":4423,"title":{},"body":{"license.html":{}}}],["now",{"_index":657,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":954,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3070,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":1019,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["number",{"_index":98,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":4988,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":5148,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":3903,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":3099,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5244,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":5586,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o._id",{"_index":1549,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["o.id",{"_index":2348,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{}}}],["oauth",{"_index":3595,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":3382,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":1919,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Scope.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign",{"_index":67,"title":{},"body":{"classes/Account.html":{}}}],["object.assign(this",{"_index":70,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserTaskInfo.html":{}}}],["object.entries(params",{"_index":2018,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.keys(input).length",{"_index":2158,"title":{},"body":{"classes/Scope.html":{}}}],["object.values(constraint",{"_index":144,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":677,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":41,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5233,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid(entityid",{"_index":2614,"title":{},"body":{"classes/TestHelper.html":{}}}],["objectid(id",{"_index":642,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["objectid(this.getschool",{"_index":1550,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["objectid(userid",{"_index":593,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["objectid.createfromhexstring(id",{"_index":752,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["objectid.isvalid(value",{"_index":2069,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":5666,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":4968,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4740,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4645,"title":{},"body":{"license.html":{}}}],["observable",{"_index":943,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":5444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":4725,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1130,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":4866,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3437,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":1968,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5142,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":4469,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4746,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4729,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5282,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":4567,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":3142,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3231,"title":{},"body":{"changelog.html":{}}}],["ok",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":5735,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":5815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2867,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4009,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":1610,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":5339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1463,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":5646,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":749,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":760,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('submission",{"_index":1298,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["oneweekago",{"_index":2468,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":2469,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":3714,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":1640,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":5434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":283,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":2946,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3607,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5273,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5018,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":4733,"title":{},"body":{"license.html":{}}}],["operates",{"_index":5806,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":4582,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4076,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2335,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":4492,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":4975,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":2913,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":5685,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":1663,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":5795,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":5786,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1599,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.exchange",{"_index":1614,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":2002,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":1619,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.ts",{"_index":1253,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":1616,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["ora",{"_index":378,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["orchestration",{"_index":3311,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":1254,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1889,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":4880,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4516,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":5341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":3351,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":4025,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":1669,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5329,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":56,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":1877,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":5897,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":5728,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":263,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/LearnroomTestHelper.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":1645,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orquery",{"_index":2155,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["others",{"_index":1211,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otheruser",{"_index":1499,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["otherwise",{"_index":1661,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":5637,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":5825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5081,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":5514,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2193,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":4628,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2467,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":5414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":5788,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":3682,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":956,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":398,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5144,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":5057,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3262,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":4909,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":5381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1910,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":5658,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5250,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":3713,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":4689,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5072,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":4577,"title":{},"body":{"license.html":{}}}],["page",{"_index":2036,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":2042,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":1013,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1255,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":5611,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":5676,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1708,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1726,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1745,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["paginationresponse(taskresponses",{"_index":2365,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4289,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5042,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4845,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4919,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3225,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":3087,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":242,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":1749,"title":{},"body":{"controllers/NewsController.html":{}}}],["param('teamid",{"_index":2581,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":5873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":5871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":5610,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":1994,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":1746,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":1047,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1824,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1825,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1991,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1827,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1826,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1823,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":5609,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1290,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["parent._id",{"_index":2414,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parent.id",{"_index":2411,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parentdata",{"_index":2382,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.color",{"_index":2387,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentdata.name",{"_index":2385,"title":{},"body":{"classes/TaskMapper.html":{}}}],["parentid",{"_index":2418,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["parentids",{"_index":2438,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["parents",{"_index":2437,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":3647,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":5673,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1725,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4221,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":2887,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2589,"title":{},"body":{"classes/TestHelper.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":20,"title":{},"body":{"classes/Account.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/Scope.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2668,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":4571,"title":{},"body":{"license.html":{}}}],["parties",{"_index":4541,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4602,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":4734,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":4885,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":5638,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1208,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":1438,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1440,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":71,"title":{},"body":{"classes/Account.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":519,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1723,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1720,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":4844,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4904,"title":{},"body":{"license.html":{}}}],["path",{"_index":1077,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2926,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":678,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":1435,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":1427,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payload.user",{"_index":1455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":4949,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4742,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4745,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":5625,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3204,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":4593,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4853,"title":{},"body":{"license.html":{}}}],["permission",{"_index":523,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":2032,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":223,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":252,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":2031,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":4671,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4702,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4486,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4432,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":2342,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":2347,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":4783,"title":{},"body":{"license.html":{}}}],["persist",{"_index":291,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":304,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{}}}],["persist/make",{"_index":5691,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":292,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistall(entities",{"_index":307,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush",{"_index":293,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistallandflush(entities",{"_index":309,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistance",{"_index":2796,"title":{},"body":{"changelog.html":{}}}],["persistandflush",{"_index":294,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persistandflush(entity",{"_index":311,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["persisted",{"_index":325,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":5694,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1632,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":5785,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":5818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":3113,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":4966,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":5705,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":4710,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4723,"title":{},"body":{"license.html":{}}}],["pick",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":4462,"title":{},"body":{"license.html":{}}}],["pin",{"_index":3132,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1191,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":2754,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":3060,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":5628,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":2066,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":2809,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":5681,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":162,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":160,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"coverage.html":{}}}],["platform",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":5473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4241,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":4889,"title":{},"body":{"license.html":{}}}],["point",{"_index":652,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5039,"title":{},"body":{"license.html":{}}}],["policy",{"_index":3953,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["polymorphic",{"_index":757,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["pool",{"_index":3491,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1891,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5255,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":4749,"title":{},"body":{"license.html":{}}}],["pos",{"_index":799,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.x",{"_index":802,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["pos.y",{"_index":804,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position",{"_index":774,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["possesses",{"_index":4720,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4687,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5020,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":3453,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1698,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":3215,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":5091,"title":{},"body":{"todo.html":{}}}],["power",{"_index":4655,"title":{},"body":{"license.html":{}}}],["pr",{"_index":4390,"title":{},"body":{"index.html":{}}}],["practical",{"_index":4445,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4923,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5096,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":4436,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4501,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4352,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":4886,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":5789,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":5833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":4564,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":683,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":1580,"title":{},"body":{"injectables/Logger.html":{}}}],["preparing",{"_index":2931,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":4376,"title":{},"body":{"index.html":{}}}],["present",{"_index":3574,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":5394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":4557,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4814,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":3780,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":277,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":3603,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":4888,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":4457,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4951,"title":{},"body":{"license.html":{}}}],["primary",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":42,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["primaryrolesearchoperation",{"_index":1312,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2099,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":5895,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":5340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":5737,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":4855,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":3116,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":602,"title":{},"body":{"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":1486,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4015,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":3402,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":4776,"title":{},"body":{"license.html":{}}}],["process",{"_index":3755,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":5584,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":5536,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":5432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":4941,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4584,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":5781,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":4711,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2982,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":4952,"title":{},"body":{"license.html":{}}}],["program",{"_index":4452,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4665,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5049,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4572,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":4463,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":4626,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":4652,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4946,"title":{},"body":{"license.html":{}}}],["project",{"_index":2761,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4293,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":3511,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":4560,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4552,"title":{},"body":{"license.html":{}}}],["promise",{"_index":229,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":919,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":838,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/NewsUc.html":{},"injectables/UserUC.html":{}}}],["promise.all(ids.map((id",{"_index":2127,"title":{},"body":{"injectables/RoleUC.html":{}}}],["promise.resolve(currentuser.user",{"_index":2699,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":5854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4240,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":4524,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4872,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4534,"title":{},"body":{"license.html":{}}}],["proper",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1851,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["property",{"_index":30,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2098,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["property({default",{"_index":422,"title":{},"body":{"classes/Course.html":{}}}],["property({fieldname",{"_index":625,"title":{},"body":{"classes/Coursegroup.html":{}}}],["property({onupdate",{"_index":48,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["propertydecorator",{"_index":4347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":420,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/FileTaskInfo.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.color",{"_index":470,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.comment",{"_index":1348,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":1565,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["props.courseid",{"_index":490,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.creator",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.description",{"_index":460,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":1300,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":1377,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["props.firstname",{"_index":1373,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["props.grade",{"_index":1351,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":1352,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid",{"_index":737,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":1563,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["props.lastname",{"_index":1375,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["props.lesson",{"_index":1306,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":458,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["props.parent",{"_index":1304,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.permissions",{"_index":1319,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":1302,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.roles",{"_index":1321,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"classes/User-1.html":{}}}],["props.school",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["props.schoolid",{"_index":462,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.student",{"_index":1346,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.studentids",{"_index":464,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["props.students",{"_index":491,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{}}}],["props.submissions",{"_index":1308,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.substitutionteacherids",{"_index":468,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":1350,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacherids",{"_index":466,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":4465,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1507,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":4636,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4676,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":4796,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":5000,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":927,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":238,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":1584,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":1578,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":396,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":4808,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4850,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4990,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4991,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":3313,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":911,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":4819,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4494,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":4068,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3009,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":658,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":3577,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":5467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4591,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4758,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":4939,"title":{},"body":{"license.html":{}}}],["push",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":753,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":5693,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":3101,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":3558,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":4862,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4999,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1940,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1944,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":5523,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":601,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1820,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1819,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1822,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":5672,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2152,"title":{},"body":{"classes/Scope.html":{}}}],["queryelement",{"_index":2175,"title":{},"body":{"classes/Scope.html":{}}}],["queryobject",{"_index":2154,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["queryordermap",{"_index":1876,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2258,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1603,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5253,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5247,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":1601,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":1612,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":1609,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":3754,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":3153,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":5493,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4242,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1715,"title":{},"body":{"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":4707,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":4928,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4799,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":86,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":5721,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":5894,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":441,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["reason",{"_index":4937,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4721,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":4860,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4460,"title":{},"body":{"license.html":{}}}],["received",{"_index":4691,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":4876,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4943,"title":{},"body":{"license.html":{}}}],["recent",{"_index":4017,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":4782,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4935,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":165,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":4568,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6003,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":100,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/Scope.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":5090,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":1479,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":1487,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5035,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":2862,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reducer",{"_index":2170,"title":{},"body":{"classes/Scope.html":{}}}],["reduces",{"_index":3499,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":5348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":873,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["refactored",{"_index":2788,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":2932,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":5465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":5703,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":548,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.color",{"_index":830,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["reference.title",{"_index":832,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["referenced",{"_index":536,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":719,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":4456,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4506,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4299,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":5710,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":4970,"title":{},"body":{"license.html":{}}}],["regard",{"_index":4804,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":4373,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":4688,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":4603,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3640,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":3129,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":5743,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":2967,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":3696,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":4849,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":68,"title":{},"body":{"classes/Account.html":{},"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":5726,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2783,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":4629,"title":{},"body":{"license.html":{}}}],["release",{"_index":3127,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":4499,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":4488,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4681,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":4500,"title":{},"body":{"license.html":{}}}],["relies",{"_index":5684,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5103,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["rely",{"_index":471,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["relying",{"_index":4927,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4739,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4454,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":4972,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":4974,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4805,"title":{},"body":{"license.html":{}}}],["remove",{"_index":295,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":313,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall",{"_index":296,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeall(entities",{"_index":316,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush",{"_index":297,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeallandflush(entities",{"_index":318,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush",{"_index":298,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removeandflush(entity",{"_index":320,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{}}}],["removed",{"_index":2617,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["removeing",{"_index":3002,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":3066,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":5013,"title":{},"body":{"license.html":{}}}],["repair",{"_index":3384,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":2532,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":828,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/TestHelper.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":5773,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5093,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":168,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":2126,"title":{},"body":{"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":5899,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":5617,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1986,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1836,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":3849,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":5802,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":5405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":2882,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repositories/learnroom/dashboard.model.entity",{"_index":2236,"title":{},"body":{"modules/ServerModule.html":{}}}],["repository",{"_index":4351,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":4773,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5306,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":3324,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":1031,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":1457,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":1458,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":5487,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":5494,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":2647,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2254,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":3665,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":1392,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":2654,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":3326,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":1481,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":1402,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":1091,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":5215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1214,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":2012,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":4682,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4741,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1070,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":4519,"title":{},"body":{"license.html":{}}}],["reset",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":2738,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":2742,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":2743,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":1453,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":2080,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{},"coverage.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":2741,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyidlist",{"_index":2121,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyidlist(ids",{"_index":2124,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2107,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2113,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":1859,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":2701,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(currentuser",{"_index":2704,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":2863,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":4659,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5114,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":1710,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":125,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1187,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":5613,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":5612,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":5430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":5670,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":5374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":4877,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":5690,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":3119,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":2628,"title":{},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5115,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":934,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":5556,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":5484,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":2015,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":4653,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4836,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3947,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":3660,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":3022,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":1948,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.query",{"_index":2153,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":4176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":4484,"title":{},"body":{"license.html":{}}}],["results",{"_index":80,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":4786,"title":{},"body":{"license.html":{}}}],["retention",{"_index":5542,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1714,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":5578,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":5550,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":142,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":3829,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":2472,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":106,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"injectables/CoursegroupRepo.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskParent.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":5848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":5346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":5627,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":5443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":3186,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":4406,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5023,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4980,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":5709,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":4103,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":4466,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":4305,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":4998,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3229,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":3676,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":5439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1242,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"modules/ServerModule.html":{},"classes/User-1.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":1381,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}}}],["role.id",{"_index":2096,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":2095,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2130,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":2737,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":5486,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":1382,"title":{},"body":{"interfaces/IUserProperties-1.html":{},"classes/User-1.html":{}}}],["roleidbasedsearches'})@property",{"_index":2687,"title":{},"body":{"classes/User-1.html":{}}}],["roleids",{"_index":3775,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2102,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["roles",{"_index":1240,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2129,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":2094,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2119,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["rollback",{"_index":3752,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":4789,"title":{},"body":{"license.html":{}}}],["room",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":273,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":5185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":909,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":2906,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":1608,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["royalty",{"_index":4893,"title":{},"body":{"license.html":{}}}],["rss",{"_index":531,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":5730,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":3297,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":2778,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":5876,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":2641,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3032,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":5884,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":946,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":948,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":5037,"title":{},"body":{"license.html":{}}}],["safety",{"_index":4379,"title":{},"body":{"index.html":{}}}],["sale",{"_index":4902,"title":{},"body":{"license.html":{}}}],["same",{"_index":3661,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":1001,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1065,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":5889,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":5644,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":5890,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":5778,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":3330,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":5070,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":248,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":237,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5296,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":4737,"title":{},"body":{"license.html":{}}}],["sc",{"_index":2837,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":5460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":451,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":5616,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":3130,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":505,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":4063,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":411,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":3663,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":528,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["schoolinfo.id",{"_index":2137,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2139,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1785,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1807,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1909,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":572,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":570,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1230,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":2988,"title":{},"body":{"changelog.html":{}}}],["schooltype",{"_index":1518,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{}}}],["schoolyear",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":654,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2225,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":922,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":3834,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":588,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.afterduedateornone(duedate",{"_index":2457,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bylessonsornone(visiblelessons.map((o",{"_index":2453,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byparentids(parentids",{"_index":2451,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bypublic",{"_index":2452,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bytargets(targets",{"_index":1879,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1880,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":597,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":600,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.request",{"_index":1057,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":2024,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":2584,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":2585,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":1569,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1932,"title":{},"body":{"classes/NewsScope.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["scope.ts:11",{"_index":2494,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:16",{"_index":2490,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:21",{"_index":2488,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":1938,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:6",{"_index":2493,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":1936,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:57",{"_index":608,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:67",{"_index":612,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:71",{"_index":617,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":2021,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1999,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":1008,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopes",{"_index":1716,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":2948,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4589,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4216,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":2341,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":1371,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["searchuserforschool'})@property({fieldname",{"_index":2682,"title":{},"body":{"classes/User.html":{},"classes/User-1.html":{}}}],["second",{"_index":5787,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":4527,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":4473,"title":{},"body":{"license.html":{}}}],["secret",{"_index":73,"title":{},"body":{"classes/Account.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":1446,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":4634,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":4705,"title":{},"body":{"license.html":{}}}],["secure",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":2990,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":2770,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":65,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2836,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seeddata",{"_index":5837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":5106,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5088,"title":{},"body":{"todo.html":{}}}],["selectedkey",{"_index":615,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["selection",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":4114,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":4917,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4901,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":4508,"title":{},"body":{"license.html":{}}}],["send",{"_index":1621,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":1626,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":2966,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":5751,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":5413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":5581,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":970,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":3454,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4203,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":4748,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1575,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":4397,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":3475,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":5527,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":5766,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":5345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4359,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4358,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":5068,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":3555,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":46,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["serve",{"_index":4309,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5310,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":923,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2211,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2228,"title":{},"body":{"modules/ServerModule.html":{}}}],["server.module",{"_index":2212,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server/overview.html",{"_index":5107,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5086,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2187,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["serverconsolemodule",{"_index":2203,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2214,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":4134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":5772,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2207,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4034,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":4579,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":376,"title":{},"body":{"injectables/ConsoleWriter.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":1011,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":5663,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":1007,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":998,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1040,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":1049,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":1046,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":1075,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":1076,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":5619,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":1030,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5003,"title":{},"body":{"license.html":{}}}],["session",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":1297,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradedstudentids)].length",{"_index":2567,"title":{},"body":{"injectables/TaskUC.html":{}}}],["set(permissions",{"_index":2131,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submittedstudentids)].length",{"_index":2560,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":1585,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":3503,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":2651,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":920,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":3653,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1192,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":5222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":4639,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":4448,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":2613,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":132,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1727,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":1771,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":5632,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":57,"title":{},"body":{"classes/Account.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/JwtPayload.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1874,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/pipes",{"_index":5656,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":589,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["shared/repo/base.repo",{"_index":1875,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["shared/utils",{"_index":5633,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":5653,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":5636,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":3138,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":442,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":771,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4279,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":711,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":1969,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":3356,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":5426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5050,"title":{},"body":{"license.html":{}}}],["signature",{"_index":5565,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":4774,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4496,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":5415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5121,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":5546,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":5844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4374,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":4965,"title":{},"body":{"license.html":{}}}],["single",{"_index":1217,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":5416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["sizetype",{"_index":762,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["skip",{"_index":1258,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1213,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5112,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":3614,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1146,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4313,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":4084,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":4427,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":4759,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4617,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4631,"title":{},"body":{"license.html":{}}}],["solid",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":2336,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5047,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2635,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{}}}],["solving",{"_index":3043,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":5779,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":5783,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":2262,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sort(submissions",{"_index":2269,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sorted",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["sortedsubmissions",{"_index":2276,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["sorting",{"_index":2439,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":5082,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":1260,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":2543,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":2003,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":1256,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["sound",{"_index":2465,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sounds",{"_index":2462,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":5604,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":506,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3023,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1912,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":5357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":5558,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":5572,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":4718,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4455,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5188,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":4797,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":227,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":4439,"title":{},"body":{"license.html":{}}}],["specification",{"_index":3514,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":5692,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":4570,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":4987,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1660,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3271,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":367,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["spirit",{"_index":4981,"title":{},"body":{"license.html":{}}}],["split",{"_index":5395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":3140,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":5511,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":5531,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5195,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/core/error/dto/error.response",{"_index":351,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":352,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":949,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/entities",{"_index":586,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CoursegroupRepo.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["src/entities/learnroom/dashboard.entity",{"_index":893,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["src/modules/database",{"_index":5903,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/repositories",{"_index":2339,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":894,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["sso",{"_index":78,"title":{},"body":{"classes/Account.html":{}}}],["st",{"_index":2160,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["stabilisation",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":5354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1161,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3128,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":4566,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":4569,"title":{},"body":{"license.html":{}}}],["start",{"_index":4418,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":2757,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":3869,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5254,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1148,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":3672,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":3589,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":4608,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":4838,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":4115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":508,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":4670,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":3850,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1364,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":2380,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":2379,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":2378,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.vo",{"_index":2526,"title":{},"body":{"injectables/TaskUC.html":{}}}],["status.vo.ts",{"_index":1359,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["status.vo.ts:10",{"_index":2570,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:12",{"_index":2569,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["statusdomainservice",{"_index":2259,"title":{"classes/StatusDomainService.html":{}},"body":{"classes/StatusDomainService.html":{},"coverage.html":{}}}],["stay",{"_index":5382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":5761,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":4467,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":5812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":5698,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":1674,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2786,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":2869,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":5447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":5574,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":3013,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":4144,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1437,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":5343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":39,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonTaskInfo.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1581,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1770,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4317,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":1035,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":5597,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":5598,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":1583,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5080,"title":{},"body":{"todo.html":{}}}],["student",{"_index":1328,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":2970,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":3838,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":2530,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":1329,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":1333,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{}}}],["studentids",{"_index":412,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["students",{"_index":481,"title":{},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["students[0",{"_index":2425,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["studentsubmissions",{"_index":2551,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.filter((submission",{"_index":2555,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.length",{"_index":2554,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":4389,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":4416,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":5367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":1414,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":4883,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":158,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":4914,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4633,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1284,"title":{"classes/Submission.html":{}},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":1285,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["submission.grade",{"_index":2271,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradecomment",{"_index":2272,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradecomment.length",{"_index":2273,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradefiles",{"_index":2274,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.gradefiles.length",{"_index":2275,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submission.isgraded",{"_index":2565,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.isgraded()).length",{"_index":2556,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.student.id",{"_index":2553,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.task.id",{"_index":2279,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submissionrepo",{"_index":2299,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{},"coverage.html":{}}}],["submissions",{"_index":1291,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"changelog.html":{}}}],["submissions].sort((a",{"_index":2277,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submitted",{"_index":1362,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["submittedstudentids",{"_index":2558,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submittedusers.add(submission.student.id",{"_index":2284,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submittedusers.has(submission.student.id",{"_index":2281,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["submittedusers.size",{"_index":2285,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["subprograms",{"_index":4598,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":4727,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5292,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["subsitutionteacher",{"_index":1545,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":4769,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4881,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":4112,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":431,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteacherids",{"_index":413,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["succeed",{"_index":5865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":3857,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":4489,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":4925,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4777,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":226,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5120,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5061,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5291,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":62,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":136,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2917,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":2955,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":5879,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":4800,"title":{},"body":{"license.html":{}}}],["support",{"_index":1407,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":1416,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":721,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5242,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":4023,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":1408,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":4453,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":4960,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4837,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5016,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5054,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":3378,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":2814,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":3910,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":3071,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":3094,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":3861,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":2016,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2802,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":3980,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":305,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"classes/Scope.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":2583,"title":{},"body":{"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3244,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":59,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["tables",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":4184,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":4371,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":3469,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":2961,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":4754,"title":{},"body":{"license.html":{}}}],["tap",{"_index":947,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":500,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":1017,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":2318,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":2319,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":1943,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":2029,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1941,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1942,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":665,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":222,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":1015,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":1787,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{},"coverage.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":1805,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":1918,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"coverage.html":{}}}],["targetkey",{"_index":616,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["targetmodel",{"_index":220,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1981,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":2025,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":1006,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":1010,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":2028,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":1016,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":486,"title":{"classes/Task.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":2527,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createdat",{"_index":2375,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":2374,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1331,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["task.id",{"_index":2280,"title":{},"body":{"classes/StatusDomainService.html":{},"classes/TaskMapper.html":{}}}],["task.name",{"_index":2372,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.parent",{"_index":2381,"title":{},"body":{"classes/TaskMapper.html":{},"injectables/TaskUC.html":{}}}],["task.parent.getdescriptions",{"_index":2383,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.parent.getnumberofstudents",{"_index":2568,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions",{"_index":2562,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().filter((submission",{"_index":2552,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().map((submission",{"_index":2559,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":2376,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":3042,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":2529,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":2531,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":2327,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskcontroller",{"_index":2349,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdashboardpermission",{"_index":2523,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":2536,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":2538,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskentities",{"_index":2242,"title":{},"body":{"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskids",{"_index":2308,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["taskmapper",{"_index":2356,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":2364,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2219,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentpermission",{"_index":2333,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":2541,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":2343,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparenttestentity",{"_index":2395,"title":{"classes/TaskParentTestEntity.html":{}},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["taskparenttestentity(useridwithwritepermissions",{"_index":2410,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["taskrepo",{"_index":2390,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":2355,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["taskresponses",{"_index":2362,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":2351,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":2545,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":2448,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"coverage.html":{}}}],["taskswithstatus",{"_index":2360,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":2363,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasktesthelper",{"_index":2408,"title":{"classes/TaskTestHelper.html":{}},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"coverage.html":{}}}],["taskuc",{"_index":2353,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":2370,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":1363,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskStatus.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"coverage.html":{}}}],["taskwithstatusvo(task",{"_index":2557,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskwithsubmissionstatus",{"_index":2368,"title":{},"body":{"classes/TaskMapper.html":{},"miscellaneous/typealiases.html":{}}}],["teacher",{"_index":1336,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/LearnroomTestHelper.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":2528,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherids",{"_index":414,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"classes/LearnroomTestHelper.html":{},"miscellaneous/enumerations.html":{}}}],["teachers",{"_index":3223,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":545,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teamid",{"_index":2579,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teaminfo",{"_index":544,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["teammembers",{"_index":1330,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["teamnews",{"_index":573,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":1835,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{},"coverage.html":{}}}],["teams",{"_index":1231,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5092,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5324,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":5576,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1124,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":5385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":4642,"title":{},"body":{"license.html":{}}}],["technology",{"_index":5336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5314,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":4554,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2634,"title":{},"body":{"classes/TestHelper.html":{}}}],["template",{"_index":1169,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":3007,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":716,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"changelog.html":{}}}],["term",{"_index":4606,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":4843,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4861,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4852,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4840,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3473,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":910,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":926,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":906,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":908,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":5720,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":5821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":5840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5289,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testeddefinedvalue",{"_index":4344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["testenvironment",{"_index":5206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelper",{"_index":1498,"title":{"classes/TestHelper.html":{}},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"coverage.html":{}}}],["testhelper:11",{"_index":1519,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:16",{"_index":1530,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["testhelper:22",{"_index":1526,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["testhelper:31",{"_index":1537,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:36",{"_index":1535,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:38",{"_index":2503,"title":{},"body":{"classes/TaskTestHelper.html":{}}}],["testhelper:42",{"_index":1534,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:65",{"_index":1538,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:7",{"_index":1520,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:70",{"_index":1539,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:74",{"_index":1541,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:78",{"_index":1540,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:82",{"_index":1532,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:9",{"_index":1517,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelper:90",{"_index":1542,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskTestHelper.html":{}}}],["testhelpers",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":869,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":914,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":5904,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":270,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":370,"title":{},"body":{"injectables/ConsoleWriter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":5651,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":5634,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":5652,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":271,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":5441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":4493,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":755,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"license.html":{}}}],["think",{"_index":5603,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":4664,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._id",{"_index":751,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["this._queries",{"_index":2182,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2181,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2184,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2183,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":2664,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addid(course",{"_index":1551,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(coursegroup",{"_index":1556,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.addid(lesson",{"_index":2420,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(parent",{"_index":2419,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(submission",{"_index":2423,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(task",{"_index":2416,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addid(user",{"_index":1546,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.addquery",{"_index":596,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1949,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(orquery",{"_index":2186,"title":{},"body":{"classes/Scope.html":{}}}],["this.addquery(queries[0",{"_index":1950,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":1630,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":1412,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":2014,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":5745,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1992,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":2030,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":2540,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":2026,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.byuseridquery(userid",{"_index":2312,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2117,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.code",{"_index":357,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":469,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.comment",{"_index":1347,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.computetaskstatusforstudent(task",{"_index":2546,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.computetaskstatusforteacher(task",{"_index":2548,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2201,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2202,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.content",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":1564,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["this.courseid",{"_index":489,"title":{},"body":{"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":2345,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":2344,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createandadduser",{"_index":2637,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createcourse(coursetyps.student",{"_index":1552,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.subsitutionteacher",{"_index":1554,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createcourse(coursetyps.teacher",{"_index":1553,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.createentityid",{"_index":1547,"title":{},"body":{"classes/LearnroomTestHelper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createerrorresponse(error",{"_index":1186,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.createid",{"_index":2631,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createid().tohexstring",{"_index":2615,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createid(parentid",{"_index":2413,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createschool",{"_index":2636,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.createsubmission(task",{"_index":2428,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.createuser",{"_index":2619,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.creator",{"_index":1084,"title":{},"body":{"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":896,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":696,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":2058,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.description",{"_index":459,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":361,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":723,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.duedate",{"_index":1299,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em.find(coursegroupinfo",{"_index":2314,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lessontaskinfo",{"_index":2461,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(course",{"_index":599,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":640,"title":{},"body":{"injectables/CoursegroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":1888,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2311,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":2458,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":881,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":877,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1884,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2116,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":2727,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":329,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(entity",{"_index":323,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":875,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":327,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":324,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.populate(coursenews",{"_index":1898,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":1890,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":1885,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":1896,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":2459,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":1897,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":330,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":331,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":1376,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":257,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":258,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":245,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":246,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":1018,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":1005,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":1009,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":5662,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":2537,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":2539,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2118,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1882,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":2455,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.findvisiblelessons(parentids",{"_index":2450,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":1372,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["this.getdefaultmaxduedate",{"_index":2456,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.getentitypermissions(userid",{"_index":250,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstuser",{"_index":2422,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.getnewspermissions(userid",{"_index":2007,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":2001,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":2023,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":999,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.getusers().map((o",{"_index":1548,"title":{},"body":{"classes/LearnroomTestHelper.html":{}}}],["this.getusers().map((student",{"_index":2427,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.grade",{"_index":1340,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":1341,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":1342,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":1343,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":1344,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":736,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":2535,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":1562,"title":{},"body":{"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{}}}],["this.id",{"_index":475,"title":{},"body":{"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.init",{"_index":2611,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.isgraded(submission",{"_index":2282,"title":{},"body":{"classes/StatusDomainService.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":1451,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.lastname",{"_index":1374,"title":{},"body":{"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{}}}],["this.lesson",{"_index":1305,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.limit",{"_index":2061,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1990,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":5780,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1997,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":2008,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1998,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":5754,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1989,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":5777,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":950,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":953,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":360,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1677,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":457,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Role.html":{},"classes/SchoolInfo.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.findall(targets",{"_index":2005,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":2010,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":1996,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":2020,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1736,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1754,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1741,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1750,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1751,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.routingkey",{"_index":1631,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":1676,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.otheruser",{"_index":2629,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.parent",{"_index":1303,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.permissions",{"_index":1318,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.private",{"_index":1301,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":1886,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.reference",{"_index":732,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.reference.getmetadata",{"_index":735,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":1061,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(id",{"_index":2128,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles",{"_index":1320,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.roleuc.resolvepermissionsbyidlist(currentuser.roles",{"_index":2740,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.school",{"_index":1378,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/TestHelper.html":{},"classes/User.html":{}}}],["this.schoolid",{"_index":461,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.skip",{"_index":2060,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.spinner.info(text",{"_index":380,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["this.status",{"_index":1366,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.student",{"_index":1345,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.studentids",{"_index":463,"title":{},"body":{"classes/Course.html":{},"classes/Coursegroup.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.studentids.includes(userid",{"_index":632,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["this.submissions",{"_index":1307,"title":{},"body":{"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"classes/StatusDomainService.html":{},"classes/Task.html":{}}}],["this.substitutionteacherids",{"_index":467,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":1349,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findall(parentids",{"_index":2547,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallcurrent(parentids",{"_index":2542,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":2361,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacherids",{"_index":465,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5089,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":5861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":359,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":724,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":2059,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":358,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.user",{"_index":2404,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":5753,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(payload",{"_index":1454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":5758,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":2739,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":5749,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.users",{"_index":2630,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.users.push(newuser",{"_index":2626,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.users[0",{"_index":2627,"title":{},"body":{"classes/TestHelper.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":5747,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(currentuser",{"_index":2707,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":137,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":730,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.ypos",{"_index":731,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["those",{"_index":4093,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":4802,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2937,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":3846,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":4544,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":254,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":2655,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":2663,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":2662,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":4011,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":247,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":4623,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":4391,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":4393,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":5446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":653,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":1391,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":2666,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":2659,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":3852,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":2656,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":1393,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":2665,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":3365,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":3847,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1901,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":2994,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":5855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4321,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":90,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":63,"title":{"todo.html":{}},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TestHelper.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1759,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":4064,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":3107,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":5875,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4353,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":5771,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":2051,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":1272,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":5571,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":5596,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":4825,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4824,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4826,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":3459,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":5557,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":4545,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4781,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4879,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":5723,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1202,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":2064,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1205,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4225,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1203,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":1572,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4367,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":5490,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":4743,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":5686,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":5587,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":3156,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":3028,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":4801,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":4648,"title":{},"body":{"license.html":{}}}],["tries",{"_index":4041,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":5501,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":5590,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":4060,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":547,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1151,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/TestHelper.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5077,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["tt",{"_index":614,"title":{},"body":{"classes/CourseScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/functions.html":{}}}],["two",{"_index":2588,"title":{},"body":{"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":1418,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":26,"title":{},"body":{"classes/Account.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/CoursegroupRepo.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IParentDescriptionsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskParent.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"interfaces/LessonTaskInfoProperties.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"classes/UserTaskInfo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":1250,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":5123,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1339,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/TestHelper.html":{}}}],["typeorm",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1649,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":4132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/entity",{"_index":2609,"title":{},"body":{"classes/TestHelper.html":{}}}],["typesafety",{"_index":1748,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":4766,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":5535,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1036,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":2393,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":5624,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1729,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":2394,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":2354,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":2706,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4319,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["uidp",{"_index":2625,"title":{},"body":{"classes/TestHelper.html":{}}}],["un",{"_index":5552,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":966,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":239,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":255,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":5716,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":5498,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":49,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ISubmissionProperties.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StatusDomainService.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2923,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":2623,"title":{},"body":{"classes/TestHelper.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":5864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":5822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":1180,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":5366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":969,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":3026,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4322,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":1141,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1142,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":4772,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":4612,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4523,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3017,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":4798,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1236,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1485,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":1842,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":5768,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":718,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TestHelper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":2405,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["up",{"_index":3034,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1696,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1983,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1718,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1927,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":17,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/FileTaskInfo.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/User-1.html":{}}}],["updatenewsparams",{"_index":1719,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":507,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":538,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":4070,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1232,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1861,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4314,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":1334,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":5702,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":5639,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":968,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":1606,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1094,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3256,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4325,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3686,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":64,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":5398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["usecase/dashboard.uc",{"_index":688,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["useclass",{"_index":962,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":1459,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":1092,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":1652,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":754,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"license.html":{}}}],["useguards(jwtauthguard",{"_index":5170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usequeryifvalueisdefined",{"_index":4182,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["usequeryifvalueisdefined(testeddefinedvalue",{"_index":2159,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/functions.html":{}}}],["user",{"_index":12,"title":{"classes/User.html":{},"classes/User-1.html":{}},"body":{"classes/Account.html":{},"modules/AuthModule.html":{},"injectables/AuthorizationService.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"interfaces/CoursegroupInfoProperties.html":{},"injectables/FeathersAuthProvider.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"injectables/JwtStrategy.html":{},"classes/LearnroomTestHelper.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":5748,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user._id",{"_index":2621,"title":{},"body":{"classes/TestHelper.html":{},"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":2089,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":58,"title":{},"body":{"classes/Account.html":{}}}],["user.facade",{"_index":2723,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":2086,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.id",{"_index":2084,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/TestHelper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":2088,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.ldapdn",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":1004,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":5654,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.school.tostring",{"_index":2092,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":1002,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":5648,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":2090,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":1461,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":5404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":5740,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":5746,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":5760,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":2689,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userentities",{"_index":2243,"title":{},"body":{"modules/ServerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userfacade",{"_index":1431,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":228,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskParent.html":{},"interfaces/JwtConstants.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":1012,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":37,"title":{},"body":{"classes/Account.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/Coursegroup.html":{},"interfaces/CoursegroupInfoProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICoursegroupProperties.html":{}}}],["useridwithwritepermissions",{"_index":2399,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["userinfo",{"_index":514,"title":{"classes/UserInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo.firstname",{"_index":2713,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":2712,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":2714,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1788,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1809,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1812,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1903,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["usermodule",{"_index":176,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":13,"title":{},"body":{"classes/Account.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":2721,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1241,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"interfaces/IUserProperties-1.html":{},"interfaces/IUserTaskInfoProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsUc.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"classes/User.html":{},"classes/User-1.html":{},"classes/UserInfo.html":{},"classes/UserTaskInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":3695,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":5755,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["usertaskinfo",{"_index":484,"title":{"classes/UserTaskInfo.html":{}},"body":{"classes/CourseGroupInfo.html":{},"interfaces/CoursegroupInfoProperties.html":{},"classes/FileTaskInfo.html":{},"interfaces/FileTaskInfoProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/IUserTaskInfoProperties.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{},"classes/UserTaskInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["useruc",{"_index":2694,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":3915,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":928,"title":{},"body":{"controllers/DelayController.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":377,"title":{},"body":{"injectables/ConsoleWriter.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":5400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":3687,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":5874,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":3655,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4057,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":3105,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5111,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5307,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5116,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":3050,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":3044,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1209,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":1388,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":1433,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":1474,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":1472,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":115,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":1465,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":1471,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":1469,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":84,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":96,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":2755,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1190,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":1198,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":406,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":2747,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":95,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":140,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":130,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":143,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":97,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":387,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1197,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":676,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":5635,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":2068,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":33,"title":{},"body":{"classes/Account.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/ConsoleWriter.html":{},"classes/Course.html":{},"classes/CourseGroupInfo.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/Coursegroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/FileTaskInfo.html":{},"classes/GlobalErrorFilter.html":{},"classes/LearnroomTestHelper.html":{},"classes/LessonTaskInfo.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TeamNews.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"classes/User-1.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":5140,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":3180,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":3973,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":2841,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":2406,"title":{},"body":{"classes/TaskParentTestEntity.html":{},"classes/TaskTestHelper.html":{}}}],["verbatim",{"_index":4434,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":1267,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":1276,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":1281,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":3200,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":5898,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":2925,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":2766,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":4451,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4378,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":756,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1979,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":521,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":4795,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4847,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4277,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5095,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":520,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":2449,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["visual",{"_index":4388,"title":{},"body":{"index.html":{}}}],["void",{"_index":315,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriter.html":{},"classes/CourseScope.html":{},"classes/GlobalErrorFilter.html":{},"classes/LearnroomTestHelper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/TaskScope.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":4698,"title":{},"body":{"license.html":{}}}],["vor",{"_index":3293,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":631,"title":{},"body":{"classes/Coursegroup.html":{},"interfaces/ICoursegroupProperties.html":{},"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4354,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5117,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5323,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":4328,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":4654,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5028,"title":{},"body":{"license.html":{}}}],["want",{"_index":4461,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":5420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":1268,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":1278,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":4042,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":4556,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":4555,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5100,"title":{},"body":{"todo.html":{}}}],["way",{"_index":1658,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":4708,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":5044,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":3179,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":2805,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":5819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2198,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":5537,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":1574,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":4763,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":2908,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1207,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":1449,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":2929,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":4750,"title":{},"body":{"license.html":{}}}],["widely",{"_index":4573,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":4479,"title":{},"body":{"license.html":{}}}],["wil",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3702,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":4109,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":3623,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":4401,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":4647,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4459,"title":{},"body":{"license.html":{}}}],["within",{"_index":338,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3561,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5074,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":2939,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":4396,"title":{},"body":{"index.html":{}}}],["work",{"_index":280,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":4590,"title":{},"body":{"license.html":{}}}],["workers",{"_index":2960,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflows",{"_index":5769,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4016,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":5814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1758,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":5480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":4916,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":819,"title":{},"body":{"classes/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":836,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrap(reference).toreference",{"_index":834,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrapped",{"_index":5182,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":743,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["wraps",{"_index":5469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2340,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1177,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1184,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writer",{"_index":375,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service",{"_index":2200,"title":{},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["writer.service.ts",{"_index":366,"title":{},"body":{"injectables/ConsoleWriter.html":{},"coverage.html":{}}}],["writer.service.ts:11",{"_index":369,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer.service.ts:9",{"_index":372,"title":{},"body":{"injectables/ConsoleWriter.html":{}}}],["writer/console",{"_index":365,"title":{},"body":{"injectables/ConsoleWriter.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"coverage.html":{}}}],["writes",{"_index":5577,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1165,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1179,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":4994,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":4716,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1171,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":727,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4330,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":733,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["xposition",{"_index":765,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":3968,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":5512,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":728,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["year",{"_index":2900,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":4717,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":344,"title":{},"body":{"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/LearnroomTestHelper.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskParentTestEntity.html":{},"injectables/TaskRepo.html":{},"classes/TaskTestHelper.html":{},"classes/TestHelper.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":4931,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":5775,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":734,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["yposition",{"_index":766,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Account.html":{"url":"classes/Account.html","title":"class - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/account.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lasttriedFailedLogin\n                            \n                            \n                                user\n                            \n                            \n                                username\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lasttriedFailedLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: User})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/account.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToMany, Property, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { User } from './user.entity';\n\n@Entity({ tableName: 'accounts' })\nexport class Account extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\t// TODO not use partial see INewsProperties, use Object.assign for related entities only.\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tusername: string;\n\t/*\n\t@Property()\n\tpassword: string; // hash and secret inside the application\n\t*/\n\n\t@ManyToMany({ fieldName: 'userIds', type: User })\n\tuser = new Collection(this);\n\n\t@Property()\n\tlasttriedFailedLogin: Date; // iso date\n\n\t// sso keys\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { UserModule } from '../user';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriter.html":{"url":"injectables/ConsoleWriter.html","title":"injectable - ConsoleWriter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/console-writer/console-writer.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/console/console-writer/console-writer.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriter {\n\tspinner = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                schoolId\n                            \n                            \n                                studentIds\n                            \n                            \n                                substitutionTeacherIds\n                            \n                            \n                                teacherIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getNumberOfStudents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property({fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacherIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/course.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/course.entity.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { IGridElementReference, GridElementReferenceMetadata } from './dashboard.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschoolId: ObjectId;\n\tteacherIds?: ObjectId[];\n\tsubstitutionTeacherIds?: ObjectId[];\n\tstudentIds?: ObjectId[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@Property()\n\tschoolId: ObjectId;\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property()\n\tteacherIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: ObjectId[] = [];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\treturn (this.studentIds || []).length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroupInfo.html":{"url":"classes/CourseGroupInfo.html","title":"class - CourseGroupInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroupInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: CoursegroupInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        CoursegroupInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'userIds', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/course-group-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface CoursegroupInfoProperties {\n\tstudents?: UserTaskInfo[];\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: CoursegroupInfoProperties) {\n\t\tsuper();\n\t\tthis.courseId = props.courseId;\n\n\t\tObject.assign(this, { students: props.students });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:100\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Course } from '@src/entities';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: new ObjectId(userId) };\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { studentIds: new ObjectId(userId) };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Course } from '@src/entities';\nimport { EntityId, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { studentIds: new ObjectId(userId) };\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { studentIds: new ObjectId(userId) };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teacherIds: new ObjectId(userId) };\n\t\tconst isSubstitutionTeacher = { substitutionTeacherIds: new ObjectId(userId) };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coursegroup.html":{"url":"classes/Coursegroup.html","title":"class - Coursegroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coursegroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                courseId\n                            \n                            \n                                studentIds\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                            \n                                isMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICoursegroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICoursegroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        courseId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentIds\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMember\n                        \n                    \n                \n            \n            \n                \nisMember(userId: ObjectId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                            ObjectId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: ObjectId;\n\tstudentIds?: ObjectId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: ObjectId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CoursegroupInfoProperties.html":{"url":"interfaces/CoursegroupInfoProperties.html","title":"interface - CoursegroupInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CoursegroupInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course-group-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         UserTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface CoursegroupInfoProperties {\n\tstudents?: UserTaskInfo[];\n\tcourseId: ObjectId;\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroupInfo extends BaseEntityWithTimestamps {\n\t@ManyToMany({ fieldName: 'userIds', type: UserTaskInfo })\n\tstudents = new Collection(this);\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: CoursegroupInfoProperties) {\n\t\tsuper();\n\t\tthis.courseId = props.courseId;\n\n\t\tObject.assign(this, { students: props.students });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoursegroupRepo.html":{"url":"injectables/CoursegroupRepo.html","title":"injectable - CoursegroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CoursegroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId } from '@shared/domain';\nimport { Coursegroup } from '@src/entities';\n\n@Injectable()\nexport class CoursegroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [coursegroups, count] = await this.em.findAndCount(Coursegroup, {\n\t\t\tcourseId: { $in: courseIds.map((id) => new ObjectId(id)) },\n\t\t});\n\t\treturn [coursegroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/controller/dashboard.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DashboardUc } from '../usecase/dashboard.uc';\n\nimport { Authenticate } from '../../authentication/decorator/auth.decorator';\n\nimport { DashboardResponse } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:80\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElement[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:78\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElement[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DefaultGridReferenceModel', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '../../shared/domain';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '../../../entities/learnroom/dashboard.entity';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((gridElement) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\tconst data = gridElement.getMetadata();\n\t\t\telementDTO.id = data.id;\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\n\t\t\tconst pos = gridElement.getPosition();\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '../../shared/domain';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelMapper.html":{"url":"classes/DashboardModelMapper.html","title":"class - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapGridElementToModel\n                            \n                            \n                                    Static\n                                    Async\n                                mapToEntity\n                            \n                            \n                                    Static\n                                mapToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(gridElement: IGridElement, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gridElement\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridElementModel\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardModelEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, wrap } from '@mikro-orm/core';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tIGridElement,\n\tDefaultGridReference,\n} from '../../entities/learnroom/dashboard.entity';\nimport { DashboardGridElementModel, DashboardModelEntity, DefaultGridReferenceModel } from './dashboard.model.entity';\n\nexport class DashboardModelMapper {\n\tstatic mapGridElementToModel(gridElement: IGridElement, dashboard: DashboardModelEntity): DashboardGridElementModel {\n\t\tconst model = new DashboardGridElementModel(gridElement.getId());\n\t\tmodel.xPos = gridElement.getPosition().x;\n\t\tmodel.yPos = gridElement.getPosition().y;\n\t\t// model.reference = new DefaultGridReference(gridElement.getMetadata().title); // should be replaced with model reference\n\t\tconst reference = new DefaultGridReferenceModel(gridElement.getMetadata().id);\n\t\treference.color = gridElement.getMetadata().displayColor;\n\t\treference.title = gridElement.getMetadata().title;\n\t\tmodel.reference = wrap(reference).toReference();\n\n\t\tmodel.dashboard = wrap(dashboard).toReference();\n\t\treturn model;\n\t}\n\n\tstatic async mapToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tawait modelEntity.gridElements.init();\n\t\tconst grid: GridElement[] = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\tconst loaded = await e.reference.load();\n\t\t\t\treturn new GridElement(e.id, e.xPos, e.yPos, new DefaultGridReference(loaded.id, loaded.title, loaded.color));\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid });\n\t}\n\n\tstatic mapToModel(entity: DashboardEntity): DashboardModelEntity {\n\t\tconst modelEntity = new DashboardModelEntity(entity.getId());\n\t\tmodelEntity.gridElements = new Collection(\n\t\t\tmodelEntity,\n\t\t\tentity.grid.map((element) => DashboardModelMapper.mapGridElementToModel(element, modelEntity))\n\t\t);\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                persist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dashboardProps: DashboardProps)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardProps\n                                    \n                                                DashboardProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport {\n\tDashboardEntity,\n\tDashboardProps,\n\tDefaultGridReference,\n\tGridElement,\n} from '../../entities/learnroom/dashboard.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tcreate(dashboardProps: DashboardProps): DashboardEntity {\n\t\t// todo: implementation, testing, etc\n\t\t// this should create a modelentity and get an id from mongo\n\t\treturn new DashboardEntity('thisisalsofake', dashboardProps);\n\t}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tpersist(entity: DashboardEntity): DashboardEntity {\n\t\tconst modelEntity = DashboardModelMapper.mapToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/usecase/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/lernroom/usecase/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity } from '@src/entities/learnroom/dashboard.entity';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, displayColor: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReferenceModel.html":{"url":"classes/DefaultGridReferenceModel.html","title":"class - DefaultGridReferenceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReferenceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                title\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '../../shared/domain';\n\n@Entity()\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n}\n\n@Entity()\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@ManyToOne('DefaultGridReferenceModel', { wrappedReference: true })\n\treference: IdentifiedReference;\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity()\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileTaskInfo.html":{"url":"classes/FileTaskInfo.html","title":"class - FileTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                creator\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: FileTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        FileTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/file-task-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface FileTaskInfoProperties {\n\tname: string;\n\tcreator: UserTaskInfo;\n}\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n\n\tconstructor(props: FileTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileTaskInfoProperties.html":{"url":"interfaces/FileTaskInfoProperties.html","title":"interface - FileTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/file-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         UserTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\n\ninterface FileTaskInfoProperties {\n\tname: string;\n\tcreator: UserTaskInfo;\n}\n\n@Entity({ tableName: 'files' })\nexport class FileTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcreator: UserTaskInfo;\n\n\tconstructor(props: FileTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.creator = props.creator;\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                reference\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getId\n                            \n                            \n                                getMetadata\n                            \n                            \n                                getPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        x\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        y\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reference\n                                                  \n                                                        \n                                                                        IGridElementReference\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reference\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:60\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosition\n                        \n                    \n                \n            \n            \n                \ngetPosition()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/dashboard.entity.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeacherIds\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacherIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeacherIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacherIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { IGridElementReference, GridElementReferenceMetadata } from './dashboard.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschoolId: ObjectId;\n\tteacherIds?: ObjectId[];\n\tsubstitutionTeacherIds?: ObjectId[];\n\tstudentIds?: ObjectId[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property({ default: DEFAULT.name })\n\tname: string = DEFAULT.name;\n\n\t@Property({ default: DEFAULT.description })\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@Property()\n\tschoolId: ObjectId;\n\n\t@Index()\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property()\n\tteacherIds: ObjectId[] = [];\n\n\t@Index()\n\t@Property({ fieldName: 'substitutionIds' })\n\tsubstitutionTeacherIds: ObjectId[] = [];\n\n\t// TODO: string color format\n\t@Property({ default: DEFAULT.color })\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tthis.name = props.name || DEFAULT.name;\n\t\tthis.description = props.description || DEFAULT.description;\n\t\tthis.schoolId = props.schoolId;\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.teacherIds = props.teacherIds || [];\n\t\tthis.substitutionTeacherIds = props.substitutionTeacherIds || [];\n\t\tthis.color = props.color || DEFAULT.color;\n\n\t\tObject.assign(this, {});\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\t// TODO remove \"|| []\" when we can rely on db schema integrity\n\t\treturn (this.studentIds || []).length;\n\t}\n\n\tgetDescriptions(): { color: string; id: EntityId; name: string; description: string } {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tname: this.name,\n\t\t\tdescription: this.description,\n\t\t\tcolor: this.color,\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICoursegroupProperties.html":{"url":"interfaces/ICoursegroupProperties.html","title":"interface - ICoursegroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICoursegroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            courseId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentIds\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        courseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentIds:     ObjectId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\n\nexport interface ICoursegroupProperties {\n\tcourseId: ObjectId;\n\tstudentIds?: ObjectId[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class Coursegroup extends BaseEntityWithTimestamps {\n\t@Property({ fieldName: 'userIds' })\n\tstudentIds: ObjectId[] = [];\n\n\t@Property()\n\tcourseId: ObjectId;\n\n\tconstructor(props: ICoursegroupProperties) {\n\t\tsuper();\n\t\tthis.studentIds = props.studentIds || [];\n\t\tthis.courseId = props.courseId;\n\t\tObject.assign(this, {});\n\t}\n\n\t// TODO: isMember vs isStudent\n\tisMember(userId: ObjectId): boolean {\n\t\tconst isStudent = this.studentIds.includes(userId);\n\t\treturn isStudent;\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.courseId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport {\n\tDashboardEntity,\n\tDashboardProps,\n\tDefaultGridReference,\n\tGridElement,\n} from '../../entities/learnroom/dashboard.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tcreate(dashboardProps: DashboardProps): DashboardEntity {\n\t\t// todo: implementation, testing, etc\n\t\t// this should create a modelentity and get an id from mongo\n\t\treturn new DashboardEntity('thisisalsofake', dashboardProps);\n\t}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tpersist(entity: DashboardEntity): DashboardEntity {\n\t\tconst modelEntity = DashboardModelMapper.mapToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn entity;\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\t\tconst gridArray: GridElement[] = [];\n\t\tconst diagonalSize = 5;\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getId\n                                        \n                                \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                                \n                                        \n                                            getPosition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getPosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getPosition:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\tgetId: () => EntityId;\n\n\tgetPosition: () => { x: number; y: number };\n\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\tconstructor(id: EntityId, x: number, y: number, reference: IGridElementReference) {\n\t\tthis.id = id;\n\t\tthis.xPos = x;\n\t\tthis.yPos = y;\n\t\tthis.reference = reference;\n\t}\n\n\treference: IGridElementReference;\n\n\txPos: number;\n\n\tyPos: number;\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetPosition(): { x: number; y: number } {\n\t\treturn { x: this.xPos, y: this.yPos };\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn this.reference.getMetadata();\n\t}\n}\n\nexport type DashboardProps = { grid: IGridElement[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tgrid: IGridElement[];\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.grid = props.grid || [];\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): IGridElement[] {\n\t\treturn this.grid;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTargetInfo = SchoolInfo | TeamInfo | CourseInfo;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IParentDescriptionsProperties.html":{"url":"interfaces/IParentDescriptionsProperties.html","title":"interface - IParentDescriptionsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IParentDescriptionsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroupInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroupInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:     FileTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         UserTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:     FileTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         UserTaskInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserTaskInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: UserTaskInfo;\n\tcourseGroup?: CourseGroupInfo[];\n\tteamMembers?: UserTaskInfo[];\n\tcomment: string;\n\tstudentFiles?: FileTaskInfo[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: FileTaskInfo[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo; // (this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskParent.html":{"url":"interfaces/ITaskParent.html","title":"interface - ITaskParent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskParent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDescriptions\n                                    \n                                \n                                \n                                    \n                                        getNumberOfStudents\n                                    \n                                \n                                \n                                    \n                                        hasWritePermission\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/task.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         LessonTaskInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LessonTaskInfo\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task-with-status.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from './task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties-1.html":{"url":"interfaces/IUserProperties-1.html","title":"interface - IUserProperties-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserTaskInfoProperties.html":{"url":"interfaces/IUserTaskInfoProperties.html","title":"interface - IUserTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\ninterface IUserTaskInfoProperties {\n\tfirstName: string;\n\tlastName: string;\n}\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: IUserTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { UserFacade } from '../../user';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(payload);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/lernroom/lernroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './usecase/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LearnroomTestHelper.html":{"url":"classes/LearnroomTestHelper.html","title":"class - LearnroomTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LearnroomTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/learnroom/testHelper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TestHelper\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createCourse\n                            \n                            \n                                createCoursegroup\n                            \n                            \n                                createSchool\n                            \n                            \n                                createStudentCourse\n                            \n                            \n                                createSubstitutionCourse\n                            \n                            \n                                createTeacherCourse\n                            \n                            \n                                createUser\n                            \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createCourse\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCourse(type: CourseTyps)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                CourseTyps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createCoursegroup\n                        \n                    \n                \n            \n            \n                \ncreateCoursegroup(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Coursegroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createStudentCourse\n                        \n                    \n                \n            \n            \n                \ncreateStudentCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubstitutionCourse\n                        \n                    \n                \n            \n            \n                \ncreateSubstitutionCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeacherCourse\n                        \n                    \n                \n            \n            \n                \ncreateTeacherCourse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/entities/learnroom/testHelper.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntity, EntityId, TestHelper } from '@shared/domain';\n\nimport { Course } from './course.entity';\nimport { Coursegroup } from './coursegroup.entity';\n\nenum CourseTyps {\n\tteacher = 'teacherIds',\n\tstudent = 'studentIds',\n\tsubsitutionTeacher = 'substitutionTeacherIds',\n}\n\nexport class LearnroomTestHelper extends TestHelper {\n\tcreateUser(): BaseEntity {\n\t\tconst user = new BaseEntity();\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tprivate createCourse(type: CourseTyps): Course {\n\t\tconst course = new Course({\n\t\t\t[type]: this.getUsers().map((o) => o._id),\n\t\t\tschoolId: new ObjectId(this.getSchool()),\n\t\t\tname: '',\n\t\t});\n\t\tthis.addId(course);\n\t\treturn course;\n\t}\n\n\tcreateStudentCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.student);\n\t}\n\n\tcreateTeacherCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.teacher);\n\t}\n\n\tcreateSubstitutionCourse(): Course {\n\t\treturn this.createCourse(CourseTyps.subsitutionTeacher);\n\t}\n\n\tcreateCoursegroup(course: Course): Coursegroup {\n\t\tconst studentIds = this.getUsers().map((o) => o._id);\n\t\tconst coursegroup = new Coursegroup({ studentIds, courseId: course._id });\n\t\tthis.addId(coursegroup);\n\t\treturn coursegroup;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonTaskInfo.html":{"url":"classes/LessonTaskInfo.html","title":"class - LessonTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: LessonTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        LessonTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/lesson-task-info.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from '@src/entities';\n\ninterface LessonTaskInfoProperties {\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: LessonTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.hidden = !!props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LessonTaskInfoProperties.html":{"url":"interfaces/LessonTaskInfoProperties.html","title":"interface - LessonTaskInfoProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LessonTaskInfoProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from '@src/entities';\n\ninterface LessonTaskInfoProperties {\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class LessonTaskInfo extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: LessonTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.hidden = !!props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\nimport { MongoDatabaseModuleOptions } from '../types';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetInfo\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:50\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:54\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery, PaginationResponse } from '@shared/controller';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetInfo, NewsTargetModel } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:21\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:41\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:34\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { CourseNews, News, SchoolNews, TeamNews } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:55\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResolvedUser } from '../controller/dto';\nimport { User, Role } from '../entity';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: EntityId[];\n\tname: string;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@Property()\n\troles: EntityId[] = [];\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.permissions = props.permissions || [];\n\t\tthis.roles = props.roles || [];\n\t\t// Object.assign(this, { roles: props.roles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { Role } from '../entity';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByIdList\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByIdList(ids: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { IPermissionsAndRoles } from '../entity';\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByIdList(ids: EntityId[]): Promise {\n\t\tconst roles = await Promise.all(ids.map((id) => this.roleRepo.resolvePermissionsFromSubRolesById(id)));\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:94\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:57\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:71\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:59\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\ntype QueryObject = Record>;\ntype OrQuery = { $or: QueryObject[] };\n\nexport function isDefined(input: T): boolean {\n\treturn input !== null && input !== undefined;\n}\n\nexport function isDefinedQuery(input: T): boolean {\n\treturn isDefined(input) && typeof input === 'object' && Object.keys(input).length > 0;\n}\n\n// TODO: EmptyResultQuery only include _id maybe undefined is better in this case\nexport function useQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST): ST | EmptyResultQueryType {\n\tlet result: ST | EmptyResultQueryType = query;\n\n\tif (!isDefined(testedDefinedvalue)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\tif (!isDefinedQuery(query)) {\n\t\tresult = EmptyResultQuery;\n\t}\n\n\treturn result;\n}\n\nexport function forceArray(input: Array): Array {\n\treturn Array.isArray(input) ? input : [];\n}\n\nfunction isDefinedObjectValue(object: T, key: string): boolean {\n\treturn isDefined(object) && isDefined(key) && isDefined(object[key]);\n}\n\nexport function createOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string): OrQuery {\n\tconst reducer = (accumulator: QueryObject[], currentValue: T) => {\n\t\tif (isDefinedObjectValue(currentValue, selectedKey)) {\n\t\t\tconst value = currentValue[selectedKey] as Partial;\n\t\t\tconst queryElement = { [targetKey]: value };\n\t\t\taccumulator.push(queryElement);\n\t\t}\n\t\treturn accumulator;\n\t};\n\n\tif (isDefined(selectedKey) && isDefined(targetKey)) {\n\t\tconst arrayOfQuerys = forceArray(arrayOfObjects).reduce(reducer, []);\n\t\treturn { $or: arrayOfQuerys };\n\t}\n\treturn { $or: [] };\n}\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n\n\tbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string): void {\n\t\tif (arrayOfObjects.length > 0) {\n\t\t\tconst orQuery = createOrQueryFromList(arrayOfObjects, selectedKey, targetKey) as FilterQuery;\n\t\t\tthis.addQuery(orQuery);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriter) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\n\nServerModule\n\nServerModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/server-console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ServerConsole } from './server.console';\nimport { ServerModule } from '../server.module';\nimport { ConsoleWriter } from './console-writer/console-writer.service';\n\n@Module({\n\timports: [ServerModule, ConsoleModule],\n\tproviders: [\n\t\tConsoleWriter,\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { LearnroomModule } from './modules/lernroom/lernroom.module';\n\nimport { Course, Coursegroup } from './entities';\n\nimport {\n\tDashboardGridElementModel,\n\tDashboardModelEntity,\n\tDefaultGridReferenceModel,\n} from './repositories/learnroom/dashboard.model.entity';\n\nimport {\n\tCourseNews,\n\tNews,\n\tSchoolInfo,\n\tSchoolNews,\n\tTeamNews,\n\tUserInfo,\n\tCourseInfo,\n\tTeamInfo,\n} from './modules/news/entity';\n\nimport { Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo } from './modules/task/entity';\n\nimport { User, Role, Account } from './modules/user/entity';\n\nconst entities = [Course, Coursegroup];\nconst courseEntities = [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo];\nconst learnroomDashboardEntities = [DashboardModelEntity, DashboardGridElementModel, DefaultGridReferenceModel];\nconst taskEntities = [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo];\nconst userEntities = [User, Role, Account];\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [...entities, ...courseEntities, ...learnroomDashboardEntities, ...taskEntities, ...userEntities],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusDomainService.html":{"url":"classes/StatusDomainService.html","title":"class - StatusDomainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusDomainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/domain/StatusDomainService.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                submissions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStatusToTask\n                            \n                            \n                                    Private\n                                isGraded\n                            \n                            \n                                    Private\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(submissions: Submission[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        submissions\n                                                  \n                                                        \n                                                                        Submission[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Submission[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStatusToTask\n                        \n                    \n                \n            \n            \n                \naddStatusToTask(task: Task, maxSubmissions: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    maxSubmissions\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isGraded\n                        \n                    \n                \n            \n            \n                \n                    \n                    isGraded(submission: Submission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submission\n                                    \n                                                Submission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sort\n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(submissions: Submission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/domain/StatusDomainService.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissions\n                                    \n                                                Submission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Submission, Task } from '../entity';\n\nexport class StatusDomainService {\n\tsubmissions: Submission[];\n\n\tconstructor(submissions: Submission[]) {\n\t\tthis.submissions = submissions;\n\t}\n\n\tprivate isGraded(submission: Submission): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof submission.grade === 'number' && submission.grade >= 0) ||\n\t\t\t(typeof submission.gradeComment === 'string' && submission.gradeComment.length > 0) ||\n\t\t\t(submission.gradeFiles !== undefined && submission.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tprivate sort(submissions: Submission[]): Submission[] {\n\t\tconst sortedSubmissions = [...submissions].sort((a: Submission, b: Submission) => {\n\t\t\tif (a.createdAt  {\n\t\t\tif (submission.task.id === task.id) {\n\t\t\t\tif (!submittedUsers.has(submission.student.id) && this.isGraded(submission)) {\n\t\t\t\t\tgradedUsers.add(submission.student.id);\n\t\t\t\t}\n\t\t\t\tsubmittedUsers.add(submission.student.id);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\ttask,\n\t\t\tstatus: {\n\t\t\t\tsubmitted: submittedUsers.size,\n\t\t\t\tmaxSubmissions,\n\t\t\t\tgraded: gradedUsers.size,\n\t\t\t},\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroupInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'gradeFileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'fileIds', type: FileTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({fieldName: 'teamMembers', type: UserTaskInfo})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserTaskInfo } from './user-task-info.entity';\nimport { FileTaskInfo } from './file-task-info.entity';\nimport { Task } from './task.entity';\nimport { CourseGroupInfo } from './course-group-info.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: UserTaskInfo;\n\tcourseGroup?: CourseGroupInfo[];\n\tteamMembers?: UserTaskInfo[];\n\tcomment: string;\n\tstudentFiles?: FileTaskInfo[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: FileTaskInfo[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserTaskInfo; // (this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany({ fieldName: 'fileIds', type: FileTaskInfo })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany({ fieldName: 'gradeFileIds', type: FileTaskInfo })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId } from '@shared/domain';\n\n// CourseGroupInfo must use from learnroom\nimport { CourseGroupInfo, Submission } from '../entity';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroupInfo, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTargetInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTargetInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TargetInfoResponse } from '../controller/dto/target-info.response';\nimport { NewsTargetInfo } from '../entity';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTargetInfo): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parent\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LessonTaskInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Course } from '@src/entities';\nimport type { Submission } from './submission.entity';\nimport { LessonTaskInfo } from './lesson-task-info.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tparent?: Course;\n\tlesson?: LessonTaskInfo;\n\tsubmissions?: Submission[];\n}\n\nexport interface IParentDescriptionsProperties {\n\tid: EntityId;\n\tname: string;\n\tcolor: string;\n\tdescription?: string;\n}\n\nexport interface ITaskParent {\n\tid: EntityId;\n\n\thasWritePermission(userId: EntityId): boolean;\n\tgetDescriptions(): IParentDescriptionsProperties;\n\tgetNumberOfStudents(): number;\n}\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tparent?: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: LessonTaskInfo; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.dueDate = props.dueDate;\n\t\tthis.private = !!props.private;\n\t\tthis.parent = props.parent;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions = new Collection(this, props.submissions || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// coursegroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tconst [permittedCourses] =\n\t\t\tpermission === TaskParentPermission.write\n\t\t\t\t? await this.courseRepo.findAllForTeacher(userId)\n\t\t\t\t: await this.courseRepo.findAllForStudent(userId);\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationResponse, PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithSubmissionStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithSubmissionStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { TaskWithSubmissionStatus } from '../domain';\n\nexport class TaskMapper {\n\t// TODO: add status to task\n\tstatic mapToResponse(taskWithStatus: TaskWithSubmissionStatus): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t};\n\n\t\tif (task.parent !== undefined) {\n\t\t\tconst parentData = task.parent.getDescriptions();\n\t\t\tdto.courseName = parentData.name;\n\t\t\tdto.displayColor = parentData.color;\n\t\t}\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskParentTestEntity.html":{"url":"classes/TaskParentTestEntity.html","title":"class - TaskParentTestEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskParentTestEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/utils/TestHelper.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ITaskParent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                getNumberOfStudents\n                            \n                            \n                                hasWritePermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userIdWithWritePermissions?: EntityId)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userIdWithWritePermissions\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/utils/TestHelper.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IParentDescriptionsProperties\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasWritePermission\n                        \n                    \n                \n            \n            \n                \nhasWritePermission(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId, TestHelper } from '@shared/domain';\nimport { Course } from '@src/entities';\n\nimport { Submission, Task, UserTaskInfo, LessonTaskInfo, ITaskParent, IParentDescriptionsProperties } from '../entity';\n\nexport class TaskParentTestEntity implements ITaskParent {\n\tid: EntityId;\n\n\tuser?: EntityId;\n\n\tconstructor(userIdWithWritePermissions?: EntityId) {\n\t\tthis.user = userIdWithWritePermissions;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst hasWritePermission = this.user !== undefined ? this.user === userId : false;\n\t\treturn hasWritePermission;\n\t}\n\n\tgetDescriptions(): IParentDescriptionsProperties {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tcolor: 'FFFFFF',\n\t\t\tname: 'Parent',\n\t\t};\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn 10;\n\t}\n}\n\nexport class TaskTestHelper extends TestHelper {\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tcreateUser(): UserTaskInfo {\n\t\tconst user = new UserTaskInfo({ lastName: '', firstName: '' });\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateTaskParent(userIdWithWritePermissions?: EntityId): TaskParentTestEntity {\n\t\tconst parent = new TaskParentTestEntity(userIdWithWritePermissions);\n\t\tparent.id = this.createEntityId();\n\t\treturn parent;\n\t}\n\n\tcreateTask(parentId?: EntityId, dueDate?: Date): Task {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tconst id = this.createId(parentId);\n\t\tparent._id = id;\n\t\tparent.id = id.toHexString();\n\t\tconst task = new Task({ name: '', parent, dueDate });\n\t\tthis.addId(task);\n\t\treturn task;\n\t}\n\n\tcreateLessonWithTask(): { task: Task; lesson: LessonTaskInfo; parentId: EntityId } {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tthis.addId(parent);\n\t\tconst lesson = new LessonTaskInfo({ course: parent });\n\t\tthis.addId(lesson);\n\t\tconst task = new Task({ name: '', parent, lesson });\n\t\tthis.addId(task);\n\t\treturn { task, lesson, parentId: parent.id };\n\t}\n\n\tcreateSubmission(task: Task, student?: UserTaskInfo): Submission {\n\t\tconst user = (student || this.getFirstUser()) as UserTaskInfo;\n\t\tconst submission = new Submission({ student: user, comment: '', task });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateTeamMemberSubmission(task: Task, students: UserTaskInfo[]): Submission {\n\t\tconst submission = new Submission({ student: students[0], comment: '', task, teamMembers: students });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateSubmissionsForEachStudent(task: Task): Submission[] {\n\t\tconst submissions = this.getUsers().map((student) => {\n\t\t\tconst submission = this.createSubmission(task, student as UserTaskInfo);\n\t\t\treturn submission;\n\t\t});\n\t\treturn submissions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllCurrent\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                            \n                                    Private\n                                    Async\n                                findVisibleLessons\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:22\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllCurrent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllCurrent(parentIds: EntityId[], options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:41\n                \n            \n\n\n            \n                \n                    Find all currently active tasks by their parent ids.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ids of parent entities\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findVisibleLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    findVisibleLessons(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\n// TODO lessonTaskInfo must deleted\nimport { Task, LessonTaskInfo } from '../entity';\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAll(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst visibleLessons = await this.findVisibleLessons(parentIds);\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParentIds(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(visibleLessons.map((o) => o.id));\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\t/**\n\t * Find all currently active tasks by their parent ids.\n\t *\n\t * @param parentIds ids of parent entities\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllCurrent(parentIds: EntityId[], options?: IFindOptions): Promise> {\n\t\tconst visibleLessons = await this.findVisibleLessons(parentIds);\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst scope = new TaskScope();\n\t\tscope.byParentIds(parentIds);\n\t\tscope.byPublic();\n\t\tscope.byLessonsOrNone(visibleLessons.map((o) => o.id));\n\t\tscope.afterDueDateOrNone(dueDate);\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(taskEntities, ['parent', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n\n\t// TODO move to lesson repo\n\tprivate async findVisibleLessons(parentIds: EntityId[]): Promise {\n\t\tconst lessons = await this.em.find(LessonTaskInfo, {\n\t\t\tcourse: { $in: parentIds },\n\t\t\thidden: false,\n\t\t});\n\t\treturn lessons;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\t// TODO: date sounds like domain logic if this go out, after it student and teacher has only different order logic\n\t\t// that also sound like it should manage over scope helper in uc.\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byLessonsOrNone\n                            \n                            \n                                byParentIds\n                            \n                            \n                                byPublic\n                            \n                            \n                                addQuery\n                            \n                            \n                                buildAndAddOrQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:57\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonsOrNone\n                        \n                    \n                \n            \n            \n                \nbyLessonsOrNone(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byParentIds\n                        \n                    \n                \n            \n            \n                \nbyParentIds(parentIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byPublic\n                        \n                    \n                \n            \n            \n                \nbyPublic()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:67\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildAndAddOrQuery\n                        \n                    \n                \n            \n            \n                \nbuildAndAddOrQuery(arrayOfObjects: TT[], selectedKey: string, targetKey: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:71\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        TT\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            TT[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { Scope } from '@shared/repo';\nimport { Task } from '../entity';\n\nexport class TaskScope extends Scope {\n\tbyParentIds(parentIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ parent: { $in: parentIds } });\n\t\treturn this;\n\t}\n\n\tbyPublic(): TaskScope {\n\t\tthis.addQuery({ private: { $ne: true } });\n\t\treturn this;\n\t}\n\n\tbyLessonsOrNone(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ $or: [{ lesson: { $in: lessonIds } }, { lesson: null }] });\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskTestHelper.html":{"url":"classes/TaskTestHelper.html","title":"class - TaskTestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskTestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/utils/TestHelper.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        TestHelper\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLessonWithTask\n                            \n                            \n                                createSchool\n                            \n                            \n                                createSubmission\n                            \n                            \n                                createSubmissionsForEachStudent\n                            \n                            \n                                createTask\n                            \n                            \n                                createTaskParent\n                            \n                            \n                                createTeamMemberSubmission\n                            \n                            \n                                createUser\n                            \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         TestHelper\n\n                            \n                        \n                    \n                        \n                                Defined in         TestHelper:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createLessonWithTask\n                        \n                    \n                \n            \n            \n                \ncreateLessonWithTask()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubmission\n                        \n                    \n                \n            \n            \n                \ncreateSubmission(task: Task, student?: UserTaskInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    student\n                                    \n                                                UserTaskInfo\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSubmissionsForEachStudent\n                        \n                    \n                \n            \n            \n                \ncreateSubmissionsForEachStudent(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTask\n                        \n                    \n                \n            \n            \n                \ncreateTask(parentId?: EntityId, dueDate?: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Task\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTaskParent\n                        \n                    \n                \n            \n            \n                \ncreateTaskParent(userIdWithWritePermissions?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userIdWithWritePermissions\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskParentTestEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTeamMemberSubmission\n                        \n                    \n                \n            \n            \n                \ncreateTeamMemberSubmission(task: Task, students: UserTaskInfo[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/utils/TestHelper.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    students\n                                    \n                                                UserTaskInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Submission\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserTaskInfo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:82\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:78\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Inherited from         TestHelper\n\n                \n            \n            \n                \n                        Defined in         TestHelper:90\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId, TestHelper } from '@shared/domain';\nimport { Course } from '@src/entities';\n\nimport { Submission, Task, UserTaskInfo, LessonTaskInfo, ITaskParent, IParentDescriptionsProperties } from '../entity';\n\nexport class TaskParentTestEntity implements ITaskParent {\n\tid: EntityId;\n\n\tuser?: EntityId;\n\n\tconstructor(userIdWithWritePermissions?: EntityId) {\n\t\tthis.user = userIdWithWritePermissions;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\thasWritePermission(userId: EntityId): boolean {\n\t\tconst hasWritePermission = this.user !== undefined ? this.user === userId : false;\n\t\treturn hasWritePermission;\n\t}\n\n\tgetDescriptions(): IParentDescriptionsProperties {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\tcolor: 'FFFFFF',\n\t\t\tname: 'Parent',\n\t\t};\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn 10;\n\t}\n}\n\nexport class TaskTestHelper extends TestHelper {\n\tcreateSchool(): EntityId {\n\t\treturn this.createEntityId();\n\t}\n\n\tcreateUser(): UserTaskInfo {\n\t\tconst user = new UserTaskInfo({ lastName: '', firstName: '' });\n\t\tthis.addId(user);\n\t\treturn user;\n\t}\n\n\tcreateTaskParent(userIdWithWritePermissions?: EntityId): TaskParentTestEntity {\n\t\tconst parent = new TaskParentTestEntity(userIdWithWritePermissions);\n\t\tparent.id = this.createEntityId();\n\t\treturn parent;\n\t}\n\n\tcreateTask(parentId?: EntityId, dueDate?: Date): Task {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tconst id = this.createId(parentId);\n\t\tparent._id = id;\n\t\tparent.id = id.toHexString();\n\t\tconst task = new Task({ name: '', parent, dueDate });\n\t\tthis.addId(task);\n\t\treturn task;\n\t}\n\n\tcreateLessonWithTask(): { task: Task; lesson: LessonTaskInfo; parentId: EntityId } {\n\t\tconst parent = new Course({ schoolId: new ObjectId() });\n\t\tthis.addId(parent);\n\t\tconst lesson = new LessonTaskInfo({ course: parent });\n\t\tthis.addId(lesson);\n\t\tconst task = new Task({ name: '', parent, lesson });\n\t\tthis.addId(task);\n\t\treturn { task, lesson, parentId: parent.id };\n\t}\n\n\tcreateSubmission(task: Task, student?: UserTaskInfo): Submission {\n\t\tconst user = (student || this.getFirstUser()) as UserTaskInfo;\n\t\tconst submission = new Submission({ student: user, comment: '', task });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateTeamMemberSubmission(task: Task, students: UserTaskInfo[]): Submission {\n\t\tconst submission = new Submission({ student: students[0], comment: '', task, teamMembers: students });\n\t\tthis.addId(submission);\n\t\treturn submission;\n\t}\n\n\tcreateSubmissionsForEachStudent(task: Task): Submission[] {\n\t\tconst submissions = this.getUsers().map((student) => {\n\t\t\tconst submission = this.createSubmission(task, student as UserTaskInfo);\n\t\t\treturn submission;\n\t\t});\n\t\treturn submissions;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeTaskStatusForStudent\n                            \n                            \n                                    Private\n                                computeTaskStatusForTeacher\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForStudent(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForTeacher(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder } from '@shared/domain';\n\nimport { TaskRepo } from '../repo';\nimport { TaskWithStatusVo } from '../entity/task-with-status.vo';\nimport { Task } from '../entity';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(private readonly taskRepo: TaskRepo, private readonly authorizationService: TaskAuthorizationService) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parentIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllCurrent(parentIds, {\n\t\t\tpagination,\n\t\t\torder: { dueDate: SortOrder.asc },\n\t\t});\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForStudent(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst parentIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAll(parentIds, {\n\t\t\tpagination,\n\t\t\torder: { createdAt: SortOrder.desc },\n\t\t});\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForTeacher(task));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\tprivate computeTaskStatusForStudent(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst studentSubmissions = task.submissions.getItems().filter((submission) => submission.student.id === userId);\n\n\t\tconst submitted = studentSubmissions.length > 0 ? 1 : 0;\n\t\tconst graded = studentSubmissions.filter((submission) => submission.isGraded()).length;\n\t\tconst maxSubmissions = 1;\n\n\t\treturn new TaskWithStatusVo(task, { submitted, maxSubmissions, graded });\n\t}\n\n\tprivate computeTaskStatusForTeacher(task: Task): TaskWithStatusVo {\n\t\tconst submittedStudentIds = task.submissions.getItems().map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst submitted = [...new Set(submittedStudentIds)].length;\n\n\t\tconst gradedStudentIds = task.submissions\n\t\t\t.getItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst graded = [...new Set(gradedStudentIds)].length;\n\n\t\tconst maxSubmissions = task.parent ? task.parent.getNumberOfStudents() : 0;\n\n\t\treturn new TaskWithStatusVo(task, { submitted, maxSubmissions, graded });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task-with-status.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/task-with-status.vo.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task-with-status.vo.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/task-with-status.vo.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from './task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TeamInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:106\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:34\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:60\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:38\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:65\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:57\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:44\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:54\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:30\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne({fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:63\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:75\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetInfo, NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTargetInfo;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, PaginationResponse, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new PaginationResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestHelper.html":{"url":"classes/TestHelper.html","title":"class - TestHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/test/helper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                otherUser\n                            \n                            \n                                school\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addId\n                            \n                            \n                                createAndAddUser\n                            \n                            \n                                createEntityId\n                            \n                            \n                                createId\n                            \n                            \n                                    Abstract\n                                createSchool\n                            \n                            \n                                    Abstract\n                                createUser\n                            \n                            \n                                getFirstUser\n                            \n                            \n                                getOtherUser\n                            \n                            \n                                getSchool\n                            \n                            \n                                getUsers\n                            \n                            \n                                    Private\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/test/helper.ts:11\n                            \n                        \n\n                \n                    \n                            Create two user one that are used for create operations.\nThe other is created for all is not part of created element operations.\nIt also create a school that is used for this two user and all new added users.\nYou get the the user over helper.getFirstUser(), or helper.getUsers(); and helper.getOtherUser();\nBy executing helper.createAndAddUser() the getUsers() list is increased and all create operations will use it.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        otherUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SchoolType\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseEntity[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/test/helper.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addId\n                        \n                    \n                \n            \n            \n                \n                    \n                    addId(entity: BaseEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                BaseEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createAndAddUser\n                        \n                    \n                \n            \n            \n                \ncreateAndAddUser(user?: BaseEntity | EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BaseEntity | EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createEntityId\n                        \n                    \n                \n            \n            \n                \ncreateEntityId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createId\n                        \n                    \n                \n            \n            \n                \ncreateId(entityId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFirstUser\n                        \n                    \n                \n            \n            \n                \ngetFirstUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOtherUser\n                        \n                    \n                \n            \n            \n                \ngetOtherUser()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSchool\n                        \n                    \n                \n            \n            \n                \ngetSchool()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     SchoolType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BaseEntity[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/test/helper.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\n\nimport { EntityId } from '../types/entity-id';\nimport { BaseEntity } from '../entity/base.entity';\n\nexport abstract class TestHelper {\n\tusers: BaseEntity[] = [];\n\n\totherUser: BaseEntity;\n\n\tschool: SchoolType;\n\n\t/**\n\t * Create two user one that are used for create operations.\n\t * The other is created for all is not part of created element operations.\n\t * It also create a school that is used for this two user and all new added users.\n\t *\n\t * You get the the user over helper.getFirstUser(), or helper.getUsers(); and helper.getOtherUser();\n\t * By executing helper.createAndAddUser() the getUsers() list is increased and all create operations will use it.\n\t */\n\tconstructor() {\n\t\tthis.init();\n\t}\n\n\t// That any helper must implement this is a temporary solution until\n\t// user and school entity is avaible in global or shared scope.\n\tabstract createUser(): BaseEntity;\n\n\tabstract createSchool(): SchoolType;\n\n\tcreateId(entityId?: EntityId): ObjectId {\n\t\tconst id = new ObjectId(entityId);\n\t\treturn id;\n\t}\n\n\tcreateEntityId(): EntityId {\n\t\tconst entityId = this.createId().toHexString();\n\t\treturn entityId;\n\t}\n\n\t// If else mapping can removed after the abstract createUser() is replaced by createUser from global user entity.\n\tcreateAndAddUser(user?: BaseEntity | EntityId): void {\n\t\tconst newUser = this.createUser();\n\t\tif (user instanceof BaseEntity) {\n\t\t\tnewUser._id = user._id;\n\t\t\tnewUser.id = user.id;\n\t\t} else if (typeof user === 'string') {\n\t\t\tnewUser.id = user;\n\t\t}\n\n\t\t// TODO try to understand why we need that (uidp)\n\t\t// if (newUser instanceof BaseEntity && user instanceof BaseEntity && user.id) {\n\t\t// \tnewUser.id = user.id;\n\t\t// } else if (newUser instanceof BaseEntity && typeof user === 'string') {\n\t\t// \tnewUser.id = user;\n\t\t// } else if (typeof newUser === 'string' && user instanceof BaseEntity && user.id) {\n\t\t// \tnewUser = user.id;\n\t\t// } else if (typeof newUser === 'string' && typeof user === 'string') {\n\t\t// \tnewUser = user;\n\t\t// }\n\n\t\tthis.users.push(newUser);\n\t}\n\n\tgetFirstUser(): BaseEntity {\n\t\treturn this.users[0];\n\t}\n\n\t// TODO: find better name for existing user that is not part of the ressources\n\tgetOtherUser(): BaseEntity {\n\t\treturn this.otherUser;\n\t}\n\n\tgetUsers(): BaseEntity[] {\n\t\treturn this.users;\n\t}\n\n\tgetSchool(): SchoolType {\n\t\treturn this.school;\n\t}\n\n\tprotected addId(entity: BaseEntity): void {\n\t\tconst id = this.createId();\n\t\tentity.id = id.toHexString();\n\t\tentity._id = id;\n\t}\n\n\t// Temp solution until abstract createUser and createSchool is solved.\n\t// It can move to constructor\n\tprivate init(): void {\n\t\tthis.school = this.createSchool();\n\t\tthis.createAndAddUser();\n\t\tthis.otherUser = this.createUser();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/entities/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/entities/user.entity.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User-1.html":{"url":"classes/User-1.html","title":"class - User-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@Property({fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/entity/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, Unique } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { Role } from './role.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\troles: Role[];\n\tschool: EntityId;\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\t@Property()\n\troles: EntityId[] = [];\n\n\t// index\n\t// collection\n\t@Index({ name: 'searchUserForSchool' })\n\t@Property({ fieldName: 'schoolId' })\n\tschool: EntityId;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tObject.assign(this, { roles: props.roles, school: props.school });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(currentUser: ICurrentUser): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(currentUser);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { User } from '../entity';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserTaskInfo.html":{"url":"classes/UserTaskInfo.html","title":"class - UserTaskInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserTaskInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/user-task-info.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserTaskInfoProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserTaskInfoProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/entity/user-task-info.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\ninterface IUserTaskInfoProperties {\n\tfirstName: string;\n\tlastName: string;\n}\n\n@Entity({ tableName: 'users' })\nexport class UserTaskInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: IUserTaskInfoProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\n\t\tObject.assign(this, {});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(currentUser: ICurrentUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(currentUser: ICurrentUser): Promise {\n\t\tconst [user, resolved] = await Promise.all([\n\t\t\tthis.userRepo.findById(currentUser.userId),\n\t\t\tthis.roleUC.resolvePermissionsByIdList(currentUser.roles),\n\t\t]);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nChanged\n\nBC-213 - rewrite file deletion with deletion marker\nBC-68 - e2e run dependent on build image job\nBC-179 - refactor task and entity and relations\n\nAdded\n\nBC-121 add bucket and storage provider to file documents\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\nBC-318 implement persistance for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\nBC-247 - remove timestamp from LDAP search Query for sync\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.3] - 2021-09-10\nFixed\n\nBC-239 - fix date parsing for students birth date\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\nBC-106 - exit maintenance & change school year for LDAP schools on Boss and NBC\n\n[26.9.1] - 2021-08-18\nChanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nChanged\n\nOPS-2491 - Change the hydra service url\nSC-9231 - add permissions to SuperHero to edit admin role\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/console-writer/console-writer.service.ts\n            \n            injectable\n            ConsoleWriter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/console/console.ts\n            \n            variable\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/console/server.console.ts\n            \n            class\n            ServerConsole\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            interface\n            ICourseProperties\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/course.entity.ts\n            \n            variable\n            DEFAULT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/coursegroup.entity.ts\n            \n            class\n            Coursegroup\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/coursegroup.entity.ts\n            \n            interface\n            ICoursegroupProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            DashboardEntity\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            DefaultGridReference\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            class\n            GridElement\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            interface\n            IGridElement\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/dashboard.entity.ts\n            \n            interface\n            IGridElementReference\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/entities/learnroom/testHelper.ts\n            \n            class\n            LearnroomTestHelper\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                apps/server/src/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/entities/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            injectable\n            JwtValidationAdapter\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dashboard.controller.ts\n            \n            controller\n            DashboardController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardGridElementResponse\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/controller/dto/dashboard.response.ts\n            \n            class\n            DashboardResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/mapper/dashboard.mapper.ts\n            \n            class\n            DashboardMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/lernroom/usecase/dashboard.uc.ts\n            \n            injectable\n            DashboardUc\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            AppendedAttachment\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            HtmlMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            InlineAttachment\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            Mail\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailAttachment\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            MailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.interface.ts\n            \n            interface\n            PlainTextMailContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            interface\n            MailModuleOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.module.ts\n            \n            variable\n            createRabbitMqModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/mail/mail.service.ts\n            \n            interface\n            MailServiceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/target-info.response.ts\n            \n            class\n            TargetInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/team-news.controller.ts\n            \n            controller\n            TeamNewsController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/target-info.mapper.ts\n            \n            class\n            TargetInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/domain/StatusDomainService.ts\n            \n            class\n            StatusDomainService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            class\n            CourseGroupInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course-group-info.entity.ts\n            \n            interface\n            CoursegroupInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            class\n            FileTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/file-task-info.entity.ts\n            \n            interface\n            FileTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            class\n            LessonTaskInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson-task-info.entity.ts\n            \n            interface\n            LessonTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            interface\n            ISubmissionProperties\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task-with-status.vo.ts\n            \n            class\n            TaskWithStatusVo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task-with-status.vo.ts\n            \n            interface\n            ITaskStatus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            IParentDescriptionsProperties\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            ITaskParent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            interface\n            ITaskProperties\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            class\n            UserTaskInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/user-task-info.entity.ts\n            \n            interface\n            IUserTaskInfoProperties\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/submission.repo.ts\n            \n            injectable\n            SubmissionRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task-scope.ts\n            \n            class\n            TaskScope\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.authorization.service.ts\n            \n            injectable\n            TaskAuthorizationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/utils/TestHelper.ts\n            \n            class\n            TaskParentTestEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/utils/TestHelper.ts\n            \n            class\n            TaskTestHelper\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n            \n            class\n            ResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/controller/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/account.entity.ts\n            \n            class\n            Account\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/role.entity.ts\n            \n            interface\n            IRoleProperties\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/entity/user.entity.ts\n            \n            interface\n            IUserProperties\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n            \n            class\n            ResolvedUserMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/role.repo.ts\n            \n            injectable\n            RoleRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/repo/user.repo.ts\n            \n            injectable\n            UserRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/role.uc.ts\n            \n            injectable\n            RoleUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/uc/user.uc.ts\n            \n            injectable\n            UserUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/user/utils/createCurrentTestUser.ts\n            \n            variable\n            createCurrentTestUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            class\n            CourseScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/course.repo.ts\n            \n            injectable\n            CourseRepo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/coursegroup.repo.ts\n            \n            injectable\n            CoursegroupRepo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardGridElementModel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DashboardModelEntity\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n            \n            class\n            DefaultGridReferenceModel\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n            \n            class\n            DashboardModelMapper\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            injectable\n            DashboardRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/repositories/learnroom/dashboard.repo.ts\n            \n            interface\n            IDashboardRepo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            courseEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            entities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            learnroomDashboardEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            taskEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/server.module.ts\n            \n            variable\n            userEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/validation.error.ts\n            \n            class\n            ValidationError\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            ICurrentUser\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IResolvedUser\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/user.ts\n            \n            interface\n            IRole\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/test/helper.ts\n            \n            class\n            TestHelper\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            class\n            Scope\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            createOrQueryFromList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            forceArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedObjectValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            isDefinedQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/scope.ts\n            \n            function\n            useQueryIfValueIsDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.17\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^7.2.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^5.0.1\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CourseTyps   (apps/.../testHelper.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/entities/learnroom/testHelper.ts\n    \n        \n            \n                \n                    \n                        \n                        CourseTyps\n                    \n                \n                        \n                            \n                                 teacher\n                            \n                        \n                        \n                            \n                                Value : teacherIds\n                            \n                        \n                        \n                            \n                                 student\n                            \n                        \n                        \n                            \n                                Value : studentIds\n                            \n                        \n                        \n                            \n                                 subsitutionTeacher\n                            \n                        \n                        \n                            \n                                Value : substitutionTeacherIds\n                            \n                        \n            \n        \n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createOrQueryFromList   (apps/.../scope.ts)\n                        \n                        \n                            forceArray   (apps/.../scope.ts)\n                        \n                        \n                            isDefined   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedObjectValue   (apps/.../scope.ts)\n                        \n                        \n                            isDefinedQuery   (apps/.../scope.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                        \n                            useQueryIfValueIsDefined   (apps/.../scope.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOrQueryFromList\n                        \n                    \n                \n            \n            \n                \ncreateOrQueryFromList(arrayOfObjects: Array, selectedKey: string, targetKey: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arrayOfObjects\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    selectedKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OrQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceArray\n                        \n                    \n                \n            \n            \n                \nforceArray(input: Array)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefined\n                        \n                    \n                \n            \n            \n                \nisDefined(input: T)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedObjectValue\n                        \n                    \n                \n            \n            \n                \nisDefinedObjectValue(object: T, key: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDefinedQuery\n                        \n                    \n                \n            \n            \n                \nisDefinedQuery(input: T)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useQueryIfValueIsDefined\n                        \n                    \n                \n            \n            \n                \nuseQueryIfValueIsDefined(testedDefinedvalue: TT, query: ST)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    testedDefinedvalue\n                                    \n                                            TT\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                            ST\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ST | EmptyResultQueryType\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\ncluster_ServerConsoleModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nServerModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriter\n\nConsoleWriter\n\nServerConsoleModule -->\n\nConsoleWriter->ServerConsoleModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    68 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    43 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../role.entity.ts)\n                        \n                        \n                            ISubmissionStatus   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTargetInfo   (apps/.../news.types.ts)\n                        \n                        \n                            OrQuery   (apps/.../scope.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            QueryObject   (apps/.../scope.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskWithSubmissionStatus   (apps/.../TaskDomainService.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/entities/learnroom/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrQuery\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryObject\n                \n            \n            \n                \n                        Record>\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/user/entity/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/task/domain/TaskDomainService.ts\n    \n    \n        \n            \n                \n                    \n                    ISubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    TaskWithSubmissionStatus\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTargetInfo\n                \n            \n            \n                \n                        SchoolInfo | TeamInfo | CourseInfo\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseEntities   (apps/.../server.module.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            entities   (apps/.../server.module.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            learnroomDashboardEntities   (apps/.../server.module.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                            userEntities   (apps/.../server.module.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo, CourseInfo, TeamInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Course, Coursegroup]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        learnroomDashboardEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [DashboardModelEntity, DashboardGridElementModel, DefaultGridReferenceModel]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Task, LessonTaskInfo, Submission, FileTaskInfo, UserTaskInfo, CourseGroupInfo]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userEntities\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [User, Role, Account]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst schoolId = new ObjectId().toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school: schoolId });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/entities/learnroom/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
